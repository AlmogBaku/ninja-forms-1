{"version":3,"sources":["../lib/almond.js","views/app/menuItem.js","views/app/menu.js","views/app/menuButtons.js","views/app/header.js","views/app/subHeader.js","views/app/formTitle.js","views/app/builderHeader.js","views/app/main.js","views/app/drawer/mobileMenu.js","views/app/drawer/contentEmpty.js","views/app/drawer.js","views/app/drawer/mergeTagItem.js","views/app/drawer/mergeTagsSection.js","models/app/mergeTagModel.js","models/app/mergeTagCollection.js","views/app/drawer/mergeTagsContent.js","views/app/builder.js","controllers/app/drawer.js","views/app/drawer/headerDefault.js","models/app/drawerModel.js","models/app/drawerCollection.js","views/fields/drawer/stagedField.js","views/fields/drawer/stagingEmpty.js","views/fields/drawer/stagingCollection.js","models/fields/stagingModel.js","models/fields/stagingCollection.js","views/fields/drawer/typeSection.js","views/fields/drawer/typeSectionCollection.js","views/fields/drawer/addField.js","views/app/drawer/itemSettingCollection.js","views/app/drawer/itemSettingGroup.js","views/app/drawer/itemSettingGroupCollection.js","views/app/drawer/editSettings.js","views/actions/drawer/typeButton.js","views/actions/drawer/typeCollection.js","views/actions/drawer/addAction.js","views/advanced/drawer/editFormSettings.js","views/app/drawer/contentViewChangesItem.js","views/app/drawer/contentViewChanges.js","views/app/drawer/headerViewChanges.js","views/app/drawer/settingError.js","views/app/drawer/itemSetting.js","views/app/drawer/contentNewForm.js","views/app/drawer/headerNewForm.js","controllers/app/drawerConfig.js","models/app/domainModel.js","models/app/domainCollection.js","views/fields/mainHeader.js","views/fields/subHeader.js","views/app/itemControls.js","views/fields/fieldItem.js","views/fields/mainContentEmpty.js","views/fields/mainContentFieldCollection.js","views/actions/mainHeader.js","views/actions/subHeader.js","views/actions/actionItem.js","views/actions/mainContentEmpty.js","views/actions/mainContent.js","views/advanced/mainHeader.js","views/advanced/subHeader.js","views/advanced/settingItem.js","views/advanced/mainContent.js","controllers/app/domainConfig.js","models/app/appModel.js","controllers/app/data.js","controllers/app/drawerToggleSettingGroup.js","controllers/app/updateDB.js","models/app/formModel.js","controllers/app/formData.js","controllers/app/previewLink.js","controllers/app/menuButtons.js","models/app/changeModel.js","models/app/changeCollection.js","controllers/app/trackChanges.js","controllers/app/undoChanges.js","controllers/app/publishResponse.js","controllers/app/changeDomain.js","controllers/app/pushstate.js","controllers/app/hotkeys.js","controllers/app/cleanState.js","controllers/app/coreUndo.js","controllers/app/cloneModelDeep.js","controllers/app/getSettingChildView.js","controllers/app/changeSettingDefault.js","views/app/drawer/typeSettingFieldset.js","models/app/settingModel.js","models/app/settingCollection.js","controllers/app/fieldset.js","controllers/app/toggleSetting.js","controllers/app/itemControls.js","controllers/app/mergeTags.js","controllers/app/itemSettingFill.js","controllers/app/confirmPublish.js","controllers/app/rte.js","controllers/app/changeMenu.js","models/app/typeModel.js","models/app/typeCollection.js","models/app/settingGroupModel.js","models/app/settingGroupCollection.js","models/fields/typeSectionModel.js","models/fields/typeSectionCollection.js","controllers/fields/types.js","controllers/fields/fieldTypeDrag.js","controllers/fields/stagingDrag.js","controllers/fields/savedFieldsSection.js","controllers/fields/staging.js","controllers/fields/stagingSortable.js","controllers/fields/filterTypes.js","controllers/fields/sortable.js","models/fields/fieldModel.js","models/fields/fieldCollection.js","controllers/fields/data.js","models/app/optionRepeaterModel.js","models/app/optionRepeaterCollection.js","views/app/drawer/optionRepeaterError.js","views/app/drawer/optionRepeaterOption.js","views/app/drawer/optionRepeaterEmpty.js","views/app/drawer/optionRepeaterComposite.js","controllers/app/optionRepeater.js","controllers/fields/editActive.js","controllers/fields/fieldSettings.js","controllers/fields/fieldCreditCard.js","controllers/fields/fieldQuantity.js","controllers/fields/fieldShipping.js","controllers/fields/key.js","controllers/actions/types.js","models/actions/actionModel.js","models/actions/actionCollection.js","controllers/actions/data.js","controllers/actions/actionSettings.js","controllers/actions/editActive.js","controllers/actions/addActionTypes.js","controllers/actions/typeDrag.js","controllers/actions/droppable.js","models/actions/typeModel.js","models/actions/typeCollection.js","controllers/actions/filterTypes.js","controllers/advanced/types.js","models/advanced/settingsModel.js","controllers/advanced/data.js","controllers/advanced/formSettings.js","controllers/advanced/editActive.js","controllers/advanced/clickEdit.js","controllers/advanced/calculations.js","controllers/loadControllers.js","main.js"],"names":["requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","view","Marionette","ItemView","extend","tagName","template","initialize","this","listenTo","nfRadio","channel","render","model","on","onRender","$el","children","unwrap","setElement","events","click a","clickAppMenu","trigger","templateHelpers","renderDashicons","dashicons","renderClasses","classes","currentDomain","request","get","renderUrl","url","formModel","renderTarget","renderDisabled","disabled","appMenuItemView","CollectionView","childView","onShow","el","find","that","renderPublish","publishWidth","_","html","maybeDisabled","maybeRenderCancel","publishEL","outerWidth","click .publish","click .viewChanges","clickPublish","clickViewChanges","appMenuCollectionView","appMenuButtonsView","LayoutView","regions","menu","buttons","appDomainCollection","show","collection","renderTitle","formData","appHeaderView","appSubHeaderView","formTitleView","app","formTitle","appSub","changeSubHeader","formSettings","subHeaderView","header","content","reply","getMainEl","parent","perfectScrollbar","disableSelection","contentView","drawerEmptyView","getEl","loadContent","emptyContent","drawerID","data","drawer","headerView","click .nf-toggle-drawer","clickToggleDrawer","onBeforeDestroy","off","clickTag","active","mergeTagItemView","CompositeView","fieldCollection","updateFields","attachHtml","collectionView","append","set","Backbone","Model","defaults","exclude","mergeTagModel","Collection","mergeTagsSectionView","MergeTagCollection","getMergeTagsView","reRender","settingModel","mergeTagCollection","defaultGroups","where","default_group","useMergeTags","each","remove","include","models","sectionModel","console","log","add","mainView","menuDrawerView","drawerView","mergeTagsContentView","menuDrawer","mergeTagsContent","mergeTags","mergeTagsClone","clone","getBuilderEl","getBuilderView","click .nf-open-drawer","click .nf-change-domain","click .nf-close-drawer","openDrawer","closeDrawer","changeDomain","controller","clickOpenDrawer","toggleDrawerSize","getClosedDrawerPos","preventClose","enableClose","maybePreventClose","objPreventClose","filterFocused","currentDrawer","builderEl","addClass","removeClass","rightClosed","drawerEl","css","right","checkCloseDrawerPos","setInterval","clearInterval","target","currentDomainID","dataModel","hasFocus","checkOpenDrawerPos","focusFilter","toggleClass","filterEl","focus","closedPos","width","keys","key","getPreventClose","clearFilter","blurFilter","keyup .nf-filter","input .nf-filter","focus input","changeFilter","maybeChangeFilter","keyCode","addObject","trim","val","blur","getFocus","drawerDisabled","defaultHeaderView","getHeaderView","drawerModel","click .dashicons-dismiss","removeStagedField","stagedFieldView","stagedFieldsEmptyView","emptyView","getStagedFieldsEl","sortable","placeholder","helper","tolerance","over","ui","out","receive","update","start","stop","draggable","opacity","connectToSortable","height","element","left","top","stagingModel","comparator","bindAll","dragging","scroll","click .nf-item","keydown .nf-item","clickFieldType","maybeClickFieldType","renderFieldTypes","fieldTypes","type","nicename","savedField","isSavedField","fieldTypeSectionView","drawerStagingView","StagingCollection","fieldTypeSectionCollectionView","staging","primary","secondary","filterFieldTypes","removeFieldTypeFilter","savedCollection","primaryCollection","fieldTypeSectionCollection","secondaryCollection","stagingCollection","filteredSectionCollection","reset","childViewOptions","getChildView","itemSettingCollectionView","settings","empty","click .toggle","clickToggleGroup","renderLabel","label","renderArrowDir","display","itemSettingGroupView","itemSettingGroupCollectionView","settingGroups","groupCollection","maybeRenderTitle","renderTypeNicename","domainID","clickAddAction","window","open","image","section","renderStyle","actionTypeButtonView","renderNicename","slug","actionTypeCollectionView","filteractionTypes","removeactionTypeFilter","installedActions","availableActions","filteredInstalled","filteredAvailable","click .undoSingle","undoSingle","viewChangesItem","className","click .undoChanges","clickUndoChanges","settingErrorView","error","renderOnChange","renderError","drawerOpened","drawerClosed","onBeforeRender","next","jBox","maxWidth","theme","closeOnClick","mask","input","autoNumeric","aSep","thousandsSeparator","aDec","decimalPoint","aSign","format","onAttach","renderVisible","renderSetting","renderLabelClasses","use_merge_tags","renderTooltip","help","renderMergeTags","hide_merge_tags","change .setting","keyup .setting","click .setting","click .extra","changeSetting","keyUpSetting","clickSetting","clickExtra","itemSettingView","formName","drawerCollection","addFieldView","editSettingsView","addActionView","editFormSettingsView","viewChangesView","viewChangesHeaderView","newFormView","newFormHeaderView","getContentView","getDrawerCollection","getDrawer","hotkeys","domainModel","hide","click .nf-edit-settings","click .nf-delete","click .nf-duplicate","clickEdit","clickDelete","clickDuplicateField","itemControlsView","itemControls","editActive","renderRequired","required","getFieldID","isNumeric","click","maybeClickEdit","hasClass","droppable","accept","hoverClass","item","drop","mainContentFieldView","mainContentFieldEmptyView","reorderOnSort","getSortableEl","containment","cancel","actionCollection","maybeDeactivate","change input","changeToggle","renderToggle","actionLabel","actionView","activeClass","settingItem","fieldsMainHeaderView","fieldsSubHeaderView","fieldsMainContentFieldCollectionView","actionsMainHeaderView","actionsSubHeaderView","actionsMainContentView","settingsMainHeaderView","settingsSubHeaderView","settingsMainContentView","Esc","Ctrl+Shift+n","Ctrl+Shift+a","Ctrl+Shift+s","Alt+Ctrl+t","up","down","Shift+return","getMainHeaderView","getSubHeaderView","getMainContentView","Ctrl+Shift+f","nfAdmin","previewurl","getDomainCollection","getDomainModel","loading","changeStatus","appModel","clean","getData","getSetting","getCurrentDomain","getCurrentDrawer","updateCurrentDomain","updateCurrentDrawer","updateSetting","setting","currentDrawerID","toggleSettingGroup","errors","updateDB","action","jsAction","JSON","parse","stringify","removedIDs","fields","field","parent_id","deleted_fields","actions","deleted_actions","post","ajaxurl","form","security","ajaxNonce","response","exception","silent","preloadedFormData","getFormModel","disablePreview","enablePreview","changePreviewNicename","appDomains","preview","publish","viewChanges","changeCollection","parseInt","cid","ChangeModel","registerChange","getCollection","maybeResetCollection","changes","dashicon","changeModel","undoChanges","sort","change","undoAll","publishResponse","new_ids","newID","oldID","forms","history","replaceState","changeAppDomain","preventChange","enableChange","objPreventChange","maybePreventChange","changePushState","pushState","location","href","reExp","toString","newUrl","changeHotkeys","addNewField","addNewAction","changeDomainFields","changeDomainActions","changeDomainSettings","document","hotkey","msg","fieldsDomain","actionsDomain","settingsDomain","ignoreAttributes","setAppClean","attr","changedAttributes","changedAttr","after","undoChangeSetting","undoAddObject","undoRemoveObject","undoDuplicateObject","undoSortFields","undoAddListOption","undoRemoveListOption","undoSortListOptions","fieldModel","before","maybeRemoveChange","objectModel","newIDs","results","objectCollection","objModels","optionModel","cloneModelDeep","attributes","options","copy","constructor","newModel","getSettingChildView","settingChildView","object","maybePreventUI","objectType","updateKey","keyModel","fieldsetView","settingCollection","createSettingsCollection","settingTypeModel","clickDuplicate","tmpID","tagSectionCollection","tagSection","tags","fieldTags","tag","getFieldKeyFormat","calcTags","calcCollection","calc","currentElement","initMergeTags","clickMergeTag","addFieldTags","deleteFieldTags","updateCurrentElement","updateCurrentSetting","getSectionModel","replaceFieldKey","mergeTagsView","jBoxes","title","position","x","y","closeOnEsc","maxHeight","onOpen","setContent","prev","onClose","tagModel","currentValue","currentPos","caret","newPos","substr","summernote","fieldID","openMergeTags","returnMergeTags","preventDefault","currentModel","upMergeTags","changeActiveTag","downMergeTags","dir","inc","currentIndex","nextModel","userInfo","system","updateOpen","newKey","oldTag","oldKey","_previousAttributes","settingName","oldVal","re","RegExp","newVal","beforeRenderSetting","confirmPublish","initSettingModel","destroySetting","meta_image_frame","icons","align","alignCenter","alignJustify","alignLeft","alignRight","indent","outdent","bold","close","code","eraser","italic","link","unlink","magic","minus","orderedlist","redo","square","table","underline","undo","unorderedlist","currentContext","initRTE","settingView","linkButton","context","mediaButton","toolbar","codemirror","lineNumbers","prettifyHtml","callbacks","onBlur","removeRTE","linkDropdown","buttonGroup","button","contents","tooltip","clickLinkButton","toggle","dropdown","mergeTagsButton","openMediaManager","invoke","wp","media","frames","text","media_attachment","state","first","toJSON","insertMedia","range","closest","textEl","urlEl","isNewWindowEl","isNewWindow","filename","editFormText","changeMenu","formPublish","isNewForm","highlightAddNew","appendEditForm","form_id","isNaN","typeModel","settingGroupModel","typeSectionModel","fieldTypeCollection","fieldTypeSettingGroupCollection","fieldTypeSections","fieldTypeData","group","groupTmp","fieldType","alias","parentType","settingDefaults","getFieldType","getTypeCollection","getTypeSections","addStagedField","startDrag","stopDrag","getCurrentDraggableHelperClone","mainEl","style","setProperty","draggableHelperClone","stagedFields","num","getSavedFields","getStagingCollection","sortStagedFields","clearStagedFields","beforeCloseDrawer","now","tmpField","sortableEl","order","search","pos","addActiveClass","removeActiveClass","receiveStagedFields","overStagedFields","outStagedFields","startStagedFields","stopStagedFields","stagedFieldsEl","currentHelper","helperClone","filtered","filterCollection","toLowerCase","filter","found","receiveFieldsSortable","overfieldsSortable","outFieldsSortable","stopFieldsSortable","startFieldsSortable","updateFieldsSortable","addField","insertedAt","fieldWidth","dragFieldID","dragModel","oldPos","objectDomain","updateFieldKey","tmpNum","removeField","getFieldCollection","getField","getTmpFieldID","deleteField","sortFields","updateFieldSetting","changeErrors","size","errorsFound","opt","listOptionModel","addOption","ErrorView","columns","renderErrors","keyup","changeOption","deleteOption","keyupOption","maybeAddOption","getColumns","listOptionView","listEmptyView","listOptionCollection","optionCollection","handle","forcePlaceholderSize","renderHeaders","col","renderFieldsetClasses","click .nf-add-new","clickAddOption","listCompositeView","updateOptionSortable","stopOptionSortable","startOptionSortable","triggerDataModel","modelData","new","newOrder","clearEditActive","fieldSettings","getSettingModel","findWhere","dropCreditCardField","stageCreditCardField","newField","productFields","getProductFields","addMask","newFieldKey","updateLabel","keyUp","keyExists","changed","setError","slugify","separator","testKey","typeCollection","settingGroupCollection","actionTypeData","actionType","getType","getInstalledActions","getAvailableActions","actionModel","addAction","removeAction","getAction","getTmpID","deleteAction","actionSettings","dropActionType","type_slug","actionTypeModel","filterActionTypes","newInstalled","newAvailable","formSettingTypeData","settingType","bind","settingsModel","getSettings","updateCalc","sortCalc","checkName","checkEQ","checkAllCalcs","nameExists","eq","errorSelfRef","errorFutureCalc","calcs","match","calculations","targetCalc","selfRef","futureCalc","Drawer","DrawerConfig","DomainConfig","AppData","DrawerToggleSettingGroup","UpdateDB","FormData","PreviewLink","AppMenuButtons","AppTrackChanges","AppUndoChanges","AppPublishResponse","AppChangeDomain","Pushstate","Hotkeys","CleanState","CoreUndo","CloneModelDeep","DrawerSettingChildView","ChangeSettingDefault","Fieldset","ToggleSetting","ItemControls","MergeTags","ItemSettingFill","ConfirmPublish","RTE","ChangeMenu","FieldTypes","FieldTypeDrag","FieldStagingDrag","SavedFields","StagedFieldsData","StagedFieldsSortable","DrawerFilterFieldTypes","MainContentFieldsSortable","FieldData","OptionRepeater","FieldsEditActive","FieldSettings","FieldCreditCard","FieldQuantity","FieldShipping","FieldKey","ActionTypes","ActionData","ActionSettings","ActionEditActive","ActionAddTypes","ActionTypeDrag","ActionDroppable","ActionFilterTypes","SettingTypes","SettingData","FormSettings","SettingsEditActive","SettingsClickEdit","AdvancedCalculations","baseUrl","requireBaseUrl","Radio","ready","$","BuilderView","LoadControllers","NinjaForms","Application","onStart","ninjaForms"],"mappings":"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ACA/Z,GAAAqa,QAIAL,SACAha,GAAAsa,WAIApU,EAAAha,IAAA,SAAA8T,GACAkG,EAAAnf,QAAA,gBAAAmf,IAIA0T,cAAA,SAAAnwB,GACA,GAAArB,GAAApC,IACAyD,GAAA6D,OAAAjM,IAAA,SAAAwzB,GACAzsB,EAAAsxB,UAAA7E,EAAAttB,IAAA,QAAAstB,GACAzsB,EAAAuxB,QAAA9E,EAAAttB,IAAA,MAAAstB,OAMA,OAAAjmB,KCnJA9O,EACA,+BAIA,yBACA,+BACA,+BACA,uBACA,2CACA,2BACA,2BACA,8BACA,8BACA,+BACA,8BACA,kCACA,+BACA,4BACA,0BACA,6BACA,2BACA,iCACA,sCACA,uCACA,2BACA,gCACA,+BACA,4BACA,kCACA,iCACA,sBACA,6BAIA,2BACA,mCACA,iCACA,wCACA,6BACA,qCACA,iCACA,8BACA,0BACA,iCACA,gCACA,mCACA,qCACA,mCACA,mCACA,yBAKA,4BACA,2BACA,qCACA,iCACA,qCACA,+BACA,gCACA,kCAKA,6BACA,4BACA,oCACA,kCACA,iCACA,qCAEA,SAIAy6B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIAC,EACAC,EACAC,GACAC,GACAC,GACAC,IAGA,GAAApvB,IAAAlJ,WAAA7B,OAAA+B,QACAG,WAAA,WAIA,GAAAs1B,GACA,GAAAd,GACA,GAAAC,GACA,GAAAC,GACA,GAAAE,GACA,GAAAC,GACA,GAAAE,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAG,GACA,GAAAC,GACA,GAAAC,GACA,GAAAK,GACA,GAAAG,GACA,GAAAC,GACA,GAAAC,GAQA,GAAAP,GACA,GAAAiB,GAEA,GAAAT,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAhB,GACA,GAAAE,GACA,GAAAH,GACA,GAAAoB,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GAIA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GAIA,GAAAC,GACA,GAAAE,IACA,GAAAD,GACA,GAAAE,IACA,GAAAC,IACA,GAAAC,IAKA,GAAAtD,GACA,GAAAiC,GACA,GAAA9B,GACA,GAAAiB,GACA,GAAAC,KAIA,OAAAntB,MAGA/O,EAAAyB,QCjPA28B,QAAAnf,QAAAof,eAAA,aAGA,IAAAh4B,GAAAiG,SAAAgyB,KAEA34B,QAAA8e,UAAA8Z,MAAA,SAAAC,GACAx+B,GAAA,oBAAA,+BAAA,SAAAy+B,EAAAC,GAEA,GAAAC,GAAA94B,WAAA+4B,YAAA74B,QAEAG,WAAA,SAAAsgB,GAEAngB,EAAAC,QAAA,OAAAY,QAAA,yBAAAf,KAEA,IAAAu4B,EAEAr4B,GAAAC,QAAA,OAAAY,QAAA,wBAAAf,OAGA04B,QAAA,WACA,GAAAJ,EAEAp4B,GAAAC,QAAA,OAAAY,QAAA,iBAAAf,SAIA24B,EAAA,GAAAH,EACAG,GAAA7rB,YAGAhT,EAAA,OAAA;AljbpIA,ADqIA;ACptHA,ADuHA;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA,ADgBA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA,ADkDA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA,AD0CA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA,ADgBA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA,ADiBA;AChzCA,AD0CA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA,ADkBA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA,ADmDA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjGA,ADkGA;ACjtIA,ADuIA;ACtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA,ADWA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9EA,AD+EA;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA,ADYA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA,ADmDA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACfvCA,ADwCA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA,ADyBA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA,AD4CA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA,ADgBA;ACfzQA,AD0QA;ACzQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA,ADgBA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA,ADsBA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA,ADQA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxDA,ADyDA;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA,ADkBA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA,ADkDA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA,ADQA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA,ADoCA;ACnzKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA,ADqBA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvEA,ADwEA;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA,ADiBA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA,ADkBA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA,AD6BA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChEA,ADiEA;AChpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA,AD2BA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3FA,AD4FA;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxrCA,ADsCA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3FA,AD4FA;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA,ADgEA;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA,ADkBA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnjTA,ADkTA;ACjTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA,AD2BA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA,ADeA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA,ADiBA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA,ADiBA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbzHA,AD0HA;ACzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA,ADwDA;ACvjrIA,ADsIA;ACrtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA,ADmEA;AClnJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzDA,AD0DA;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/FA,ADgxPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA,ADyBA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxgjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7DA,AD8DA;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7CA,AD8CA;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjGA,ADkGA;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA,ADkCA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA,ADgEA;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA,ADeA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA,ADuCA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA,ADyBA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA,ADkCA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA,AD0BA;ACzlPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"builder.js","sourcesContent":["/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"../lib/almond\", function(){});\n\n","/**\n * Renders an application menu item from a domain model.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/menuItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-app-menu-item',\n\n\t\tinitialize: function() {\n\t\t\t// Listen for domain changes and re-render when we detect one.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.render );\n\t\t\t// When we change the model (to disable it, for example), re-render.\n\t\t\tthis.model.on( 'change', this.render, this );\n\t\t},\n\n\t\t/**\n\t\t * When we render this view, remove the extra <div> tag created by backbone.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\t// Listen for clicks on our app menu.\n\t\tevents: {\n\t\t\t'click a': 'clickAppMenu'\n\t\t},\n\n\t\t/**\n\t\t * When we click on a menu item, fire a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * We pass this.model so that we know what item was clicked.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\te event\n\t\t * @return return\n\t\t */\n\t\tclickAppMenu: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:menu', e, this.model );\n\t\t},\n\n\t\t/**\n\t\t * These functions are available to templates, and help us to remove logic from template files.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\t/**\n\t\t\t\t * If we have any dashicons in our model, render them.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderDashicons: function() {\n\t\t\t\t\tif ( this.dashicons ) {\n\t\t\t\t\t\treturn '<span class=\"dashicons ' + this.dashicons + '\"></span>'\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * Render classes for our menu item, including active.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = this.classes;\n\t\t\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\t\t\tif ( currentDomain.get( 'id' ) == this.id ) {\n\t\t\t\t\t\tclasses += ' active';\n\t\t\t\t\t}\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * If our menu is a link (like preview), render its url.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderUrl: function() {\n\t\t\t\t\tif ( '' != this.url ) {\n\t\t\t\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\t\t\t\t\t\treturn this.url + formModel.get( 'id' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '#';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * If our menu is a link (like preview), render its target.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderTarget: function() {\n\t\t\t\t\tif ( '' != this.url ) {\n\t\t\t\t\t\treturn '_blank';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '_self';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * If our menu item is disabled, output 'disabled'\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderDisabled: function() {\n\t\t\t\t\tif ( this.disabled ) {\n\t\t\t\t\t\treturn 'disabled';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Collection view that takes our app menu items and renders an individual view for each.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/menu',['views/app/menuItem'], function( appMenuItemView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: appMenuItemView,\n\n\t\t/**\n\t\t * When we show this view, get rid of the extra <div> tag added by backbone.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonShow: function() {\n\t\t\tjQuery( this.el ).find( 'li:last' ).unwrap();\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","/**\n * Renders the action buttons to the right of the app menu. i.e. Publish\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/menuButtons',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'span',\n\t\ttemplate: '#nf-tmpl-app-header-action-button',\n\n\t\tinitialize: function() {\n\t\t\t// Listen to changes on the app 'clean' state. When it changes, re-render.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:clean', this.render, this );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:loading', this.render, this );\n\t\t},\n\n\t\t/**\n\t\t * These functions are available to templates, and help us to remove logic from template files.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\ttemplateHelpers: function () {\n\t\t\tvar that = this;\n\t    \treturn {\n\n\t    \t\t/**\n\t    \t\t * Render our Publish button. If we're loading, render the loading version.\n\t    \t\t *\n\t    \t\t * @since  3.0\n\t    \t\t * @return string\n\t    \t\t */\n\t    \t\trenderPublish: function() {\n\t    \t\t\tif ( that.publishWidth ) {\n\t    \t\t\t\tthis.publishWidth = 'style=\"width:' + that.publishWidth + 'px !important\"';\n\t    \t\t\t} else {\n\t    \t\t\t\tthis.publishWidth = '';\n\t    \t\t\t}\n\t    \t\t\tif ( nfRadio.channel( 'app' ).request( 'get:setting', 'loading' ) ) {\n\t    \t\t\t\treturn _.template( jQuery( '#nf-tmpl-add-header-publish-loading' ).html(), this );\t    \t\t\t\t\n\t    \t\t\t} else {\n\t    \t\t\t\treturn _.template( jQuery( '#nf-tmpl-app-header-publish-button' ).html(), this );\n\t    \t\t\t}\n\t    \t\t},\n\n\t    \t\t/**\n\t    \t\t * If our app state is clean, disable publish.\n\t    \t\t * \n\t    \t\t * @since  3.0\n\t    \t\t * @return string\n\t    \t\t */\n\t    \t\tmaybeDisabled: function() {\n\t    \t\t\tif ( nfRadio.channel( 'app' ).request( 'get:setting', 'clean' ) ) {\n\t    \t\t\t\treturn 'disabled';\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t    \t\t},\n\n\t    \t\t/**\n\t    \t\t * If our app isn't clean, render our 'viewChanges' button.\n\t    \t\t * @since  version\n\t    \t\t * @return {[type]} [description]\n\t    \t\t */\n\t    \t\tmaybeRenderCancel: function() {\n\t    \t\t\tif ( ! nfRadio.channel( 'app' ).request( 'get:setting', 'clean' ) ) {\n\t    \t\t\t\treturn _.template( jQuery( '#nf-tmpl-app-header-view-changes' ).html(), this );\t    \t\t\t\t\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tvar publishEL = jQuery( this.el ).find( '.publish' );\n\t\t\tthis.publishWidth = jQuery( publishEL ).outerWidth( true );\n\t\t},\n\n\t\t/**\n\t\t * Listen for clicks on the Publish or view changes button.\n\t\t * @type {Object}\n\t\t */\n\t\tevents: {\n\t\t\t'click .publish': 'clickPublish',\n\t\t\t'click .viewChanges': 'clickViewChanges'\n\t\t},\n\n\t\t/**\n\t\t * When we click publish, trigger a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tclickPublish: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:publish', e );\n\t\t},\n\n\t\t/**\n\t\t * When we click view changes, trigger a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tclickViewChanges: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:viewChanges', e );\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Main application header. Includes links to all of our domains.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/header',['views/app/menu', 'views/app/menuButtons'], function( appMenuCollectionView, appMenuButtonsView ) {\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-app-header',\n\n\t\tregions: {\n\t\t\t// Menu is our main app menu.\n\t\t\tmenu: '.nf-app-menu',\n\t\t\t// Buttons represents the 'view changes' and 'Publish' buttons.\n\t\t\tbuttons: '.nf-app-buttons'\n\t\t},\n\n\t\t/**\n\t\t * Since this is a layout region, we need to fill the two areas: menu and buttons whenever we show this view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonShow: function() {\n\t\t\t// Get our domains\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\t// show the menu area using the appropriate view, passing our domain collection.\n\t\t\tthis.menu.show( new appMenuCollectionView( { collection: appDomainCollection } ) );\n\t\t\tthis.buttons.show( new appMenuButtonsView() );\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","/**\n * Renders our sub-header. i.e. add new field, add new action, etc.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/subHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-sub-header'\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders our form title.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/formTitle',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-header-form-title',\n\n\t\tinitialize: function() {\n\t\t\t// When we change the model (to disable it, for example), re-render.\n\t\t\tthis.model.on( 'change:title', this.render, this );\n\t\t},\n\n\t\t/**\n\t\t * When we render this view, remove the extra <div> tag created by backbone.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\t/**\n\t\t * These functions are available to templates, and help us to remove logic from template files.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t    \treturn {\n\t    \t\trenderTitle: function(){\n\t    \t\t\tvar formData = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\t    \t\t\treturn formData.get( 'settings' ).get( 'title' );\n\t\t\t\t},\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders our builder header.\n *\n * This is a layout view and handles two regions:\n * app - menu/buttons\n * subapp - title, add new field, etc.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/builderHeader',['views/app/header', 'views/app/subHeader', 'views/app/formTitle'], function( appHeaderView, appSubHeaderView, formTitleView ) {\n\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: \"div\",\n\t\ttemplate: \"#nf-tmpl-header\",\n\n\t\tregions: {\n\t\t\tapp: \"#nf-app-header\",\n\t\t\tformTitle: \"#nf-app-form-title\",\n\t\t\tappSub: \"#nf-app-sub-header\"\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.changeSubHeader );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tthis.app.show( new appHeaderView() );\n\n\t\t\tvar formData = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\t\t\tvar formSettings = formData.get( 'settings' );\n\t\t\tthis.formTitle.show( new formTitleView( { model: formSettings } ) );\n\n\t\t\tthis.changeSubHeader();\n\t\t},\n\n\t\tchangeSubHeader: function() {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar subHeaderView = currentDomain.get( 'getSubHeaderView' ).call( currentDomain );\n\t\t\tthis.appSub.show( subHeaderView );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/app/main',[], function() {\n\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main',\n\n\t\tregions: {\n\t\t\theader: '#nf-main-header',\n\t\t\tcontent: '#nf-main-content'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.render );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:mainEl', this.getMainEl, this );\n\t\t\t\n\t\t\t// this.listenTo( nfRadio.channel( 'app' ), 'cancel:changes', this.render );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tjQuery( this.el ).parent().perfectScrollbar();\n\t\t\tnfRadio.channel( 'main' ).trigger( 'show:main' );\n\t\t\tjQuery( this.el ).parent().disableSelection();\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\t// var headerView = currentDomain.get( 'getMainHeaderView' ).call( currentDomain );\n\t\t\t// this.header.show( headerView );\n\t\t\tvar contentView = currentDomain.get( 'getMainContentView' ).call( currentDomain );\n\t\t\tthis.content.show( contentView );\n\n\t\t\tnfRadio.channel( 'main' ).trigger( 'render:main' );\n\t\t},\n\n\t\tgetMainEl: function() {\n\t\t\treturn jQuery( this.el ).parent();\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Menu view used on smaller screens.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/mobileMenu',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-menu-drawer'\n\t});\n\n\treturn view;\n} );\n","/**\n * Empty drawer content view.\n * Called before we close the drawer.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/contentEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-empty'\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders our drawer region\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer',['views/app/drawer/contentEmpty'], function( drawerEmptyView ) {\n\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttemplate: '#nf-tmpl-drawer',\n\n\t\tregions: {\n\t\t\theader: '#nf-drawer-header',\n\t\t\tcontent: '#nf-drawer-content'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:drawerEl', this.getEl, this );\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'load:drawerContent', this.loadContent, this );\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'empty:drawerContent', this.emptyContent, this );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tjQuery( this.el ).parent().perfectScrollbar();\n\t\t    // jQuery( this.el ).parent().disableSelection();\n\t\t},\n\n\t\tloadContent: function( drawerID, data ) {\n\t\t\tvar drawer = nfRadio.channel( 'app' ).request( 'get:drawer', drawerID );\n\t\t\tvar contentView = drawer.get( 'getContentView' ).call( drawer, data );\n\t\t\tvar headerView = drawer.get( 'getHeaderView' ).call( drawer, data );\n\n\t\t\tthis.header.show( headerView );\n\t\t\tthis.content.show( contentView );\n\n\t\t},\n\n\t\temptyContent: function() {\n\t\t\tthis.header.show( new drawerEmptyView() );\n\t\t\tthis.content.show( new drawerEmptyView() );\n\t\t},\n\n\t\tgetEl: function() {\n\t\t\treturn jQuery( this.el ).parent();\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-toggle-drawer': 'clickToggleDrawer'\n\t\t},\n\n\t\tclickToggleDrawer: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:toggleDrawerSize' );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n\n","/**\n * Single item view used for merge tags.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/mergeTagItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'li',\n\n\t\ttemplate: '#nf-tmpl-merge-tags-item',\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:active', this.render );\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:active', this.render, this );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click a': 'clickTag'\n\t\t},\n\n\t\tclickTag: function( e ) {\n\t\t\tnfRadio.channel( 'mergeTags' ).trigger( 'click:mergeTag', e, this.model );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tif ( this.active ) {\n\t\t\t\t\t\treturn 'active';\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Merge tags popup section\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/mergeTagsSection',['views/app/drawer/mergeTagItem'], function( mergeTagItemView ) {\n\tvar view = Marionette.CompositeView.extend({\n\t\ttagName: 'div',\n\t\tchildView: mergeTagItemView,\n\t\ttemplate: '#nf-tmpl-merge-tags-section',\n\n\t\tinitialize: function() {\n\t\t\tthis.collection = this.model.get( 'tags' );\n\t\t\tthis.model.on( 'change', this.render, this );\n\t\t\tif ( 'fields' == this.model.get( 'id' ) ) {\n\t\t\t\t// var fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\t// fieldCollection.on( 'all', this.updateFields, this );\n\t\t\t}\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tif ( 'fields' == this.model.get( 'id' ) ) {\n\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\tfieldCollection.off( 'all', this.updateFields, this );\n\t\t\t}\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( '.merge-tags' ).append( childView.el );\n\t\t},\n\n\t\tupdateFields: function() {\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tthis.model.set( 'tags', fieldCollection );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Model that represents our merge tags.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/mergeTagModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tactive: false,\n\t\t\texclude: false\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collections of merge tags.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/mergeTagCollection',['models/app/mergeTagModel'], function( mergeTagModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: mergeTagModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Merge tags popup\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/mergeTagsContent',['views/app/drawer/mergeTagsSection', 'models/app/mergeTagCollection'], function( mergeTagsSectionView, MergeTagCollection ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-merge-tags-content',\n\t\tchildView: mergeTagsSectionView,\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'get:view', this.getMergeTagsView, this );\n\t\t},\n\n\t\treRender: function( settingModel ) {\n\t\t\tvar mergeTagCollection = nfRadio.channel( 'mergeTags' ).request( 'get:collection' );\n\t\t\tvar defaultGroups = mergeTagCollection.where( { default_group: true } );\n\t\t\tthis.collection = new MergeTagCollection( defaultGroups );\n\t\t\tvar that = this;\n\t\t\tvar useMergeTags = settingModel.get( 'use_merge_tags' );\n\t\t\tif ( 'object' == typeof useMergeTags ) {\n\t\t\t\tif ( 'undefined' != typeof useMergeTags.exclude ) {\n\t\t\t\t\t_.each( useMergeTags.exclude, function( exclude ) {\n\t\t\t\t\t\tthat.collection.remove( exclude );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tif ( 'undefined' != typeof useMergeTags.include ) {\n\t\t\t\t\t_.each( mergeTagCollection.models, function( sectionModel ) {\n\t\t\t\t\t\tif ( -1 != useMergeTags.include.indexOf( sectionModel.get( 'id' ) ) ) {\n\t\t\t\t\t\t\tconsole.log( sectionModel );\n\t\t\t\t\t\t\tthat.collection.add( sectionModel );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.render();\n\t\t},\n\n\t\tgetMergeTagsView: function() {\n\t\t\treturn this;\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Builder view.\n *\n * This layout view has regions that represent our application areas:\n * header\n * main\n * menuDrawer - Mobile side-menu\n * drawer\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/builder',['views/app/builderHeader', 'views/app/main', 'views/app/drawer/mobileMenu', 'views/app/drawer', 'views/app/drawer/mergeTagsContent'], function( headerView, mainView, menuDrawerView, drawerView, mergeTagsContentView ) {\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttemplate: \"#nf-tmpl-builder\",\n\t\tel: '#nf-builder',\n\n\t\tregions: {\n\t\t\theader: \"#nf-header\",\n\t\t\tmain: \"#nf-main\",\n\t\t\tmenuDrawer: \"#nf-menu-drawer\",\n\t\t\tdrawer: \"#nf-drawer\",\n\t\t\tmergeTagsContent: '.merge-tags-content'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Layout views aren't self-rendering.\n\t\t\tthis.render();\n\t\t\tvar mergeTags = nfRadio.channel( 'mergeTags' ).request( 'get:collection' );\n\t\t\tvar mergeTagsClone = mergeTags.clone();\n\t\t\tthis.mergeTagsContent.show( new mergeTagsContentView( { collection: mergeTagsClone } ) );\n\t\t\t// Show our header.\n\t\t\tthis.header.show( new headerView() );\n\t\t\t// Show our main content.\n\t\t\tthis.main.show( new mainView() );\n\t\t\t// this.menuDrawer.show( new menuDrawerView() );\n\t\t\t// Show our drawer.\n\t\t\tthis.drawer.show( new drawerView() );\n\t\t\t// Respond to requests asking for the builder dom element.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:builderEl', this.getBuilderEl, this );\n\t\t\t// Respond to requests asking for the builder view\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:builderView', this.getBuilderView, this );\n\t\t},\n\n\t\tgetBuilderEl: function() {\n\t\t\treturn this.el;\n\t\t},\n\n\t\tgetBuilderView: function() {\n\t\t\treturn this;\n\t\t},\n\n\t\t// Listen for clicks\n\t\tevents: {\n\t\t\t'click .nf-open-drawer': 'openDrawer',\n\t\t\t'click .nf-change-domain': 'changeDomain',\n\t\t\t'click .nf-close-drawer': 'closeDrawer'\n\t\t},\n\n\t\t/**\n\t\t * Someone clicked to open a drawer, so fire a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te \tevent\n\t\t * @return void\n\t\t */\n\t\topenDrawer: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:openDrawer', e );\n\t\t},\n\t\t/**\n\t\t * Someone clicked to close a drawer, so fire a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tcloseDrawer: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:closeDrawer' );\n\t\t},\n\t\t/**\n\t\t * Someone clicked to change the domain, so fire a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te \tevent\n\t\t * @return void\n\t\t */\n\t\tchangeDomain: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:menu', e );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","/**\n * Handles opening and closing our drawer. This is where we display settings for fields, actions, and settings.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/drawer',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our drawer-related click events.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:openDrawer', this.clickOpenDrawer );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:closeDrawer', this.closeDrawer );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:toggleDrawerSize', this.toggleDrawerSize );\n\n\t\t\t// Reply to direct requests to open or close the drawer.\n\t\t\tnfRadio.channel( 'app' ).reply( 'open:drawer', this.openDrawer, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'close:drawer', this.closeDrawer, this );\n\n\t\t\t/*\n\t\t\t * When we close the drawer, we have to figure out what the right position should be.\n\t\t\t * This listens to requests from other parts of our app asking what the closed right position is.\n\t\t\t */\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'get:closedRightPos', this.getClosedDrawerPos, this );\n\t\t\t\n\t\t\t// Reply to requests to prevent our drawer from closing\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'prevent:close', this.preventClose, this );\n\t\t\t// Reply to requests to enable drawer closing\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'enable:close', this.enableClose, this );\n\t\t\t// Reply to requests for our disabled/enabled state.\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'get:preventClose', this.maybePreventClose, this );\n\n\t\t\t/*\n\t\t\t * Object that holds our array of 'prevent close' values.\n\t\t\t * We use an array so that registered requests can unregister and not affect each other.\n\t\t\t */\n\t\t\tthis.objPreventClose = {};\n\n\t\t\t/*\n\t\t\t *  Listen to focus events on the filter and stop our interval when it happens.\n\t\t\t *  This is to fix a bug that can cause the filter to gain focus every few seconds.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'filter:focused', this.filterFocused );\n\t\t},\n\n\t\t/**\n\t\t * Handles closing our drawer\n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tcloseDrawer: function() {\n\t\t\t// Get our current domain.\n\t\t\tvar currentDrawer = nfRadio.channel( 'app' ).request( 'get:currentDrawer' );\n\t\t\tif ( ! currentDrawer || this.maybePreventClose() ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Triggers the before close drawer action on our current domain's drawer channel.\n\t\t\tnfRadio.channel( 'drawer-' + currentDrawer.get( 'id' ) ).trigger( 'before:closeDrawer' );\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'before:closeDrawer' );\n\t\t\t\n\t\t\t// Send a message to our drawer to empty its contents.\n\t\t\tnfRadio.channel( 'drawer' ).request( 'empty:drawerContent' );\n\n\t\t\t// To close our drawer, we have to add our closed class to the builder and remove the opened class.\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tjQuery( builderEl ).addClass( 'nf-drawer-closed' ).removeClass( 'nf-drawer-opened' );\n\t\t\tjQuery( builderEl ).removeClass( 'disable-main' );\n\n\t\t\t// Get the right position of our closed drawer. Should be container size in -px.\n\t\t\tvar rightClosed = this.getClosedDrawerPos();\n\n\t\t\t// Get our drawer element and give change the 'right' property to our closed position.\n\t\t\tvar drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tjQuery( drawerEl ).css( { 'right': rightClosed } );\n\n\t\t\t// In order to access properties in 'this' context in our interval below, we have to set it here.\t\n\t\t\tvar that = this;\n\n\t\t\t/*\n\t\t\t * Since jQuery can't bind to a CSS change, we poll every .15 seconds to see if we've closed the drawer.\n\t\t\t *\n\t\t\t * Once our drawer is closed, we:\n\t\t\t * clear our interval\n\t\t\t * request that the app change it's current drawer to false\n\t\t\t * trigger a drawer closed message\n\t\t\t */\n\t\t\tthis.checkCloseDrawerPos = setInterval( function() {\n\t        \tif ( rightClosed == jQuery( drawerEl ).css( 'right' ) ) {\n\t        \t\tclearInterval( that.checkCloseDrawerPos );\n\t\t    \t\tnfRadio.channel( 'app' ).request( 'update:currentDrawer', false );\n\t\t    \t\tnfRadio.channel( 'drawer' ).trigger( 'closed' );\n\t\t    \t\t// jQuery( drawerEl ).scrollTop( 0 );\n\t        \t}\n\t\t\t}, 150 );\n\t\t},\n\n\t\t/**\n\t\t * Click handler for our 'open drawer' event.\n\t\t * @since  3.0\n\t\t * @param  e jQuery event\n\t\t * @return void\n\t\t */\n\t\tclickOpenDrawer: function( e ) {\n\t\t\tvar drawerID = jQuery( e.target ).data( 'drawerid' );\n\t\t\tthis.openDrawer( drawerID );\n\t\t},\n\n\t\t/**\n\t\t * Open our drawer.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string drawerID \tID of the drawer we want to open.\n\t\t * @param  object data     \tOptional data that we want to pass to the drawer.\n\t\t * @return void\n\t\t */\n\t\topenDrawer: function( drawerID, data ) {\n\t\t\tif ( this.maybePreventClose() ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// If we haven't sent a data object, set the variable to an empty object.\n\t\t\tdata = data || {};\n\n\t\t\t/*\n\t\t\t * If we're dealing with something that has a model, set the proper active state.\n\t\t\t *\n\t\t\t * TODO: Make this more dynamic. I'm not sure that it fits in the drawer controller.\n\t\t\t */\n\t\t\tif ( 'undefined' != typeof data.model ) {\n\t\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\t\t\t\tnfRadio.channel( currentDomainID ).request( 'clear:editActive' );\n\t\t\t\tdata.model.set( 'editActive', true );\n\t\t\t\tthis.dataModel = data.model;\n\t\t\t}\n\n\t\t\t// Send out a message requesting our drawer view to load the content for our drawer ID.\n\t\t\tnfRadio.channel( 'drawer' ).request( 'load:drawerContent', drawerID, data );\n\n\t\t\t// To open our drawer, we have to add our opened class to our builder element and remove the closed class.\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tjQuery( builderEl ).addClass( 'nf-drawer-opened' ).removeClass( 'nf-drawer-closed' );\n\t\t\t\n\t\t\t// To open our drawer, we have to set the right position of our drawer to 0px.\n\t\t\tvar drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tjQuery( drawerEl ).css( { 'right': '0px' } );\n\t\t\t\n\t\t\t// In order to access properties in 'this' context in our interval below, we have to set it here.\t\n\t\t\tvar that = this;\n\n\t\t\t/*\n\t\t\t * Since jQuery can't bind to a CSS change, we poll every .15 seconds to see if we've opened the drawer.\n\t\t\t *\n\t\t\t * Once our drawer is opened, we:\n\t\t\t * clear our interval\n\t\t\t * focus our filter\n\t\t\t * request that the app update its current drawer to the one we opened\n\t\t\t * trigger a drawer opened message\n\t\t\t */\n\t\t\tthis.hasFocus = false;\n\n\t\t\tthis.checkOpenDrawerPos = setInterval( function() {\n\t        \tif ( '0px' == jQuery( drawerEl ).css( 'right' ) ) {\n\t        \t\tclearInterval( that.checkOpenDrawerPos );\n\t\t\t\t\tif ( ! that.hasFocus ) {\n\t\t        \t\tthat.focusFilter();\n\t\t\t\t\t\tthat.hasFocus = true;\n\t\t\t    \t\tnfRadio.channel( 'app' ).request( 'update:currentDrawer', drawerID );\n\t\t\t    \t\t// jQuery( drawerEl ).scrollTop( 0 );\n\t\t\t    \t\tnfRadio.channel( 'drawer' ).trigger( 'opened' );\n\t\t\t\t\t}   \t\t\n\t        \t}\n\t\t\t}, 150 );\n\t\t},\n\n\t\t/**\n\t\t * Toggle the drawer from half to full screen and vise-versa\n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\ttoggleDrawerSize: function() {\n\t\t\t// Get our drawer element.\n\t\t\tvar drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\t// toggle our drawer size class.\n\t\t\tjQuery( drawerEl ).toggleClass( 'nf-drawer-expand' );\n\t\t},\n\n\t\t/**\n\t\t * Focus our filter\n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n        focusFilter: function() {\n        \t// Get our filter element\n        \tvar filterEl = nfRadio.channel( 'drawer' ).request( 'get:filterEl' );\n        \t// Focus\n        \tjQuery( filterEl ).focus();\n        },\n\n        /**\n         * Get the CSS right position (in px) of the closed drawer element.\n         * This is calculated by:\n         * getting the width of the builder element\n         * add 300 pixels\n         * make it negative\n         * \n         * @since  3.0\n         * @return void\n         */\n        getClosedDrawerPos: function() {\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tvar closedPos = jQuery( builderEl ).width() + 300;\n\t\t\treturn '-' + closedPos + 'px';\n        },\n\n        /**\n         * Check to see if anything has registered a prevent close key.\n         * \n         * @since  3.0\n         * @return boolean\n         */\n        maybePreventClose: function() {\n        \tif ( 0 == Object.keys( this.objPreventClose ).length ) {\n        \t\treturn false;\n        \t} else {\n        \t\treturn true;\n        \t}\n        },\n\n        /**\n         * Register a prevent close key.\n         * \n         * @since  3.0\n         * @param  string \tkey unique id for our 'prevent close' setting.\n         * @return void\n         */\n        preventClose: function( key ) {\n        \tthis.objPreventClose[ key ] = true;\n        \t/*\n        \t * When we disable closing the drawer, add the disable class.\n        \t */\n        \t// Get our current drawer.\n\t\t\tthis.dataModel.set( 'drawerDisabled', true );\n        },\n\n        /**\n         * Remove a previously registered prevent close key.\n         * \n         * @since  3.0\n         * @param  string \tkey unique id for our 'prevent close' setting.\n         * @return void\n         */\n        enableClose: function( key ) {\n        \tdelete this.objPreventClose[ key ];\n        \t /*\n        \t * When we remove all of our disables preventing closing the drawer, remove the disable class.\n        \t */\n        \tif ( ! this.maybePreventClose() ) {\n\t        \t// Get our current drawer.\n\t\t\t\tthis.dataModel.set( 'drawerDisabled', false );        \t\t\n        \t}\n        },\n\n        /**\n         * When we focus our filter, make sure that our open drawer interval is cleared.\n         * \n         * @since  3.0\n         * @return void\n         */\n        filterFocused: function() {\n        \tclearInterval( this.checkOpenDrawerPos );\n        },\n\n        getPreventClose: function() {\n        \treturn this.objPreventClose;\n        }\n\t});\n\n\treturn controller;\n} );\n","/**\n * Default drawer header.\n *\n * Includes our filter/search and 'Done' button.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/headerDefault',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-header-default',\n\n\t\tinitialize: function() {\n\t\t\tif ( this.model ) {\n\t\t\t\t// Listen for our drawer being disabled.\n\t\t\t\tthis.model.on( 'change:drawerDisabled', this.render, this );\t\t\t\t\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When we render, remove the extra div added by backbone and add listeners related to our filter.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\t// Remove extra wrapping div.\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t\t// Respond to requests related to our filter.\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'clear:filter', this.clearFilter, this );\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'blur:filter', this.blurFilter, this );\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'get:filterEl', this.getEl, this );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tif ( this.model ) {\n\t\t\t\tthis.model.off( 'change:drawerDisabled', this.render );\n\t\t\t}\n\t\t},\n\n\t\tevents: {\n\t\t\t'keyup .nf-filter'\t: 'maybeChangeFilter',\n\t\t\t'input .nf-filter'\t: 'changeFilter',\n\t\t\t'focus input'\t\t: 'getFocus'\n\t\t},\n\n\t\t/**\n\t\t * When the filter text is changed, trigger an event on our current drawer.\n\t\t * This lets us keep the logic separate from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tchangeFilter: function( e ) {\n\t\t\tvar currentDrawer = nfRadio.channel( 'app' ).request( 'get:currentDrawer' );\n\t\t\tnfRadio.channel( 'drawer-' + currentDrawer.get( 'id' ) ).trigger( 'change:filter', e.target.value, e );\n\t\t},\n\n\t\t/**\n\t\t * The user pressed a key. If it's the enter key, then run the change filter function.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tmaybeChangeFilter: function( e ) {\n\t\t\tif ( 13 == e.keyCode ) {\n\t\t\t\te.addObject = true;\n\t\t\t\tthis.changeFilter( e );\t\t\t\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Clear our filter.\n\t\t *\n\t\t * This triggers 'input' on the field, which will trigger a change if necessary.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tclearFilter: function() {\n\t\t\tvar filterEl =  jQuery( this.el ).find( '.nf-filter' );\n\t\t\tif ( '' != jQuery.trim( filterEl.val() ) ) {\n\t\t\t\tfilterEl.val('');\n\t\t\t\tfilterEl.trigger( 'input' );\n\t\t\t\tfilterEl.focus();\t\t\t\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Fire the 'blur' event on our filter. Used to force a change event when the user tabs.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tblurFilter: function() {\n\t\t\tjQuery( this.el ).find( '.nf-filter' ).blur();\n\t\t},\n\n\t\t/**\n\t\t * Return our filter dom element.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\tgetEl: function() {\n\t\t\treturn jQuery( this.el ).find( '.nf-filter' );\n\t\t},\n\n\t\tgetFocus: function() {\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'filter:focused' );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderDisabled: function() {\n\t\t\t\t\t// Get our current domain.\n\t\t\t\t\tif ( this.drawerDisabled ) {\n\t\t\t\t\t\treturn 'disabled';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'models/app/drawerModel',['views/app/drawer/headerDefault'], function( defaultHeaderView ) {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tgetHeaderView: function( data ) {\n\t\t\t\treturn new defaultHeaderView( data );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds all of our drawer models.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/drawerCollection',['models/app/drawerModel'], function( drawerModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: drawerModel\n\t} );\n\treturn collection;\n} );\n","define( 'views/fields/drawer/stagedField',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-staged-field',\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .dashicons-dismiss': 'removeStagedField'\n\t\t},\n\n\t\tremoveStagedField: function( el ) {\n\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'click:removeStagedField', el, this.model );\n\t\t}\n\t});\n\n\treturn view;\n} );\n\n","define( 'views/fields/drawer/stagingEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-staged-fields-empty',\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/drawer/stagingCollection',['views/fields/drawer/stagedField', 'views/fields/drawer/stagingEmpty'], function( stagedFieldView, stagedFieldsEmptyView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: stagedFieldView,\n\t\temptyView: stagedFieldsEmptyView,\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:stagedFieldsEl', this.getStagedFieldsEl, this );\n\t\t},\n\n\t\tonShow: function() {\n\n\t\t\tthis.$el = jQuery( this.el ).parent();\n\t\t\tjQuery( this.$el ).find( 'span:first' ).unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tvar that = this;\n\n\t\t\tjQuery( this.el ).sortable( {\n\t\t\t\tplaceholder: 'nf-staged-fields-sortable-placeholder',\n\t\t\t\thelper: 'clone',\n\t\t\t\ttolerance: 'pointer',\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'over:stagedFields', e, ui );\n\t\t\t\t},\n\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'out:stagedFields', ui );\n\t\t\t\t},\n\n\t\t\t\treceive: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'receive:stagedFields', ui );\n\t\t\t\t},\n\n\t\t\t\tupdate: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t\t},\n\n\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'start:stagedFields', ui );\n\n\t\t\t\t},\n\n\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'stop:stagedFields', ui );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tjQuery( this.el ).parent().draggable( {\n\t\t\t\topacity: 0.9,\n\t\t\t\tconnectToSortable: '.nf-fields-sortable',\n\n\t\t\t\thelper: function( e ) {\n\t\t\t\t\tvar width = jQuery( e.target ).parent().width();\n\t\t\t\t\tvar height = jQuery( e.target ).parent().height();\n\t\t\t\t\tvar element = jQuery( e.target ).parent().clone();\n\t\t\t\t\tvar left = width / 4;\n\t\t\t\t\tvar top = height / 2;\n\t\t\t\t\tjQuery( this ).draggable( 'option', 'cursorAt', { top: top, left: left } );\n\n\t\t\t\t\treturn element;\n\t\t\t\t},\n\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'startDrag:fieldStaging', this, ui );\n\t\t\t\t},\n\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'stopDrag:fieldStaging', this, ui );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tgetStagedFieldsEl: function() {\n\t\t\treturn jQuery( this.el );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","/**\n * Model for our staged field.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/stagingModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection of staged fields.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/stagingCollection',['models/fields/stagingModel'], function( stagingModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: stagingModel,\n\t\tcomparator: 'order'\n\t} );\n\treturn collection;\n} );\n","define( 'views/fields/drawer/typeSection',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-field-type-section',\n\t\t\n\t\tinitialize: function() {\n\t\t\t_.bindAll( this, 'render' );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tthis.dragging = false;\n\t\t\tvar that = this;\n\t\t\tjQuery( this.el ).find( 'div.nf-one-third' ).draggable( {\n\t\t\t\topacity: 0.9,\n\t\t\t\ttolerance: 'intersect',\n\t\t\t\tscroll: false,\n\t\t\t\tconnectToSortable: '.nf-field-type-droppable',\n\n\t\t\t\thelper: function( e ) {\n\t\t\t\t\tvar width = jQuery( e.target ).parent().width();\n\t\t\t\t\tvar height = jQuery( e.target ).parent().height();\n\t\t\t\t\tvar element = jQuery( e.target ).parent().clone();\n\t\t\t\t\tvar left = width / 4;\n\t\t\t\t\tvar top = height / 2;\n\t\t\t\t\tjQuery( this ).draggable( 'option', 'cursorAt', { top: top, left: left } );\n\n\t\t\t\t\treturn element;\n\t\t\t\t},\n\n\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\tthat.dragging = true;\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'startDrag:type', this, ui );\n\t\t\t\t},\n\n\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\tthat.dragging = false;\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'stopDrag:type', this, ui );\n\t\t\t\t}\n\n\t\t\t} ).disableSelection();\n\n\t\t\tjQuery( this.el ).find( '.nf-item' ).focus( function() {\n\t\t    \tjQuery( this ).addClass( 'active' );\n\t\t    } ).blur( function() {\n\t\t    \tjQuery( this ).removeClass( 'active' );\n\t\t    } );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-item': 'clickFieldType',\n\t\t\t'keydown .nf-item': 'maybeClickFieldType'\n\t\t},\n\n\t\tclickFieldType: function( e ) {\n\t\t\tif ( ! this.dragging ) {\n\t\t\t\tnfRadio.channel( 'drawer' ).trigger( 'click:fieldType', e );\n\t\t\t}\n\t\t},\n\n\t\tmaybeClickFieldType: function( e ) {\n\t\t\tif ( 13 == e.keyCode ) {\n\t\t\t\tthis.clickFieldType( e );\n\t\t\t\tnfRadio.channel( 'drawer' ).request( 'clear:filter' );\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderFieldTypes: function() {\n\t\t\t        var html = '';\n\t\t\t        var that = this;\n\t\t\t        _.each( this.fieldTypes, function( id ) {\n\t\t\t            var type = nfRadio.channel( 'fields' ).request( 'get:type', id );\n\t\t\t            var nicename = type.get( 'nicename' );\n\t\t\t            html += _.template( jQuery( '#nf-tmpl-drawer-field-type-button' ).html(), { id: id, nicename: nicename, type: type, savedField: that.isSavedField } );\n\t\t\t        } );\n\t\t\t        return html;\n\t\t\t\t},\n\n\t\t\t\tisSavedField: function() {\n\t\t\t\t\tif( this.type.get( 'savedField' ) ) {\n\t\t\t\t\t\treturn 'nf-saved';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/drawer/typeSectionCollection',['views/fields/drawer/typeSection'], function( fieldTypeSectionView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: fieldTypeSectionView,\n\n\t\tonShow: function() {\n\t\t\tjQuery( this.el ).find( '.nf-settings' ).unwrap();\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","define( 'views/fields/drawer/addField',['views/fields/drawer/stagingCollection', 'models/fields/stagingCollection', 'views/fields/drawer/typeSectionCollection'], function( drawerStagingView, StagingCollection, fieldTypeSectionCollectionView ) {\n\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttemplate: '#nf-tmpl-drawer-content-add-field',\n\n\t\tregions: {\n\t\t\tstaging: '#nf-drawer-staging .nf-reservoir',\n\t\t\tprimary: '#nf-drawer-primary',\n\t\t\tsecondary: '#nf-drawer-secondary'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'filter:fieldTypes', this.filterFieldTypes );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'clear:filter', this.removeFieldTypeFilter );\n\t\t\n\t\t\tthis.savedCollection = nfRadio.channel( 'drawer' ).request( 'get:savedFields' );\n\t\t\tthis.primaryCollection = this.savedCollection;\n\n\t\t\tthis.fieldTypeSectionCollection = nfRadio.channel( 'fields' ).request( 'get:typeSections' );\n\t\t\tthis.secondaryCollection = this.fieldTypeSectionCollection;\n\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tvar stagingCollection = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\t\t\tthis.staging.show( new drawerStagingView( { collection: stagingCollection } ) );\n\n\t\t\tthis.primary.show( new fieldTypeSectionCollectionView( { collection: this.primaryCollection } ) );\n\t\t\tthis.secondary.show( new fieldTypeSectionCollectionView( { collection: this.secondaryCollection } ) );\n\t\t},\n\n\t\tgetEl: function() {\n\t\t\treturn jQuery( this.el ).parent();\n\t\t},\n\n\t\tfilterFieldTypes: function( filteredSectionCollection ) {\n\t\t\tthis.primary.reset();\n\t\t\tthis.secondary.reset();\n\t\t\tthis.filteredSectionCollection = filteredSectionCollection;\n\t\t\tthis.primary.show( new fieldTypeSectionCollectionView( { collection: this.filteredSectionCollection } ) );\n\t\t},\n\n\t\tremoveFieldTypeFilter: function () {\n\t\t\tthis.primary.show( new fieldTypeSectionCollectionView( { collection: this.savedCollection } ) );\n\t\t\tthis.secondary.show( new fieldTypeSectionCollectionView( { collection: this.fieldTypeSectionCollection } ) );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","define( 'views/app/drawer/itemSettingCollection',[], function() {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.childViewOptions = { dataModel: data.dataModel };\n\t\t},\n\n\t\tgetChildView: function( model ) {\n\t\t\treturn nfRadio.channel( 'app' ).request( 'get:settingChildView', model );\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","define( 'views/app/drawer/itemSettingGroup',['views/app/drawer/itemSettingCollection'], function( itemSettingCollectionView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-edit-field-setting-group',\n\t\t\n\t\tregions: {\n\t\t\tsettings: '.nf-field-settings'\n\t\t},\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.model.on( 'change', this.render, this );\n\t\t\tthis.dataModel = data.dataModel;\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change', this.render );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tif ( this.model.get( 'display' ) ) {\n\t\t\t\tthis.settings.show( new itemSettingCollectionView( { collection: this.model.get( 'settings' ), dataModel: this.dataModel } ) );\n\t\t\t} else {\n\t\t\t\tthis.settings.empty();\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'render:settingGroup', this );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .toggle': 'clickToggleGroup'\n\t\t},\n\n\t\tclickToggleGroup: function( e ) {\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'click:toggleSettingGroup', e, this.model );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderLabel: function() {\n\t\t\t\t\tif ( '' != this.label ) {\n\t\t\t\t\t\treturn _.template( jQuery( '#nf-tmpl-drawer-content-edit-setting-group-label' ).html(), this );\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderArrowDir: function() {\n\t\t\t\t\tif ( this.display ) {\n\t\t\t\t\t\treturn 'down';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn 'right';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/app/drawer/itemSettingGroupCollection',['views/app/drawer/itemSettingGroup'], function( itemSettingGroupView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: itemSettingGroupView,\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.childViewOptions = { dataModel: data.dataModel };\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","define( 'views/app/drawer/editSettings',['views/app/drawer/itemSettingGroupCollection'], function( itemSettingGroupCollectionView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-edit-settings',\n\n\t\tregions: {\n\t\t\tsettingGroups: '.nf-settings-groups',\n\t\t},\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.dataModel = data.model;\n\t\t\tthis.groupCollection = data.groupCollection;\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.settingGroups.show( new itemSettingGroupCollectionView( { collection: this.groupCollection, dataModel: this.dataModel } ) );\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t    \treturn {\n\t    \t\tmaybeRenderTitle: function() {\n\t    \t\t\tif ( 'undefined' !== typeof this.type ) {\n\t    \t\t\t\treturn _.template( jQuery( '#nf-tmpl-drawer-content-edit-settings-title' ).html(), this );\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t    \t\t},\n\n\t    \t\trenderTypeNicename: function() {\n\t    \t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\t\t\tvar domainID = currentDomain.get( 'id' );\n\t    \t\t\tvar type = nfRadio.channel( domainID ).request( 'get:type', this.type );\n\t    \t\t\treturn type.get( 'nicename' );\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t});\n\n\treturn view;\n} );\n","/**\n * Button to add an action to the form.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/drawer/typeButton',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-action-type-button',\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t\t\n\t\t\tjQuery( this.el ).disableSelection();\n\t\t\t\n\t\t\tif ( 'installed' == this.model.get( 'section') ) {\n\t\t\t\tvar that = this;\n\t\t\t\tjQuery( this.el ).draggable( {\n\t\t\t\t\topacity: 0.9,\n\t\t\t\t\ttolerance: 'intersect',\n\t\t\t\t\tscroll: false,\n\t\t\t\t\thelper: 'clone',\n\n\t\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\t\tthat.dragging = true;\n\t\t\t\t\t\tnfRadio.channel( 'drawer-addAction' ).trigger( 'startDrag:type', this, ui );\n\t\t\t\t\t},\n\n\t\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\t\tthat.dragging = false;\n\t\t\t\t\t\tnfRadio.channel( 'drawer-addAction' ).trigger( 'stopDrag:type', this, ui );\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\t\t\t\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-item': 'clickAddAction'\n\t\t},\n\n\t\tclickAddAction: function( e ) {\n\t\t\tif ( ! this.dragging ) {\n\t\t\t\tif ( 'installed' == this.model.get( 'section' ) ) { // Is this an installed action?\n\t\t\t\t\tnfRadio.channel( 'actions' ).trigger( 'click:addAction', this.model );\n\t\t\t\t} else { // This isn't an installed action\n\t\t\t\t\twindow.open( this.model.get( 'link' ), '_blank' );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = 'nf-item';\n\t\t\t\t\tif ( '' != jQuery.trim( this.image ) ) {\n\t\t\t\t\t\tclasses += ' nf-has-img';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( 'installed' == this.section ) {\n\t\t\t\t\t\tclasses += ' nf-action-type';\n\t\t\t\t\t}\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\trenderStyle: function() {\n\t\t\t\t\tif ( '' != jQuery.trim( this.image ) ) {\n\t\t\t\t\t\treturn \"style=\\\"background-image: url(\" + this.image + \");\\\"\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/actions/drawer/typeCollection',['views/actions/drawer/typeButton'], function( actionTypeButtonView ) {\n\tvar view = Marionette.CompositeView.extend( {\n\t\ttemplate: '#nf-tmpl-drawer-action-type-section',\n\t\tchildView: actionTypeButtonView,\n\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t\t\treturn {\n\t\t\t\trenderNicename: function() {\n\t\t\t\t\treturn that.collection.nicename;\n\t\t\t\t},\n\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\treturn that.collection.slug;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( '.action-types' ).append( childView.el );\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","/**\n * Add action drawer.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/drawer/addAction',['views/actions/drawer/typeCollection'], function( actionTypeCollectionView ) {\n\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttemplate: '#nf-tmpl-drawer-content-add-action',\n\n\t\tregions: {\n\t\t\tprimary: '#nf-drawer-primary',\n\t\t\tsecondary: '#nf-drawer-secondary'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'filter:actionTypes', this.filteractionTypes );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'clear:filter', this.removeactionTypeFilter );\n\t\t\n\t\t\tthis.installedActions = nfRadio.channel( 'actions' ).request( 'get:installedActions' );\n\t\t\tthis.primaryCollection = this.installedActions;\n\n\t\t\tthis.availableActions = nfRadio.channel( 'actions' ).request( 'get:availableActions' );\n\t\t\tthis.secondaryCollection = this.availableActions;\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tthis.primary.show( new actionTypeCollectionView( { collection: this.primaryCollection } ) );\n\t\t\tthis.secondary.show( new actionTypeCollectionView( { collection: this.secondaryCollection } ) );\n\t\t},\n\n\t\tgetEl: function() {\n\t\t\treturn jQuery( this.el ).parent();\n\t\t},\n\n\t\tfilteractionTypes: function( filteredInstalled, filteredAvailable ) {\n\t\t\tthis.primary.reset();\n\t\t\tthis.secondary.reset();\n\t\t\tthis.primary.show( new actionTypeCollectionView( { collection: filteredInstalled } ) );\n\t\t\tthis.secondary.show( new actionTypeCollectionView( { collection: filteredAvailable } ) );\n\t\t\t\n\t\t},\n\n\t\tremoveactionTypeFilter: function () {\n\t\t\tthis.primary.show( new actionTypeCollectionView( { collection: this.installedActions } ) );\n\t\t\tthis.secondary.show( new actionTypeCollectionView( { collection: this.availableActions } ) );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","define( 'views/advanced/drawer/editFormSettings',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-edit-form-settings'\n\t});\n\n\treturn view;\n} );\n","/**\n * Individual change item.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/contentViewChangesItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-view-changes-item',\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:disabled', this.render, this );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:disabled', this.render );\n\t\t},\n\n\t\t/**\n\t\t * When we render this element, remove the extra wrapping <div> that backbone creates.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .undoSingle': 'undoSingle'\n\t\t},\n\n\t\tundoSingle: function( e ) {\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'click:undoSingle', this.model );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Changes collection view.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/contentViewChanges',['views/app/drawer/contentViewChangesItem'], function( viewChangesItem ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'table',\n        className: 'nf-changes',\n\t\tchildView: viewChangesItem\n\t} );\n\n\treturn view;\n} );\n\n","/**\n * Handles clicks on the 'view changes' button in the header.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/headerViewChanges',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-header-view-changes',\n\n\t\tevents: {\n\t\t\t'click .undoChanges': 'clickUndoChanges'\n\t\t},\n\n\t\tclickUndoChanges: function( e ) {\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'click:undoChanges' );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Error view used for settings.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/settingError',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-edit-setting-error'\n\t});\n\n\treturn view;\n} );\n","define( 'views/app/drawer/itemSetting',['views/app/drawer/mergeTagsContent', 'views/app/drawer/settingError'], function( mergeTagsContentView, settingErrorView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-edit-setting-wrap',\n\n\t\tregions: {\n\t\t\terror: '.nf-setting-error'\n\t\t},\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.dataModel = data.dataModel;\n\n\t\t\t/*\n\t\t\t * Send out a request on the setting-type-{type} channel asking if we should render on dataModel change.\n\t\t\t * Defaults to true.\n\t\t\t * This lets specific settings, like RTEs, say that they don't want to be re-rendered when their data model changes.\n\t\t\t */\n\t\t\tvar renderOnChange = ( 'undefined' == typeof nfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).request( 'renderOnChange' ) ) ? true: nfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).request( 'renderOnChange' );\n\t\t\t\n\t\t\tif ( renderOnChange ) {\n\t\t\t\tthis.dataModel.on( 'change:' + this.model.get( 'name' ), this.render, this );\n\t\t\t}\n\n\t\t\tthis.model.on( 'change:error', this.renderError, this );\n\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor ( var name in deps ) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.on( 'change:' + name, this.render, this );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * When our drawer opens, send out a radio message on our setting type channel.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'opened', this.drawerOpened );\n\n\t\t\t/*\n\t\t\t * When our drawer closes, send out a radio message on our setting type channel.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'closed', this.drawerClosed );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.dataModel.off( 'change:' + this.model.get( 'name' ), this.render );\n\t\t\tthis.model.off( 'change:error', this.renderError );\n\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor (var name in deps) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.off( 'change:' + name, this.render );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Send out a radio message.\n\t\t\t */\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'destroy:setting', this.model, this.dataModel, this );\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'destroy:setting', this.model, this.dataModel, this );\n\t\t},\n\n\t\tonBeforeRender: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'before:renderSetting', this.model, this.dataModel );\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'before:renderSetting', this.model, this.dataModel, this );\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'before:renderSetting', this.model, this.dataModel, this );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.mergeTagsContentView = false;\n\t\t\tvar that = this;\n\n\t\t\t/*\n\t\t\t * Send out a radio message.\n\t\t\t */\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'render:setting', this.model, this.dataModel, this );\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'render:setting', this.model, this.dataModel, this );\n\n\t\t\tjQuery( this.el ).find( '.nf-help' ).each(function() {\n\t\t\t\tvar content = jQuery(this).next('.nf-help-text');\n\t\t\t\tjQuery( this ).jBox( 'Tooltip', {\n\t\t\t\t\tcontent: content,\n\t\t\t\t\tmaxWidth: 200,\n\t\t\t\t\ttheme: 'TooltipBorder',\n\t\t\t\t\ttrigger: 'click',\n\t\t\t\t\tcloseOnClick: true\n\t\t\t\t})\n\t\t    });\n\n\t\t    if ( this.model.get( 'use_merge_tags' ) ) {\n\t\t    \tnfRadio.channel( 'mergeTags' ).request( 'init', this );\n\t\t    }\n\n\t\t\t/*\n\t\t\t * Apply Setting Field Masks\n\t\t\t */\n\t\t\tvar mask = this.model.get( 'mask' );\n\n\t\t\tif( typeof mask != \"undefined\" ){\n\n\t\t\t\tvar input = jQuery( this.$el ).find( 'input' );\n\n\t\t\t\tswitch( mask.type ){\n\t\t\t\t\tcase 'numeric':\n\t\t\t\t\t\tinput.autoNumeric({\n\t\t\t\t\t\t\taSep: thousandsSeparator,\n\t\t\t\t\t\t\taDec: decimalPoint\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'currency':\n\t\t\t\t\t\tinput.autoNumeric({\n\t\t\t\t\t\t\taSign: '$', // TODO: Use form setting\n\t\t\t\t\t\t\taSep: thousandsSeparator,\n\t\t\t\t\t\t\taDec: decimalPoint\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'custom':\n\t\t\t\t\t\tif( mask.format ) input.mask( mask.format )\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// TODO: Error Logging.\n\t\t\t\t\t\tconsole.log( 'Notice: Mask type of \"' + mask.type + '\" is not supported.' );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.renderError();\n\t\t},\n\n\t\tonShow: function() {\t\t\t\n\t\t\t/*\n\t\t\t * Send out a radio message.\n\t\t\t */\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'show:setting', this.model, this.dataModel, this );\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'show:setting', this.model, this.dataModel, this );\n\t\t},\n\n\t\tonAttach: function() {\t\t\t\n\t\t\t/*\n\t\t\t * Send out a radio message.\n\t\t\t */\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'attach:setting', this.model, this.dataModel, this );\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'attach:setting', this.model, this.dataModel, this );\n\t\t},\n\n\t\trenderError: function() {\n\t\t\tif ( this.model.get( 'error' ) ) {\n\t\t\t\tjQuery( this.el ).find( '.nf-setting' ).addClass( 'nf-error' );\n\t\t\t\tthis.error.show( new settingErrorView( { model: this.model } ) );\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).find( '.nf-setting' ).removeClass( 'nf-error' );\n\t\t\t\tthis.error.empty();\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t\t\tvar that = this;\n\t    \treturn {\n\n\t    \t\trenderVisible: function() {\n\t\t\t\t\tif ( this.deps ) {\n\t\t\t\t\t\tfor (var name in this.deps) {\n\t\t\t\t\t\t    if ( this.deps.hasOwnProperty( name ) ) {\n\t\t\t\t\t\t        if ( that.dataModel.get( name ) != this.deps[ name ] ) {\n\t\t\t\t\t\t        \treturn 'style=\"display:none;\"';\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t    \t\t\treturn '';\n\t    \t\t},\n\n\t    \t\trenderSetting: function(){\n\t    \t\t\tif ( 'undefined' != typeof that.dataModel.get( this.name ) ) {\n\t    \t\t\t\tthis.value = that.dataModel.get( this.name );\n\t    \t\t\t} else {\n\t    \t\t\t\tthis.value = '';\n\t    \t\t\t}\n\n\t\t\t\t\treturn _.template( jQuery( '#nf-tmpl-edit-setting-' + this.type ).html(), this );\n\t\t\t\t},\n\n\t\t\t\trenderLabelClasses: function() {\n\t\t\t\t\tvar classes = '';\n\t\t\t\t\tif ( this.use_merge_tags ) {\n\t\t\t\t\t\tclasses += ' has-merge-tags';\n\t\t\t\t\t}\n\t\t\t\t\tif ( 'rte' == this.type ) {\n\t\t\t\t\t\tclasses += ' rte';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = 'nf-setting ';\n\t\t\t\t\tif ( 'undefined' != typeof this.width ) {\n\t\t\t\t\t\tclasses += 'nf-' + this.width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclasses += ' nf-one-half';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.error ) {\n\t\t\t\t\t\tclasses += ' nf-error';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\trenderTooltip: function() {\n\t\t\t\t\tif ( this.help ) {\n\t\t\t\t\t\treturn '<a class=\"nf-help\" href=\"#\"><span class=\"dashicons dashicons-admin-comments\"></span></a><div class=\"nf-help-text\">' + this.help + '</div>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderMergeTags: function() {\n\t\t\t\t\tif ( this.use_merge_tags && ! this.hide_merge_tags ) {\n\t\t\t\t\t\treturn '<span class=\"dashicons dashicons-list-view merge-tags\"></span>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tevents: {\n\t\t\t'change .setting': 'changeSetting',\n\t\t\t'keyup .setting': 'keyUpSetting',\n\t\t\t'click .setting': 'clickSetting',\n\t\t\t'click .extra': 'clickExtra'\n\t\t},\n\n\t\tchangeSetting: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'change:setting', e, this.model, this.dataModel );\n\t\t},\n\n\t\tkeyUpSetting: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'keyup:setting', e, this.model, this.dataModel );\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'keyup:setting', e, this.model, this.dataModel );\n\t\t},\n\n\t\tclickSetting: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:setting', e, this.model, this.dataModel );\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'click:setting', e, this.model, this.dataModel, this );\n\t\t},\n\n\t\tclickExtra: function( e ) {\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'click:extra', e, this.model, this.dataModel, this );\n\t\t},\n\n\t\tdrawerOpened: function() {\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'drawer:opened', this.model, this.dataModel, this );\n\t\t},\n\n\t\tdrawerClosed: function() {\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'drawer:closed', this.model, this.dataModel, this );\n\t\t}\n\t});\n\n\treturn view;\n} );\n\n","/**\n * Changes collection view.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/contentNewForm',['views/app/drawer/itemSetting'], function( itemSettingView) {\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-new-form',\n\n\t\tregions: {\n\t\t\tformName: '.new-form-name'\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar settingModel = nfRadio.channel( 'settings' ).request( 'get:settingModel', 'title' );\n\t\t\tvar dataModel = nfRadio.channel( 'settings' ).request( 'get:settings' );\n\t\t\tthis.formName.show( new itemSettingView( { model: settingModel, dataModel: dataModel } ) );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .publish': 'clickPublish'\n\t\t},\n\n\t\tclickPublish: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:confirmPublish', e );\n\t\t}\n\t} );\n\n\treturn view;\n} );\n\n","/**\n * Handles clicks on the 'view changes' button in the header.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/headerNewForm',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-header-new-form'\n\t});\n\n\treturn view;\n} );\n","/**\n * Config file for our app drawers.\n *\n * this.collection represents all of our registered drawers.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/drawerConfig',[\n\t'models/app/drawerCollection',\n\t'views/fields/drawer/addField',\n\t'views/app/drawer/editSettings',\n\t'views/actions/drawer/addAction',\n\t'views/advanced/drawer/editFormSettings',\n\t'views/app/drawer/contentViewChanges',\n\t'views/app/drawer/headerViewChanges',\n\t'views/app/drawer/contentNewForm',\n\t'views/app/drawer/headerNewForm'\n\t], function(\n\t\tdrawerCollection,\n\t\taddFieldView,\n\t\teditSettingsView,\n\t\taddActionView,\n\t\teditFormSettingsView,\n\t\tviewChangesView,\n\t\tviewChangesHeaderView,\n\t\tnewFormView,\n\t\tnewFormHeaderView\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\n\t\t\tthis.collection = new drawerCollection( [\n\t\t\t\t{\n\t\t\t\t\tid: 'addField',\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new addFieldView( data );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'addAction',\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new addActionView( data );\n\t\t\t\t\t}\n\t\t\t\t},\t\t\t\t\n\t\t\t\t{\n\t\t\t\t\tid: 'editSettings',\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new editSettingsView( data );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'viewChanges',\n\n\t\t\t\t\t// getHeaderView() is defined by default, but we need to override it for the viewChanges drawer.\n\t\t\t\t\tgetHeaderView: function( data ) {\n\t\t\t\t\t\treturn new viewChangesHeaderView( data );\n\t\t\t\t\t},\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new viewChangesView( data );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'newForm',\n\n\t\t\t\t\t// getHeaderView() is defined by default, but we need to override it for the newForm drawer.\n\t\t\t\t\tgetHeaderView: function( data ) {\n\t\t\t\t\t\treturn new newFormHeaderView( data );\n\t\t\t\t\t},\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new newFormView( data );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t] );\n\n\t\t\t// Listen for requests for our drawer collection.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:drawerCollection', this.getDrawerCollection, this );\n\t\t\t// Listen for requests for specific drawer models.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:drawer', this.getDrawer, this );\n\t\t},\n\n\t\tgetDrawerCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tgetDrawer: function( id ) {\n\t\t\treturn this.collection.get( id );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model for our individual domains.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/domainModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tdashicons: '',\n\t\t\tclasses: '',\n\t\t\tactive: false,\n\t\t\turl: '',\n\t\t\thotkeys: false,\n\t\t\tdisabled: false\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Holds all of our domain models.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/domainCollection',['models/app/domainModel'], function( domainModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: domainModel\n\t} );\n\treturn collection;\n} );\n","define( 'views/fields/mainHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-header-fields',\n\n\t\tinitialize: function() {\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tthis.listenTo( fieldCollection, 'add', this.render );\n\t\t\tthis.listenTo( fieldCollection, 'remove', this.render );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tif ( fieldCollection.models.length == 0 ) {\n\t\t\t\tjQuery( this.el ).hide();\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).show();\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/subHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-sub-header-fields'\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders an application menu item from a domain model.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/itemControls',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-item-controls',\n\n\t\tinitialize: function() {\n\t\t\t// Listen for domain changes and re-render when we detect one.\n\t\t\t// this.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.render );\n\t\t},\n\n\t\t/**\n\t\t * When we render this view, remove the extra <div> tag created by backbone.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\t// this.$el = this.$el.children();\n\t\t\t// this.$el.unwrap();\n\t\t\t// this.setElement( this.$el );\n\t\t\t// \n\t\t\tthis.currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-edit-settings': 'clickEdit',\n\t\t\t'click .nf-delete': 'clickDelete',\n\t\t\t'click .nf-duplicate': 'clickDuplicateField'\n\t\t},\n\n\t\tclickEdit: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:edit', e, this.model );\n\t\t},\n\n\t\tclickDelete: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:delete', e, this.model );\n\t\t},\n\n\t\tclickDuplicateField: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:duplicate', e, this.model );\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/fieldItem',['views/app/itemControls'], function( itemControlsView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-content-field',\n\n\t\tregions: {\n\t\t\titemControls: '.nf-item-controls'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:editActive', this.render, this );\n\t\t\tthis.model.on( 'change:label', this.render, this );\n\t\t\tthis.model.on( 'change:required', this.render, this );\n\t\t\tthis.model.on( 'change:id', this.render, this );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:editActive', this.render );\n\t\t\tthis.model.off( 'change:label', this.render );\n\t\t\tthis.model.off( 'change:required', this.render );\n\t\t\tthis.model.off( 'change:id', this.render );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tthis.itemControls.show( new itemControlsView( { model: this.model } ) );\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t    \treturn {\n\t    \t\trenderClasses: function() {\n\t    \t\t\tvar classes = 'nf-field-wrap';\n\t    \t\t\tif ( this.editActive ) {\n\t    \t\t\t\tclasses += ' active';\n\t    \t\t\t}\n\t    \t\t\treturn classes;\n\t    \t\t},\n\t    \t\trenderRequired: function() {\n\t    \t\t\tif ( 1 == this.required ) {\n\t    \t\t\t\treturn '<span class=\"required\">*</span>';\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t    \t\t},\n\t    \t\tgetFieldID: function() {\n\t\t\t\t\tif ( jQuery.isNumeric( this.id ) ) {\n\t\t\t\t\t\treturn 'field-' + this.id;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this.id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\t\tevents: {\n\t\t\t'click': 'maybeClickEdit'\n\t\t},\n\n\t\tmaybeClickEdit: function( e ) {\n\t\t\tif ( jQuery( e.target ).parent().hasClass( 'nf-fields-sortable' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'click:edit', e, this.model );\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/mainContentEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-content-fields-empty',\n\n\t\tonBeforeDestroy: function() {\n\t\t\tjQuery( this.el ).parent().removeClass( 'nf-fields-empty-droppable' ).droppable( 'destroy' );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tif ( jQuery( this.el ).parent().hasClass( 'ui-sortable' ) ) {\n\t\t\t\tjQuery( this.el ).parent().sortable( 'destroy' );\n\t\t\t}\n\t\t\tjQuery( this.el ).parent().addClass( 'nf-fields-empty-droppable' );\n\t\t\tjQuery( this.el ).parent().droppable( {\n\t\t\t\taccept: function( draggable ) {\n\t\t\t\t\tif ( jQuery( draggable ).hasClass( 'nf-stage' ) || jQuery( draggable ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\thoverClass: 'nf-droppable-hover',\n\t\t\t\ttolerance: 'pointer',\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t\t},\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\t\t},\n\t\t\t\tdrop: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'receive:fieldsSortable', ui );\n\t\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\t\tfieldCollection.trigger( 'reset', fieldCollection );\n\t\t\t\t},\n\t\t\t} );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/mainContentFieldCollection',['views/fields/fieldItem', 'views/fields/mainContentEmpty'], function( mainContentFieldView, mainContentFieldEmptyView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: mainContentFieldView,\n\t\temptyView: mainContentFieldEmptyView,\n\t\treorderOnSort: true,\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:sortableEl', this.getSortableEl, this );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tif ( this.collection.models.length > 0 ) {\n\t\t\t\tjQuery( this.el ).addClass( 'nf-field-type-droppable' ).addClass( 'nf-fields-sortable' );\n\t\t\t\tvar that = this;\n\t\t\t\tjQuery( this.el ).sortable( {\n\t\t\t\t\tcontainment: '#nf-main',\n\t\t\t\t\thelper: 'clone',\n\t\t\t\t\tcancel: '.nf-item-controls',\n\t\t\t\t\tplaceholder: 'nf-fields-sortable-placeholder',\n\t\t\t\t\topacity: 0.95,\n\t\t\t\t\ttolerance: 'intersect',\n\n\t\t\t\t\treceive: function( e, ui ) {\n\t\t\t\t\t\tnfRadio.channel( 'app' ).request( 'receive:fieldsSortable', ui );\n\t\t\t\t\t},\n\n\t\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t\t\t},\n\n\t\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\t\t\t},\n\n\t\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\t\tnfRadio.channel( 'app' ).request( 'start:fieldsSortable', ui );\n\t\t\t\t\t},\n\n\t\t\t\t\tupdate: function( e, ui ) {\n\t\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:fieldsSortable', ui );\n\t\t\t\t\t},\n\n\t\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\t\tnfRadio.channel( 'app' ).request( 'stop:fieldsSortable', ui );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\tgetSortableEl: function() {\n\t\t\treturn this.el;\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","/**\n * Add main header.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/mainHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-header-actions',\n\n\t\tinitialize: function() {\n\t\t\tvar actionCollection = nfRadio.channel( 'actions' ).request( 'get:collection' );\n\t\t\tthis.listenTo( actionCollection, 'add', this.render );\n\t\t\tthis.listenTo( actionCollection, 'remove', this.render );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar actionCollection = nfRadio.channel( 'actions' ).request( 'get:collection' );\n\t\t\tif ( actionCollection.models.length == 0 ) {\n\t\t\t\tjQuery( this.el ).hide();\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).show();\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Actions subheader view.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/subHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-sub-header-actions'\n\t});\n\n\treturn view;\n} );\n","/**\n * Single action table row\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/actionItem',['views/app/itemControls'], function( itemControlsView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'tr',\n\t\ttemplate: '#nf-tmpl-action-item',\n\t\t\n\t\tregions: {\n\t\t\titemControls: '.nf-item-controls'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:label', this.render, this );\n\t\t\tthis.model.on( 'change:editActive', this.render, this );\n\t\t\tthis.model.on( 'change:active', this.maybeDeactivate, this );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:label', this.render );\n\t\t\tthis.model.off( 'change:editActive', this.render );\n\t\t\tthis.model.off( 'change:active', this.maybeDeactivate );\n\t\t},\n\t\t\n\t\tonRender: function() {\n\t\t\tif ( this.model.get( 'editActive' ) ) {\n\t\t\t\tjQuery( this.el ).addClass( 'active' );\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).removeClass( 'active' );\n\t\t\t}\n\n\t\t\tthis.maybeDeactivate();\n\t\t\t\n\t\t\tthis.itemControls.show( new itemControlsView( { model: this.model } ) );\n\t\t},\n\n\t\tmaybeDeactivate: function() {\n\t\t\tif ( 0 == this.model.get( 'active' ) ) {\n\t\t\t\tjQuery( this.el ).addClass( 'deactivated' );\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).removeClass( 'deactivated' );\n\t\t\t}\n\t\t},\n\n\t\tevents: {\n\t\t\t'change input': 'changeToggle',\n\t\t\t'click': 'maybeClickEdit'\n\t\t},\n\n\t\tmaybeClickEdit: function( e ) {\n\t\t\tif ( 'TR' == jQuery( e.target ).parent().prop( 'tagName' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'click:edit', e, this.model );\n\t\t\t}\n\t\t},\n\n\t\tchangeToggle: function( e ) {\n\t\t\tvar settingModel = nfRadio.channel( 'actions' ).request( 'get:settingModel', 'active' );\n\t\t\tnfRadio.channel( 'app' ).request( 'change:setting', e, settingModel, this.model );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderToggle: function() {\n\t\t\t\t\tvar actionLabel = this.label;\n\t\t\t\t\tthis.label = '';\n\t\t\t\t\tthis.value = this.active;\n\t\t\t\t\tthis.name = this.id + '-active';\n\t\t\t\t\tvar html = _.template( jQuery( '#nf-tmpl-edit-setting-toggle' ).html(), this );\n\t\t\t\t\tthis.label = actionLabel;\n\t\t\t\t\treturn html;\n\t\t\t\t},\n\n\t\t\t\trenderTypeNicename: function() {\n\t\t\t\t\tvar type = nfRadio.channel( 'actions' ).request( 'get:type', this.type );\n\t\t\t\t\treturn type.get( 'nicename' );\n\t\t\t\t},\n\n\t\t\t\trenderTooltip: function() {\n\t\t\t\t\tif ( this.help ) {\n\t\t\t\t\t\treturn '<a class=\"nf-help\" href=\"#\"><span class=\"dashicons dashicons-admin-comments\"></span></a><div class=\"nf-help-text\">' + this.help + '</div>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderMergeTags: function() {\n\t\t\t\t\tif ( this.use_merge_tags ) {\n\t\t\t\t\t\treturn '<span class=\"dashicons dashicons-list-view merge-tags\"></span>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/actions/mainContentEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-content-actions-empty',\n\n\t\tonBeforeDestroy: function() {\n\t\t\tjQuery( this.el ).parent().parent().removeClass( 'nf-actions-empty' );\n\t\t\t// jQuery( this.el ).parent().removeClass( 'nf-fields-empty-droppable' ).droppable( 'destroy' );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tjQuery( this.el ).parent().parent().addClass( 'nf-actions-empty' );\n\t\t\t// if ( jQuery( this.el ).parent().hasClass( 'ui-sortable' ) ) {\n\t\t\t// \tjQuery( this.el ).parent().sortable( 'destroy' );\n\t\t\t// }\n\t\t\t// jQuery( this.el ).parent().addClass( 'nf-fields-empty-droppable' );\n\t\t\t// jQuery( this.el ).parent().droppable( {\n\t\t\t// \taccept: function( draggable ) {\n\t\t\t// \t\tif ( jQuery( draggable ).hasClass( 'nf-stage' ) || jQuery( draggable ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t// \t\t\treturn true;\n\t\t\t// \t\t}\n\t\t\t// \t},\n\t\t\t// \thoverClass: 'nf-droppable-hover',\n\t\t\t// \ttolerance: 'pointer',\n\t\t\t// \tover: function( e, ui ) {\n\t\t\t// \t\tui.item = ui.draggable;\n\t\t\t// \t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t// \t},\n\t\t\t// \tout: function( e, ui ) {\n\t\t\t// \t\tui.item = ui.draggable;\n\t\t\t// \t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\t// \t},\n\t\t\t// \tdrop: function( e, ui ) {\n\t\t\t// \t\tui.item = ui.draggable;\n\t\t\t// \t\tnfRadio.channel( 'app' ).request( 'receive:fieldsSortable', ui );\n\t\t\t// \t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t// \t\tfieldCollection.trigger( 'reset', fieldCollection );\n\t\t\t// \t},\n\t\t\t// } );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Main content view for our actions.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/mainContent',['views/actions/actionItem', 'views/actions/mainContentEmpty'], function( actionView, emptyView ) {\n\tvar view = Marionette.CompositeView.extend({\n\t\ttemplate: '#nf-tmpl-action-table',\n\t\tchildView: actionView,\n\t\temptyView: emptyView,\n\n\t\tonRender: function() {\n\t\t\tjQuery( this.el ).droppable( {\n\t\t\t\taccept: '.nf-one-third',\n\t\t\t\tactiveClass: 'nf-droppable-active',\n\t\t\t\thoverClass: 'nf-droppable-hover',\n\t\t\t\tdrop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'drop:actionType', e, ui );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( 'tbody' ).append( childView.el );\n\t\t},\n\t});\n\n\treturn view;\n} );\n","define( 'views/advanced/mainHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-header-settings'\n\t});\n\n\treturn view;\n} );\n","define( 'views/advanced/subHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-sub-header-settings'\n\t});\n\n\treturn view;\n} );\n","define( 'views/advanced/settingItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-form-setting-type',\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:editActive', this.render );\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:editActive', this.render, this );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click': 'clickEdit'\n\t\t},\n\n\t\tclickEdit: function( e ) {\n\t\t\tnfRadio.channel( 'settings' ).trigger( 'click:edit', e, this.model );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = 'nf-setting-wrap';\n\t    \t\t\tif ( this.editActive ) {\n\t    \t\t\t\tclasses += ' active';\n\t    \t\t\t}\n\t    \t\t\treturn classes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/advanced/mainContent',['views/advanced/settingItem'], function( settingItem ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\tchildView: settingItem\n\t\t\n\t});\n\n\treturn view;\n} );\n","/**\n * Config file for our app domains.\n * \n * this.collection represents all of our app domain (fields, actions, settings) information.\n *\n * This doesn't store the current domain, but rather all the data about each.\n * \n * This data includes:\n * hotkeys\n * header view\n * subheader view\n * content view\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/domainConfig',[\n\t// Require our domain collection\n\t'models/app/domainCollection',\n\t// Require our fields domain files\n\t'views/fields/mainHeader',\n\t'views/fields/subHeader',\n\t'views/fields/mainContentFieldCollection',\n\t// Require our actions domain files\n\t'views/actions/mainHeader', \n\t'views/actions/subHeader',\n\t'views/actions/mainContent',\n\t// Require our settings domain files\n\t'views/advanced/mainHeader',\n\t'views/advanced/subHeader',\n\t'views/advanced/mainContent',\n\t], \n\tfunction( \n\t\tappDomainCollection,\n\t\tfieldsMainHeaderView,\n\t\tfieldsSubHeaderView,\n\t\tfieldsMainContentFieldCollectionView,\n\t\tactionsMainHeaderView,\n\t\tactionsSubHeaderView,\n\t\tactionsMainContentView,\n\t\tsettingsMainHeaderView,\n\t\tsettingsSubHeaderView,\n\t\tsettingsMainContentView\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Define our app domains\n\t\t\tthis.collection = new appDomainCollection( [\n\t\t\t\t{\n\t\t\t\t\tid: 'fields',\n\t\t\t\t\tnicename: 'Form Fields',\n\t\t\t\t\thotkeys: {\n\t\t\t\t\t\t'Esc'\t\t\t\t: 'close:drawer',\n\t\t\t\t\t\t'Ctrl+Shift+n'\t\t: 'add:newField',\n\t\t\t\t\t\t'Ctrl+Shift+a'\t\t: 'changeDomain:actions',\n\t\t\t\t\t\t'Ctrl+Shift+s'\t\t: 'changeDomain:settings',\n\t\t\t\t\t\t'Alt+Ctrl+t'\t\t: 'open:mergeTags',\n\t\t\t\t\t\t'up'\t\t\t\t: 'up:mergeTags',\n\t\t\t\t\t\t'down'\t\t\t\t: 'down:mergeTags',\n\t\t\t\t\t\t'Shift+return'\t\t: 'return:mergeTags'\n\t\t\t\t\t},\n\n\t\t\t\t\tgetMainHeaderView: function() {\n\t\t\t\t\t\treturn new fieldsMainHeaderView();\n\t\t\t\t\t},\n\n\t\t\t\t\tgetSubHeaderView: function() {\n\t\t\t\t\t\treturn new fieldsSubHeaderView();\n\t\t\t\t\t},\n\n\t\t\t\t\tgetMainContentView: function( collection ) {\n\t\t\t\t\t\tvar collection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\t\t\treturn new fieldsMainContentFieldCollectionView( { collection: collection } );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'actions',\n\t\t\t\t\tnicename: 'Emails & Actions',\n\t\t\t\t\thotkeys: {\n\t\t\t\t\t\t'Esc'\t\t\t\t: 'close:drawer',\n\t\t\t\t\t\t'Ctrl+Shift+n'\t\t: 'add:newAction',\n\t\t\t\t\t\t'Ctrl+Shift+f'\t\t: 'changeDomain:fields',\n\t\t\t\t\t\t'Ctrl+Shift+s'\t\t: 'changeDomain:settings',\n\t\t\t\t\t\t'Alt+Ctrl+t'\t\t: 'open:mergeTags',\n\t\t\t\t\t\t'up'\t\t\t\t: 'up:mergeTags',\n\t\t\t\t\t\t'down'\t\t\t\t: 'down:mergeTags',\n\t\t\t\t\t\t'Shift+return'\t\t: 'return:mergeTags'\n\t\t\t\t\t},\n\n\t\t\t\t\tgetMainHeaderView: function() {\n\t\t\t\t\t\treturn new actionsMainHeaderView();\n\t\t\t\t\t},\n\n\t\t\t\t\tgetSubHeaderView: function() {\n\t\t\t\t\t\treturn new actionsSubHeaderView();\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t\tgetMainContentView: function() {\n\t\t\t\t\t\tvar collection = nfRadio.channel( 'actions' ).request( 'get:collection' );\n\t\t\t\t\t\treturn new actionsMainContentView( { collection: collection } );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'settings',\n\t\t\t\t\tnicename: 'Advanced',\n\t\t\t\t\thotkeys: {\n\t\t\t\t\t\t'Esc'\t\t\t\t: 'close:drawer',\n\t\t\t\t\t\t'Ctrl+Shift+f'\t\t: 'changeDomain:fields',\n\t\t\t\t\t\t'Ctrl+Shift+a'\t\t: 'changeDomain:actions',\n\t\t\t\t\t\t'Alt+Ctrl+t'\t\t: 'open:mergeTags',\n\t\t\t\t\t\t'up'\t\t\t\t: 'up:mergeTags',\n\t\t\t\t\t\t'down'\t\t\t\t: 'down:mergeTags',\n\t\t\t\t\t\t'Shift+return'\t\t: 'return:mergeTags'\n\t\t\t\t\t},\n\n\t\t\t\t\tgetMainHeaderView: function() {\n\t\t\t\t\t\treturn new settingsMainHeaderView();\n\t\t\t\t\t},\n\n\t\t\t\t\tgetSubHeaderView: function() {\n\t\t\t\t\t\treturn new settingsSubHeaderView();\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t\tgetMainContentView: function() {\n\t\t\t\t\t\tvar collection = nfRadio.channel( 'settings' ).request( 'get:typeCollection' );\n\t\t\t\t\t\treturn new settingsMainContentView( { collection: collection } );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'preview',\n\t\t\t\t\tnicename: 'Preview Form',\n\t\t\t\t\tclasses: 'preview',\n\t\t\t\t\tdashicons: 'dashicons-visibility',\n\t\t\t\t\turl: nfAdmin.previewurl\n\t\t\t\t}\n\t\t\t] );\n\n\t\t\t/*\n\t\t\t * Respond to requests to get the app domain collection.\n\t\t\t */\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:domainCollection', this.getDomainCollection, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:domainModel', this.getDomainModel, this );\n\t\t},\n\n\t\tgetDomainCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tgetDomainModel: function( id ) {\n\t\t\treturn this.collection.get( id );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model for our app data.\n * Listens for changes to the 'clean' attribute and triggers a radio message when the state changes.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/appModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tloading: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Listen to changes to our 'clean' attribute.\n\t\t\tthis.on( 'change:clean', this.changeStatus, this );\n\t\t},\n\n\t\tchangeStatus: function() {\n\t\t\t// Send out a radio message when the 'clean' attribute changes.\n\t\t\tnfRadio.channel( 'app' ).trigger( 'change:clean', this.get( 'clean' ) );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Creates and stores a model that represents app-wide data. i.e. current domain, current drawer, clean, etc.\n *\n * clean is a boolean that represents whether or not changes have been made.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/data',['models/app/appModel'], function( appModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Get the collection that represents all the parts of our application.\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\t// Setup our initial model.\n\t\t\tthis.model = new appModel( {\n\t\t\t\tcurrentDrawer: false,\n\t\t\t\tcurrentDomain: appDomainCollection.get( 'fields' ),\n\t\t\t\tclean: true\n\t\t\t} );\n\n\t\t\t/*\n\t\t\t * Respond to app channel requests for information about the state of our app.\n\t\t\t */\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:data', this.getData, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:setting', this.getSetting, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:currentDomain', this.getCurrentDomain, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:currentDrawer', this.getCurrentDrawer, this );\n\n\t\t\t/*\n\t\t\t * Respond to app channel requests to update app settings.\n\t\t\t */\t\t\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:currentDomain', this.updateCurrentDomain, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:currentDrawer', this.updateCurrentDrawer, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:setting', this.updateSetting, this );\n\n\t\t},\n\n\t\tupdateCurrentDomain: function( model ) {\n\t\t\tthis.updateSetting( 'currentDomain', model );\n\t\t},\n\n\t\tupdateSetting: function( setting, value ) {\n\t\t\tthis.model.set( setting, value );\n\t\t\treturn true;\n\t\t},\n\n\t\tgetSetting: function( setting ) {\n\t\t\treturn this.model.get( setting );\n\t\t},\n\n\t\tgetData: function() {\n\t\t\treturn this.model;\n\t\t},\n\n\t\tgetCurrentDomain: function() {\n\t\t\treturn this.model.get( 'currentDomain' );\n\t\t},\n\n\t\tupdateCurrentDrawer: function( drawerID ) {\n\t\t\tthis.updateSetting( 'currentDrawer', drawerID );\n\t\t\treturn true;\n\t\t},\n\n\t\tgetCurrentDrawer: function() {\n\t\t\tvar currentDrawerID = this.model.get( 'currentDrawer' );\n\t\t\treturn nfRadio.channel( 'app' ).request( 'get:drawer', currentDrawerID );\n\t\t}\n\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens for click events to expand/collapse setting groups.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/drawerToggleSettingGroup',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for click events on our settings group.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'click:toggleSettingGroup', this.toggleSettingGroup );\n\t\t},\n\n\t\t/**\n\t\t * Set the 'display' attribute of our group model to true or false to toggle.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te     \tevent\n\t\t * @param  backbone.model \tmodel \tgroup setting model\n\t\t * @return void\n\t\t */\n\t\ttoggleSettingGroup: function( e, model ) {\n\t\t\tif ( model.get( 'display' ) ) {\n\t\t\t\t/*\n\t\t\t\t * Make sure that none of our settings have errors\n\t\t\t\t */\n\t\t\t\tvar errors = false;\n\t\t\t\t_.each( model.get( 'settings' ).models, function( setting ) {\n\t\t\t\t\tif ( setting.get( 'error' ) ) {\n\t\t\t\t\t\terrors = true;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tif ( ! errors ) {\n\t\t\t\t\tmodel.set( 'display', false );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmodel.set( 'display', true );\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Updates our database with our form data.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/updateDB',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for the closing of the drawer and update when it's closed.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'closed', this.updateDB );\n\t\t\t// Respond to requests to update the database.\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:db', this.updateDB, this );\n\t\t},\n\n\t\t/**\n\t\t * Update our database.\n\t\t * If action isn't specified, assume we're updating the preview.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string \taction preview or publish\n\t\t * @return void\n\t\t */\n\t\tupdateDB: function( action ) {\n\t\t\t// If our app is clean, dont' update.\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'get:setting', 'clean' ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\t// Default action to preview.\n\t\t\taction = action || 'preview';\n\n\t\t\t// Setup our ajax actions based on the action we're performing\n\t\t\tif ( 'preview' == action ) {\n\t\t\t\tvar jsAction = 'nf_preview_update';\n\t\t\t} else if ( 'publish' == action ) {\n\t\t\t\tvar jsAction = 'nf_save_form';\n\t\t\t}\n\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\n\t\t\tif ( 'publish' == action && formModel.get( 'show_publish_options' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'newForm' );\n\t\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\t\tjQuery( builderEl ).addClass( 'disable-main' );\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Get our form data\n\t\t\tvar formData = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\n\t\t\t// Turn our formData model into an object\n\t\t\tvar data = JSON.parse( JSON.stringify( formData ) );\n\n\t\t\t/**\n\t\t\t * Prepare fields for submission.\n\t\t\t */\n\t\t\t\n\t\t\t// Get the field IDs that we've deleted.\n\t\t\tvar removedIDs = formData.get( 'fields' ).removedIDs;\n\n\t\t\t/*\n\t\t\t * data.fields is an array of objects like:\n\t\t\t * field.label = blah\n\t\t\t * field.label_pos = blah\n\t\t\t * etc.\n\t\t\t *\n\t\t\t * And we need that format to be:\n\t\t\t * field.settings.label = blah\n\t\t\t * field.settings.label_pos = blah\n\t\t\t *\n\t\t\t * So, we loop through our fields and create a field.settings object.\n\t\t\t */\n\t\t\t_.each( data.fields, function( field ) {\n\t\t\t\tvar id = field.id;\n\t\t\t\t// We dont' want to update id or parent_id\n\t\t\t\tdelete field.id;\n\t\t\t\tdelete field.parent_id;\n\t\t\t\tvar settings = {};\n\t\t\t\t// Loop through all the attributes of our fields\n\t\t\t\tfor (var prop in field) {\n\t\t\t\t    if ( field.hasOwnProperty( prop ) ) {\n\t\t\t\t    \t// Set our settings.prop value.\n\t\t\t\t        settings[ prop ] = field[ prop ];\n\t\t\t\t        // Delete the property from the field.\n\t\t\t\t        delete field[ prop ];\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\t// Update our field object.\n\t\t\t\tfield.settings = settings;\n\t\t\t\tfield.id = id;\n\t\t\t} );\n\n\t\t\t// Set our deleted_fields object so that we can know which fields were removed.\n\t\t\tdata.deleted_fields = removedIDs;\n\n\t\t\t/**\n\t\t\t * Prepare actions for submission.\n\t\t\t */\n\t\t\t\n\t\t\t// Get the action IDs that we've deleted.\n\t\t\tvar removedIDs = formData.get( 'actions' ).removedIDs;\n\n\t\t\t/*\n\t\t\t * data.actions is an array of objects like:\n\t\t\t * action.label = blah\n\t\t\t * action.label_pos = blah\n\t\t\t * etc.\n\t\t\t *\n\t\t\t * And we need that format to be:\n\t\t\t * action.settings.label = blah\n\t\t\t * action.settings.label_pos = blah\n\t\t\t *\n\t\t\t * So, we loop through our actions and create a field.settings object.\n\t\t\t */\n\t\t\t_.each( data.actions, function( action ) {\n\t\t\t\tvar id = action.id;\n\t\t\t\t// We dont' want to update id or parent_id\n\t\t\t\tdelete action.id;\n\t\t\t\tdelete action.parent_id;\n\t\t\t\tvar settings = {};\n\t\t\t\t// Loop through all the attributes of our actions\n\t\t\t\tfor (var prop in action) {\n\t\t\t\t    if ( action.hasOwnProperty( prop ) ) {\n\t\t\t\t    \t// Set our settings.prop value.\n\t\t\t\t        settings[ prop ] = action[ prop ];\n\t\t\t\t        // Delete the property from the action.\n\t\t\t\t        delete action[ prop ];\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\t// Update our action object.\n\t\t\t\taction.settings = settings;\n\t\t\t\taction.id = id;\n\t\t\t} );\n\n\t\t\t// Set our deleted_actions object so that we can know which actions were removed.\n\t\t\tdata.deleted_actions = removedIDs;\n\n\t\t\t// Turn our object into a JSON string.\n\t\t\tdata = JSON.stringify( data );\n\t\t\t// Run anything that needs to happen before we update.\n\t\t\tnfRadio.channel( 'app' ).trigger( 'before:updateDB', data );\n\n\t\t\tif ( 'publish' == action ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'loading', true );\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'change:loading' );\t\t\t\t\n\t\t\t}\n\n\t\t\t// Update\n\t\t\tjQuery.post( ajaxurl, { action: jsAction, form: data, security: nfAdmin.ajaxNonce }, function( response ) {\n\t\t\t\ttry {\n\t\t\t\t\tresponse = JSON.parse( response );\n\t\t\t\t\tresponse.action = action;\n\t\t\t\t\t// Run anything that needs to happen after we update.\n\t\t\t\t\tnfRadio.channel( 'app' ).trigger( 'response:updateDB', response );\n\t\t\t\t} catch( exception ) {\n\t\t\t\t\tconsole.log( 'Something went wrong!' );\n\t\t\t\t\tconsole.log( response );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model that represents our form data.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/formModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tinitialize: function() {\n\t\t\tif ( ! jQuery.isNumeric( this.get( 'id' ) ) ) {\n\t\t\t\tthis.set( 'show_publish_options', true, { silent: true } );\n\t\t\t} else {\n\t\t\t\tthis.set( 'show_publish_options', false, { silent: true } );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Stores our form data and responds to requests for it.\n * Form data stores fields, actions, and settings.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/formData',['models/app/formModel'], function( formModel) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Instantiate Form Model\n\t\t\tthis.model = new formModel( { id: preloadedFormData.id } );\n\t\t\t// Set our field collection\n\t\t\tthis.model.set( 'fields', nfRadio.channel( 'fields' ).request( 'get:collection' ) );\n\t\t\t// Set our actions collection\n\t\t\tthis.model.set( 'actions', nfRadio.channel( 'actions' ).request( 'get:collection' ) );\n\t\t\t// Set our settings collection\n\t\t\tthis.model.set( 'settings', nfRadio.channel( 'settings' ).request( 'get:settings' ) );\n\t\t\t// Respond to requests for form data.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:formModel', this.getFormModel, this );\n\t\t},\n\n\t\t/**\n\t\t * Return form data model.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return backbone.model\n\t\t */\n\t\tgetFormModel: function() {\n\t\t\treturn this.model;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles changing our preview link when we change the 'clean' state of our app.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/previewLink',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for events that would change our preview link\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'before:sendChanges', this.disablePreview, this );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'response:sendChanges', this.enablePreview, this );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:clean', this.changePreviewNicename, this );\n\t\t},\n\n\t\t/**\n\t\t * Disable our preview link before we send data to update our preview.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tdisablePreview: function() {\n\t\t\t// Get our preview domain\n\t\t\tvar appDomains = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar preview = appDomains.get( 'preview' );\n\t\t\t// Set disabled to true. This will trigger the preview link view to redraw.\n\t\t\tpreview.set( 'disabled', true );\n\t\t},\n\n\t\t/**\n\t\t * Change the preview link text from \"Preview Form\" to \"Preview Changes\" or vice-versa\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  boolean \tclean app data state\n\t\t * @return void\n\t\t */\n\t\tchangePreviewNicename: function( clean ) {\n\t\t\t// Get our preview domain\n\t\t\tvar appDomains = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar preview = appDomains.get( 'preview' );\n\n\t\t\t// If we have unsaved changes, set our text to 'changes' otherwise, set it to 'form'\n\t\t\tif ( ! clean ) {\n\t\t\t\tvar nicename = 'Preview Changes';\n\t\t\t} else {\n\t\t\t\tvar nicename = 'Preview Form';\n\t\t\t}\n\n\t\t\tpreview.set( 'nicename', nicename );\n\t\t},\n\n\t\t/**\n\t\t * Enable our preview button.\n\t\t * This is triggered when we get a response from our preview update.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tenablePreview: function() {\n\t\t\t// Get our preview domain\n\t\t\tvar appDomains = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar preview = appDomains.get( 'preview' );\n\t\t\t// Set disabled to false. This will trigger the preview link view to redraw.\n\t\t\tpreview.set( 'disabled', false );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel for requests to change the current domain.\n *\n * The app menu and the main submenu both contain clickable links that change the current domain.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/menuButtons',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:publish', this.publish );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:viewChanges', this.viewChanges );\n\t\t},\n\n\t\tpublish: function() {\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db', 'publish' );\n\t\t},\n\n\t\tviewChanges: function() {\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'viewChanges', { collection: changeCollection } );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model that represents our change data.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/changeModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tdisabled: false\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Holds all of our change models.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/changeCollection',['models/app/changeModel'], function( domainModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: domainModel,\n\t\tcomparator: function( model ) {\n\t\t\tvar id = parseInt( model.cid.replace( 'c', '' ) );\n\t\t\treturn -id;\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Track settings changes across our app.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/trackChanges',['models/app/changeCollection', 'models/app/changeModel'], function( changeCollection, ChangeModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.collection = new changeCollection();\n\t\t\t// Respond to any requests to add a change directly.\n\t\t\tnfRadio.channel( 'changes' ).reply( 'register:change', this.registerChange, this );\n\t\t\t// Respond to requests for the change collection\n\t\t\tnfRadio.channel( 'changes' ).reply( 'get:changeCollection', this.getCollection, this );\n\t\t\t// Listen for changes in our clean state. If it goes to clean, clear our collection.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:clean', this.maybeResetCollection );\n\t\t},\n\n\t\tregisterChange: function( action, model, changes, label, data ) {\n\t\t\tvar data = typeof data !== 'undefined' ? data : {};\n\t\t\tif ( 'undefined' == typeof label.dashicon ) {\n\t\t\t\tlabel.dashicon = 'admin-generic';\n\t\t\t}\n\t\t\tvar changeModel = new ChangeModel({\n\t\t\t\taction: action,\n\t\t\t\tmodel: model,\n\t\t\t\tchanges: changes,\n\t\t\t\tlabel: label,\n\t\t\t\tdata: data\t\t\n\t\t\t} );\n\t\t\tthis.collection.add( changeModel );\n\t\t\treturn changeModel;\n\t\t},\n\n\t\tgetCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tmaybeResetCollection: function( clean ) {\n\t\t\tif ( clean ) {\n\t\t\t\tthis.collection.reset();\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define( 'controllers/app/undoChanges',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'click:undoChanges', this.undoChanges, this );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'click:undoSingle', this.undoSingle, this );\n\t\t},\n\n\t\tundoChanges: function() {\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\tchangeCollection.sort();\n\t\t\tvar that = this;\n\t\t\t_.each( changeCollection.models, function( change ) {\n\t\t\t\tthat.undoSingle( change, true );\n\t\t\t} );\n\t\t\tchangeCollection.reset();\n\t\t\t// Update preview.\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\t\t\t\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', true );\n\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t},\n\n\t\tundoSingle: function( change, undoAll ) {\n\t\t\tnfRadio.channel( 'changes' ).request( 'undo:' + change.get( 'action' ), change, undoAll );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens for our update:db response and replaces tmp ids with new ids if we were performing the publish action.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/publishResponse',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our app channel for the updateDB response.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'response:updateDB', this.publishResponse );\n\t\t},\n\n\t\tpublishResponse: function( response ) {\n\t\t\t// If we aren't performing a publish action, bail.\n\t\t\tif ( 'publish' !== response.action ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\t// Check to see if we have any new ids. \n\t\t\tif ( 'undefined' != typeof response.data.new_ids ) {\n\n\t\t\t\t// If we have any new fields, update their models with the new id.\n\t\t\t\tif ( 'undefined' != typeof response.data.new_ids.fields ) {\n\t\t\t\t\t_.each( response.data.new_ids.fields, function( newID, oldID ) {\n\t\t\t\t\t\tvar field = nfRadio.channel( 'fields' ).request( 'get:field', oldID );\n\t\t\t\t\t\tif ( field ) {\n\t\t\t\t\t\t\tfield.set( 'id', newID );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// If we have any new actions, update their models with the new id.\n\t\t\t\tif ( 'undefined' != typeof response.data.new_ids.actions ) {\n\t\t\t\t\t_.each( response.data.new_ids.actions, function( newID, oldID ) {\n\t\t\t\t\t\tvar action = nfRadio.channel( 'actions' ).request( 'get:action', oldID );\n\t\t\t\t\t\tif ( action ) {\n\t\t\t\t\t\t\taction.set( 'id', newID );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// If we have a new form id, update the model with the new id.\n\t\t\t\tif ( 'undefined' != typeof response.data.new_ids.forms ) {\n\t\t\t\t\t_.each( response.data.new_ids.forms, function( newID, oldID ) {\n\t\t\t\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\t\t\t\t\t\tformModel.set( 'id', newID );\n\t\t\t\t\t\thistory.replaceState( '', '', 'admin.php?page=ninja-forms&form_id=' + newID );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'loading', false );\n\t\t\tnfRadio.channel( 'app' ).trigger( 'change:loading' );\n\n\t\t\t// Mark our app as clean. This will disable the publish button and fire anything else that cares about the state.\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', true );\n\t\t}\n\t\t\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel for requests to change the current domain.\n *\n * The app menu and the main submenu both contain clickable links that change the current domain.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/changeDomain',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for both menu and submenu clicks.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:menu', this.changeAppDomain );\n\t\t\t// Reply to specific requests to change the domain\n\t\t\tnfRadio.channel( 'app' ).reply( 'change:currentDomain', this.changeAppDomain, this );\n\n\t\t\t// Reply to requests to prevent our drawer from closing\n\t\t\tnfRadio.channel( 'app' ).reply( 'prevent:changeDomain', this.preventChange, this );\n\t\t\t// Reply to requests to enable drawer closing\n\t\t\tnfRadio.channel( 'app' ).reply( 'enable:changeDomain', this.enableChange, this );\n\n\t\t\t/*\n\t\t\t * Object that holds our array of 'prevent change' values.\n\t\t\t * We use an array so that registered requests can unregister and not affect each other.\n\t\t\t */\n\t\t\tthis.objPreventChange = {};\n\t\t},\n\n\t\tchangeAppDomain: function( e, model ) {\n\t\t\t/*\n\t\t\t * If we have disabled movement between domains, return false.\n\t\t\t */\n\t\t\tif ( this.maybePreventChange() ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * If we are passed a model, use that model.\n\t\t\t * Otherwise, get the domain from the event target data.\n\t\t\t */ \n\t\t\tif ( 'undefined' == typeof model ) {\n\t\t\t\tvar domainID = jQuery( e.target ).data( 'domain' );\n\t\t\t\tvar model = nfRadio.channel( 'app' ).request( 'get:domainModel', domainID );\n\t\t\t}\n\t\t\t// If a drawer is open, close it.\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'get:currentDrawer' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t}\n\t\t\t/*\n\t\t\t * If we aren't dealing with an external url (such as preview), update our app data\n\t\t\t * and trigger a radio message saying we've changed the domain.\n\t\t\t */ \n\t\t\tif ( 0 == model.get( 'url' ).length ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:currentDomain', model );\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'change:currentDomain', model );\n\t\t\t}\n\t\t},\n\n\t\t/**\n         * Check to see if anything has registered a key to prevent changing the domain.\n         * \n         * @since  3.0\n         * @return boolean\n         */\n        maybePreventChange: function() {\n        \tif ( 0 == Object.keys( this.objPreventChange ).length ) {\n        \t\treturn false;\n        \t} else {\n        \t\treturn true;\n        \t}\n        },\n\n        /**\n         * Register a key to prevent changing the domain.\n         * \n         * @since  3.0\n         * @param  string \tkey unique id for our 'prevent change domain' setting.\n         * @return void\n         */\n        preventChange: function( key ) {\n        \tthis.objPreventChange[ key ] = true;\n        },\n\n        /**\n         * Remove a previously registered key that is preventing our domain from changing.\n         * \n         * @since  3.0\n         * @param  string \tkey unique id for our 'prevent change domain' setting.\n         * @return void\n         */\n        enableChange: function( key ) {\n        \tdelete this.objPreventChange[ key ];\n        },\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Modify the user's browser history when they click on a domain\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/pushstate',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.changePushState );\n\t\t},\n\n\t\tchangePushState: function() {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\thistory.pushState( null, null, window.location.href + '&domain=' + currentDomain.get( 'id' ) );\n\t\t\tvar reExp = /domain=\\\\d+/;\n\t\t\tvar url = window.location.toString();\n\t\t\tvar newUrl = url.replace( reExp, '' );\n\t\t\tconsole.log( newUrl );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles our hotkey execution. Needs to be cleaned up and made more programmatic.\n * \n * Our hotkeys are defined by the domain that we're currently viewing. In each domain's model, there is a hotkey object.\n * \n * Currently too much hotkey data is hard-coded here.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/hotkeys',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// When we change our domain, change the hotkeys to those within that object.\n\t\t\tthis.listenTo( nfRadio.channel( 'main' ), 'render:main', this.changeHotkeys );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'opened', this.changeHotkeys );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'render:settingGroup', this.changeHotkeys );\n\t\t\t// Currently, these are the functions that run when the new field or new action hotkey is pressed.\n\t\t\t// TODO: move these into a config module or into something more programmatic and scalable.\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'add:newField', this.addNewField );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'add:newAction', this.addNewAction );\n\t\t\t// Same as above, these functions need to be moved into a more modular/programmatic solution.\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'changeDomain:fields', this.changeDomainFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'changeDomain:actions', this.changeDomainActions );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'changeDomain:settings', this.changeDomainSettings );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'close:drawer', this.closeDrawer );\n\t\t},\n\n\t\tchangeHotkeys: function() {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tjQuery( document ).off( '.nfDomainHotkeys' );\n\t\t\tjQuery( 'input' ).off( '.nfDomainHotkeys' );\n\t\t\tif ( currentDomain.get( 'hotkeys' ) ) {\n\t\t\t\tjQuery.each( currentDomain.get( 'hotkeys' ), function( hotkey, msg ) {\n\t\t\t\t\tjQuery( document ).on( 'keydown.nfDomainHotkeys', null, hotkey, function( e ) {\n\t\t\t\t\t\tnfRadio.channel( 'hotkeys' ).trigger( msg, e );\n\t\t\t\t\t} );\n\t\t\t\t\tjQuery( 'input' ).on( 'keydown.nfDomainHotkeys', null, hotkey, function( e ) {\n\t\t\t\t\t\tnfRadio.channel( 'hotkeys' ).trigger( msg, e );\n\t\t\t\t\t} );\n\t\t\t\t\tjQuery( 'textarea' ).on( 'keydown.nfDomainHotkeys', null, hotkey, function( e ) {\n\t\t\t\t\t\tnfRadio.channel( 'hotkeys' ).trigger( msg, e );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\taddNewField: function() {\n\t\t\tif ( 'addField' != nfRadio.channel( 'app' ).request( 'get:currentDrawer' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'addField' );\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t}\n\t\t\t\n\t\t},\n\n\t\taddNewAction: function() {\n\t\t\tif ( 'addAction' != nfRadio.channel( 'app' ).request( 'get:currentDrawer' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'addAction' );\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t}\n\t\t},\n\n\t\tchangeDomainFields: function() {\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar fieldsDomain = appDomainCollection.get( 'fields' );\n\t\t\tnfRadio.channel( 'app' ).request( 'change:currentDomain', {}, fieldsDomain );\n\t\t},\n\n\t\tchangeDomainActions: function() {\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar actionsDomain = appDomainCollection.get( 'actions' );\n\t\t\tnfRadio.channel( 'app' ).request( 'change:currentDomain', {}, actionsDomain );\n\t\t},\n\n\t\tchangeDomainSettings: function() {\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar settingsDomain = appDomainCollection.get( 'settings' );\n\t\t\tnfRadio.channel( 'app' ).request( 'change:currentDomain', {}, settingsDomain );\n\t\t},\n\n\t\tcloseDrawer: function() {\n\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Change the clean state of our app when settings are changed.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/cleanState',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Set an array of field model attributes to ignore.\n\t\t\t * This list will be filtered just before we ignore anything.\n\t\t\t */ \n\t\t\tthis.ignoreAttributes = [\n\t\t\t\t'editActive'\n\t\t\t];\n\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'update:setting', this.setAppClean );\n\t\t},\n\n\t\tsetAppClean: function( model ) {\n\t\t\tfor( var attr in model.changedAttributes() ) {\n\t\t\t\tvar changedAttr = attr;\n\t\t\t\tvar after = model.changedAttributes()[ attr ];\n\t\t\t}\n\n\t\t\tvar ignoreAttributes = nfRadio.channel( 'undo-' + model.get( 'type' ) ).request( 'ignore:attributes', this.ignoreAttributes ) || this.ignoreAttributes;\n\t\t\t\n\t\t\tif ( -1 != this.ignoreAttributes.indexOf( attr ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * All of the core undo functions. Listens on the 'changes' channel for an undo request.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/coreUndo',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:changeSetting', this.undoChangeSetting, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:addObject', this.undoAddObject, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:removeObject', this.undoRemoveObject, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:duplicateObject', this.undoDuplicateObject, this );\n\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:sortFields', this.undoSortFields, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:addListOption', this.undoAddListOption, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:removeListOption', this.undoRemoveListOption, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:sortListOptions', this.undoSortListOptions, this );\n\t\t},\n\n\t\t/**\n\t\t * Undo settings that have been changed.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoChangeSetting: function( change, undoAll ) {\n\t\t\tvar fieldModel = change.get( 'model' );\n\t\t\tvar changes = change.get( 'changes' );\n\t\t\tvar attr = changes.attr;\n\t\t\tvar before = changes.before;\n\t\t\tfieldModel.set( attr, before );\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\t/**\n\t\t * Undo adding a field or an action.\n\t\t * Loops through our change collection and removes any change models based upon the one we're removing.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoAddObject: function( change, undoAll ) {\n\t\t\tvar objectModel = change.get( 'model' );\n\t\t\tvar collection = change.get( 'data' ).collection;\n\n\t\t\tdelete collection.newIDs[ objectModel.get( 'id' ) ];\n\t\t\t\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tvar results = changeCollection.where( { model: objectModel } );\n\n\t\t\t\t_.each( results, function( model ) {\n\t\t\t\t\tif ( model !== change ) {\n\t\t\t\t\t\tchangeCollection.remove( model );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tcollection.remove( objectModel );\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\t\t\n\n\t\t/**\n\t\t * Undo adding a field or an action.\n\t\t * Loops through our change collection and removes any change models based upon the one we're removing.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoDuplicateObject: function( change, undoAll ) {\n\t\t\tvar objectModel = change.get( 'model' );\n\t\t\tvar objectCollection = change.get( 'data' ).collection;\n\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tvar results = changeCollection.where( { model: objectModel } );\n\n\t\t\t\t_.each( results, function( model ) {\n\t\t\t\t\tif ( model !== change ) {\n\t\t\t\t\t\tchangeCollection.remove( model );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\n\t\t\tobjectCollection.remove( objectModel );\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\t/**\n\t\t * Undo removing a field or an action.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoRemoveObject: function( change, undoAll ) {\n\t\t\tvar dataModel = change.get( 'model' );\n\t\t\tvar collection = change.get( 'data' ).collection;\n\n\t\t\tnfRadio.channel( dataModel.get( 'objectDomain' ) ).request( 'add', dataModel );\n\n\t\t\tdelete collection.removedIDs[ dataModel.get( 'id' ) ];\n\t\t\t\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tvar results = changeCollection.where( { model: dataModel } );\n\n\t\t\t\t_.each( results, function( model ) {\n\t\t\t\t\tif ( model !== change ) {\n\t\t\t\t\t\tmodel.set( 'disabled', false );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\n\t\t\t// Trigger a reset on our field collection so that our view re-renders\n\t\t\tcollection.trigger( 'reset', collection );\n\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\t/**\n\t\t * Undo field sorting.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoSortFields: function( change, undoAll ) {\n\t\t\tvar data = change.get( 'data' );\n\t\t\tvar fields = data.fields;\n\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t_.each( fields, function( changeModel ) {\n\t\t\t\tvar before = changeModel.before;\n\t\t\t\tvar fieldModel = changeModel.model;\n\t\t\t\tfieldModel.set( 'order', before );\n\t\t\t\tconsole.log( 'set ' + fieldModel.get( 'label' ) + ' to ' + before );\n\t\t\t} );\n\t\t\tconsole.log( fieldCollection.where( { label: 'Name' } ) );\n\t\t\tconsole.log( fieldCollection.where( { label: 'Email' } ) );\n\n\n\t\t\tfieldCollection.sort();\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoAddListOption: function( change, undoAll ) {\n\t\t\tvar model = change.get( 'model' );\n\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tvar results = changeCollection.where( { model: model } );\n\n\t\t\t\t_.each( results, function( changeModel ) {\n\t\t\t\t\tif ( changeModel !== change ) {\n\t\t\t\t\t\tchangeCollection.remove( changeModel );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\n\t\t\tmodel.collection.remove( model );\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoRemoveListOption: function( change, undoAll ) {\n\t\t\tvar model = change.get( 'model' );\n\t\t\tvar collection = change.get( 'data' ).collection;\n\t\t\tcollection.add( model );\n\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tvar results = changeCollection.where( { model: model } );\n\n\t\t\t\t_.each( results, function( model ) {\n\t\t\t\t\tif ( model !== change ) {\n\t\t\t\t\t\tmodel.set( 'disabled', false );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoSortListOptions: function( change, undoAll ) {\n\t\t\tvar data = change.get( 'data' );\n\t\t\tvar collection = data.collection;\n\t\t\t\n\t\t\tvar objModels = data.objModels;\n\n\t\t\t_.each( objModels, function( changeModel ) {\n\t\t\t\tvar before = changeModel.before;\n\t\t\t\tvar optionModel = changeModel.model;\n\t\t\t\toptionModel.set( 'order', before );\n\t\t\t} );\t\t\t\t\n\n\n\t\t\tcollection.sort();\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\t/**\n\t\t * If our undo action was requested to 'remove' the change from the collection, remove it.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tremove \tshould we remove this item from our change collection\n\t\t * @return void\n\t\t */\n\t\tmaybeRemoveChange: function( change, undoAll ) {\t\t\t\n\t\t\tvar undoAll = typeof undoAll !== 'undefined' ? undoAll : false;\n\t\t\tif ( ! undoAll ) {\n\t\t\t\t// Update preview.\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tchangeCollection.remove( change );\n\t\t\t\tif ( 0 == changeCollection.length ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', true );\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Returns a clone of a backbone model with all the attributes looped through so that collections contained within are propely cloned.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/cloneModelDeep',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'app' ).reply( 'clone:modelDeep', this.cloneModelDeep, this );\n\t\t},\n\n\t\tcloneModelDeep: function( model ) {\n\t\t\t// Temporary value used to store any new collections.\n\t\t\tvar replace = {};\n\t\t\t// Loop over every model attribute and if we find a collection, clone each model and instantiate a new collection.\n\t\t\t_.each( model.attributes, function( val, key ) {\n\t\t\t\t// console.log( val );\n\t\t\t\tif( val instanceof Backbone.Collection ) { // Is this a backbone collection?\n\t\t\t\t\t// Clone each model.\n\t\t\t\t\tvar models = val.map( function( model ) { return model.clone(); } );\n\t\t\t\t\tvar options = _.clone( val.options );\n\t\t\t\t\tvar copy = new val.constructor( models, options );\n\t\t\t\t\treplace[ key ] = copy;\n\t\t\t\t} else if ( val instanceof Backbone.Model ) { // Is this a backbone model?\n\t\t\t\t\treplace[ key ] = val.clone();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Clone our original model\n\t\t\tvar newModel = model.clone();\n\t\t\t// Overwrite any collections we created above.\n\t\t\t_.each( replace, function( val, key ) {\n\t\t\t\tnewModel.set( key, val );\n\t\t\t} );\n\n\t\t\treturn newModel;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Returns the appropriate child view for our settings drawer.\n *\n * This enables settings types to register custom childviews for their settings.\n * The option-repeater setting for the list field is an example.\n * \n * @package Ninja Forms builder\n * @subpackage App - Edit Settings Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/getSettingChildView',['views/app/drawer/itemSetting'], function( itemSettingView ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests for field settings child views.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:settingChildView', this.getSettingChildView, this );\n\t\t},\n\n\t\t/**\n\t\t * Return the appropriate child setting view.\n\t\t *\n\t\t * @since  3.0\n\t\t * @param  backbone.model\tmodel \tField setting\n\t\t * @return backbone.view\n\t\t */\n\t\tgetSettingChildView: function( model ) {\n\t\t\t// Get our setting type.\n\t\t\tvar type = model.get( 'type' );\n\t\t\t// Request a setting childview from our setting type channel. (Setting type, not field type)\n\t\t\tvar settingChildView = nfRadio.channel( type ).request( 'get:settingChildView', model ) || itemSettingView;\n\t\t\t\n\t\t\treturn settingChildView\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Updates our model when the user changes a setting.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/changeSettingDefault',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests to update settings.\n\t\t\tnfRadio.channel( 'app' ).reply( 'change:setting', this.changeSetting, this );\n\n\t\t\t// Listen on our app channel for the change setting event. Fired by the setting view.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:setting', this.changeSetting, this );\n\t\t},\n\n\t\t/**\n\t\t * When we change our setting, update the model.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \t\t\te                event\n\t\t * @param  backbone.model \tsettingModel model that holds our field type settings info\n\t\t * @param  backbone.model \tdataModel       model that holds our field settings\n\t\t * @return void\n\t\t */\n\t\tchangeSetting: function( e, settingModel, dataModel ) {\n\t\t\tvar name = settingModel.get( 'name' );\n\t\t\tvar before = dataModel.get( name );\n\t\t\t// Sends out a request on the fields-type (fields-text, fields-checkbox, etc) channel to see if that field type needs to return a special value for saving.\n\t\t\tvar value = nfRadio.channel( settingModel.get( 'type' ) ).request( 'before:updateSetting', e, dataModel, name, settingModel );\n\t\t\t// If we didn't get a special field-type value, get the value from the event passed.\n\t\t\tif ( 'undefined' == typeof value ) {\n\t\t\t\tvalue = jQuery( e.target ).val();\n\t\t\t}\n\t\t\t// Update our field model with the new setting value.\n\t\t\tdataModel.set( name, value );\n\t\t\t// Register our setting change with our change tracker\n\t\t\tvar after = value;\n\t\t\t\n\t\t\tvar changes = {\n\t\t\t\tattr: name,\n\t\t\t\tbefore: before,\n\t\t\t\tafter: after\n\t\t\t}\n\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\n\t\t\t/*\n\t\t\t * TODO: Make this more dynamic.\n\t\t\t * Currently, this is a very specific work-around. It should be more generalized.\n\t\t\t */\n\t\t\tif ( 'toggle' == settingModel.get( 'type' ) ) {\n\t\t\t\tif ( 1 == before ) {\n\t\t\t\t\tbefore = 'On';\n\t\t\t\t} else {\n\t\t\t\t\tbefore = 'Off';\n\t\t\t\t}\n\n\t\t\t\tif ( 1 == after ) {\n\t\t\t\t\tafter = 'On';\n\t\t\t\t} else {\n\t\t\t\t\tafter = 'Off';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar label = {\n\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\tchange: 'Changed ' + settingModel.get( 'label' ) + ' from ' + before + ' to ' + after\n\t\t\t};\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'changeSetting', dataModel, changes, label );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define( 'views/app/drawer/typeSettingFieldset',['views/app/drawer/itemSetting'], function( itemSettingView ) {\n\tvar view = Marionette.CompositeView.extend( {\n\t\ttemplate: '#nf-tmpl-edit-setting-wrap',\n\t\tchildView: itemSettingView,\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.collection = this.model.get( 'settings' );\n\t\t\tthis.childViewOptions = { dataModel: data.dataModel };\n\t\t\tthis.dataModel = data.dataModel;\n\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor ( var name in deps ) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.on( 'change:' + name, this.render, this );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor (var name in deps) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.off( 'change:' + name, this.render );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonRender: function() {\n\t\t\t// this.$el = this.$el.children();\n\t\t\t// this.$el.unwrap();\n\t\t\t// this.setElement( this.$el );\n\n\t\t\t// this.$el = this.$el.children();\n\t\t\t// this.$el.unwrap();\n\t\t\t// this.setElement( this.$el );\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t\t\tvar that = this;\n\t    \treturn {\n\t    \t\trenderVisible: function() {\n\t\t\t\t\tif ( this.deps ) {\n\t\t\t\t\t\tfor (var name in this.deps) {\n\t\t\t\t\t\t    if ( this.deps.hasOwnProperty( name ) ) {\n\t\t\t\t\t\t        if ( that.dataModel.get( name ) !== this.deps[ name ] ) {\n\t\t\t\t\t\t        \treturn 'style=\"display:none;\"';\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t    \t\t\treturn '';\n\t    \t\t},\n\t    \t\trenderSetting: function(){\n\t\t\t\t\treturn _.template( jQuery( '#nf-tmpl-edit-setting-' + this.type ).html(), this );\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = '';\n\t\t\t\t\tif ( 'undefined' != typeof this.width ) {\n\t\t\t\t\t\tclasses += this.width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclasses += ' one-half';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.error ) {\n\t\t\t\t\t\tclasses += ' nf-error';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\trenderError: function() {\n\t\t\t\t\tif ( this.error ) {\n\t\t\t\t\t\treturn this.error;\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( '.nf-field-sub-settings' ).append( childView.el );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","/**\n * Model that represents our setting.\n *\n * When the model is created, we trigger the init event in two radio channels.\n *\n * This lets specific types of settings modify the model before anything uses it.\n *\n * Fieldset, for instance, uses this hook to instantiate its settings as a collection.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/settingModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tsettings: false,\n\t\t\thide_merge_tags: false,\n\t\t\terror: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Send out two messages saying that we've initialized a setting model.\n\t\t\tnfRadio.channel( 'app' ).trigger( 'init:settingModel', this );\n\t\t\tnfRadio.channel( this.get( 'type' ) ).trigger( 'init:settingModel', this );\n\n\t\t\tthis.on( 'change:error', this.maybePreventUI, this );\n\n\t\t\t/*\n\t\t\t * If we have an objectType set on our collection, then we're creating a model for the generic settings collection.\n\t\t\t * If we're using merge tags in this setting\n\t\t\t */\n\t\t\tif ( this.get( 'use_merge_tags' ) && 'undefined' != typeof this.collection.options.objectType ) {\n\t\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'update:fieldKey', this.updateKey );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When a field key is updated, send out a radio message requesting that this setting be checked for the old key.\n\t\t * We want to send the message on the objectType channel.\n\t\t * This means that if this setting is for fields, it will trigger on the fields channel, actions, etc.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Backbone.Model \tkeyModel data model representing the field for which the key just changed\n\t\t * @return void\n\t\t */\n\t\tupdateKey: function( keyModel ) {\n\t\t\tnfRadio.channel( this.collection.options.objectType ).trigger( 'update:fieldKey', keyModel, this );\n\t\t},\n\n\t\tmaybePreventUI: function() {\n\t\t\tif ( this.get( 'error' ) ) {\n\t\t\t\tnfRadio.channel( 'drawer' ).request( 'prevent:close', 'setting-' + this.get( 'name' ) + '-error' );\n\t\t\t\tnfRadio.channel( 'app' ).request( 'prevent:changeDomain', 'setting-' + this.get( 'name' ) + '-error' );\t\t\t\t\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'drawer' ).request( 'enable:close', 'setting-' + this.get( 'name' ) + '-error' );\n\t\t\t\tnfRadio.channel( 'app' ).request( 'enable:changeDomain', 'setting-' + this.get( 'name' ) + '-error' );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collections of settings for each field type.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/settingCollection',['models/app/settingModel'], function( settingModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: settingModel,\n\n\t\tinitialize: function( models, options ) {\n\t\t\tthis.options = options || {};\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Handles actions related to field settings that use a fieldset\n * \n * @package Ninja Forms builder\n * @subpackage Fields - Edit Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/fieldset',['views/app/drawer/typeSettingFieldset','models/app/settingCollection'], function( fieldsetView, settingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'fieldset' ).reply( 'get:settingChildView', this.getSettingChildView, this );\n\t\t\t// When a list type field is initialized, create an option collection.\n\t\t\tthis.listenTo( nfRadio.channel( 'fieldset' ), 'init:settingModel', this.createSettingsCollection );\n\t\t},\n\n\t\tgetSettingChildView: function( model ) {\n\t\t\treturn fieldsetView;\n\t\t},\n\n\t\t/**\n\t\t * Instantiate settings collection when a fieldset type is initialized.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tmodel \tfield model being initialized\n\t\t * @return void\n\t\t */\n\t\tcreateSettingsCollection: function( model ) {\n\t\t\tmodel.set( 'settings', new settingCollection( model.get( 'settings' ) ) );\n\t\t},\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles actions related to our toggle field.\n * When we change the toggle, the setting value will be 'on' or ''.\n * We need to change this to 1 or 0.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - Edit Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/toggleSetting',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// We don't want the RTE setting to re-render when the value changes.\n\t\t\tnfRadio.channel( 'setting-type-toggle' ).reply( 'renderOnChange', function(){ return false } );\n\n\t\t\t// Respond to requests for field setting filtering.\n\t\t\tnfRadio.channel( 'toggle' ).reply( 'before:updateSetting', this.updateSetting, this );\n\t\t},\n\n\t\t/**\n\t\t * Return either 1 or 0, depending upon the toggle position.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \t\t\te                event\n\t\t * @param  backbone.model \tfieldModel       field model\n\t\t * @param  string \t\t\tname             setting name\n\t\t * @param  backbone.model \tsettingTypeModel field type model\n\t\t * @return int              1 or 0\n\t\t */\n\t\tupdateSetting: function( e, fieldModel, name, settingTypeModel ) {\n\t\t\tif ( jQuery( e.target ).attr( 'checked' ) ) {\n\t\t\t\tvar value = 1;\n\t\t\t} else {\n\t\t\t\tvar value = 0;\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens for clicks on our action item action buttons.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - Main Sortable\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/itemControls',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for clicks to edit, delete, duplicate actions.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:edit', this.clickEdit );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:delete', this.clickDelete );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:duplicate', this.clickDuplicate );\n\n\t\t\t// Listen for our drawer close and remove our active edit state\n\t\t},\n\n\t\t/**\n\t\t * Open a drawer with our action model for editing settings.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te     \tevent\n\t\t * @param  backbone.model \tmodel \taction model\n\t\t * @return void\n\t\t */\n\t\tclickEdit: function( e, model ) {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\t\t\tvar type = nfRadio.channel( currentDomainID ).request( 'get:type' , model.get( 'type' ) );\n\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'editSettings', { model: model, groupCollection: type.get( 'settingGroups' ) } );\n\t\t},\n\n\t\t/**\n\t\t * Delete a action model from our collection\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te     \tevent\n\t\t * @param  backbone.model \tmodel \taction model\n\t\t * @return void\n\t\t */\n\t\tclickDelete: function( e, dataModel ) {\n\t\t\tvar newModel = nfRadio.channel( 'app' ).request( 'clone:modelDeep', dataModel );\n\n\t\t\t// Add our action deletion to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\tchange: 'Removed',\n\t\t\t\tdashicon: 'dismiss'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: dataModel.collection\n\t\t\t};\n\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\tvar results = changeCollection.where( { model: dataModel } );\n\n\t\t\t_.each( results, function( changeModel ) {\n\t\t\t\tvar data = changeModel.get( 'data' );\n\t\t\t\tif ( 'undefined' != typeof data.fields ) {\n\t\t\t\t\t_.each( data.fields, function( field, index ) {\n\t\t\t\t\t\tif ( field.model == dataModel ) {\n\t\t\t\t\t\t\tdata.fields[ index ].model = newModel;\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\tchangeModel.set( 'data', data );\n\t\t\t\tchangeModel.set( 'model', newModel );\n\t\t\t\tchangeModel.set( 'disabled', true );\n\t\t\t} );\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'removeObject', newModel, null, label, data );\n\t\t\t\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\t\t\tnfRadio.channel( currentDomainID ).request( 'delete', dataModel );\n\t\t},\n\n\t\t/**\n\t\t * Duplicate a action within our collection, adding the word \"copy\" to the label.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te     \tevent\n\t\t * @param  backbone.model \tmodel \taction model\n\t\t * @return void\n\t\t */\n\t\tclickDuplicate: function( e, model ) {\n\t\t\tvar newModel = nfRadio.channel( 'app' ).request( 'clone:modelDeep', model );\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\n\t\t\t// Change our label.\n\t\t\tnewModel.set( 'label', newModel.get( 'label' ) + ' Copy' );\n\t\t\t// Update our ID to the new tmp id.\n\t\t\tvar tmpID = nfRadio.channel( currentDomainID ).request( 'get:tmpID' );\n\t\t\tnewModel.set( 'id', tmpID );\n\t\t\t// Add new model.\n\t\t\tnfRadio.channel( currentDomainID ).request( 'add', newModel );\n\t\t\t// Add our action addition to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: model.get( 'objectType' ),\n\t\t\t\tlabel: model.get( 'label' ),\n\t\t\t\tchange: 'Duplicated',\n\t\t\t\tdashicon: 'admin-page'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: nfRadio.channel( currentDomainID ).request( 'get:collection' )\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'duplicateObject', newModel, null, label, data );\n\t\t\t\n\t\t\t// Update preview.\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Config file for our merge tags.\n *\n * this.collection represents all of our registered merge tags.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/mergeTags',[\n\t'models/app/mergeTagCollection'\n\t], function(\n\tmergeTagCollection\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.tagSectionCollection = new mergeTagCollection();\n\t\t\tvar that = this;\n\t\t\t_.each( mergeTags, function( tagSection ) {\n\t\t\t\tif ( tagSection.tags ) {\n\t\t\t\t\tvar tags = new mergeTagCollection( tagSection.tags );\n\t\t\t\t} else {\n\t\t\t\t\tvar tags = '';\n\t\t\t\t}\n\n\t\t\t\tthat.tagSectionCollection.add( {\n\t\t\t\t\tid: tagSection.id,\n\t\t\t\t\tlabel: tagSection.label,\n\t\t\t\t\ttags: tags,\n\t\t\t\t\tdefault_group: tagSection.default_group\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\tvar fieldTags = new mergeTagCollection();\n\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t_.each( fieldCollection.models, function( field ) {\n\t\t\t\t// TODO: Make this dynamic\n\t\t\t\tif ( 'submit' !== field.get( 'type' ) ) {\n\t\t\t\t\tfieldTags.add( {\n\t\t\t\t\t\tid: field.get( 'id' ),\n\t\t\t\t\t\tlabel: field.get( 'label' ),\n\t\t\t\t\t\ttag: that.getFieldKeyFormat( field.get( 'key' ) )\n\t\t\t\t\t} );\t\t\t\t\t\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.tagSectionCollection.get( 'fields' ).set( 'tags', fieldTags );\n\n\t\t\tvar calcTags = new mergeTagCollection();\n\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\t\t\tvar calcCollection = formModel.get( 'settings' ).get( 'calculations' );\n\t\t\t_.each( calcCollection, function( calc ) {\n\t\t\t\tcalcTags.add( {\n\t\t\t\t\tlabel: calc.name,\n\t\t\t\t\ttag: '{calc:' + calc.name + '}'\n\t\t\t\t} );\t\t\t\t\t\n\t\t\t\t\n\t\t\t} );\n\n\t\t\tthis.tagSectionCollection.get( 'calcs' ).set( 'tags', calcTags );\n\n\t\t\tthis.currentElement = {};\n\t\t\tthis.settingModel = {};\n\t\t\tthis.open = false;\n\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'init', this.initMergeTags, this );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'mergeTags' ), 'click:mergeTag', this.clickMergeTag );\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'add:field', this.addFieldTags );\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'delete:field', this.deleteFieldTags );\n\t\t\t\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'update:currentElement', this.updateCurrentElement, this );\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'update:currentSetting', this.updateCurrentSetting, this );\n\n\t\t\t// Listen for requests for our mergeTag collection.\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'get:collection', this.getCollection, this );\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'get:mergeTag', this.getSectionModel, this );\n\n\t\t\t// When we edit a key, check for places that key might be used.\n\t\t\tthis.listenTo( nfRadio.channel( 'fieldSetting-key' ), 'update:setting', this.updateKey );\n\n\t\t\t// Reply to requests to check a data model for a field key when one is updated.\n\t\t\tnfRadio.channel( 'app' ).reply( 'replace:fieldKey', this.replaceFieldKey, this );\n\n\t\t\t// Reply to requests to check a data model for a field key when one is updated.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:fieldKeyFormat', this.getFieldKeyFormat, this );\n\n\t\t\t/*\n\t\t\t * TODO: Hotkey support for adding tags.\n\t\t\t *\n\t\t\t\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'open:mergeTags', this.openMergeTags );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'up:mergeTags', this.upMergeTags );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'down:mergeTags', this.downMergeTags );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'return:mergeTags', this.returnMergeTags );\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'update:open', this.updateOpen, this );\n\t\t\t*/\n\t\t},\n\n\t\t/**\n\t\t * Init merge tags within the passed view.\n\t\t * @since  3.0\n\t\t * @param  backbone.view view to be searched for merge tags.\n\t\t * @return void\n\t\t */\n\t\tinitMergeTags: function( view ) {\n\t\t\tvar mergeTagsView = nfRadio.channel( 'mergeTags' ).request( 'get:view' );\n\t\t\tvar that = this;\n\t\t\t/*\n\t\t\t * Apply merge tags jQuery plugin.\n\t\t\t *\n\t\t\t * Prevent jBox from being called multiple times on the same element\n\t\t\t */\n\t\t\tthis.jBoxes = {};\n\t\t\tvar that = this;\n\t\t\tjQuery( view.el ).find( '.merge-tags' ).each(function() {\n\t\t\t\tif ( 'undefined' == typeof jQuery( this ).data( 'jBox-id' ) ) {\n\t\t\t\t\tvar jBox = jQuery( this ).jBox( 'Tooltip', {\n\t\t\t\t\t\ttitle: 'Insert Merge Tag',\n\t\t\t\t\t\ttrigger: 'click',\n\t\t\t\t\t\tposition: {\n\t\t\t\t\t\t\tx: 'center',\n\t\t\t\t\t\t\ty: 'bottom'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcloseOnClick: 'body',\n\t\t\t\t\t\tcloseOnEsc: true,\n\t\t\t\t\t\ttheme: 'TooltipBorder',\n\t\t\t\t\t\tmaxHeight: 200,\n\n\t\t\t\t\t\tonOpen: function() {\n\t\t\t\t\t\t\tmergeTagsView.reRender( view.model );\n\t\t\t\t\t\t\tthis.setContent( jQuery( '.merge-tags-content' ) );\n\t\t\t\t\t\t\tvar currentElement = jQuery( this.target ).prev( '.setting' );\n\t\t\t\t\t\t\tif ( 0 == currentElement.length ) {\n\t\t\t\t\t\t\t\tcurrentElement = jQuery( view.el ).find( '.setting' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthat.updateCurrentSetting( view.model );\n\t\t\t\t\t\t\tthat.updateCurrentElement( currentElement );\n\t\t\t\t\t\t\t// nfRadio.channel( 'drawer' ).request( 'prevent:close', 'merge-tags' );\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonClose: function() {\n\t\t\t\t\t\t\t// nfRadio.channel( 'drawer' ).request( 'enable:close', 'merge-tags' );\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tjQuery( this ).data( 'jBox-id', jBox.id );\t\t\t\t\t\n\t\t\t\t}\n\t\t    });\n\t\t},\n\n\t\tclickMergeTag: function( e, tagModel ) {\n\t\t\t/*\n\t\t\t * TODO: Make this more dynamic.\n\t\t\t * Currently, the RTE is the only section that modifies how merge tags work,\n\t\t\t * but another type of setting might need to do this in the future.\n\t\t\t */\n\t\t\tif ( 'rte' != this.settingModel.get( 'type' ) ) {\n\t\t\t\tvar currentValue = jQuery( this.currentElement ).val();\n\t\t\t\tvar currentPos = jQuery( this.currentElement ).caret();\n\t\t\t\tvar newPos = currentPos + tagModel.get( 'tag' ).length;\n\t\t\t\tcurrentValue = currentValue.substr( 0, currentPos ) + tagModel.get( 'tag' ) + currentValue.substr( currentPos );\n\t\t\t\tjQuery( this.currentElement ).val( currentValue ).caret( newPos ).trigger( 'change' );\t\t\t\t\n\t\t\t} else { // We're in an RTE\n\t\t\t\tjQuery( this.currentElement ).summernote( 'insertText', tagModel.get( 'tag' ) );\n\t\t\t}\n\n\t\t},\n\n\t\taddFieldTags: function( fieldModel ) {\n\t\t\t// TODO: Make this dynamic\n\t\t\tif ( 'submit' !== fieldModel.get( 'type' ) ) {\n\t\t\t\tthis.tagSectionCollection.get( 'fields' ).get( 'tags' ).add( {\n\t\t\t\t\tid: fieldModel.get( 'id' ),\n\t\t\t\t\tlabel: fieldModel.get( 'label' ),\n\t\t\t\t\ttag: this.getFieldKeyFormat( fieldModel.get( 'key' ) )\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\tdeleteFieldTags: function( fieldModel ) {\n\t\t\tvar fieldID = fieldModel.get( 'id' );\n\t\t\tvar tagModel = this.tagSectionCollection.get( 'fields' ).get( 'tags' ).get( fieldID );\n\t\t\tthis.tagSectionCollection.get( 'fields' ).get( 'tags' ).remove( tagModel );\n\t\t},\n\n\t\topenMergeTags: function( e ) {\n\t\t\tif ( 'TEXTAREA' == jQuery( e.target )[0].tagName || 'INPUT' == jQuery( e.target )[0].tagName ) {\n\t\t\t\tjQuery( e.target ).parent().find( '.merge-tags' ).click();\n\t\t\t}\n\t\t},\n\n\t\treturnMergeTags: function( e ) {\n\t\t\tif ( this.open ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tvar currentModel = this.fields.where( { 'active': true } )[0];\n\t\t\t\tif ( currentModel ) {\n\t\t\t\t\tthis.clickMergeTag( e, currentModel );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tupMergeTags: function( e ) {\n\t\t\tif ( this.open ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.changeActiveTag( 'up' );\n\t\t\t}\n\t\t},\n\n\t\tdownMergeTags: function( e ) {\n\t\t\tif ( this.open ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.changeActiveTag( 'down' );\n\t\t\t}\n\t\t},\n\n\t\tchangeActiveTag: function( dir ) {\n\t\t\tif ( 'down' == dir ) {\n\t\t\t\tvar inc = 1;\n\t\t\t} else {\n\t\t\t\tvar inc = -1\n\t\t\t}\n\t\t\t// First, check to see if a field is currently active.\n\t\t\tif( 0 < this.fields.where( { 'active': true } ).length ) {\n\t\t\t\tvar currentModel = this.fields.where( { 'active': true } )[0];\n\t\t\t\tvar currentIndex = this.fields.indexOf( currentModel );\n\t\t\t\tcurrentModel.set( 'active', false );\n\n\t\t\t\tvar nextModel = this.fields.models[ currentIndex + inc ];\n\t\t\t\tif ( nextModel ) {\n\t\t\t\t\tnextModel.set( 'active', true );\n\t\t\t\t} else {\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if ( 0 < this.fields.where( { 'active': true } ) ) { // There aren't any active fields. Check for active system tags.\n\t\t\t\tconsole.log( 'system' );\n\t\t\t} else if ( 0 < this.userInfo.where( { 'active': true } ) ) { // No active user info LIs.\n\t\t\t\tconsole.log( 'userinfo' );\n\t\t\t} else { // No active LIs. We haven't made any active yet, or we've gotten to the bottom of the list.\n\t\t\t\t// Make sure that we have fields\n\t\t\t\tif ( 0 < this.fields.models.length ) {\n\t\t\t\t\t// Set our first field to active.\n\t\t\t\t\tthis.fields.models[0].set( 'active', true );\n\t\t\t\t} else {\n\t\t\t\t\t// Set our first system model to active.\n\t\t\t\t\tthis.system.models[0].set( 'active', true );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tupdateCurrentElement: function( element ) {\n\t\t\tthis.currentElement = element;\n\t\t},\n\n\t\tupdateCurrentSetting: function( settingModel ) {\n\t\t\tthis.settingModel = settingModel;\n\t\t},\n\n\t\tgetCollection: function() {\n\t\t\treturn this.tagSectionCollection;\n\t\t},\n\n\t\tgetSectionModel: function( id ) {\n\t\t\treturn this.tagSectionCollection.get( id );\n\t\t},\n\n\t\tupdateOpen: function( open ) {\n\t\t\tthis.open = open;\n\t\t\t_.each( this.tagSectionCollection.get( 'fields' ).models, function( model ) {\n\t\t\t\tmodel.set( 'active', false );\n\t\t\t} );\n\t\t},\n\n\t\tupdateKey: function( fieldModel ) {\n\t\t\tvar newKey = fieldModel.get( 'key' );\n\t\t\tvar oldTag = this.tagSectionCollection.get( 'fields' ).get( 'tags' ).get( fieldModel.get( 'id' ) );\n\t\t\tif ( 'undefined' != typeof oldTag ) {\n\t\t\t\toldTag.set( 'tag', this.getFieldKeyFormat( newKey ) );\t\t\t\t\n\t\t\t}\n\n\t\t},\n\n\t\tgetFieldKeyFormat: function( key ) {\n\t\t\treturn '{field:' + key + '}';\n\t\t},\n\n\t\treplaceFieldKey: function( dataModel, keyModel, settingModel ) {\n\t\t\tvar oldKey = this.getFieldKeyFormat( keyModel._previousAttributes[ 'key' ] );\n\t\t\tvar newKey = this.getFieldKeyFormat( keyModel.get( 'key' ) );\n\t\t\tvar settingName = settingModel.get( 'name' );\n\t\t\tvar oldVal = dataModel.get( settingName );\n\t\t\tif ( 'string' == typeof oldVal ) {\n\t\t\t\tvar re = new RegExp( oldKey, 'g' );\n\t\t\t\tnewVal = oldVal.replace( re, newKey );\n\t\t\t\tdataModel.set( settingName, newVal );\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel for settings views being rendered.\n *\n * If we're about to render a setting model that's a select and has 'fields' as the 'fill' setting, add all our field models to its options.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/itemSettingFill',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for messages that are fired before a setting view is rendered.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'before:renderSetting', this.beforeRenderSetting );\n\t\t},\n\n\t\tbeforeRenderSetting: function( settingModel, dataModel ) {\n\t\t\tif ( 'fields' == settingModel.get( 'fill' ) ) {\n\t\t\t\t\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Modify the user's browser history when they click on a domain\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/confirmPublish',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:confirmPublish', this.confirmPublish );\n\t\t},\n\n\t\tconfirmPublish: function() {\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\t\t\tformModel.set( 'show_publish_options', false );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db', 'publish' );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles actions related to settings that utilise the Rich Text Editor\n *\n * @package Ninja Forms builder\n * @subpackage App - Settings Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/rte',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// We don't want the RTE setting to re-render when the value changes.\n\t\t\tnfRadio.channel( 'setting-type-rte' ).reply( 'renderOnChange', function(){ return false } );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'rte' ), 'init:settingModel', this.initSettingModel );\n\n\t\t\t// When an RTE setting is shown, re-render RTE.\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-type-rte' ), 'render:setting', this.renderSetting );\n\n\t\t\t// When an RTE setting view is destroyed, remove our RTE.\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-type-rte' ), 'destroy:setting', this.destroySetting );\n\n\t\t\t// When an element within the RTE is clicked, check to see if we should insert a link.\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-type-rte' ), 'click:extra', this.clickExtra );\n\n\t\t\t// Instantiates the variable that holds the media library frame.\n\t\t\tthis.meta_image_frame;\n\n\t\t\tjQuery.summernote.options.icons = {\n\t\t        'align': 'dashicons dashicons-editor-alignleft',\n\t\t        'alignCenter': 'dashicons dashicons-editor-aligncenter',\n\t\t        'alignJustify': 'dashicons dashicons-editor-justify',\n\t\t        'alignLeft': 'dashicons dashicons-editor-alignleft',\n\t\t        'alignRight': 'dashicons dashicons-editor-alignright',\n\t\t        'indent': 'dashicons dashicons-editor-indent',\n\t\t        'outdent': 'dashicons dashicons-editor-outdent',\n\t\t        // 'arrowsAlt': 'dashicons fa-arrows-alt',\n\t\t        'bold': 'dashicons dashicons-editor-bold',\n\t\t        'caret': 'dashicons dashicons-arrow-down',\n\t\t        // 'circle': 'dashicons fa-circle',\n\t\t        'close': 'dashicons dashicons-dismiss',\n\t\t        'code': 'dashicons dashicons-editor-code',\n\t\t        'eraser': 'dashicons dashicons-editor-removeformatting',\n\t\t        // 'font': 'dashicons fa-font',\n\t\t        // 'frame': 'dashicons fa-frame',\n\t\t        'italic': 'dashicons dashicons-editor-italic',\n\t\t        'link': 'dashicons dashicons-admin-links',\n\t\t        'unlink': 'dashicons dashicons-editor-unlink',\n\t\t        'magic': 'dashicons dashicons-editor-paragraph',\n\t\t        // 'menuCheck': 'dashicons fa-check',\n\t\t        'minus': 'dashicons dashicons-minus',\n\t\t        'orderedlist': 'dashicons dashicons-editor-ol',\n\t\t        // 'pencil': 'dashicons fa-pencil',\n\t\t        // 'picture': 'dashicons fa-picture-o',\n\t\t        // 'question': 'dashicons fa-question',\n\t\t        'redo': 'dashicons dashicons-redo',\n\t\t        'square': 'dashicons fa-square',\n\t\t        // 'strikethrough': 'dashicons fa-strikethrough',\n\t\t        // 'subscript': 'dashicons fa-subscript',\n\t\t        // 'superscript': 'dashicons fa-superscript',\n\t\t        'table': 'dashicons dashicons-editor-table',\n\t\t        // 'textHeight': 'dashicons fa-text-height',\n\t\t        // 'trash': 'dashicons fa-trash',\n\t\t        'underline': 'dashicons dashicons-editor-underline',\n\t\t        'undo': 'dashicons dashicons-undo',\n\t\t        'unorderedlist': 'dashicons dashicons-editor-ul',\n\t\t        // 'video': 'dashicons fa-youtube-play'\n\t\t      }\n\n\t\t      this.currentContext = {};\n\t\t},\n\n\t\tinitSettingModel: function( settingModel ) {\n\t\t\tsettingModel.set( 'hide_merge_tags', true );\n\t\t},\n\n\t\tinitRTE: function( settingModel, dataModel, settingView ) {\n\t\t\t/*\n\t\t\t * Custom Button for links\n\t\t\t */\n\t\t\tvar that = this;\n\t\t\t// var linkButton = this.linkButton();\n\t\t\tvar linkButton = function( context ) {\n\t\t\t\treturn that.linkButton( context );\n\t\t\t}\n\t\t\tvar mediaButton = function( context ) {\n\t\t\t\treturn that.mediaButton( context );\n\t\t\t}\n\t\t\tvar mergeTags = this.mergeTags();\n\n\t\t\tvar toolbar = [\n\t\t\t\t[ 'paragraphStyle', ['style'] ],\n\t\t\t\t[ 'fontStyle', [ 'bold', 'italic', 'underline','clear' ] ],\n\t\t\t\t[ 'lists', [ 'ul', 'ol' ] ],\n\t\t\t    [ 'paragraph', [ 'paragraph' ] ],\n\t\t\t    [ 'customGroup', [ 'linkButton', 'unlink' ] ],\n\t\t\t    [ 'table', [ 'table' ] ],\n\t\t\t    [ 'actions', [ 'undo', 'redo' ] ],\n\t\t\t    [ 'tools', [ 'mediaButton', 'mergeTags', 'codeview' ] ]\n\t\t\t];\n\n\t\t\tjQuery( settingView.el ).find( 'div.setting' ).summernote( {\n\t\t\t\ttoolbar: toolbar,\n\t\t\t\tbuttons: {\n\t\t\t\t\tlinkButton: linkButton,\n\t\t\t\t\tmergeTags: mergeTags,\n\t\t\t\t\tmediaButton: mediaButton\n\t\t\t\t},\n\t\t\t\theight: 150,   //set editable area's height\n\t\t\t\tcodemirror: { // codemirror options\n\t\t\t\t    theme: 'monokai',\n\t\t\t\t    lineNumbers: true\n\t\t\t\t},\n\t\t\t\tprettifyHtml: true,\n\t\t\t\tcallbacks: {\n\t\t\t\t\tonBlur: function() {\n\t\t\t\t\t\tvar name = settingModel.get( 'name' );\n\t\t\t\t\t\tvar before = dataModel.get( name );\n\t\t\t\t\t\tvar after = jQuery( this ).summernote( 'code' );\n\n\t\t\t\t\t\tvar changes = {\n\t\t\t\t\t\t\tattr: name,\n\t\t\t\t\t\t\tbefore: before,\n\t\t\t\t\t\t\tafter: after\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar label = {\n\t\t\t\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\t\t\t\tchange: 'Changed ' + settingModel.get( 'label' ) + ' from ' + before + ' to ' + after\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'changeSetting', dataModel, changes, label );\n\n\t\t\t\t\t\tdataModel.set( settingModel.get( 'name' ), after );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\trenderSetting: function( settingModel, dataModel, settingView ) {\n\t\t\tthis.initRTE( settingModel, dataModel,settingView );\n\t\t},\n\n\t\tdestroySetting: function( settingModel, dataModel, settingView ) {\n\t\t\tthis.removeRTE( settingModel, dataModel, settingView );\n\t\t},\n\n\t\tremoveRTE: function( settingModel, dataModel, settingView ) {\n\t\t\tjQuery( settingView.el ).find( 'div.setting' ).summernote( 'destroy' );\n\t\t},\n\n\t\tdrawerOpened: function( settingModel, dataModel, settingView ) {\n\t\t\tthis.initRTE( settingModel, dataModel, settingView );\n\t\t},\n\n\t\tlinkButton: function( context ) {\n\t\t\tvar that = this;\n\t\t\tvar ui = jQuery.summernote.ui;\n\t\t\tvar linkButton = _.template( jQuery( '#nf-tmpl-rte-link-button' ).html(), {} );\n\t\t\tvar linkDropdown = _.template( jQuery( '#nf-tmpl-rte-link-dropdown' ).html(), {} );\n\t\t\treturn ui.buttonGroup([\n\t\t\t\tui.button({\n\t            className: 'dropdown-toggle',\n\t            contents: linkButton,\n\t            tooltip: 'Insert Link',\n\t            click: function( e ) {\n\t            \tthat.clickLinkButton( e, context );\n\t            },\n\t            data: {\n\t              toggle: 'dropdown'\n\t            }\n\t          }),\n\t\t\t\tui.dropdown([\n\t            ui.buttonGroup({\n\t              children: [\n\t                ui.button({\n\t                  contents: linkDropdown,\n\t                  tooltip: ''\n\t                }),\n\t              ]\n\t            })\n\t          ])\n\t\t\t]).render();\n\t\t},\n\n\t\tmergeTags: function( context ) {\n\t\t\tvar ui = jQuery.summernote.ui;\n\t\t\tvar mergeTagsButton = _.template( jQuery( '#nf-tmpl-rte-merge-tags-button' ).html(), {} );\n\t\t\treturn ui.button({\n\t            className: 'dropdown-toggle',\n\t            contents: mergeTagsButton,\n\t            tooltip: 'Merge Tags'\n\t          }).render();\n\t\t},\n\n\t\tmediaButton: function( context ) {\n\t\t\tvar that = this;\n\t\t\tvar ui = jQuery.summernote.ui;\n\t\t\tvar mediaButton = _.template( jQuery( '#nf-tmpl-rte-media-button' ).html(), {} );\n\t\t\treturn ui.button({\n\t            className: 'dropdown-toggle',\n\t            contents: mediaButton,\n\t            tooltip: 'Insert Media',\n\t            click: function( e ) {\n\t            \tthat.openMediaManager( e, context );\n\t            }\n\t          }).render();\n\t\t},\n\n\t\topenMediaManager: function( e, context ) {\n\t\t\tcontext.invoke( 'editor.saveRange' );\n\t\t\t// If the frame already exists, re-open it.\n\t\t\tif ( this.meta_image_frame ) {\n\t\t\t\tthis.meta_image_frame.open();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Sets up the media library frame\n\t\t\tthis.meta_image_frame = wp.media.frames.meta_image_frame = wp.media({\n\t\t\t\ttitle: 'Select a file',\n\t\t\t\tbutton: { text:  'insert' }\n\t\t\t});\n\n\t\t\tvar that = this;\n\n\t\t\t// Runs when an image is selected.\n\t\t\tthis.meta_image_frame.on('select', function(){\n\n\t\t\t\t// Grabs the attachment selection and creates a JSON representation of the model.\n\t\t\t\tvar media_attachment = that.meta_image_frame.state().get('selection').first().toJSON();\n\t\t\t\tthat.insertMedia( media_attachment, context );\n\t\t\t});\n\n\t\t\t// Opens the media library frame.\n\t\t\tthis.meta_image_frame.open();\n\t\t},\n\n\t\tclickLinkButton: function ( e, context ) {\n\t\t\tvar range = context.invoke( 'editor.createRange' );\n\t\t\tcontext.invoke( 'editor.saveRange' );\n\t\t\tvar text = range.toString()\n\t\t\tthis.currentContext = context;\n\n\t\t\tjQuery( e.target ).closest( '.note-customGroup > .note-btn-group' ).on ('hide.bs.dropdown', function ( e ) {\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\tjQuery( e.target ).closest( '.note-customGroup > .note-btn-group' ).on ('shown.bs.dropdown', function ( e ) {\n\t\t\t\tjQuery( e.target ).parent().parent().find( '.link-text' ).val( text );\n\t\t\t\tjQuery( e.target ).parent().parent().find( '.link-url' ).focus();\n\t\t\t});\n\t\t},\n\n\t\tclickExtra: function( e, settingModel, dataModel, settingView ) {\n\t\t\tvar textEl = jQuery( e.target ).parent().find( '.link-text' );\n\t\t\tvar urlEl = jQuery( e.target ).parent().find( '.link-url' );\n\t\t\tvar isNewWindowEl = jQuery( e.target ).parent().find( '.link-new-window' );\n\t\t\tthis.currentContext.invoke( 'editor.restoreRange' );\n\t\t\tif ( jQuery( e.target ).hasClass( 'insert-link' ) ) {\n\t\t\t\tvar text = textEl.val();\n\t\t\t\tvar url = urlEl.val();\n\t\t\t\tvar isNewWindow = ( isNewWindowEl.prop( 'checked' ) ) ? true: false;\n\t\t\t\tif ( 0 != text.length && 0 != url.length ) {\n\t\t\t\t\tthis.currentContext.invoke( 'editor.createLink', { text:text, url: url, isNewWindow: isNewWindow } );\n\t\t\t\t}\n\t\t\t}\n\t\t\ttextEl.val( '' );\n\t\t\turlEl.val( '' );\n\t\t\tisNewWindowEl.prop( 'checked', false );\n\t\t\tjQuery( e.target ).closest( 'div.note-btn-group.open' ).removeClass( 'open' );\n\t\t},\n\n\t\tinsertMedia: function( media, context ) {\n\t\t\tcontext.invoke( 'editor.restoreRange' );\n\t\t\tif ( 'image' == media.type ) {\n\t\t\t\tcontext.invoke( 'editor.insertImage', media.url );\n\t\t\t} else {\n\t\t\t\tcontext.invoke( 'editor.createLink', { text: media.filename, url: media.url } );\n\t\t\t}\n\n\t\t}\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Listens to our app channel for the app to start.\n *\n * If the form is a new form, then highlight the Add New submenu item.\n * Otherwise, append an Edit Form submenu for context.\n *\n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/changeMenu',[], function() {\n    var controller = Marionette.Object.extend({\n\n        editFormText: '',\n\n        initialize: function () {\n            this.editFormText = nfAdmin.editFormText || 'Edit Form';\n            this.listenTo(nfRadio.channel('app'), 'after:appStart', this.changeMenu);\n            this.listenTo( nfRadio.channel( 'app' ), 'response:updateDB', this.formPublish );\n        },\n\n        changeMenu: function () {\n            var form = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\n            if ( this.isNewForm( form.id ) ) {\n                this.highlightAddNew();\n            } else {\n                this.appendEditForm();\n            }\n        },\n\n        isNewForm: function( form_id ) {\n            return isNaN( form_id );\n        },\n\n        highlightAddNew: function() {\n            jQuery( '.wp-submenu li' ).removeClass( 'current' );\n            jQuery( 'a[href=\"admin.php?page=ninja-forms&form_id=new\"]' ).parent().addClass( 'current' );\n        },\n\n        appendEditForm: function() {\n            var html = '<li class=\"current\"><a href=\"#\">' + this.editFormText + '</a></li>';\n            if ( jQuery( 'li a:contains(\"' + this.editFormText + '\")' ).length == 0 ) {\n                jQuery( '.wp-submenu li' ).removeClass( 'current' );\n                jQuery( 'a[href=\"admin.php?page=ninja-forms&form_id=new\"]' ).parent().after( html );\n            }\n        },\n\n        formPublish: function( response ) {\n            if ( 'publish' !== response.action ) return false;\n            this.changeMenu();\n        }\n    });\n\n    return controller;\n});\n","/**\n * Model for our field type\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/typeModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our field type models. \n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/typeCollection',['models/app/typeModel'], function( typeModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: typeModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Model that represents our type settings groups.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/settingGroupModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tdisplay: false\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection of our type settings groups.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/settingGroupCollection',['models/app/settingGroupModel'], function( settingGroupModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: settingGroupModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Model that represents our field type section on the add new field drawer.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/typeSectionModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tclasses: ''\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our field models.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/typeSectionCollection',['models/fields/typeSectionModel'], function( typeSectionModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: typeSectionModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Creates and stores a collection of field types. This includes all of the settings shown when editing a field.\n *\n * 1) Create our settings sections config\n * 2) Loops over our preloaded data and adds that to our field type collection\n *\n * Also responds to requests for data about field types\n *\n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/types',[\n\t'models/app/typeCollection',\n\t'models/app/settingCollection',\n\t'models/app/settingGroupCollection',\n\t'models/fields/typeSectionCollection'\n\t], function(\n\tfieldTypeCollection,\n\tsettingCollection,\n\tfieldTypeSettingGroupCollection,\n\tfieldTypeSectionCollection\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our field type collection\n\t\t\tthis.collection = new fieldTypeCollection();\n\t\t\t// Config for our settings sections\n\t\t\tthis.fieldTypeSections = new fieldTypeSectionCollection( fieldTypeSections );\n\n\t\t\t// Since we want to access the \"this\" context later, we assign it to that so it isn't overwritten\n\t\t\tvar that = this;\n\n\t\t\t// Loop through the field type data variable and add it to the field type collection array\n\t\t\t_.each( fieldTypeData, function ( type ) {\n\t\t\t\tvar settingGroups = new fieldTypeSettingGroupCollection();\n\t\t\t\t// Loop through the settings groups within this field type and create an object to add to the groups collection.\n\t\t\t\t_.each( type.settingGroups, function( group ) {\n\t\t\t\t\tvar groupTmp = {\n\t\t\t\t\t\tlabel: group.label,\n\t\t\t\t\t\tdisplay: group.display,\n\t\t\t\t\t\tsettings: new settingCollection( group.settings ),\n\t\t\t\t\t}\n\t\t\t\t\t// Add the tmp object to our setting groups collection\n\t\t\t\t\tsettingGroups.add( groupTmp );\n\t\t\t\t} );\n\n\t\t\t\t// Add our field type to the appropriate drawer section.\n\t\t\t\tif ( 'undefined' != typeof that.fieldTypeSections.get( type.section ) ) {\n\t\t\t\t\tthat.fieldTypeSections.get( type.section ).get( 'fieldTypes' ).push( type.id );\n\t\t\t\t}\n\n\t\t\t\t// Build an object for this type that we can add to our field type collection\n\t\t\t\tvar fieldType = {\n\t\t\t\t\tid: type.id,\n\t\t\t\t\tnicename: type.nicename,\n\t\t\t\t\talias: type.alias,\n\t\t\t\t\tparentType: type.parentType,\n\t\t\t\t\tsettingGroups: settingGroups,\n\t\t\t\t\tsettingDefaults: type.settingDefaults\n\t\t\t\t}\n\t\t\t\t// Add tmp object to our field type collection\n\t\t\t\tthat.collection.add( fieldType );\n\t\t\t} );\n\n\t\t\t// Respond to requests to get field type, collection, settings, and sections\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:type', this.getFieldType, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:typeCollection', this.getTypeCollection, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:typeSections', this.getTypeSections, this );\n\t\t\t// Listen to clicks on field types\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'click:fieldType', this.addStagedField );\n\t\t},\n\n\t\t/**\n\t\t * Return a field type by id\n\t\t *\n\t\t * @since  3.0\n\t\t * @param  string \t\t\tid \tfield type\n\t\t * @return backbone.model    \tfield type model\n\t\t */\n\t\tgetFieldType: function( id ) {\n        \treturn this.collection.get( id );\n        },\n\n        /**\n         * Return the entire field type collection\n         *\n         * @since  3.0\n         * @param  string \t\t\t\tid \t[description]\n         * @return backbone.collection    \tfield type collection\n         */\n\t\tgetTypeCollection: function( id ) {\n        \treturn this.collection;\n        },\n\n        /**\n         * Add a field type to our staging area when the field type button is clicked.\n         *\n         * @since 3.0\n         * @param Object e event\n         * @return void\n         */\n        addStagedField: function( e ) {\n        \tvar type = jQuery( e.target ).data( 'id' );\n        \tnfRadio.channel( 'fields' ).request( 'add:stagedField', type );\n        },\n\n        /**\n         * Return our field type settings sections\n         *\n         * @since  3.0\n         * @return backbone.collection field type settings sections\n         */\n        getTypeSections: function() {\n            return this.fieldTypeSections;\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Handles the logic for our field type draggables.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldTypeDrag',[], function( ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our field type draggables and run the appropriate function.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:type', this.startDrag );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:type', this.stopDrag );\n\t\t\t/*\n\t\t\t * Respond to requests for our helper clone.\n\t\t\t * This is used by other parts of the application to modify what the user is dragging in real-time.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'drawer-addField' ).reply( 'get:typeHelperClone', this.getCurrentDraggableHelperClone, this );\n\t\t},\n\n\t\t/**\n\t\t * When we start dragging:\n\t\t * get our drawer element\n\t\t * set its overflow property to visible !important -> forces the type drag element to be on at the top of the z-index.\n\t\t * get our main element\n\t\t * est its overflow propery to visible !important -> forces the type drag element to be on top of the z-index.\n\t\t * set our dragging helper clone\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  object context \tThis function is going to be called from a draggable. Context is the \"this\" reference to the draggable.\n\t\t * @param  object ui      \tObject sent by jQuery UI draggable.\n\t\t * @return void\n\t\t */\n\t\tstartDrag: function( context, ui ) {\n\t\t\tthis.drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tthis.mainEl = nfRadio.channel( 'app' ).request( 'get:mainEl' );\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\n\t\t\tthis.draggableHelperClone = jQuery( ui.helper ).clone();\n\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging, reset our overflow property to hidden !important.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  object context \tThis function is going to be called from a draggable. Context is the \"this\" reference to the draggable.\n\t\t * @param  object ui      \tObject sent by jQuery UI draggable.\n\t\t * @return {[type]}         [description]\n\t\t */\n\t\tstopDrag: function( context, ui ) {\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t},\n\n\t\tgetCurrentDraggableHelperClone: function() {\n\t\t\treturn this.draggableHelperClone;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles the dragging of our field staging area\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/stagingDrag',[], function( ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for the start and stop of our field staging dragging\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:fieldStaging', this.startDrag );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:fieldStaging', this.stopDrag );\n\t\t},\n\n\t\t/**\n\t\t * When the user starts dragging the staging area, we have to:\n\t\t * set the overflow property of the drawer to visible !important. If we don't, the button goes underneath the main section.\n\t\t * set the overflow proerty of the main to visible !important. If we don't, the dragged element goes underneath the drawer.\n\t\t * replace our helper with the stacked \"x fields\" template.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t context jQuery UI Draggable\n\t\t * @param  Object\t ui      jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstartDrag: function( context, ui ) {\n\t\t\tthis.drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tthis.mainEl = nfRadio.channel( 'app' ).request( 'get:mainEl' );\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\n\t\t\tvar stagedFields = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\t\t\tvar html = _.template( jQuery( '#nf-tmpl-staged-fields-drag' ).html(), { num: stagedFields.models.length } );\n\t\t\tjQuery( ui.helper ).html( html );\n\t\t\tjQuery( ui.helper ).prop( 'id', 'nf-staged-fields-drag' );\n\t\t\tjQuery( ui.item ).css( 'opacity', '0.7' );\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging the staging area, we have to set the overflow property to hidden !important\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t context jQuery UI Draggable\n\t\t * @param  Object\t ui      jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstopDrag: function( context, ui ) {\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles our saved fields type section.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/savedFieldsSection',['models/fields/typeSectionCollection'], function( fieldTypeSectionCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our collection for saved fields\n\t\t\tthis.collection = new fieldTypeSectionCollection( [\n\t\t\t\t{ \n\t\t\t\t\tid: 'saved',\n\t\t\t\t\tnicename: 'Saved Fields',\n\t\t\t\t\tclasses: 'nf-saved',\n\t\t\t\t\tfieldTypes: []\n\t\t\t\t}\n\t\t\t] );\n\t\t\t// Respond to requests for our saved fields collection.\n            nfRadio.channel( 'drawer' ).reply( 'get:savedFields', this.getSavedFields, this );\n\t\t},\n\n        getSavedFields: function() {\n            return this.collection;\n        }\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles most things related to our staging area:\n * 1) Creates a collection\n * 2) Listens for requests to CRUD items from the collection\n * 3) Adds our staged fields to the fields sortable when the drawer is closed\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/staging',['models/fields/stagingCollection'], function( stagingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our staged fields collection\n\t\t\tthis.collection = new stagingCollection();\n\t\t\t// Respond to requests related to our staging area.\n\t\t    nfRadio.channel( 'fields' ).reply( 'add:stagedField', this.addStagedField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'remove:stagedField', this.removeStagedField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:staging', this.getStagingCollection, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'sort:staging', this.sortStagedFields, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'clear:staging', this.clearStagedFields, this );\n\t\t\t// Listen to our remove staged field click event.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'click:removeStagedField', this.removeStagedField );\n\t\t\t// Listen to our event that fires just before a drawer is closed.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'before:closeDrawer', this.beforeCloseDrawer );\n\t\t},\n\n\t\tgetStagingCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\t/**\n\t\t * Add a field to our staging area\n\t\t * \n\t\t * @since 3.0\n\t\t * @param string type Type of field we're adding\n\t\t * @return tmpID\n\t\t */\n\t\taddStagedField: function( type ) {\n\t\t\t// Get our type model from the string.\n\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\t\t\t// Our tmp ID is a string with the time appended to make it unique.\n\t\t\tvar tmpID = 'nf-staged-field-' + jQuery.now();\n\t\t\t// Object that will be added to our staging collection.\n\t\t\tvar data = {\n\t\t\t\tid: tmpID,\n\t\t\t\t// i.e. firstname, textbox, etc.\n\t\t\t\tslug: fieldType.get( 'id' ),\n\t\t\t\t// i.e. First Name, Textbox, etc.\n\t\t\t\tnicename: fieldType.get( 'nicename' )\n\t\t\t}\n\t\t\t// \n\t\t\tvar model = this.collection.add( data );\n\n\t\t\tnfRadio.channel( 'fields').trigger( 'add:stagedField', model );\n\n\t\t\treturn tmpID;\n\t\t},\n\n\t\t/**\n\t\t * Remove a field from staging\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \t\t\te     \tEvent\n\t\t * @param  Backbone.model \tmodel \tstaged field model to remove\n\t\t * @return void\n\t\t */\n\t\tremoveStagedField: function( e, model ) {\n\t\t\tthis.collection.remove( model );\n\t\t},\n\n\t\t/**\n\t\t * Adds our staged fields to the main fields sortable before the drawer is closed.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tbeforeCloseDrawer: function() {\n\t\t\tif ( 0 != this.collection.models.length ) { // Make sure that we have models\n\t\t\t\t// Get our field collection.\n\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\n\t\t\t\tvar fields = [];\n\t\t\t\t// Loop through our staging collection\n\t\t\t\t_.each( this.collection.models, function( model ) {\n\t\t\t\t\t// Get a tmp ID for our new field.\n\t\t\t\t\tvar tmpID = nfRadio.channel( 'fields' ).request( 'get:tmpID' );\n\t\t\t\t\t// Create an object that can be added as a model.\n\t\t\t\t\tvar tmpField = { id: tmpID, label: model.get( 'nicename' ), type: model.get( 'slug' ) };\n\t\t\t\t\t// Add our new field.\n\t\t\t\t\tvar newModel = nfRadio.channel( 'fields' ).request( 'add',  tmpField, false );\n\t\t\t\t\t// Add our field addition to our change log.\n\t\t\t\t\tvar label = {\n\t\t\t\t\t\tobject: 'Field',\n\t\t\t\t\t\tlabel: newModel.get( 'label' ),\n\t\t\t\t\t\tchange: 'Added',\n\t\t\t\t\t\tdashicon: 'plus-alt'\n\t\t\t\t\t};\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\tcollection: fieldCollection\n\t\t\t\t\t}\n\t\t\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addObject', newModel, null, label, data );\n\t\t\t\n\t\t\t\t} );\n\t\t\t\t// Trigger a reset on our field collection so that our view re-renders\n\t\t\t\tfieldCollection.trigger( 'reset', fieldCollection );\n\t\t\t\t// Empty the staging collection\n\t\t\t\tthis.collection.reset();\n\t\t\t}\n\t\t\t// Sort our fields.\n\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields', null, null, false );\n\t\t},\n\n\t\t/**\n\t\t * Sort our staging area by the 'order' attribute.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tsortStagedFields: function() {\n\t\t\t// Get our staged fields sortable.\n\t\t\tvar sortableEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\t// Get the current order using jQuery sortable. Will be an array of IDs: [tmp-blah, tmp-blah]\n\t\t\tvar order = jQuery( sortableEl ).sortable( 'toArray' );\n\t\t\t// Loop through our models\n\t\t\t_.each( this.collection.models, function( field ) {\n\t\t\t\t// Search our order array for this field.\n\t\t\t\tvar search = field.get( 'id' );\n\t\t\t\tvar pos = order.indexOf( search );\n\t\t\t\t// Update our staged field model with the new order.\n\t\t\t\tfield.set( 'order', pos );\n\t\t\t} );\n\t\t\t// Sort our staging collection.\n\t\t\tthis.collection.sort();\n\t\t},\n\n\t\tclearStagedFields: function() {\n\t\t\tthis.collection.reset();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles actions related to our staged fields sortable.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/stagingSortable',['models/fields/stagingCollection'], function( stagingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our field type draggables\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:type', this.addActiveClass );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:type', this.removeActiveClass );\n\t\t\t// Listen to our sortable events\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'receive:stagedFields', this.receiveStagedFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'over:stagedFields', this.overStagedFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'out:stagedFields', this.outStagedFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'start:stagedFields', this.startStagedFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stop:stagedFields', this.stopStagedFields );\n\t\t},\n\n\t\t/**\n\t\t * Change our dropped field type helper so that it matches the other items in our sortable.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI item\n\t\t * @return void\n\t\t */\n\t\treceiveStagedFields: function( ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t\tvar type = jQuery( ui.item ).data( 'id' );\n\t\t\t\tvar tmpID = nfRadio.channel( 'fields' ).request( 'add:stagedField', type );\n\t\t\t\tjQuery( ui.helper ).prop( 'id', tmpID );\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t\tjQuery( ui.helper ).remove();\n\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'drop:fieldType', type );\t\t\t\t\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Add an active class to our sortable when a field type item is dragged\n\t\t * \n\t\t * @since 3.0\n\t\t */\n\t\taddActiveClass: function() {\n\t\t\tvar stagedFieldsEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\tjQuery( stagedFieldsEl ).addClass( 'nf-droppable-active' );\n\t\t},\n\n\t\t/**\n\t\t * Remove the active class from our sortable when the field type item is dropped.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tremoveActiveClass: function() {\n\t\t\tvar stagedFieldsEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\tjQuery( stagedFieldsEl ).removeClass( 'nf-droppable-active' );\n\t\t},\n\n\t\t/**\n\t\t * When the field type item is dragged over our sortable, we change the helper to match the sortable items.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te  event\n\t\t * @param  Object \tui jQuery UI Element\n\t\t * @return void\n\t\t */\n\t\toverStagedFields: function( e, ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t\tvar type = jQuery( ui.item ).data( 'id' );\n\t\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\t\t\t\tvar nicename = fieldType.get( 'nicename' );\n\t\t\t\tthis.currentHelper = ui.helper \n\t\t\t\tjQuery( ui.helper ).html( nicename + '<span class=\"dashicons dashicons-dismiss\"></span>' );\n\t\t\t\tjQuery( ui.helper ).removeClass( 'nf-one-third' ).addClass( 'nf-item-dock' ).css( { 'opacity': '0.8', 'width': '', 'height': '' } );\n\t\t\t\tvar sortableEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).addClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t},\n\n\t\t/**\n\t\t * When a field type item is moved away from our sortable, we change the helper to its previous appearance\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\toutStagedFields: function( ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t\tvar helperClone = nfRadio.channel( 'drawer-addField' ).request( 'get:typeHelperClone' );\t\n\t\t\t\tjQuery( this.currentHelper ).html( jQuery( helperClone ).html() );\n\t\t\t\tjQuery( this.currentHelper ).removeClass( 'nf-item-dock' ).addClass( 'nf-one-third' );\n\t\t\t\tvar sortableEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).removeClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t},\n\n\t\t/**\n\t\t * When a user starts to drag a sortable item, we need to set a few properties on the item and the helper.\n\t\t * These keep the original item in place while dragging and changes the opacity of the helper.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t ui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstartStagedFields: function( ui ) {\n\t\t\tjQuery( ui.item ).show();\n\t\t\tjQuery( ui.item ).css( { 'display': 'inline', 'opacity': '0.7' } );\n\t\t\tjQuery( ui.helper ).css( 'opacity', '0.5' );\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging a sortable item, remove our opacity setting and remove the helper item.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t ui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstopStagedFields: function( ui ) {\n\t\t\tjQuery( ui.item ).css( 'opacity', '' );\n\t\t\tjQuery( ui.helper ).remove();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Filters our field type collection.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/filterTypes',['models/fields/typeSectionCollection'], function( fieldTypeSectionCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our change filter event.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'change:filter', this.filterFieldTypes );\n\t\t},\n\n\t\t/**\n\t\t * Filter our field types in the add new field drawer\n\t\t * \n\t\t * Takes a search string and finds any field types that match either the name or alias.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string\t search \tstring being searched for\n\t\t * @param  object \t e      \tKeyup event\n\t\t * @return void\n\t\t */\n\t\tfilterFieldTypes: function( search, e ) {\n\t\t\t// Make sure that we aren't dealing with an empty string.\n\t\t\tif ( '' != jQuery.trim( search ) ) {\n        \t\tvar filtered = [];\n        \t\t/**\n        \t\t * Call the function that actually filters our collection,\n        \t\t * and then loop through our collection, adding each model to our filtered array.\n        \t\t */\n        \t\t_.each( this.filterCollection( search ), function( model ) {\n        \t\t\tfiltered.push( model.get( 'id' ) );\n        \t\t} );\n\n        \t\t// Create a new Field Type Section collection with the filtered array.\n        \t\tvar filteredSectionCollection = new fieldTypeSectionCollection( [\n\t\t\t\t{ \n\t\t\t\t\tid: 'filtered',\n\t\t\t\t\tnicename: 'Filtered Fields',\n\t\t\t\t\tfieldTypes: filtered\n\t\t\t\t}\n\t\t\t\t] );\n\n        \t\t// Request that our field types filter be applied, passing the collection we created above.\n        \t\tnfRadio.channel( 'drawer' ).trigger( 'filter:fieldTypes', filteredSectionCollection );\n        \t\t// If we've pressed the 'enter' key, add the field to staging and clear the filter.\n        \t\tif ( e.addObject ) {\n        \t\t\tif ( 0 < filtered.length ) {\n        \t\t\t\tnfRadio.channel( 'fields' ).request( 'add:stagedField', filtered[0] );\n        \t\t\t\tnfRadio.channel( 'drawer' ).request( 'clear:filter' );\n        \t\t\t}\n        \t\t}\n        \t} else {\n        \t\t// Clear our filter if the search text is empty.\n        \t\tnfRadio.channel( 'drawer' ).trigger( 'clear:filter' );\n        \t}\n        },\n\n        /**\n         * Search our field type collection for the search string.\n         * \n         * @since  3.0\n         * @param  string\t search \tstring being searched for\n         * @return backbone.collection\n         */\n        filterCollection: function( search ) {\n        \tsearch = search.toLowerCase();\n        \t// Get our list of field types\n        \tvar collection = nfRadio.channel( 'fields' ).request( 'get:typeCollection' );\n        \t/*\n        \t * Backbone collections have a 'filter' method that loops through every model,\n        \t * waiting for you to return true or false. If you return true, the model is kept.\n        \t * If you return false, it's removed from the filtered result.\n        \t */\n\t\t\tvar filtered = collection.filter( function( model ) {\n\t\t\t\tvar found = false;\n\t\t\t\t\n\t\t\t\t// If we match either the ID or nicename, return true.\n\t\t\t\tif ( model.get( 'id' ).toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t} else if ( model.get( 'nicename' ).toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * TODO: Hashtag searching. Doesn't really do anything atm.\n\t\t\t\t */\n\t\t\t\tif ( model.get( 'tags' ) && 0 == search.indexOf( '#' ) ) {\n\t\t\t\t\t_.each( model.get( 'tags' ), function( tag ) {\n\t\t\t\t\t\tif ( search.replace( '#', '' ).length > 1 ) {\n\t\t\t\t\t\t\tif ( tag.toLowerCase().indexOf( search.replace( '#', '' ) ) != -1 ) {\n\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// If we match any of the aliases, return true.\n\t\t\t\tif ( model.get( 'alias' ) ) {\n\t\t\t\t\t_.each( model.get( 'alias' ), function( alias ) {\n\t\t\t\t\t\tif ( alias.toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\treturn found;\n\t\t\t} );\n\t\t\t// Return our filtered collection.\n\t\t\treturn filtered;\n        }\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles all the actions/functions related to our main field sortable.\n * All of the actual logic for our sortable is held here; the view just calls it using nfRadio.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/sortable',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// When our field type buttons are dragged, we need to add or remove the active (blue) class.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:type', this.addActiveClass );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:type', this.removeActiveClass );\n\t\t\t// When our field staging is dragged, we need to add or remove the active (blue) class.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:fieldStaging', this.addActiveClass );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:fieldStaging', this.removeActiveClass );\n\t\t\t/*\n\t\t\t * Handles all the events fired by our sortable:\n\t\t\t * receive - dropped from type button or staging\n\t\t\t * over - dragging within or over the sortable\n\t\t\t * out - leaving the sortable\n\t\t\t * stop - stopped sorting/dragging\n\t\t\t * start - started sorting/dragging\n\t\t\t * update - stopped sorting/dragging and order has changed\n\t\t\t */\n\t\t\tnfRadio.channel( 'app' ).reply( 'receive:fieldsSortable', this.receiveFieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'over:fieldsSortable', this.overfieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'out:fieldsSortable', this.outFieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'stop:fieldsSortable', this.stopFieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'start:fieldsSortable', this.startFieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:fieldsSortable', this.updateFieldsSortable, this );\n\t\t},\n\n\t\t/**\n\t\t * Add the active class to our sortable so that its border is blue.\n\t\t * \n\t\t * @since 3.0\n\t\t * @return void\n\t\t */\n\t\taddActiveClass: function() {\n\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\tjQuery( sortableEl ).addClass( 'nf-droppable-active' );\t\n\t\t},\n\n\t\t/**\n\t\t * Remove the active class from our sortable\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tremoveActiveClass: function() {\n\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\tjQuery( sortableEl ).removeClass( 'nf-droppable-active' );\n\t\t},\n\n\t\t/**\n\t\t * Fires when we drop a field type button or staging onto our sortable\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\treceiveFieldsSortable: function( ui ) {\n\t\t\t/*\n\t\t\t * We have to do different things if we're dealing with a field type button or staging area.\n\t\t\t */ \n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) { // Field Type Button\n\t\t\t\t// Get our type string\n\t\t\t\tvar type = jQuery( ui.item ).data( 'id' );\n\t\t\t\t// Add a field (returns the tmp ID )\n\t\t\t\tvar tmpID = this.addField( type, false );\n\t\t\t\t/*\n\t\t\t\t * Update our helper id to the tmpID.\n\t\t\t\t * We do this so that when we sort, we have the proper ID.\n\t\t\t\t */ \n\t\t\t\tjQuery( ui.helper ).prop( 'id', tmpID );\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields' );\n\t\t\t\t// Remove the helper. Gets rid of a weird type artifact.\n\t\t\t\tjQuery( ui.helper ).remove();\n\t\t\t\t// Trigger a drop field type event.\n\t\t\t\tnfRadio.channel( 'fields' ).trigger( 'drop:fieldType', type, tmpID );\n\t\t\t} else if ( jQuery( ui.item ).hasClass( 'nf-stage' ) ) { // Staging\n\t\t\t\t// Later, we want to reference 'this' context, so we define it here.\n\t\t\t\tvar that = this;\n\t\t\t\t// Make sure that our staged fields are sorted properly.\t\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t\t// Grab our staged fields.\n\t\t\t\tvar stagedFields = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\t\t\t\t// Get our current field order.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\t\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) { // Sortable isn't empty\n\t\t\t\t\t// If we're dealing with a sortable that isn't empty, get the order.\n\t\t\t\t\tvar order = jQuery( sortableEl ).sortable( 'toArray' );\n\t\t\t\t} else { // Sortable is empty\n\t\t\t\t\t// Sortable is empty, all we care about is our staged field draggable.\n\t\t\t\t\tvar order = ['nf-staged-fields-drag'];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Get the index of our droped element.\n\t\t\t\tvar insertedAt = order.indexOf( 'nf-staged-fields-drag' );\n\n\t\t\t\t// Loop through each staged fields model and insert a field.\n\t\t\t\tvar tmpIDs = [];\n\t\t\t\t_.each( stagedFields.models, function( field, index ) {\n\t\t\t\t\t// Add our field.\n\t\t\t\t\tvar tmpID = that.addField( field.get( 'slug' ) );\n\t\t\t\t\t// Add this newly created field to our order array.\n\t\t\t\t\torder.splice( insertedAt + index, 0, tmpID );\n\t\t\t\t} );\n\n\t\t\t\t// Remove our dropped element from our order array.\n\t\t\t\tvar insertedAt = order.indexOf( 'nf-staged-fields-drag' );\n\t\t\t\torder.splice( insertedAt, 1 );\n\t\t\t\t// Sort our fields\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields', order );\n\t\t\t\t// Clear our staging\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'clear:staging' );\n\t\t\t\t// Remove our helper. Fixes a weird artifact.\n\t\t\t\tjQuery( ui.helper ).remove();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Add a field.\n\t\t * Builds the object necessary to add a field to the field model collection.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string \ttype   field type\n\t\t * @param  boolean \tsilent add silently\n\t\t * @return string \ttmpID\n\t\t */\n\t\taddField: function( type, silent ) {\n\t\t\t// Default to false\n\t\t\tsilent = silent || false;\n\t\t\t// Get our field type model\n\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\t\t\t// Get our tmp ID\n\t\t\tvar tmpID = nfRadio.channel( 'fields' ).request( 'get:tmpID' );\n\t\t\t// Add our field\n\t\t\tvar newModel = nfRadio.channel( 'fields' ).request( 'add',  { id: tmpID, label: fieldType.get( 'nicename' ), type: fieldType.get( 'id' ) }, silent );\n\t\t\t// Add our field addition to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: 'Field',\n\t\t\t\tlabel: newModel.get( 'label' ),\n\t\t\t\tchange: 'Added',\n\t\t\t\tdashicon: 'plus-alt'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: nfRadio.channel( 'fields' ).request( 'get:collection' )\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addObject', newModel, null, label, data );\n\t\t\t\n\t\t\treturn tmpID;\n\t\t},\n\n\t\t/**\n\t\t * When the user drags a field type or staging over our sortable, we need to modify the helper.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\toverfieldsSortable: function( ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) { // Field Type\n\t\t\t\t// String type\n\t\t\t\tvar type = jQuery( ui.helper ).data( 'id' );\n\t\t\t\t// Get our field type model.\n\t\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\t\t\t\t// Get our field type nicename.\n\t\t\t\tvar label = fieldType.get( 'nicename' );\n\t\t\t\t// Get our sortable element.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\t// Get our fieldwidth.\n\t\t\t\tvar fieldWidth = jQuery( sortableEl ).width();\n\t\t\t\t// Set our currentHelper to an object var so that we can access it later.\n\t\t\t\tthis.currentHelper = ui.helper;\n\t\t\t\t// Update our helper label.\n\t\t\t\tjQuery( ui.helper ).html( label );\n\t\t\t\t// Remove the field type draggable classes and add sortable classes.\n\t\t\t\tjQuery( ui.helper ).removeClass( 'nf-one-third' ).addClass( 'nf-field-wrap' ).css( { 'width': fieldWidth, 'height': '50px' } );\t\t\t\t\t\t\n\t\t\t\t// Add our hover class if our sortable has been initialized.\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).addClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t} else if ( jQuery( ui.item ).hasClass( 'nf-stage' ) ) { // Staging\n\t\t\t\t// Get our sortable, and if it's initialized add our hover class.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).addClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When the user moves a draggable outside of the sortable, we need to change the helper.\n\t\t * This returns the item to its pre-over state.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\toutFieldsSortable: function( ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) { // Field Type\n\t\t\t\t/*\n\t\t\t\t * Get our helper clone.\n\t\t\t\t * This will let us access the previous label and classes of our helper.\n\t\t\t\t */ \n\t\t\t\tvar helperClone = nfRadio.channel( 'drawer-addField' ).request( 'get:typeHelperClone' );\n\t\t\t\t// Set our helper label, remove our sortable class, and add the type class back to the type draggable.\n\t\t\t\tjQuery( this.currentHelper ).html( jQuery( helperClone ).html() );\n\t\t\t\tjQuery( this.currentHelper ).removeClass( 'nf-field-wrap' ).addClass( 'nf-one-third' ).css( { 'width': '', 'height': '' } );\n\t\t\t\t// Get our sortable and if it has been intialized, remove the droppable hover class.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).removeClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t} else if ( jQuery( ui.item ).hasClass( 'nf-stage' ) ) { // Staging\n\t\t\t\t// If we've initialized our sortable, remove the droppable hover class.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).removeClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging in the sortable:\n\t\t * remove our opacity setting\n\t\t * remove our ui helper\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstopFieldsSortable: function( ui ) {\n\t\t\tjQuery( ui.item ).css( 'opacity', '' )\n\t\t\tjQuery( ui.helper ).remove();\n\t\t},\n\n\t\t/**\n\t\t * When we start dragging in the sortable:\n\t\t * add an opacity setting of 0.5\n\t\t * show our item (jQuery hides the original item by default)\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstartFieldsSortable: function( ui ) {\n\t\t\t// If we aren't dragging an item in from types or staging, update our change log.\n\t\t\tif( ! jQuery( ui.item ).hasClass( 'nf-field-type-button' ) && ! jQuery( ui.item ).hasClass( 'nf-stage' ) ) { \n\t\t\t\tjQuery( ui.item ).css( 'opacity', '0.5' ).show();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Sort our fields when we change the order.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tupdateFieldsSortable: function( ui ) {\n\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields' );\n\n\t\t\t// If we aren't dragging an item in from types or staging, update our change log.\n\t\t\tif( ! jQuery( ui.item ).hasClass( 'nf-field-type-button' ) && ! jQuery( ui.item ).hasClass( 'nf-stage' ) ) { \n\n\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\tvar dragFieldID = jQuery( ui.item ).prop( 'id' ).replace( 'field-', '' );\n\t\t\t\tvar dragModel = fieldCollection.get( dragFieldID );\n\n\t\t\t\t// Add our change event to the change tracker.\n\t\t\t\tvar data = { fields: [] };\n\t\t\t\t_.each( fieldCollection.models, function( field ) {\n\t\t\t\t\tvar oldPos = field._previousAttributes.order;\n\t\t\t\t\tvar newPos = field.get( 'order' );\n\t\t\t\t\t\n\t\t\t\t\tdata.fields.push( {\n\t\t\t\t\t\tmodel: field,\n\t\t\t\t\t\tattr: 'order',\n\t\t\t\t\t\tbefore: oldPos,\n\t\t\t\t\t\tafter: newPos\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t\tvar label = {\n\t\t\t\t\tobject: 'Field',\n\t\t\t\t\tlabel: dragModel.get( 'label' ),\n\t\t\t\t\tchange: 'Re-ordered from ' + dragModel._previousAttributes.order + ' to ' + dragModel.get( 'order' ),\n\t\t\t\t\tdashicon: 'sort'\n\t\t\t\t};\n\n\t\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'sortFields', dragModel, null, label, data );\n\t\t\t}\n\n\t\t\t\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model that represents our form fields.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/fieldModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tobjectType: 'Field',\n\t\t\tobjectDomain: 'fields',\n\t\t\teditActive: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Listen for model attribute changes\n\t\t\tthis.on( 'change', this.changeSetting, this );\n\t\t\t\n\t\t\t// Get our parent field type.\n\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', this.get( 'type' ) );\n\t\t\tvar parentType = fieldType.get( 'parentType' );\n\n\t\t\t// Loop through our field type \"settingDefaults\" and add any default settings.\n\t\t\tvar that = this;\n\t\t\t_.each( fieldType.get( 'settingDefaults' ), function( val, key ) {\n\t\t\t\tif ( 'undefined' == typeof that.get( key ) ) {\n\t\t\t\t\tthat.set( key, val, { silent: true } );\n\t\t\t\t}\n\t\t\t} );\n\t\t\t\n\t\t\t/*\n\t\t\t * Trigger an init event on three channels:\n\t\t\t * \n\t\t\t * fields\n\t\t\t * fields-parentType\n\t\t\t * field-type\n\t\t\t *\n\t\t\t * This lets specific field types modify model attributes before anything uses them.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'fields' ).trigger( 'init:fieldModel', this );\n\t\t\tnfRadio.channel( 'fields-' + parentType ).trigger( 'init:fieldModel', this );\n\t\t\tnfRadio.channel( 'fields-' + this.get( 'type' ) ).trigger( 'init:fieldModel', this );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'update:fieldKey', this.updateFieldKey );\n\t\t},\n\n\t\t/**\n\t\t * Fires an event on the fieldSetting-{name} channel saying we've updated a setting.\n\t\t * When we change the model attributes, fire an event saying we've changed something.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tchangeSetting: function( model ) {\n\t\t\tnfRadio.channel( 'fieldSetting-' + _.keys( model.changedAttributes() )[0] ).trigger( 'update:setting', this ) ;\n\t\t\tnfRadio.channel( 'app' ).trigger( 'update:setting', this );\n\t\t},\n\n\t\tupdateFieldKey: function( keyModel, settingModel ) {\n\t\t\tnfRadio.channel( 'app' ).request( 'replace:fieldKey', this, keyModel, settingModel );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our field models. \n * This is the actual field data created by the user.\n *\n * We listen to the add and remove events so that we can push the new id to either the new fields or removed fields property.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/fieldCollection',['models/fields/fieldModel'], function( fieldModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: fieldModel,\n\t\tcomparator: 'order',\n\t\ttmpNum: 1,\n\n\t\tinitialize: function() {\n\t\t\tthis.on( 'add', this.addField, this );\n\t\t\tthis.on( 'remove', this.removeField, this );\n\t\t\tthis.newIDs = [];\n\t\t},\n\n\t\t/**\n\t\t * When we add a field, push the id onto our new fields property.\n\t\t * This lets us tell the server that this is a new field to be added rather than a field to be updated.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param void\n\t\t */\n\t\taddField: function( model ) {\n\t\t\tthis.newIDs.push( model.get( 'id' ) );\n\t\t},\n\n\t\t/**\n\t\t * When we remove a field, push the id onto our removed fields property.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param void\n\t\t */\n\t\tremoveField: function( model ) {\n\t\t\tthis.removedIDs[ model.get( 'id' ) ] = model.get( 'id' );\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Handles interactions with our field collection.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/data',['models/fields/fieldCollection', 'models/fields/fieldModel'], function( fieldCollection, fieldModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Load our field collection from our localized form data\n\t\t\tthis.collection = new fieldCollection( preloadedFormData.fields );\n\t\t\t// Set our removedIDs to an empty object. This will be populated when a field is removed so that we can add it to our 'deleted_fields' object.\n\t\t\tthis.collection.removedIDs = {};\n\n\t\t\t// Respond to requests for data about fields and to update/change/delete fields from our collection.\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:collection', this.getFieldCollection, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:field', this.getField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:tmpID', this.getTmpFieldID, this );\n\n\t\t\tnfRadio.channel( 'fields' ).reply( 'add', this.addField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'delete', this.deleteField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'sort:fields', this.sortFields, this );\n\t\t},\n\n\t\tgetFieldCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tgetField: function( id ) {\n\t\t\treturn this.collection.get( id );\n\t\t},\n\n\t\t/**\n\t\t * Add a field to our collection. If silent is passed as true, no events will trigger.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param Object \tdata \tfield data to insert\n\t\t * @param bool \t\tsilent \tprevent events from firing as a result of adding\t \t\n\t\t */\n\t\taddField: function( data, silent ) {\n\t\t\tsilent = silent || false;\n\t\t\tif ( false === data instanceof Backbone.Model ) {\n\t\t\t\tvar model = new fieldModel( data );\n\t\t\t} else {\n\t\t\t\tvar model = data;\n\t\t\t}\t\t\t\n\n\t\t\tthis.collection.add( model, { silent: silent } );\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'add:field', model );\n\n\t\t\treturn model;\n\t\t},\n\n\t\t/**\n\t\t * Update a field setting by ID\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  int \t\tid    field id\n\t\t * @param  string \tname  setting name\n\t\t * @param  mixed \tvalue setting value\n\t\t * @return void\n\t\t */\n\t\tupdateFieldSetting: function( id, name, value ) {\n\t\t\tvar fieldModel = this.collection.get( id );\n\t\t\tfieldModel.set( name, value );\n\t\t},\n\n\t\t/**\n\t\t * Get our fields sortable EL\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Array \torder optional order array like: [field-1, field-4, field-2]\n\t\t * @return void\n\t\t */\n\t\tsortFields: function( order, ui, updateDB ) {\n\t\t\tif ( null == updateDB ) {\n\t\t\t\tupdateDB = true;\n\t\t\t}\n\t\t\t// Get our sortable element\n\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) { // Make sure that sortable is enabled\n\t\t\t\t// JS ternerary for setting our order\n\t\t\t\tvar order = order || jQuery( sortableEl ).sortable( 'toArray' );\n\n\t\t\t\t// Loop through all of our fields and update their order value\n\t\t\t\t_.each( this.collection.models, function( field ) {\n\t\t\t\t\t// Get our current position.\n\t\t\t\t\tvar oldPos = field.get( 'order' );\n\t\t\t\t\tvar id = field.get( 'id' );\n\t\t\t\t\tif ( jQuery.isNumeric( id ) ) {\n\t\t\t\t\t\tvar search = 'field-' + id;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar search = id;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Get the index of our field inside our order array\n\t\t\t\t\tvar newPos = order.indexOf( search ) + 1;\n\t\t\t\t\tfield.set( 'order', newPos );\n\t\t\t\t} );\n\t\t\t\tthis.collection.sort();\n\n\t\t\t\tif ( updateDB ) {\n\t\t\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\t\t\t// Update our preview\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Delete a field from our collection.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tmodel \tfield model to be deleted\n\t\t * @return void\n\t\t */\n\t\tdeleteField: function( model ) {\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'delete:field', model );\n\t\t\tthis.collection.remove( model );\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t},\n\n\t\t/**\n\t\t * Return a new tmp id for our fields.\n\t\t * Gets the field collection length, adds 1, then returns that prepended with 'tmp-'.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return string\n\t\t */\n\t\tgetTmpFieldID: function() {\n\t\t\tvar tmpNum = this.collection.tmpNum;\n\t\t\tthis.collection.tmpNum++;\n\t\t\treturn 'tmp-' + tmpNum;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model for our repeater option.\n * \n * @package Ninja App builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/optionRepeaterModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\terrors: {}\t\t\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// When we add errors to the option row, run a function.\n\t\t\tthis.on( 'change:errors', this.changeErrors, this );\n\t\t},\n\n\t\t/**\n\t\t * When we change the errors on our model, check to see if we should add or remove \n\t\t * the error from the setting that this option is a part of.\n\t\t *\n\t\t * Adding an error to the setting model simply disables the drawer and other\n\t\t * navigation. As long as we have one option with an error, it should be set to true.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tchangeErrors: function() {\n\t\t\t/*\n\t\t\t * The errors attribute will be an object, so if we don't have any keys, it's empty.\n\t\t\t * If we have an empty object, check to see if we can remove the error from our setting model.\n\t\t\t */\n\t\t\tif ( 0 == _.size( this.get( 'errors' ) ) ) {\n\t\t\t\t/*\n\t\t\t\t * Loop through our collection to see if we have any other errors.\n\t\t\t\t */\n\t\t\t\tvar errorsFound = false;\n\t\t\t\t_.each( this.collection.models, function( opt ) {\n\t\t\t\t\tif ( 0 != _.size( opt.get( 'errors' ) ) ) {\n\t\t\t\t\t\terrorsFound = true;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tif ( ! errorsFound ) {\n\t\t\t\t\tthis.collection.settingModel.set( 'error', false );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/*\n\t\t\t\t * We have errors, so make sure that the setting model has an error set.\n\t\t\t\t */\n\t\t\t\tthis.collection.settingModel.set( 'error', true );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Model that represents our list options.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/optionRepeaterCollection',['models/app/optionRepeaterModel'], function( listOptionModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: listOptionModel,\n\t\tcomparator: 'order',\n\n\t\tinitialize: function( models, options ) {\n\t\t\t// Listen to the 'sort' event\n\t\t\tthis.on( 'sort', this.changeCollection, this );\n\t\t\t// Listen to the 'add' event\n\t\t\tthis.on( 'add', this.addOption, this );\n\t\t\tthis.settingModel = options.settingModel;\n\t\t},\n\n\t\tchangeCollection: function() {\n\t\t\t// Trigger a 'sort:options' event so that our field model can update\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'sort:options', this );\n\t\t},\n\n\t\taddOption: function( model, collection ) {\n\t\t\tif ( ! model.get( 'order' ) ) {\n\t\t\t\t// console.log( collection.length );\n\t\t\t\t// model.set( 'order', this.length );\n\t\t\t}\n\t\t}\n\t} );\n\treturn collection;\n} );\n","define( 'views/app/drawer/optionRepeaterError',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\tclassName: 'nf-error',\n\t\ttemplate: '#nf-tmpl-edit-setting-option-repeater-error'\n\t});\n\n\treturn view;\n} );\n","define( 'views/app/drawer/optionRepeaterOption',['views/app/drawer/optionRepeaterError'], function( ErrorView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\tclassName: 'nf-table-row',\n\t\ttemplate: '#nf-tmpl-edit-setting-option-repeater-default-row',\n\t\tid: function() {\n\t\t\treturn this.model.cid;\n\t\t},\n\n\t\tregions: {\n\t\t\terror: '.nf-option-error'\n\t\t},\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.settingModel = data.settingModel;\n\t\t\tthis.dataModel = data.dataModel;\n\t\t\tthis.collection = data.collection;\n\t\t\tthis.columns = data.columns;\n\t\t\tthis.model.on( 'change:errors', this.renderErrors, this );\n\n\t\t\tif ( 'undefined' != typeof this.settingModel.get( 'tmpl_row' ) ) {\n\t\t\t\tthis.template = '#' + this.settingModel.get( 'tmpl_row' );\n\t\t\t}\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:errors', this.renderErrors );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\t/*\n\t\t\t * Send out a radio message.\n\t\t\t */\n\t\t\tnfRadio.channel( 'setting-' + this.settingModel.get( 'name' ) + '-option' ).trigger( 'render:setting', this.model, this.dataModel, this );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tif ( this.model.get( 'new' ) ) {\n\t\t\t\tjQuery( this.el ).find( 'input:first' ).focus();\n\t\t\t\tthis.model.set( 'new', false );\n\t\t\t}\n\t\t},\n\n\t\tevents: {\n\t\t\t'change .setting': 'changeOption',\n\t\t\t'click .nf-delete': 'deleteOption',\n\t\t\t'keyup': 'keyupOption'\n\t\t},\n\n\t\tchangeOption: function( e ) {\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'change:option', e, this.model, this.dataModel, this.settingModel );\n\t\t},\n\n\t\tdeleteOption: function( e ) {\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'click:deleteOption', this.model, this.collection, this.dataModel );\n\t\t},\n\n\t\tkeyupOption: function( e ) {\n\t\t\tthis.maybeAddOption( e );\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'keyup:option', e, this.model, this.dataModel, this.settingModel )\n\t\t},\n\n\t\tmaybeAddOption: function( e ) {\n\t\t\tif ( 13 == e.keyCode ) {\n\t\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'click:addOption', this.collection, this.dataModel );\n\t\t\t}\n\t\t},\n\n\t\trenderErrors: function() {\n\t\t\t/*\n\t\t\t * We don't want to redraw the entire row, which would remove focus from the eq textarea,\n\t\t\t * so we add and remove error classes manually.\n\t\t\t */\n\t\t\tif ( ! this.model.get( 'errors' ) ) {\n\t\t\t\tthis.error.empty();\n\t\t\t\tjQuery( this.el ).removeClass( 'nf-error' );\n\t\t\t} else {\n\t\t\t\tthis.error.show( new ErrorView( { model: this.model } ) );\n\t\t\t\tjQuery( this.el ).addClass( 'nf-error' );\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t\t\treturn {\n\t\t\t\tgetColumns: function() {\n\t\t\t\t\treturn that.columns;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n\n","define( 'views/app/drawer/optionRepeaterEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'tr',\n\t\ttemplate: '#nf-tmpl-edit-setting-option-repeater-empty'\n\t});\n\n\treturn view;\n} );\n","define( 'views/app/drawer/optionRepeaterComposite',['views/app/drawer/optionRepeaterOption', 'views/app/drawer/optionRepeaterEmpty', 'models/app/optionRepeaterCollection'], function( listOptionView, listEmptyView, listOptionCollection ) {\n\tvar view = Marionette.CompositeView.extend( {\n\t\ttemplate: '#nf-tmpl-edit-setting-wrap',\n\t\tchildView: listOptionView,\n\t\temptyView: listEmptyView,\n\t\treorderOnSort: false,\n\n\t\tinitialize: function( data ) {\n\n\t\t\t/*\n\t\t\t * Our options are stored in our database as objects, not collections.\n\t\t\t * Before we attempt to render them, we need to convert them to a collection if they aren't already one.\n\t\t\t */ \n\t\t\tvar optionCollection = data.dataModel.get( this.model.get( 'name' ) );\n\n\t\t\tif ( false == optionCollection instanceof Backbone.Collection ) {\n\t\t\t\toptionCollection = new listOptionCollection( [], { settingModel: this.model } );\n\t\t\t\toptionCollection.add( data.dataModel.get( this.model.get( 'name' ) ) );\n\t\t\t\tdata.dataModel.set( this.model.get( 'name' ), optionCollection, { silent: true } );\n\t\t\t}\n\n\t\t\tthis.collection = optionCollection;\n\t\t\tthis.dataModel = data.dataModel;\n\t\t\tthis.childViewOptions = { settingModel: this.model, collection: this.collection, dataModel: data.dataModel, columns: this.model.get( 'columns' ) };\n\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor ( var name in deps ) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.on( 'change:' + name, this.render, this );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor (var name in deps) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.off( 'change:' + name, this.render );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t\n\t\t\tvar that = this;\n\t\t\tjQuery( this.el ).find( '.nf-list-options-tbody' ).sortable( {\n\t\t\t\thandle: '.handle',\n\t\t\t\thelper: 'clone',\n\t\t\t\tplaceholder: 'nf-list-options-sortable-placeholder',\n\t\t\t\tforcePlaceholderSize: true,\n\t\t\t\topacity: 0.95,\n\t\t\t\ttolerance: 'pointer',\n\n\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'option-repeater' ).request( 'start:optionSortable', ui );\n\t\t\t\t},\n\n\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'option-repeater' ).request( 'stop:optionSortable', ui );\n\t\t\t\t},\n\n\t\t\t\tupdate: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'option-repeater' ).request( 'update:optionSortable', ui, this, that );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tnfRadio.channel( 'mergeTags' ).request( 'init', this );\n\n\t\t\t/*\n\t\t\t * Send out a radio message.\n\t\t\t */\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'render:setting', this.model, this.dataModel, this );\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t\t\tvar that = this;\n\t    \treturn {\n\t    \t\trenderHeaders: function() {\n\t    \t\t\tvar columns = '<div>&nbsp;</div>';\n\t    \t\t\t_.each( this.columns, function( col ) {\n\t    \t\t\t\tcolumns += '<div>' + col.header + '</div>';\n\t    \t\t\t} );\n\t    \t\t\tcolumns += '<div>&nbsp;</div>';\n\t\t\t\t\treturn columns;\n\t\t\t\t},\n\n\t    \t\trenderSetting: function() {\n\t\t\t\t\treturn _.template( jQuery( '#nf-tmpl-edit-setting-' + this.type ).html(), this );\n\t\t\t\t},\n\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = '';\n\t\t\t\t\tif ( 'undefined' != typeof this.width ) {\n\t\t\t\t\t\tclasses += this.width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclasses += ' one-half';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.error ) {\n\t\t\t\t\t\tclasses += ' nf-error';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\trenderVisible: function() {\n\t\t\t\t\tif ( this.deps ) {\n\t\t\t\t\t\tfor (var name in this.deps) {\n\t\t\t\t\t\t    if ( this.deps.hasOwnProperty( name ) ) {\n\t\t\t\t\t\t        if ( that.dataModel.get( name ) !== this.deps[ name ] ) {\n\t\t\t\t\t\t        \treturn 'style=\"display:none;\"';\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t    \t\t\treturn '';\n\t    \t\t},\n\n\t\t\t\trenderError: function() {\n\t\t\t\t\tif ( this.error ) {\n\t\t\t\t\t\treturn this.error;\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\n\t\t\t\trenderFieldsetClasses: function() {\n\t\t\t\t\treturn that.model.get( 'name' );\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( '.nf-list-options-tbody' ).append( childView.el );\n\t\t\tnfRadio.channel( 'mergeTags' ).request( 'init', this );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-add-new': 'clickAddOption'\n\t\t},\n\n\t\tclickAddOption: function( e ) {\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'click:addOption', this.collection, this.dataModel );\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","/**\n * Handles tasks associated with our option-repeater.\n * \n * Return our repeater child view.\n *\n * Also listens for changes to the options settings.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/optionRepeater',['models/app/optionRepeaterModel', 'models/app/optionRepeaterCollection', 'views/app/drawer/optionRepeaterComposite'], function( listOptionModel, listOptionCollection, listCompositeView ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests for the childView for list type fields.\n\t\t\tnfRadio.channel( 'option-repeater' ).reply( 'get:settingChildView', this.getSettingChildView, this );\n\t\t\t\n\t\t\t// Listen for changes to our list options.\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater' ), 'change:option', this.changeOption );\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater' ), 'click:addOption', this.addOption );\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater' ), 'click:deleteOption', this.deleteOption );\n\n\t\t\t// Respond to requests related to our list options sortable.\n\t\t\tnfRadio.channel( 'option-repeater' ).reply( 'update:optionSortable', this.updateOptionSortable, this );\n\t\t\tnfRadio.channel( 'option-repeater' ).reply( 'stop:optionSortable', this.stopOptionSortable, this );\n\t\t\tnfRadio.channel( 'option-repeater' ).reply( 'start:optionSortable', this.startOptionSortable, this );\n\t\t},\n\n\t\t/**\n\t\t * Update an option value in our model.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te          event\n\t\t * @param  backbone.model \tmodel      option model\n\t\t * @param  backbone.model \tdataModel\n\t\t * @return void\n\t\t */\n\t\tchangeOption: function( e, model, dataModel, settingModel ) {\n\t\t\tvar name = jQuery( e.target ).data( 'id' );\n\t\t\tif ( 'selected' == name ) {\n\t\t\t\tif ( jQuery( e.target ).attr( 'checked' ) ) {\n\t\t\t\t\tvar value = 1;\n\t\t\t\t} else {\n\t\t\t\t\tvar value = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar value = jQuery( e.target ).val();\n\t\t\t}\n\t\t\t\n\t\t\tvar before = model.get( name );\n\n\t\t\tmodel.set( name, value );\n\t\t\t// Triger an update on our dataModel\n\t\t\tthis.triggerDataModel( model, dataModel );\n\n\t\t\tvar after = value;\n\t\t\t\n\t\t\tvar changes = {\n\t\t\t\tattr: name,\n\t\t\t\tbefore: before,\n\t\t\t\tafter: after\n\t\t\t}\n\n\t\t\tvar label = {\n\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\tchange: 'Option ' + model.get( 'label' ) + ' ' + name + ' changed from ' + before + ' to ' + after\n\t\t\t};\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'changeSetting', model, changes, label );\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'update:option', model, dataModel, settingModel );\n\t\t},\n\n\t\t/**\n\t\t * Add an option to our list\n\t\t * \n\t\t * @since 3.0\n\t\t * @param backbone.collection \tcollection \tlist option collection\n\t\t * @param backbone.model \t\tdataModel\n\t\t * @return void\n\t\t */\n\t\taddOption: function( collection, dataModel ) {\n\t\t\tvar modelData = {\n\t\t\t\torder: collection.length,\n\t\t\t\tnew: true\n\t\t\t};\n\t\t\t_.each( collection.settingModel.get( 'columns' ), function( col, key ) {\n\t\t\t\tmodelData[ key ] = col.default;\n\t\t\t} );\n\t\t\tvar model = new listOptionModel( modelData );\n\t\t\tcollection.add( model );\n\n\t\t\t// Add our field addition to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\tchange: 'Option Added',\n\t\t\t\tdashicon: 'plus-alt'\n\t\t\t};\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addListOption', model, null, label );\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'add:option', model );\n\t\t\tthis.triggerDataModel( model, dataModel );\n\t\t},\n\n\t\t/**\n\t\t * Delete an option from our list\n\t\t * \n\t\t * @since  3.0\n\t\t * @param backbone.model \t\tmodel       list option model\n\t\t * @param backbone.collection \tcollection \tlist option collection\n\t\t * @param backbone.model \t\tdataModel\n\t\t * @return void\n\t\t */\n\t\tdeleteOption: function( model, collection, dataModel ) {\n\t\t\tvar newModel = nfRadio.channel( 'app' ).request( 'clone:modelDeep', model );\n\n\t\t\t// Add our field deletion to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\tchange: 'Option ' + newModel.get( 'label' ) + ' Removed',\n\t\t\t\tdashicon: 'dismiss'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: collection\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'removeListOption', newModel, null, label, data );\n\t\t\t\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\tvar results = changeCollection.where( { model: model } );\n\n\t\t\t_.each( results, function( changeModel ) {\n\t\t\t\tif ( 'object' == typeof changeModel.get( 'data' ) ) {\n\t\t\t\t\t_.each( changeModel.get( 'data' ), function( dataModel ) {\n\t\t\t\t\t\tif ( dataModel.model == dataModel ) {\n\t\t\t\t\t\t\tdataModel.model = newModel;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\tchangeModel.set( 'model', newModel );\n\t\t\t\tchangeModel.set( 'disabled', true );\n\t\t\t} );\n\n\t\t\tcollection.remove( model );\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'remove:option', model );\n\t\t\tthis.triggerDataModel( model, dataModel );\n\t\t},\n\n\t\t/**\n\t\t * Creates an arbitrary value on our collection, then clones and updates that collection.\n\t\t * This forces a change event to be fired on the dataModel where the list option collection data is stored.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param backbone.collection \tcollection \tlist option collection\n\t\t * @param backbone.model \t\tdataModel\n\t\t * @return void\n\t\t */\n\t\ttriggerDataModel: function( model, dataModel ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'update:setting', model );\t\n\t\t},\n\n\t\t/**\n\t\t * Return our list composite view to the setting collection view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tmodel \tsettings model\n\t\t * @return void\n\t\t */\n\t\tgetSettingChildView: function( model ) {\n\t\t\treturn listCompositeView;\n\t\t},\n\n\t\t/**\n\t\t * When we sort our list options, change the order in our option model and trigger a change.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t \t\tsortable \tjQuery UI element\n\t\t * @param  backbone.model \tsetting  \tSetting model\n\t\t * @return void\n\t\t */\n\t\tupdateOptionSortable: function( ui, sortable, setting ) {\n\t\t\t\n\t\t\tvar newOrder = jQuery( sortable ).sortable( 'toArray' );\n\t\t\tvar dragModel = setting.collection.get( { cid: jQuery( ui.item ).prop( 'id' ) } );\n\t\t\tvar data = {\n\t\t\t\tcollection: setting.collection,\n\t\t\t\tobjModels: []\n\t\t\t};\n\n\t\t\t_.each( newOrder, function( cid, index ) {\n\t\t\t\tvar optionModel = setting.collection.get( { cid: cid } );\n\t\t\t\tvar oldPos = optionModel.get( 'order' );\n\t\t\t\toptionModel.set( 'order', index );\n\t\t\t\tvar newPos = index;\n\n\t\t\t\tdata.objModels.push( {\n\t\t\t\t\tmodel: optionModel,\n\t\t\t\t\tattr: 'order',\n\t\t\t\t\tbefore: oldPos,\n\t\t\t\t\tafter: newPos\n\t\t\t\t} );\n\t\t\t} );\n\t\t\t\n\t\t\tsetting.collection.sort( { silent: true } );\n\t\t\t\n\t\t\tvar label = {\n\t\t\t\tobject: setting.dataModel.get( 'objectType' ),\n\t\t\t\tlabel: setting.dataModel.get( 'label' ),\n\t\t\t\tchange: 'Option ' + dragModel.get( 'label' ) + ' re-ordered from ' + dragModel._previousAttributes.order + ' to ' + dragModel.get( 'order' ),\n\t\t\t\tdashicon: 'sort'\n\t\t\t};\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'sortListOptions', dragModel, null, label, data );\n\t\t\tthis.triggerDataModel( dragModel, setting.dataModel );\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'sort:option', dragModel, setting );\n\t\t},\n\n\t\t/**\n\t\t * When we stop sorting our list options, reset our item opacity.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object ui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstopOptionSortable: function( ui ) {\n\t\t\tjQuery( ui.item ).css( 'opacity', '' );\n\t\t},\n\n\t\t/**\n\t\t * When we start sorting our list options, remove containing divs and set our item opacity to 0.5\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Objects ui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstartOptionSortable: function( ui ) {\n\t\t\tjQuery( ui.placeholder ).find( 'div' ).remove();\n\t\t\tjQuery( ui.item ).css( 'opacity', '0.5' ).show();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles adding and removing the active class from a field currently being edited.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - Edit Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/editActive',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests to remove the active class from all our fields.\n\t\t\tnfRadio.channel( 'fields' ).reply( 'clear:editActive', this.clearEditActive, this );\n\t\t\t// Listen for the closing drawer so that we can remove all of our active classes.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-editSettings' ), 'before:closeDrawer', this.clearEditActive );\n\t\t},\n\n\t\t/**\n\t\t * Loops through our fields collection and sets editActive to false.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n        clearEditActive: function() {\n            var fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n            _.each( fieldCollection.models, function( field ) {\n\t\t\t\tfield.set( 'editActive', false );\n            } );\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Fetches settings models so that we can get setting information\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldSettings',['models/app/settingCollection'], function( settingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.collection = new settingCollection( fieldSettings, { objectType: 'fields' } );\n\n\t\t\t// Responds to requests for settings models.\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:settingModel', this.getSettingModel, this );\n\t\t},\n\n\t\tgetSettingModel: function( name ) {\n\t\t\treturn this.collection.findWhere( { name: name } );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel to add the individual Credit Card Fields.\n *\n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldCreditCard',[], function() {\n    var controller = Marionette.Object.extend( {\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'fields' ), 'drop:fieldType', this.dropCreditCardField );\n            this.listenTo( nfRadio.channel( 'fields' ), 'add:stagedField', this.stageCreditCardField );\n        },\n\n        dropCreditCardField: function( type, tmpID ) {\n\n            if( 'creditcard' == type ) {\n\n                var model = nfRadio.channel( 'fields').request( 'get:field', tmpID );\n\n                var order = model.get( 'order' );\n\n                nfRadio.channel( 'fields' ).request( 'delete', model );\n\n                _.each( [ 'creditcardfullname', 'creditcardnumber', 'creditcardcvc', 'creditcardexpiration', 'creditcardzip'], function( type ) {\n\n                    var fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\n                    var newField = {\n                        id: nfRadio.channel( 'fields' ).request( 'get:tmpID' ),\n                        type: type,\n                        label: fieldType.get( 'nicename' ),\n                        order: order\n                    };\n\n                    nfRadio.channel('fields').request('add', newField );\n                });\n            }\n\n        },\n\n        stageCreditCardField: function( model ) {\n\n            if( 'creditcard' == model.get( 'slug' ) ) {\n\n                nfRadio.channel( 'fields' ).request( 'remove:stagedField', '', model );\n\n                _.each( [ 'creditcardfullname', 'creditcardnumber', 'creditcardcvc', 'creditcardexpiration', 'creditcardzip'], function( type ) {\n                    nfRadio.channel('fields').request('add:stagedField', type );\n                });\n            }\n        }\n\n    });\n\n    return controller;\n} );\n","/**\n * Listens to our app channel for settings views being rendered.\n *\n * If we're rendering a product_assignment setting, add our products to the data model.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldQuantity',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for messages that are fired before a setting view is rendered.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'before:renderSetting', this.beforeRenderSetting );\n\t\t},\n\n\t\tbeforeRenderSetting: function( settingModel, dataModel, view ) {\n\t\t\tif ( 'product_assignment' == settingModel.get( 'name' ) ) {\n\t\t\t\tvar productFields = this.getProductFields( settingModel );\n\t\t\t\tsettingModel.set( 'options', productFields );\n\t\t\t}\n\t\t},\n\n\t\tgetProductFields: function( settingModel ) {\n\t\t\tvar productFields = [ settingModel.get( 'select_product' ) ];\n\t\t\t// Update our dataModel with all of our product fields.\n\t\t\tvar fields = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t_.each( fields.models, function( field ) {\n\t\t\t\tif ( 'product' == field.get( 'type' ) ) {\n\t\t\t\t\tproductFields.push( { label: field.get( 'label' ), value: field.get( 'id' ) } );\n\t\t\t\t}\n\t\t\t} );\n\t\t\treturn productFields;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel for settings views being rendered.\n *\n * If we're rendering a product_assignment setting, add our products to the data model.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldShipping',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-shipping_options' ), 'render:setting', this.addMask );\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-shipping_options-option' ), 'render:setting', this.addMask );\n\t\t},\n\n\t\taddMask: function( settingModel, dataModel, view ) {\n\t\t\tjQuery( view.el ).find( '[data-id=\"value\"]' ).each( function() {\n\t\t\t\tjQuery( this ).autoNumeric({\n\t\t\t\t\taSign: '$', // TODO: Use form setting\n\t\t\t\t\taSep: thousandsSeparator,\n\t\t\t\t\taDec: decimalPoint\n\t\t\t\t});\n\t\t\t} );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * When we add a new field, update its key.\n *\n * When we change the key, update any refs to the key.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/key',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// When we add a field, update its key.\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'add:field', this.newFieldKey );\n\n\t\t\t// When we edit a label, update our key.\n\t\t\tthis.listenTo( nfRadio.channel( 'fieldSetting-label' ), 'update:setting', this.updateLabel );\n\n\t\t\t// When we edit a key, check for places that key might be used.\n\t\t\tthis.listenTo( nfRadio.channel( 'fieldSetting-key' ), 'update:setting', this.updateKey );\n\n\t\t\t// When we type inside the admin key field, we need to save our manual_key setting.\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-key' ), 'keyup:setting', this.keyUp );\n\t\t},\n\n\t\t/**\n\t\t * Add a key to our new field model.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param backbone.model model new field model\n\t\t * @return void\n\t\t */\n\t\tnewFieldKey: function( model ) {\n\t\t\tvar key = this.keyExists( model.get( 'type' ) );\n\t\t\tmodel.set( 'key', key );\n\t\t\tmodel.set( 'manual_key', false );\t\n\t\t},\n\n\t\tupdateLabel: function( model ) {\n\n\t\t\t/*\n\t\t\t * If we haven't entered a key manually, update our key when our label changes.\n\t\t\t */\n\t\t\tif ( ! model.get( 'manual_key' ) && 0 != jQuery.trim( model.get( 'label' ) ).length ) {\n\t\t\t\t/*\n\t\t\t\t * When we're editing settings, we expect the edits to fire one at a time.\n\t\t\t\t * Since we're calling this in the middle of our label update, anything that inquires about what has changed after we set our key will see both label and key.\n\t\t\t\t * We need to remove the label from our model.changed property so that all that has changed is the key.\n\t\t\t\t * \n\t\t\t\t */\n\t\t\t\tdelete model.changed.label;\n\t\t\t\tvar key = this.keyExists( model.get( 'label' ) );\n\t\t\t\tmodel.set( 'key', key );\t\t\t\t\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When a field key is updated, find any merge tags using the key and update them.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model model field model\n\t\t * @return void\n\t\t */\n\t\tupdateKey: function( dataModel ) {\n\t\t\tvar key = dataModel.get( 'key' );\n\t\t\tthis.settingModel = nfRadio.channel( 'fields' ).request( 'get:settingModel', 'key' );\n\t\t\tthis.setError( key, dataModel );\n\t\t},\n\n\t\tkeyUp: function( e, settingModel, dataModel ) {\n\t\t\tdataModel.set( 'manual_key', true );\n\t\t\tthis.settingModel = settingModel;\n\t\t\tvar key = jQuery( e.target ).val();\n\t\t\tthis.setError( key, dataModel );\n\t\t},\n\n\t\tsetError: function( key, dataModel ) {\n\t\t\tvar error = false;\n\t\t\tif ( '' == jQuery.trim( key ) ) {\n\t\t\t\terror = 'Field keys can\\'t be empty. Please enter a key.';\n\t\t\t} else if ( key != this.keyExists( key, dataModel ) ) {\n\t\t\t\terror = 'Field keys must be unique. Please enter another key.'\n\t\t\t}\n\n\t\t\tif ( error ) {\n\t\t\t\tthis.settingModel.set( 'error', error );\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'update:fieldKey', dataModel );\n\t\t\t\tthis.settingModel.set( 'error', false );\n\t\t\t}\n\t\t},\n\n\t\tkeyExists: function( key, dataModel ) {\n\t\t\tkey = jQuery.slugify( key, { separator: '_' } );\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tvar x = 1;\n\t\t\tvar testKey = key;\n\t\t\t_.each( fieldCollection.models, function( field ) {\n\t\t\t\tif ( dataModel != field && testKey == field.get( 'key' ) ) {\n\t\t\t\t\ttestKey = key + '_' + x;\n\t\t\t\t\tx++;\n\t\t\t\t}\n\t\t\t} );\n\t\t\tkey = testKey;\n\n\t\t\treturn key;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Creates and stores a collection of action types. This includes all of the settings shown when editing a field.\n *\n * Loops over our preloaded data and adds that to our action type collection\n *\n * Also responds to requests for data about action types\n *\n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/types',[\n\t'models/app/typeCollection',\n\t'models/app/settingCollection',\n\t'models/app/settingGroupCollection',\n\t], function(\n\ttypeCollection,\n\tsettingCollection,\n\tsettingGroupCollection\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our field type collection\n\t\t\tthis.installedActions = new typeCollection();\n\t\t\tthis.installedActions.slug = 'installed';\n\t\t\tthis.installedActions.nicename = 'Installed';\n\t\t\tthis.availableActions = new typeCollection();\n\t\t\tthis.availableActions.slug = 'available';\n\t\t\tthis.availableActions.nicename = 'Available';\n\n\t\t\tvar that = this;\n\t\t\t_.each( actionTypeData, function( type ) {\n\t\t\t\tvar settingGroups = new settingGroupCollection();\n\t\t\t\t// Loop through the settings groups within this field type and create an object to add to the groups collection.\n\t\t\t\t_.each( type.settingGroups, function( group ) {\n\t\t\t\t\tvar groupTmp = {\n\t\t\t\t\t\tlabel: group.label,\n\t\t\t\t\t\tdisplay: group.display,\n\t\t\t\t\t\tsettings: new settingCollection( group.settings ),\n\t\t\t\t\t}\n\t\t\t\t\t// Add the tmp object to our setting groups collection\n\t\t\t\t\tsettingGroups.add( groupTmp );\n\t\t\t\t} );\n\n\t\t\t\t// Build an object for this type that we can add to our field type collection\n\t\t\t\tvar actionType = {\n\t\t\t\t\tid: type.id,\n\t\t\t\t\tnicename: type.nicename,\n\t\t\t\t\talias: type.alias,\n\t\t\t\t\tsettingGroups: settingGroups,\n\t\t\t\t\tsettingDefaults: type.settingDefaults,\n\t\t\t\t\timage: type.image,\n\t\t\t\t\tlink: type.link,\n\t\t\t\t\tsection: type.section\n\t\t\t\t}\n\n\t\t\t\t// Add tmp object to the appropriate collection (either installed or available)\n\t\t\t\tthat[ type.section + 'Actions' ].add( actionType );\n\t\t\t} );\n\n\t\t\t// Respond to requests to get field type, collection, settings, and sections\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:type', this.getType, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:installedActions', this.getInstalledActions, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:availableActions', this.getAvailableActions, this );\n\t\t},\n\n\t\t/**\n\t\t * Return a field type by id\n\t\t *\n\t\t * @since  3.0\n\t\t * @param  string \t\t\tid \tfield type\n\t\t * @return backbone.model    \tfield type model\n\t\t */\n\t\tgetType: function( id ) {\n\t\t\t// Search our installed actions first\n\t\t\tvar type = this.installedActions.get( id );\n\t\t\tif ( ! type ) {\n\t\t\t\ttype = this.availableActions.get( id );\n\t\t\t}\n        \treturn type;\n        },\n\n        /**\n         * Return the installed action type collection\n         *\n         * @since  3.0\n         * @return backbone.collection    \tfield type collection\n         */\n\t\tgetInstalledActions: function() {\n        \treturn this.installedActions;\n        },\n\n        /**\n         * Return the available action type collection\n         *\n         * @since  3.0\n         * @return backbone.collection    \tfield type collection\n         */\n\t\tgetAvailableActions: function() {\n        \treturn this.availableActions;\n        },\n\n        /**\n         * Add a field type to our staging area when the field type button is clicked.\n         *\n         * @since 3.0\n         * @param Object e event\n         * @return void\n         */\n        addStagedField: function( e ) {\n        \tvar type = jQuery( e.target ).data( 'id' );\n        \tnfRadio.channel( 'fields' ).request( 'add:stagedField', type );\n        },\n\n        /**\n         * Return our field type settings sections\n         *\n         * @since  3.0\n         * @return backbone.collection field type settings sections\n         */\n        getTypeSections: function() {\n            return this.fieldTypeSections;\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Model that represents our form action.\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/actions/actionModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tobjectType: 'Action',\n\t\t\tobjectDomain: 'actions',\n\t\t\teditActive: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Listen for model attribute changes\n\t\t\tthis.on( 'change', this.changeSetting, this );\n\n\t\t\t// Get our parent field type.\n\t\t\tvar actionType = nfRadio.channel( 'actions' ).request( 'get:type', this.get( 'type' ) );\n\n\t\t\t// Loop through our action type \"settingDefaults\" and add any default settings.\n\t\t\tvar that = this;\n\t\t\t_.each( actionType.get( 'settingDefaults' ), function( val, key ) {\n\t\t\t\tif ( ! that.get( key ) ) {\n\t\t\t\t\tthat.set( key, val, { silent: true } );\n\t\t\t\t}\n\t\t\t} );\n\t\t\t\n\t\t\t/*\n\t\t\t * Trigger an init event on three channels:\n\t\t\t * \n\t\t\t * actions\n\t\t\t * action-type\n\t\t\t *\n\t\t\t * This lets specific field types modify model attributes before anything uses them.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'actions' ).trigger( 'init:fieldModel', this );\n\t\t\tnfRadio.channel( 'actions-' + this.get( 'type' ) ).trigger( 'init:fieldModel', this );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'actions' ), 'update:fieldKey', this.updateFieldKey );\n\t\t},\n\n\t\t/**\n\t\t * When we change the model attributes, fire an event saying we've changed something.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tchangeSetting: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'update:setting', this );\n\t\t},\n\n\t\tupdateFieldKey: function( keyModel, settingModel ) {\n\t\t\tnfRadio.channel( 'app' ).request( 'replace:fieldKey', this, keyModel, settingModel );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our action models. \n * This is the actual action data created by the user.\n *\n * We listen to the add and remove events so that we can push the new id to either the new action or removed action property.\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/actions/actionCollection',['models/actions/actionModel'], function( actionModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: actionModel,\n\t\tcomparator: 'order',\n\t\ttmpNum: 1,\n\n\t\tinitialize: function() {\n\t\t\tthis.on( 'add', this.addAction, this );\n\t\t\tthis.on( 'remove', this.removeAction, this );\n\t\t\tthis.newIDs = [];\n\t\t},\n\n\t\t/**\n\t\t * When we add a field, push the id onto our new action property.\n\t\t * This lets us tell the server that this is a new field to be added rather than a field to be updated.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param void\n\t\t */\n\t\taddAction: function( model ) {\n\t\t\tthis.newIDs.push( model.get( 'id' ) );\n\t\t},\n\n\t\t/**\n\t\t * When we remove a field, push the id onto our removed action property.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param void\n\t\t */\n\t\tremoveAction: function( model ) {\n\t\t\tthis.removedIDs[ model.get( 'id' ) ] = model.get( 'id' );\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Handles interactions with our actions collection.\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/data',['models/actions/actionCollection', 'models/actions/actionModel'], function( actionCollection, actionModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Load our action collection from our localized form data\n\t\t\tthis.collection = new actionCollection( preloadedFormData.actions );\n\t\t\tthis.collection.tmpNum = 1;\n\n\t\t\tif ( 0 != this.collection.models.length ) {\n\t\t\t\tvar that = this;\n\t\t\t\t_.each( this.collection.models, function( action ) {\n\t\t\t\t\tif ( ! jQuery.isNumeric( action.get( 'id' ) ) ) {\n\t\t\t\t\t\tthat.collection.tmpNum++;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\t// Set our removedIDs to an empty object. This will be populated when a action is removed so that we can add it to our 'deleted_actions' object.\n\t\t\tthis.collection.removedIDs = {};\n\n\t\t\t// Respond to requests for data about actions and to update/change/delete actions from our collection.\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:collection', this.getCollection, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:action', this.getAction, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:tmpID', this.getTmpID, this );\n\n\t\t\tnfRadio.channel( 'actions' ).reply( 'add', this.addAction, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'delete', this.deleteAction, this );\n\t\t},\n\n\t\tgetCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tgetAction: function( id ) {\n\t\t\treturn this.collection.get( id );\n\t\t},\n\n\t\t/**\n\t\t * Add a action to our collection. If silent is passed as true, no events will trigger.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param Object \tdata \taction data to insert\n\t\t * @param bool \t\tsilent \tprevent events from firing as a result of adding\t \t\n\t\t */\n\t\taddAction: function( data, silent ) {\n\t\t\tsilent = silent || false;\n\n\t\t\tif ( false === data instanceof Backbone.Model ) {\n\t\t\t\tvar model = new actionModel( data );\n\t\t\t} else {\n\t\t\t\tvar model = data;\n\t\t\t}\n\n\t\t\tthis.collection.add( model, { silent: silent } );\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\n\t\t\treturn model;\n\t\t},\n\n\t\t/**\n\t\t * Delete a action from our collection.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tmodel \taction model to be deleted\n\t\t * @return void\n\t\t */\n\t\tdeleteAction: function( model ) {\n\t\t\tthis.collection.remove( model );\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t},\n\n\n\t\t/**\n\t\t * Return a new tmp id for our actions.\n\t\t * Gets the action collection length, adds 1, then returns that prepended with 'tmp-'.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return string\n\t\t */\n\t\tgetTmpID: function() {\n\t\t\tvar tmpNum = this.collection.tmpNum;\n\t\t\tthis.collection.tmpNum++;\n\t\t\treturn 'tmp-' + tmpNum;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Fetches settings models so that we can get setting information\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/actionSettings',['models/app/settingCollection'], function( settingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.collection = new settingCollection( actionSettings, { objectType: 'actions' } );\n\n\t\t\t// Responds to requests for settings models.\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:settingModel', this.getSettingModel, this );\n\t\t},\n\n\t\tgetSettingModel: function( name ) {\n\t\t\treturn this.collection.findWhere( { name: name } );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles adding and removing the active class from a action currently being edited.\n * \n * @package Ninja Forms builder\n * @subpackage Actions - Edit Action Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/editActive',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests to remove the active class from all our actions.\n\t\t\tnfRadio.channel( 'actions' ).reply( 'clear:editActive', this.clearEditActive, this );\n\t\t\t// Listen for the closing drawer so that we can remove all of our active classes.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-editSettings' ), 'before:closeDrawer', this.clearEditActive );\n\t\t},\n\n\t\t/**\n\t\t * Loops through our actions collection and sets editActive to false.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n        clearEditActive: function() {\n            var actionCollection = nfRadio.channel( 'actions' ).request( 'get:collection' );\n            _.each( actionCollection.models, function( action ) {\n\t\t\t\taction.set( 'editActive', false );\n            } );\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Handles clicks and dragging for our action types.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/addActionTypes',['models/actions/actionCollection', 'models/actions/actionModel'], function( actionCollection, actionModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'actions' ), 'click:addAction', this.addAction );\n\n\t\t\tnfRadio.channel( 'actions' ).reply( 'add:actionType', this.addAction, this );\n\t\t},\n\n\t\t/**\n\t\t * Add an action to our collection. If silent is passed as true, no events will trigger.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param Object \tdata \taction data to insert\n\t\t * @param bool \t\tsilent \tprevent events from firing as a result of adding\t \t\n\t\t */\n\t\taddAction: function( type ) {\n\t\t\tvar data = {\n\t\t\t\tid: nfRadio.channel( 'actions' ).request( 'get:tmpID' ),\n\t\t\t\ttype: type.get( 'id' ),\n\t\t\t\tlabel: type.get( 'nicename' )\n\t\t\t}\n\t\t\tvar newModel = nfRadio.channel( 'actions' ).request( 'add', data );\n\t\t\tvar label = {\n\t\t\t\tobject: 'Action',\n\t\t\t\tlabel: newModel.get( 'label' ),\n\t\t\t\tchange: 'Added',\n\t\t\t\tdashicon: 'plus-alt'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: nfRadio.channel( 'actions' ).request( 'get:collection' )\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addObject', newModel, null, label, data );\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:edit', {}, newModel );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles the logic for our action type draggables.\n * \n * @package Ninja Forms builder\n * @subpackage Actions - New Action Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/typeDrag',[], function( ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our action type draggables and run the appropriate function.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addAction' ), 'startDrag:type', this.startDrag );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addAction' ), 'stopDrag:type', this.stopDrag );\n\t\t\t/*\n\t\t\t * Respond to requests for our helper clone.\n\t\t\t * This is used by other parts of the application to modify what the user is dragging in real-time.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'drawer-addAction' ).reply( 'get:typeHelperClone', this.getCurrentDraggableHelperClone, this );\n\t\t},\n\n\t\t/**\n\t\t * When we start dragging:\n\t\t * get our drawer element\n\t\t * set its overflow property to visible !important -> forces the type drag element to be on at the top of the z-index.\n\t\t * get our main element\n\t\t * est its overflow propery to visible !important -> forces the type drag element to be on top of the z-index.\n\t\t * set our dragging helper clone\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  object context \tThis function is going to be called from a draggable. Context is the \"this\" reference to the draggable.\n\t\t * @param  object ui      \tObject sent by jQuery UI draggable.\n\t\t * @return void\n\t\t */\n\t\tstartDrag: function( context, ui ) {\n\t\t\tthis.drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tthis.mainEl = nfRadio.channel( 'app' ).request( 'get:mainEl' );\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\n\t\t\tthis.draggableHelperClone = jQuery( ui.helper ).clone();\n\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging, reset our overflow property to hidden !important.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  object context \tThis function is going to be called from a draggable. Context is the \"this\" reference to the draggable.\n\t\t * @param  object ui      \tObject sent by jQuery UI draggable.\n\t\t * @return {[type]}         [description]\n\t\t */\n\t\tstopDrag: function( context, ui ) {\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t},\n\n\t\tgetCurrentDraggableHelperClone: function() {\n\t\t\treturn this.draggableHelperClone;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles the logic for our action type droppable.\n * \n * @package Ninja Forms builder\n * @subpackage Actions - New Action Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/droppable',[], function( ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Respond to requests for our helper clone.\n\t\t\t * This is used by other parts of the application to modify what the user is dragging in real-time.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'app' ).reply( 'drop:actionType', this.dropActionType, this );\n\t\t},\n\n\t\tdropActionType: function( e, ui ) {\n\t\t\tvar type_slug = jQuery( ui.helper ).data( 'type' );\n\t\t\tvar type = nfRadio.channel( 'actions' ).request( 'get:type', type_slug );\n\t\t\tnfRadio.channel( 'actions' ).request( 'add:actionType', type );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model for our action type\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/actions/typeModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our action type models. \n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/actions/typeCollection',['models/actions/typeModel'], function( actionTypeModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: actionTypeModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Filters our action type collection.\n * \n * @package Ninja Forms builder\n * @subpackage Actions - New Action Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/filterTypes',['models/actions/typeCollection'], function( typeCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our change filter event.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addAction' ), 'change:filter', this.filterActionTypes );\n\t\t},\n\n\t\t/**\n\t\t * Filter our action types in the add new action drawer\n\t\t * \n\t\t * Takes a search string and finds any action types that match either the name or alias.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string\t search \tstring being searched for\n\t\t * @param  object \t e      \tKeyup event\n\t\t * @return void\n\t\t */\n\t\tfilterActionTypes: function( search, e ) {\n\n\t\t\t// Make sure that we aren't dealing with an empty string.\n\t\t\tif ( '' != jQuery.trim( search ) ) {\n\n        \t\tvar filteredInstalled = [];\n        \t\t/**\n        \t\t * Call the function that actually filters our collection,\n        \t\t * and then loop through our collection, adding each model to our filteredInstalled array.\n        \t\t */\n\t\t\t\tvar installedActions = nfRadio.channel( 'actions' ).request( 'get:installedActions' );\n        \t\t_.each( this.filterCollection( search, installedActions ), function( model ) {\n        \t\t\tfilteredInstalled.push( model );\n        \t\t} );\n\n        \t\tvar filteredAvailable = [];\n        \t\tvar availableActions = nfRadio.channel( 'actions' ).request( 'get:availableActions' );\n        \t\t_.each( this.filterCollection( search, availableActions ), function( model ) {\n        \t\t\tfilteredAvailable.push( model );\n        \t\t} );\n\n        \t\t// Create a new Action Type Section collection with the filtered array.\n        \t\tvar newInstalled = new typeCollection( filteredInstalled );\n        \t\tnewInstalled.slug = 'installed';\n        \t\tnewInstalled.nicename = 'Installed';\n\n        \t\tvar newAvailable = new typeCollection( filteredAvailable );\n        \t\tnewAvailable.slug = 'available';\n        \t\tnewAvailable.nicename = 'Available';\n\n        \t\t// Request that our action types filter be applied, passing the collection we created above.\n        \t\tnfRadio.channel( 'drawer' ).trigger( 'filter:actionTypes', newInstalled, newAvailable );\n        \t\t// If we've pressed the 'enter' key, add the action to staging and clear the filter.\n        \t\tif ( e.addObject ) {\n        \t\t\tif ( 0 < newInstalled.length ) {\n        \t\t\t\tnfRadio.channel( 'actions' ).request( 'add:actionType', newInstalled.models[0] );\n        \t\t\t\tnfRadio.channel( 'drawer' ).request( 'clear:filter' );\n        \t\t\t}\n        \t\t}\n        \t} else {\n        \t\t// Clear our filter if the search text is empty.\n        \t\tnfRadio.channel( 'drawer' ).trigger( 'clear:filter' );\n        \t}\n        },\n\n        /**\n         * Search our action type collection for the search string.\n         * \n         * @since  3.0\n         * @param  string\t search \tstring being searched for\n         * @return backbone.collection\n         */\n        filterCollection: function( search, collection ) {\n        \tsearch = search.toLowerCase();\n        \t/*\n        \t * Backbone collections have a 'filter' method that loops through every model,\n        \t * waiting for you to return true or false. If you return true, the model is kept.\n        \t * If you return false, it's removed from the filtered result.\n        \t */\n\t\t\tvar filtered = collection.filter( function( model ) {\n\t\t\t\tvar found = false;\n\t\t\t\t\n\t\t\t\t// If we match either the ID or nicename, return true.\n\t\t\t\tif ( model.get( 'id' ).toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t} else if ( model.get( 'nicename' ).toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * TODO: Hashtag searching. Doesn't really do anything atm.\n\t\t\t\t */\n\t\t\t\tif ( model.get( 'tags' ) && 0 == search.indexOf( '#' ) ) {\n\t\t\t\t\t_.each( model.get( 'tags' ), function( tag ) {\n\t\t\t\t\t\tif ( search.replace( '#', '' ).length > 1 ) {\n\t\t\t\t\t\t\tif ( tag.toLowerCase().indexOf( search.replace( '#', '' ) ) != -1 ) {\n\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// If we match any of the aliases, return true.\n\t\t\t\tif ( model.get( 'alias' ) ) {\n\t\t\t\t\t_.each( model.get( 'alias' ), function( alias ) {\n\t\t\t\t\t\tif ( alias.toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\treturn found;\n\t\t\t} );\n\n\t\t\t// Return our filtered collection.\n\t\t\treturn filtered;\n        }\n\t});\n\n\treturn controller;\n} );\n","/**\n * Creates and stores a collection of form setting types. This includes all of the settings shown when editing a field.\n *\n * Loops over our preloaded data and adds that to our form setting type collection\n *\n * Also responds to requests for data about form setting types\n *\n * @package Ninja Forms builder\n * @subpackage Advanced\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/advanced/types',[\n\t'models/app/typeCollection',\n\t'models/app/settingCollection',\n\t'models/app/settingGroupCollection',\n\t], function(\n\ttypeCollection,\n\tsettingCollection,\n\tsettingGroupCollection\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our field type collection\n\t\t\tthis.collection = new typeCollection();\n\n\t\t\tvar that = this;\n\t\t\t_.each( formSettingTypeData, function( type ) {\n\t\t\t\tvar settingGroups = new settingGroupCollection();\n\t\t\t\t// Loop through the settings groups within this field type and create an object to add to the groups collection.\n\t\t\t\t_.each( type.settingGroups, function( group ) {\n\t\t\t\t\tvar groupTmp = {\n\t\t\t\t\t\tlabel: group.label,\n\t\t\t\t\t\tdisplay: group.display,\n\t\t\t\t\t\tsettings: new settingCollection( group.settings ),\n\t\t\t\t\t}\n\t\t\t\t\t// Add the tmp object to our setting groups collection\n\t\t\t\t\tsettingGroups.add( groupTmp );\n\t\t\t\t} );\n\n\t\t\t\t// Build an object for this type that we can add to our field type collection\n\t\t\t\tvar settingType = {\n\t\t\t\t\tid: type.id,\n\t\t\t\t\tnicename: type.nicename,\n\t\t\t\t\talias: type.alias,\n\t\t\t\t\tsettingGroups: settingGroups,\n\t\t\t\t\tsettingDefaults: type.settingDefaults,\n\t\t\t\t\teditActive: false\n\t\t\t\t}\n\n\t\t\t\t// Add tmp object to the appropriate collection (either installed or available)\n\t\t\t\tthat.collection.add( settingType );\n\t\t\t} );\n\n\t\t\t// Respond to requests to get field type, collection, settings, and sections\n\t\t\tnfRadio.channel( 'settings' ).reply( 'get:type', this.getType, this );\n\t\t\tnfRadio.channel( 'settings' ).reply( 'get:typeCollection', this.getCollection, this );\n\t\t},\n\n\t\t/**\n\t\t * Return a field type by id\n\t\t *\n\t\t * @since  3.0\n\t\t * @param  string \t\t\tid \tfield type\n\t\t * @return backbone.model    \tfield type model\n\t\t */\n\t\tgetType: function( id ) {\n\t\t\treturn this.collection.get( id );\n        },\n\n        /**\n         * Return the installed action type collection\n         *\n         * @since  3.0\n         * @return backbone.collection    \tfield type collection\n         */\n\t\tgetCollection: function() {\n        \treturn this.collection;\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Model that represents our form settings.\n * \n * @package Ninja Forms builder\n * @subpackage Form Settings\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/advanced/settingsModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tobjectType: 'Form Setting',\n\t\t\teditActive: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Listen for model attribute changes\n\t\t\tthis.bind( 'change', this.changeSetting, this );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'settings' ), 'update:fieldKey', this.updateFieldKey );\n\t\t},\n\n\t\t/**\n\t\t * When we change the model attributes, fire an event saying we've changed something.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tchangeSetting: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'update:setting', this );\n\t\t},\n\n\t\tupdateFieldKey: function( keyModel, settingModel ) {\n\t\t\tnfRadio.channel( 'app' ).request( 'replace:fieldKey', this, keyModel, settingModel );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Handles interactions with our form settings collection.\n * \n * @package Ninja Forms builder\n * @subpackage Advanced\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/advanced/data',['models/advanced/settingsModel'], function( settingsModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Load our action collection from our localized form data\n\t\t\tthis.model = new settingsModel( preloadedFormData.settings );\n\t\t\tnfRadio.channel( 'settings' ).reply( 'get:settings', this.getSettings, this );\n\t\t},\n\n\t\tgetSettings: function() {\n\t\t\treturn this.model;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Fetches settings models so that we can get setting information\n * \n * @package Ninja Forms builder\n * @subpackage Advanced\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/advanced/formSettings',['models/app/settingCollection'], function( settingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.collection = new settingCollection( formSettings, { objectType: 'settings' } );\n\n\t\t\t// Responds to requests for settings models.\n\t\t\tnfRadio.channel( 'settings' ).reply( 'get:settingModel', this.getSettingModel, this );\n\t\t},\n\n\t\tgetSettingModel: function( name ) {\n\t\t\treturn this.collection.findWhere( { name: name } );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles adding and removing the active class from form settings currently being edited.\n * \n * @package Ninja Forms builder\n * @subpackage Advanced\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/advanced/editActive',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests to remove the active class from all our fields.\n\t\t\tnfRadio.channel( 'settings' ).reply( 'clear:editActive', this.clearEditActive, this );\n\t\t\t// Listen for the closing drawer so that we can remove all of our active classes.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-editSettings' ), 'before:closeDrawer', this.clearEditActive );\n\t\t},\n\n\t\t/**\n\t\t * Loops through our fields collection and sets editActive to false.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n        clearEditActive: function() {\n            var collection = nfRadio.channel( 'settings' ).request( 'get:typeCollection' );\n            _.each( collection.models, function( field ) {\n\t\t\t\tfield.set( 'editActive', false );\n            } );\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Listens for clicks on our form settings sections.\n * \n * @package Ninja Forms builder\n * @subpackage Advanced\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/advanced/clickEdit',['models/advanced/settingsModel'], function( settingsModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'settings' ), 'click:edit', this.clickEdit );\n\t\t},\n\n\t\tclickEdit: function( e, typeModel ) {\n\t\t\tvar model = nfRadio.channel( 'settings' ).request( 'get:settings' );\n\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'editSettings', { model: model, groupCollection: typeModel.get( 'settingGroups' ) } );\n\t\t\tvar preventClose = nfRadio.channel( 'drawer' ).request( 'get:preventClose' );\n\t\t\tif ( ! preventClose ) {\n\t\t\t\ttypeModel.set( 'editActive', true );\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Makes sure that calculations don't reference calculations with a lower order.\n *\n * For example, our first caclulation can't reference the second, but the second can reference the first.\n * \n * @package Ninja Forms builder\n * @subpackage Advanced\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/advanced/calculations',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * When someone types in the \"name\" or \"eq\" portion of our calculation, we need to make sure\n\t\t\t * that they haven't duplicated a name or made a bad EQ reference.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater' ), 'keyup:option', this.keyUp );\n\t\t\t/*\n\t\t\t * Same thing for when our calculation option is updated\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater' ), 'update:option', this.updateCalc );\n\t\t\t/*\n\t\t\t * When we sort our calcluations, we need to make sure that we don't get any bad EQ\n\t\t\t * references.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater' ), 'sort:option', this.sortCalc );\n\t\t},\n\n\t\tkeyUp: function( e, optionModel ) {\n\t\t\t// Get our current value\n\t\t\tvar value = jQuery( e.target ).val();\n\t\t\t// Check to see if we're editing a name or eq\n\t\t\tif( 'name' == jQuery( e.target ).data( 'id' ) ) { // We are editing the name field\n\t\t\t\t// Check to see if our name already exists.\n\t\t\t\tthis.checkName( value, optionModel );\n\t\t\t\tthis.checkEQ( optionModel.get( 'eq' ), optionModel );\n\t\t\t} else { // We're editing the eq\n\t\t\t\t// Check to see if there are any calcs referenced in our eq\n\t\t\t\tthis.checkEQ( value, optionModel );\n\t\t\t}\n\t\t},\n\n\t\tupdateCalc: function( optionModel ) {\n\t\t\tthis.checkName( optionModel.get( 'name' ), optionModel );\n\t\t\tthis.checkEQ( optionModel.get( 'eq' ), optionModel );\n\t\t},\n\n\t\tsortCalc: function( optionModel, setting ) {\n\t\t\tthis.checkAllCalcs( setting.collection );\n\t\t},\n\n\t\t/**\n\t\t * Check to see if a calc name exists.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string \t\t\tname        calc name to check\n\t\t * @param  backbone.model \toptionModel \n\t\t * @return void\n\t\t */\n\t\tcheckName: function( name, optionModel ) {\n\t\t\toptionModel.set( 'name', name );\n\t\t\t// Get our current errors, if any.\n\t\t\tvar errors = optionModel.get( 'errors' );\n\t\t\t// Search our calc collection for our name\n\t\t\tvar found = optionModel.collection.where( { name: name } );\n\n\t\t\t// If the name that was passed is the same as our current name, return false.\n\t\t\tif ( name == optionModel.get( 'name' ) ) {\n\t\t\t\tfound = [];\n\t\t\t}\n\n\t\t\t// If our name exists, add an errors to the option model\n\t\t\tif ( 0 != found.length ) {\n\t\t\t\terrors.nameExists = 'Calculation names must be unique. Please enter another name.';\n\t\t\t} else {\n\t\t\t\tdelete errors.nameExists;\n\t\t\t}\n\n\t\t\toptionModel.set( 'errors', errors );\n\t\t\toptionModel.trigger( 'change:errors', optionModel );\n\t\t},\n\n\t\t/**\n\t\t * Check to see if an eq contains a reference to a calc at a lower priority.\n\t\t *\n\t\t * @since  3.0\n\t\t * @param  string \t\t\teq          our equation\n\t\t * @param  backbone.model \toptionModel\n\t\t * @return void\n\t\t */\n\t\tcheckEQ: function( eq, optionModel ) {\n\t\t\t// Get any current errors on our optionModel\n\t\t\tvar errors = optionModel.get( 'errors' );\n\t\t\t/*\n\t\t\t * We're looking for two errors:\n\t\t\t * - Calculations that are below the current one can't be processed.\n\t\t\t * - Calculations can't refer to themselves.\n\t\t\t */ \n\t\t\tvar errorSelfRef = false;\n\t\t\tvar errorFutureCalc = false;\n\t\t\t// Regex that searches for {calc:key}\n\t\t\tvar calcs = eq.match( new RegExp( /{calc:(.*?)}/g ) );\n\t\t\t/*\n\t\t\t * Calcs will be an array like:\n\t\t\t * ['{calc:test}'], ['{calc:another}']\n\t\t\t * \n\t\t\t * If we have any calcs in the eq, loop through them and search for the errors.\n\t\t\t */\n\t\t\tif ( calcs ) {\n\t\t\t\tvar calculations = optionModel.collection;\n\t\t\t\t// Maps a function to each item in our calcs array.\n\t\t\t\tcalcs = calcs.map( function( calc ) {\n\t\t\t\t\t// calc will be {calc:name}\n\t\t\t\t\tvar name = calc.replace( '}', '' ).replace( '{calc:', '' );\n\t\t\t\t\t// Get our optionModel from our calculations collection.\n\t\t\t\t\tvar targetCalc = calculations.findWhere( { name: name } );\n\t\t\t\t\tif ( name == optionModel.get( 'name' ) ) {\n\t\t\t\t\t\t// If we already have a calc with this name, set an error.\n\t\t\t\t\t\terrors.selfRef = 'A calculation can\\'t reference itself!';\n\t\t\t\t\t\terrorSelfRef = true;\n\t\t\t\t\t} else if ( targetCalc && targetCalc.get( 'order' ) > optionModel.get( 'order' ) ) {\n\t\t\t\t\t\t// If the calc is after this one, set an error. \n\t\t\t\t\t\terrorFutureCalc = true;\n\t\t\t\t\t\terrors.futureCalc = 'Can\\'t reference a future calculation!';\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// If we didn't find any self ref errors, remove the key.\n\t\t\tif ( ! errorSelfRef ) {\n\t\t\t\tdelete errors.selfRef;\n\t\t\t}\n\n\t\t\t// If we didn't find any future calc errors, remove the key.\n\t\t\tif ( ! errorFutureCalc ) {\n\t\t\t\tdelete errors.futureCalc;\n\t\t\t}\n\n\t\t\t// Set errors and trigger our optionModel change.\n\t\t\toptionModel.set( 'errors', errors );\n\t\t\toptionModel.trigger( 'change:errors', optionModel );\n\n\t\t},\n\n\t\tcheckAllCalcs: function( collection ) {\n\t\t\tvar that = this;\n\t\t\tcollection.models.map( function( opt ) {\n\t\t\t\tthat.checkName( opt.get( 'name' ), opt );\n\t\t\t\tthat.checkEQ( opt.get( 'eq' ), opt );\n\t\t\t} );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Loads all of our controllers using Require JS.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine(\n\t'controllers/loadControllers',[\n\t\t/*\n\t\t * Application controllers\n\t\t */\n\t\t'controllers/app/drawer',\n\t\t'controllers/app/drawerConfig',\t\t\n\t\t'controllers/app/domainConfig',\n\t\t'controllers/app/data',\t\t\n\t\t'controllers/app/drawerToggleSettingGroup',\n\t\t'controllers/app/updateDB',\n\t\t'controllers/app/formData',\n\t\t'controllers/app/previewLink',\n\t\t'controllers/app/menuButtons',\n\t\t'controllers/app/trackChanges',\n\t\t'controllers/app/undoChanges',\n\t\t'controllers/app/publishResponse',\n\t\t'controllers/app/changeDomain',\n\t\t'controllers/app/pushstate',\n\t\t'controllers/app/hotkeys',\n\t\t'controllers/app/cleanState',\n\t\t'controllers/app/coreUndo',\n\t\t'controllers/app/cloneModelDeep',\n\t\t'controllers/app/getSettingChildView',\n\t\t'controllers/app/changeSettingDefault',\n\t\t'controllers/app/fieldset',\n\t\t'controllers/app/toggleSetting',\n\t\t'controllers/app/itemControls',\n\t\t'controllers/app/mergeTags',\n\t\t'controllers/app/itemSettingFill',\n\t\t'controllers/app/confirmPublish',\n\t\t'controllers/app/rte',\n\t\t'controllers/app/changeMenu',\n\t\t/*\n\t\t * Fields domain controllers\n\t\t */\n\t\t'controllers/fields/types',\n\t\t'controllers/fields/fieldTypeDrag',\n\t\t'controllers/fields/stagingDrag',\n\t\t'controllers/fields/savedFieldsSection',\n\t\t'controllers/fields/staging',\n\t\t'controllers/fields/stagingSortable',\n\t\t'controllers/fields/filterTypes',\n\t\t'controllers/fields/sortable',\n\t\t'controllers/fields/data',\n\t\t'controllers/app/optionRepeater',\n\t\t'controllers/fields/editActive',\n\t\t'controllers/fields/fieldSettings',\n\t\t'controllers/fields/fieldCreditCard',\n\t\t'controllers/fields/fieldQuantity',\n\t\t'controllers/fields/fieldShipping',\n\t\t'controllers/fields/key',\n\n\t\t/*\n\t\t * TODO: Actions domain controllers\n\t\t */\n\t\t'controllers/actions/types',\n\t\t'controllers/actions/data',\n\t\t'controllers/actions/actionSettings',\n\t\t'controllers/actions/editActive',\n\t\t'controllers/actions/addActionTypes',\n\t\t'controllers/actions/typeDrag',\n\t\t'controllers/actions/droppable',\n\t\t'controllers/actions/filterTypes',\n\n\t\t/*\n\t\t * TODO: Settings domain controllers\n\t\t */\n\t\t'controllers/advanced/types',\n\t\t'controllers/advanced/data',\n\t\t'controllers/advanced/formSettings',\n\t\t'controllers/advanced/editActive',\n\t\t'controllers/advanced/clickEdit',\n\t\t'controllers/advanced/calculations'\n\t],\n\tfunction(\n\t\t/*\n\t\t * Application controllers\n\t\t */\n\t\tDrawer,\n\t\tDrawerConfig,\n\t\tDomainConfig,\n\t\tAppData,\n\t\tDrawerToggleSettingGroup,\n\t\tUpdateDB,\n\t\tFormData,\n\t\tPreviewLink,\n\t\tAppMenuButtons,\n\t\tAppTrackChanges,\n\t\tAppUndoChanges,\n\t\tAppPublishResponse,\n\t\tAppChangeDomain,\n\t\tPushstate,\n\t\tHotkeys,\n\t\tCleanState,\n\t\tCoreUndo,\n\t\tCloneModelDeep,\n\t\tDrawerSettingChildView,\n\t\tChangeSettingDefault,\n\t\tFieldset,\n\t\tToggleSetting,\n\t\tItemControls,\n\t\tMergeTags,\n\t\tItemSettingFill,\n\t\tConfirmPublish,\n\t\tRTE,\n\t\tChangeMenu,\n\t\t/*\n\t\t * Fields domain controllers\n\t\t */\n\t\tFieldTypes,\n\t\tFieldTypeDrag,\n\t\tFieldStagingDrag,\n\t\tSavedFields,\n\t\tStagedFieldsData,\n\t\tStagedFieldsSortable,\n\t\tDrawerFilterFieldTypes,\n\t\tMainContentFieldsSortable,\n\t\tFieldData,\n\t\tOptionRepeater,\n\t\tFieldsEditActive,\n\t\tFieldSettings,\n\t\tFieldCreditCard,\n\t\tFieldQuantity,\n\t\tFieldShipping,\n\t\tFieldKey,\n\t\t/*\n\t\t * TODO: Actions domain controllers\n\t\t */\n\t\tActionTypes,\n\t\tActionData,\n\t\tActionSettings,\n\t\tActionEditActive,\n\t\tActionAddTypes,\n\t\tActionTypeDrag,\n\t\tActionDroppable,\n\t\tActionFilterTypes,\n\t\t/*\n\t\t * TODO: Settings domain controllers\n\t\t */\n\t\tSettingTypes,\n\t\tSettingData,\n\t\tFormSettings,\n\t\tSettingsEditActive,\n\t\tSettingsClickEdit,\n\t\tAdvancedCalculations\n\t\t\n\t) {\n\t\tvar controller = Marionette.Object.extend( {\n\t\t\tinitialize: function() {\n\t\t\t\t/*\n\t\t\t\t * Application controllers\n\t\t\t\t */\n\t\t\t\tnew Hotkeys();\n\t\t\t\tnew Drawer();\n\t\t\t\tnew DrawerConfig();\n\t\t\t\tnew DomainConfig();\n\t\t\t\tnew DrawerToggleSettingGroup();\n\t\t\t\tnew UpdateDB();\n\t\t\t\tnew PreviewLink();\n\t\t\t\tnew AppMenuButtons();\n\t\t\t\tnew AppTrackChanges();\n\t\t\t\tnew AppUndoChanges();\n\t\t\t\tnew AppPublishResponse();\n\t\t\t\tnew AppChangeDomain();\n\t\t\t\tnew CleanState();\n\t\t\t\tnew CoreUndo();\n\t\t\t\tnew CloneModelDeep();\n\t\t\t\tnew ItemControls();\n\t\t\t\tnew ConfirmPublish();\n\t\t\t\tnew RTE();\n\t\t\t\tnew ChangeMenu();\n\t\t\t\t// new Pushstate();\n\t\t\t\t/*\n\t\t\t\t * Fields domain controllers\n\t\t\t\t * \n\t\t\t\t * Field-specific controllers should be loaded before our field type controller.\n\t\t\t\t * This ensures that any 'init' hooks are properly registered.\n\t\t\t\t */\n\t\t\t\tnew Fieldset();\n\t\t\t\tnew OptionRepeater();\n\n\t\t\t\tnew FieldTypes();\n\t\t\t\tnew FieldTypeDrag();\n\t\t\t\tnew FieldStagingDrag();\n\t\t\t\tnew SavedFields();\n\t\t\t\tnew StagedFieldsData();\n\t\t\t\tnew StagedFieldsSortable();\n\t\t\t\tnew DrawerFilterFieldTypes();\n\t\t\t\tnew MainContentFieldsSortable();\n\t\t\t\tnew ChangeSettingDefault();\n\t\t\t\tnew ToggleSetting();\n\t\t\t\tnew DrawerSettingChildView();\n\t\t\t\tnew FieldsEditActive();\n\t\t\t\tnew FieldSettings();\n\t\t\t\tnew FieldCreditCard();\n\t\t\t\tnew FieldQuantity();\n\t\t\t\tnew FieldShipping();\n\t\t\t\tnew FieldKey();\n\t\t\t\t/*\n\t\t\t\t * TODO: Actions domain controllers\n\t\t\t\t */\n\t\t\t\tnew ActionTypes();\n\t\t\t\tnew ActionData();\n\t\t\t\tnew ActionSettings();\n\t\t\t\tnew ActionEditActive();\n\t\t\t\tnew ActionAddTypes();\n\t\t\t\tnew ActionTypeDrag();\n\t\t\t\tnew ActionDroppable();\n\t\t\t\tnew ActionFilterTypes();\n\t\t\t\t/*\n\t\t\t\t * TODO: Settings domain controllers\n\t\t\t\t */\n\t\t\t\tnew SettingTypes();\n\t\t\t\tnew FormSettings();\n\t\t\t\tnew SettingData();\n\t\t\t\tnew SettingsEditActive();\n\t\t\t\tnew SettingsClickEdit();\n\t\t\t\tnew AdvancedCalculations();\n\t\t\t\t/*\n\t\t\t\t * Data controllers need to be set after every other controller has been setup, even if they aren't domain-specific.\n\t\t\t\t * AppData() was after FormData();\n\t\t\t\t */\n\t\t\t\tnew AppData();\n\t\t\t\tnew FieldData();\n\t\t\t\tnew FormData();\n\t\t\t\tnew MergeTags();\n\t\t\t\tnew ItemSettingFill();\n\t\t\t}\n\t\t});\n\n\t\treturn controller;\n} );\n\n","require.config( {\n\tbaseUrl: nfAdmin.requireBaseUrl + '/builder/'\n} );\n\nvar nfRadio = Backbone.Radio;\n\njQuery( document ).ready( function( $ ) {\n\trequire( ['views/app/builder', 'controllers/loadControllers'], function( BuilderView, LoadControllers ) {\n\n\t\tvar NinjaForms = Marionette.Application.extend( {\n\n\t\t\tinitialize: function( options ) {\n\t\t\t\t// Trigger an event before we load our controllers.\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'before:loadControllers', this );\n\t\t\t\t// Load our controllers.\n\t\t\t\tvar loadControllers = new LoadControllers();\n\t\t\t\t// Trigger an event after we load our controllers.\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'after:loadControllers', this );\n\t\t\t},\n\n\t\t\tonStart: function() {\n\t\t\t\tvar builderView = new BuilderView();\n\t\t\t\t// Trigger our after start event.\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'after:appStart', this );\n\t\t\t}\n\t\t} );\n\t\n\t\tvar ninjaForms = new NinjaForms();\n\t\tninjaForms.start();\n\t} );\n} );\ndefine(\"main\", function(){});\n\n"],"sourceRoot":"/source/"}