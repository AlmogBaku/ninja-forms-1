{"version":3,"sources":["../lib/almond.js","views/app/menuItem.js","views/app/menu.js","views/app/menuButtons.js","views/app/header.js","views/app/subHeader.js","views/app/formTitle.js","views/app/builderHeader.js","views/app/mainContentLoading.js","views/app/main.js","views/app/drawer/mobileMenu.js","views/app/drawer/headerDefault.js","views/app/drawer/contentEmpty.js","views/app/drawer.js","views/app/drawer/mergeTagItem.js","views/app/drawer/mergeTagsSection.js","views/app/drawer/mergeTagsContent.js","views/app/builder.js","controllers/app/drawer.js","models/app/drawerModel.js","models/app/drawerCollection.js","views/fields/drawer/stagedField.js","views/fields/drawer/stagingEmpty.js","views/fields/drawer/stagingCollection.js","models/fields/stagingModel.js","models/fields/stagingCollection.js","views/fields/drawer/typeSection.js","views/fields/drawer/typeSectionCollection.js","views/fields/drawer/addField.js","views/app/drawer/itemSettingCollection.js","views/app/drawer/itemSettingGroup.js","views/app/drawer/itemSettingGroupCollection.js","views/app/drawer/editSettings.js","views/actions/drawer/typeButton.js","views/actions/drawer/typeCollection.js","views/actions/drawer/addAction.js","views/settings/drawer/editFormSettings.js","views/app/drawer/contentViewChangesItem.js","views/app/drawer/contentViewChanges.js","views/app/drawer/headerViewChanges.js","controllers/app/drawerConfig.js","models/app/domainModel.js","models/app/domainCollection.js","views/fields/mainHeader.js","views/fields/subHeader.js","views/app/itemControls.js","views/fields/fieldItem.js","views/fields/mainContentEmpty.js","views/fields/mainContentFieldCollection.js","views/actions/mainHeader.js","views/actions/subHeader.js","views/actions/actionItem.js","views/actions/mainContentEmpty.js","views/actions/mainContent.js","views/settings/mainHeader.js","views/settings/subHeader.js","views/settings/settingItem.js","views/settings/mainContent.js","controllers/app/domainConfig.js","models/app/appModel.js","controllers/app/data.js","controllers/app/drawerToggleSettingGroup.js","controllers/app/updateDB.js","models/app/formModel.js","controllers/app/formData.js","controllers/app/previewLink.js","controllers/app/menuButtons.js","models/app/changeModel.js","models/app/changeCollection.js","controllers/app/trackChanges.js","controllers/app/undoChanges.js","controllers/app/publishResponse.js","controllers/app/changeDomain.js","controllers/app/pushstate.js","controllers/app/hotkeys.js","controllers/app/cleanState.js","controllers/app/coreUndo.js","controllers/app/cloneModelDeep.js","views/app/drawer/itemSetting.js","controllers/app/getSettingChildView.js","controllers/app/changeSettingDefault.js","views/app/drawer/typeSettingFieldset.js","models/app/settingModel.js","models/app/settingCollection.js","controllers/app/fieldset.js","controllers/app/toggleSetting.js","controllers/app/itemControls.js","models/app/mergeTagModel.js","models/app/mergeTagCollection.js","controllers/app/mergeTags.js","controllers/app/itemSettingFill.js","models/app/typeModel.js","models/app/typeCollection.js","models/app/settingGroupModel.js","models/app/settingGroupCollection.js","models/fields/typeSectionModel.js","models/fields/typeSectionCollection.js","controllers/fields/types.js","controllers/fields/fieldTypeDrag.js","controllers/fields/stagingDrag.js","controllers/fields/savedFieldsSection.js","controllers/fields/staging.js","controllers/fields/stagingSortable.js","controllers/fields/filterTypes.js","controllers/fields/sortable.js","models/fields/fieldModel.js","models/fields/fieldCollection.js","controllers/fields/data.js","models/fields/listOptionModel.js","models/fields/listOptionCollection.js","views/fields/drawer/typeSettingListOption.js","views/fields/drawer/typeSettingListEmpty.js","views/fields/drawer/typeSettingListComposite.js","controllers/fields/optionRepeater.js","controllers/fields/editActive.js","controllers/fields/fieldSettings.js","controllers/fields/fieldQuantity.js","controllers/actions/types.js","models/actions/actionModel.js","models/actions/actionCollection.js","controllers/actions/data.js","controllers/actions/actionSettings.js","controllers/actions/editActive.js","controllers/actions/addActionTypes.js","controllers/actions/typeDrag.js","controllers/actions/droppable.js","models/actions/typeModel.js","models/actions/typeCollection.js","controllers/actions/filterTypes.js","controllers/settings/types.js","models/settings/settingsModel.js","controllers/settings/data.js","controllers/settings/formSettings.js","controllers/settings/editActive.js","controllers/settings/clickEdit.js","controllers/loadControllers.js","main.js"],"names":["requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","view","Marionette","ItemView","extend","tagName","template","initialize","this","listenTo","nfRadio","channel","render","model","on","onRender","$el","children","unwrap","setElement","events","click a","clickAppMenu","trigger","templateHelpers","renderDashicons","dashicons","renderClasses","classes","currentDomain","request","get","renderUrl","url","renderTarget","renderDisabled","disabled","appMenuItemView","CollectionView","childView","onShow","el","find","that","renderPublish","publishWidth","_","html","maybeDisabled","maybeRenderCancel","publishEL","outerWidth","click .publish","click .viewChanges","clickPublish","clickViewChanges","appMenuCollectionView","appMenuButtonsView","LayoutView","regions","menu","buttons","appDomainCollection","show","collection","renderTitle","formData","appHeaderView","appSubHeaderView","formTitleView","app","formTitle","appSub","changeSubHeader","subHeaderView","className","LoadingView","header","content","reply","getMainEl","parent","perfectScrollbar","disableSelection","console","log","contentView","clearFilter","blurFilter","getEl","keyup .nf-filter","input .nf-filter","focus input","changeFilter","currentDrawer","target","maybeChangeFilter","keyCode","addObject","filterEl","trim","val","focus","blur","getFocus","drawerHeaderView","drawerEmptyView","loadContent","emptyContent","drawerID","data","drawer","headerView","click .nf-toggle-drawer","clickToggleDrawer","onBeforeDestroy","off","clickTag","active","mergeTagItemView","CompositeView","fieldCollection","updateFields","attachHtml","collectionView","append","set","mergeTagsSectionView","mainView","menuDrawerView","drawerView","mergeTagsContentView","menuDrawer","mergeTagsContent","mergeTags","getBuilderEl","click .nf-open-drawer","click .nf-change-domain","click .nf-close-drawer","openDrawer","closeDrawer","changeDomain","controller","clickOpenDrawer","toggleDrawerSize","getClosedDrawerPos","preventClose","enableClose","objPreventClose","filterFocused","maybePreventClose","builderEl","addClass","removeClass","rightClosed","drawerEl","css","right","checkCloseDrawerPos","setInterval","clearInterval","checkOpenDrawerPos","focusFilter","toggleClass","closedPos","width","keys","key","defaultHeaderView","Backbone","Model","defaults","getHeaderView","drawerModel","Collection","click .dashicons-dismiss","removeStagedField","stagedFieldView","stagedFieldsEmptyView","emptyView","getStagedFieldsEl","sortable","placeholder","helper","tolerance","over","ui","out","receive","update","start","stop","draggable","opacity","connectToSortable","height","element","clone","left","top","stagingModel","comparator","bindAll","dragging","scroll","click .nf-item","keydown .nf-item","clickFieldType","maybeClickFieldType","renderFieldTypes","each","fieldTypes","type","nicename","savedField","isSavedField","fieldTypeSectionView","drawerStagingView","StagingCollection","fieldTypeSectionCollectionView","staging","primary","secondary","filterFieldTypes","removeFieldTypeFilter","savedCollection","primaryCollection","fieldTypeSectionCollection","secondaryCollection","stagingCollection","filteredSectionCollection","reset","childViewOptions","dataModel","getChildView","itemSettingCollectionView","settings","empty","click .toggle","clickToggleGroup","renderLabel","label","renderArrowDir","display","itemSettingGroupView","itemSettingGroupCollectionView","settingGroups","groupCollection","maybeRenderTitle","renderTypeNicename","domainID","clickAddAction","window","open","image","section","renderStyle","actionTypeButtonView","renderNicename","slug","actionTypeCollectionView","filteractionTypes","removeactionTypeFilter","installedActions","availableActions","filteredInstalled","filteredAvailable","click .undoSingle","undoSingle","viewChangesItem","click .undoChanges","clickUndoChanges","drawerCollection","addFieldView","editSettingsView","addActionView","editFormSettingsView","viewChangesView","viewChangesHeaderView","getContentView","getDrawerCollection","getDrawer","hotkeys","domainModel","models","hide","click .nf-edit-settings","click .nf-delete","click .nf-duplicate","clickEdit","clickDelete","clickDuplicateField","itemControlsView","itemControls","editActive","renderRequired","required","getFieldID","isNumeric","click","maybeClickEdit","hasClass","droppable","accept","hoverClass","item","drop","mainContentFieldView","mainContentFieldEmptyView","reorderOnSort","getSortableEl","fieldTemplate","TemplateCache","containment","cancel","actionCollection","change input","changeToggle","settingModel","renderToggle","actionLabel","renderTooltip","help","renderMergeTags","use_merge_tags","actionView","activeClass","settingItem","fieldsMainHeaderView","fieldsSubHeaderView","fieldsMainContentFieldCollectionView","actionsMainHeaderView","actionsSubHeaderView","actionsMainContentView","settingsMainHeaderView","settingsSubHeaderView","settingsMainContentView","Esc","Ctrl+Shift+n","Ctrl+Shift+a","Ctrl+Shift+s","Alt+Ctrl+t","up","down","Shift+return","getMainHeaderView","getSubHeaderView","getMainContentView","Ctrl+Shift+f","nfAdmin","previewurl","getDomainCollection","getDomainModel","loading","changeStatus","appModel","clean","getData","getSetting","getCurrentDomain","getCurrentDrawer","updateCurrentDomain","updateCurrentDrawer","updateSetting","setting","currentDrawerID","toggleSettingGroup","updateDB","action","jsAction","JSON","parse","stringify","removedIDs","fields","field","parent_id","deleted_fields","actions","deleted_actions","post","ajaxurl","form","security","ajaxNonce","response","exception","formModel","preloadedFormData","getFormData","disablePreview","enablePreview","changePreviewNicename","appDomains","preview","publish","viewChanges","changeCollection","parseInt","cid","ChangeModel","registerChange","getCollection","maybeResetCollection","changes","dashicon","changeModel","add","undoChanges","sort","change","undoAll","publishResponse","new_ids","newID","oldID","changeAppDomain","changePushState","history","pushState","location","href","reExp","toString","newUrl","changeHotkeys","addNewField","addNewAction","changeDomainFields","changeDomainActions","changeDomainSettings","document","hotkey","msg","fieldsDomain","actionsDomain","settingsDomain","ignoreAttributes","setAppClean","attr","changedAttributes","changedAttr","after","undoChangeSetting","undoAddObject","undoRemoveObject","undoDuplicateObject","undoSortFields","undoAddListOption","undoRemoveListOption","undoSortListOptions","fieldModel","before","maybeRemoveChange","objectModel","newIDs","results","where","remove","objectCollection","objModels","optionModel","cloneModelDeep","attributes","options","copy","constructor","newModel","onBeforeRender","next","jBox","maxWidth","theme","closeOnClick","title","position","x","y","closeOnEsc","maxHeight","onOpen","currentElement","onCloseComplete","renderSetting","renderLabelClasses","renderWidth","changeSetting","itemSettingView","getSettingChildView","settingChildView","currentDomainID","object","fieldsetView","settingCollection","createSettingsCollection","settingTypeModel","clickDuplicate","tmpID","mergeTagModel","mergeTagCollection","tagSectionCollection","tagSection","tags","tag","clickMergeTag","updateCurrentElement","getMergeTags","tagModel","currentValue","currentPos","caret","newPos","substr","openMergeTags","returnMergeTags","preventDefault","currentModel","upMergeTags","changeActiveTag","downMergeTags","dir","inc","currentIndex","nextModel","userInfo","system","updateOpen","beforeRenderSetting","typeModel","settingGroupModel","typeSectionModel","fieldTypeCollection","fieldTypeSettingGroupCollection","fieldTypeSections","fieldTypeData","group","groupTmp","fieldType","alias","parentType","settingDefaults","getFieldType","getTypeCollection","getTypeSections","addStagedField","startDrag","stopDrag","getCurrentDraggableHelperClone","context","mainEl","style","setProperty","draggableHelperClone","stagedFields","num","getSavedFields","getStagingCollection","sortStagedFields","clearStagedFields","beforeCloseDrawer","now","tmpField","sortableEl","order","search","pos","addActiveClass","removeActiveClass","receiveStagedFields","overStagedFields","outStagedFields","startStagedFields","stopStagedFields","stagedFieldsEl","currentHelper","helperClone","filtered","filterCollection","toLowerCase","filter","found","receiveFieldsSortable","overfieldsSortable","outFieldsSortable","stopFieldsSortable","startFieldsSortable","updateFieldsSortable","addField","insertedAt","silent","fieldWidth","dragFieldID","dragModel","oldPos","_previousAttributes","objectType","objectDomain","bind","updateOrder","tmpNum","removeField","getFieldCollection","getField","getTmpFieldID","deleteField","sortFields","updateFieldSetting","listOptionModel","addOption","columns","keyup","changeOption","deleteOption","maybeAddOption","getColumns","listOptionView","listEmptyView","handle","forcePlaceholderSize","renderHeaders","click .nf-add-new","clickAddOption","listOptionCollection","listCompositeView","createOptionCollection","updateOptionSortable","stopOptionSortable","startOptionSortable","calc","selected","optionCollection","triggerFieldModel","newOrder","clearEditActive","fieldSettings","getSettingModel","findWhere","register","productFields","getProductFields","typeCollection","settingGroupCollection","actionTypeData","actionType","link","getType","getInstalledActions","getAvailableActions","actionModel","addAction","removeAction","getAction","getTmpID","deleteAction","actionSettings","dropActionType","type_slug","actionTypeModel","filterActionTypes","newInstalled","newAvailable","formSettingTypeData","settingType","settingsModel","getSettings","formSettings","Drawer","DrawerConfig","DomainConfig","AppData","DrawerToggleSettingGroup","UpdateDB","FormData","PreviewLink","AppMenuButtons","AppTrackChanges","AppUndoChanges","AppPublishResponse","AppChangeDomain","Pushstate","Hotkeys","CleanState","CoreUndo","CloneModelDeep","DrawerSettingChildView","ChangeSettingDefault","Fieldset","ToggleSetting","ItemControls","MergeTags","ItemSettingFill","FieldTypes","FieldTypeDrag","FieldStagingDrag","SavedFields","StagedFieldsData","StagedFieldsSortable","DrawerFilterFieldTypes","MainContentFieldsSortable","FieldData","OptionRepeater","FieldsEditActive","FieldSettings","FieldQuantity","ActionTypes","ActionData","ActionSettings","ActionEditActive","ActionAddTypes","ActionTypeDrag","ActionDroppable","ActionFilterTypes","SettingTypes","SettingData","FormSettings","SettingsEditActive","SettingsClickEdit","baseUrl","requireBaseUrl","Radio","ready","$","BuilderView","LoadControllers","NinjaForms","Application","onStart","ninjaForms"],"mappings":"AAAA,CAAA,WAUA,GAAAA,GAAAC,EAAAC,GACA,SAAAC,GAUA,QAAAC,GAAAC,EAAAC,GACA,MAAAC,GAAAC,KAAAH,EAAAC,GAWA,QAAAG,GAAAC,EAAAC,GACA,GAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAAZ,GAAAA,EAAAa,MAAA,KACAC,EAAAC,EAAAD,IACAE,EAAAF,GAAAA,EAAA,QAGA,IAAAf,GAAA,MAAAA,EAAAkB,OAAA,GAIA,GAAAjB,EAAA,CAgBA,IAfAD,EAAAA,EAAAc,MAAA,KACAR,EAAAN,EAAAmB,OAAA,EAGAH,EAAAI,cAAAC,EAAAC,KAAAtB,EAAAM,MACAN,EAAAM,GAAAN,EAAAM,GAAAiB,QAAAF,EAAA,KAOArB,EAAAa,EAAAW,MAAA,EAAAX,EAAAM,OAAA,GAAAM,OAAAzB,GAGAU,EAAA,EAAAA,EAAAV,EAAAmB,OAAAT,GAAA,EAEA,GADAE,EAAAZ,EAAAU,GACA,MAAAE,EACAZ,EAAA0B,OAAAhB,EAAA,GACAA,GAAA,MACA,IAAA,OAAAE,EAAA,CACA,GAAA,IAAAF,IAAA,OAAAV,EAAA,IAAA,OAAAA,EAAA,IAOA,KACAU,GAAA,IACAV,EAAA0B,OAAAhB,EAAA,EAAA,GACAA,GAAA,GAMAV,EAAAA,EAAA2B,KAAA,SACA,KAAA3B,EAAA4B,QAAA,QAGA5B,EAAAA,EAAA6B,UAAA,GAKA,KAAAhB,GAAAI,IAAAF,EAAA,CAGA,IAFAb,EAAAF,EAAAc,MAAA,KAEAJ,EAAAR,EAAAiB,OAAAT,EAAA,EAAAA,GAAA,EAAA,CAGA,GAFAP,EAAAD,EAAAsB,MAAA,EAAAd,GAAAiB,KAAA,KAEAd,EAGA,IAAAF,EAAAE,EAAAM,OAAAR,EAAA,EAAAA,GAAA,EAKA,GAJAP,EAAAW,EAAAF,EAAAW,MAAA,EAAAb,GAAAgB,KAAA,MAIAvB,IACAA,EAAAA,EAAAD,IACA,CAEAE,EAAAD,EACAG,EAAAG,CACA,OAMA,GAAAL,EACA,OAMAG,GAAAS,GAAAA,EAAAd,KACAK,EAAAS,EAAAd,GACAM,EAAAC,IAIAL,GAAAG,IACAH,EAAAG,EACAD,EAAAE,GAGAJ,IACAH,EAAAwB,OAAA,EAAAnB,EAAAF,GACAL,EAAAE,EAAAyB,KAAA,MAIA,MAAA3B,GAGA,QAAA8B,GAAAC,EAAAC,GACA,MAAA,YAIA,GAAAC,GAAAC,EAAApC,KAAAqC,UAAA,EAQA,OAHA,gBAAAF,GAAA,IAAA,IAAAA,EAAAd,QACAc,EAAAG,KAAA,MAEAC,EAAAC,MAAA7C,EAAAwC,EAAAR,QAAAM,EAAAC,MAIA,QAAAO,GAAAR,GACA,MAAA,UAAA/B,GACA,MAAAD,GAAAC,EAAA+B,IAIA,QAAAS,GAAAC,GACA,MAAA,UAAAC,GACAC,EAAAF,GAAAC,GAIA,QAAAE,GAAA5C,GACA,GAAAN,EAAAmD,EAAA7C,GAAA,CACA,GAAAiC,GAAAY,EAAA7C,SACA6C,GAAA7C,GACA8C,EAAA9C,IAAA,EACA+C,EAAAT,MAAA7C,EAAAwC,GAGA,IAAAvC,EAAAiD,EAAA3C,KAAAN,EAAAoD,EAAA9C,GACA,KAAA,IAAAgD,OAAA,MAAAhD,EAEA,OAAA2C,GAAA3C,GAMA,QAAAiD,GAAAjD,GACA,GAAAkD,GACAC,EAAAnD,EAAAA,EAAA4B,QAAA,KAAA,EAKA,OAJAuB,GAAA,KACAD,EAAAlD,EAAA6B,UAAA,EAAAsB,GACAnD,EAAAA,EAAA6B,UAAAsB,EAAA,EAAAnD,EAAAmB,UAEA+B,EAAAlD,GA8CA,QAAAoD,GAAApD,GACA,MAAA,YACA,MAAAgB,IAAAA,EAAAA,QAAAA,EAAAA,OAAAhB,QA1OA,GAAA+C,GAAAV,EAAAgB,EAAAC,EACAX,KACAE,KACA7B,KACA8B,KACAjD,EAAA0D,OAAAC,UAAAC,eACAvB,KAAAV,MACAH,EAAA,OA2LAgC,GAAA,SAAArD,EAAA+B,GACA,GAAA2B,GACAC,EAAAV,EAAAjD,GACAkD,EAAAS,EAAA,EA2BA,OAzBA3D,GAAA2D,EAAA,GAEAT,IACAA,EAAAnD,EAAAmD,EAAAnB,GACA2B,EAAAd,EAAAM,IAIAA,EAEAlD,EADA0D,GAAAA,EAAA3D,UACA2D,EAAA3D,UAAAC,EAAAuC,EAAAR,IAEAhC,EAAAC,EAAA+B,IAGA/B,EAAAD,EAAAC,EAAA+B,GACA4B,EAAAV,EAAAjD,GACAkD,EAAAS,EAAA,GACA3D,EAAA2D,EAAA,GACAT,IACAQ,EAAAd,EAAAM,MAMAU,EAAAV,EAAAA,EAAA,IAAAlD,EAAAA,EACA6D,EAAA7D,EACA8D,GAAAZ,EACAa,EAAAL,IAUAJ,GACA/D,QAAA,SAAAS,GACA,MAAA8B,GAAA9B,IAEAgE,QAAA,SAAAhE,GACA,GAAAiE,GAAAtB,EAAA3C,EACA,OAAA,mBAAAiE,GACAA,EAEAtB,EAAA3C,OAGAkE,OAAA,SAAAlE,GACA,OACAmE,GAAAnE,EACAoE,IAAA,GACAJ,QAAArB,EAAA3C,GACAgB,OAAAoC,EAAApD,MAKA+C,EAAA,SAAA/C,EAAAqE,EAAAC,EAAAvC,GACA,GAAAwC,GAAA9B,EAAA+B,EAAAzD,EAAAL,EAGA+D,EAFAxC,KACAyC,QAAAJ,EAOA,IAHAvC,EAAAA,GAAA/B,EAGA,cAAA0E,GAAA,aAAAA,EAAA,CAKA,IADAL,GAAAA,EAAAlD,QAAAmD,EAAAnD,QAAA,UAAA,UAAA,UAAAkD,EACA3D,EAAA,EAAAA,EAAA2D,EAAAlD,OAAAT,GAAA,EAKA,GAJAK,EAAAsC,EAAAgB,EAAA3D,GAAAqB,GACAU,EAAA1B,EAAA6C,EAGA,YAAAnB,EACAR,EAAAvB,GAAA4C,EAAA/D,QAAAS,OACA,IAAA,YAAAyC,EAEAR,EAAAvB,GAAA4C,EAAAU,QAAAhE,GACAyE,GAAA,MACA,IAAA,WAAAhC,EAEA8B,EAAAtC,EAAAvB,GAAA4C,EAAAY,OAAAlE,OACA,IAAAN,EAAAiD,EAAAF,IACA/C,EAAAmD,EAAAJ,IACA/C,EAAAoD,EAAAL,GACAR,EAAAvB,GAAAkC,EAAAH,OACA,CAAA,IAAA1B,EAAAgD,EAIA,KAAA,IAAAf,OAAAhD,EAAA,YAAAyC,EAHA1B,GAAAgD,EAAAY,KAAA5D,EAAA8C,EAAA/B,EAAAC,GAAA,GAAAS,EAAAC,OACAR,EAAAvB,GAAAiC,EAAAF,GAMA+B,EAAAF,EAAAA,EAAAhC,MAAAK,EAAA3C,GAAAiC,GAAA2C,OAEA5E,IAIAuE,GAAAA,EAAAP,UAAAvE,GACA8E,EAAAP,UAAArB,EAAA3C,GACA2C,EAAA3C,GAAAuE,EAAAP,QACAQ,IAAA/E,GAAAgF,IAEA9B,EAAA3C,GAAAwE,QAGAxE,KAGA2C,EAAA3C,GAAAsE,IAIAhF,EAAAC,EAAA8C,EAAA,SAAAgC,EAAAC,EAAAvC,EAAAC,EAAA6C,GACA,GAAA,gBAAAR,GACA,MAAAf,GAAAe,GAEAf,EAAAe,GAAAC,GAMA1B,EAAAS,EAAAgB,EAAAC,GAAAV,EACA,KAAAS,EAAA3C,OAAA,CAMA,GAJAV,EAAAqD,EACArD,EAAAqD,MACAhC,EAAArB,EAAAqD,KAAArD,EAAAsD,WAEAA,EACA,MAGAA,GAAA5C,QAGA2C,EAAAC,EACAA,EAAAvC,EACAA,EAAA,MAEAsC,EAAA5E,EA6BA,MAxBA6E,GAAAA,GAAA,aAIA,kBAAAvC,KACAA,EAAAC,EACAA,EAAA6C,GAIA7C,EACAe,EAAAtD,EAAA4E,EAAAC,EAAAvC,GAQA+C,WAAA,WACA/B,EAAAtD,EAAA4E,EAAAC,EAAAvC,IACA,GAGAM,GAOAA,EAAArB,OAAA,SAAA+D,GACA,MAAA1C,GAAA0C,IAMAzF,EAAA0F,SAAArC,EAEAnD,EAAA,SAAAQ,EAAAqE,EAAAC,GACA,GAAA,gBAAAtE,GACA,KAAA,IAAAgD,OAAA,4DAIAqB,GAAA3C,SAIA4C,EAAAD,EACAA,MAGA3E,EAAAiD,EAAA3C,IAAAN,EAAAmD,EAAA7C,KACA6C,EAAA7C,IAAAA,EAAAqE,EAAAC,KAIA9E,EAAAyF,KACAC,QAAA,MAIA1F,EAAA,gBAAA,cCvaAA,EAAA,wBAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,yBAEAC,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,uBAAAH,KAAAI,QAEAJ,KAAAK,MAAAC,GAAA,SAAAN,KAAAI,OAAAJ,OASAO,SAAA,WACAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,MAIAI,QACAC,UAAA,gBAYAC,aAAA,SAAAvC,GACA2B,EAAAC,QAAA,OAAAY,QAAA,aAAAxC,EAAAyB,KAAAK,QASAW,gBAAA,WACA,OAOAC,gBAAA,WACA,MAAAjB,MAAAkB,UACA,0BAAAlB,KAAAkB,UAAA,YAEA,IASAC,cAAA,WACA,GAAAC,GAAApB,KAAAoB,QACAC,EAAAnB,EAAAC,QAAA,OAAAmB,QAAA,oBAIA,OAHAD,GAAAE,IAAA,OAAAvB,KAAAvB,KACA2C,GAAA,WAEAA,GAQAI,UAAA,WACA,MAAA,IAAAxB,KAAAyB,IACAzB,KAAAyB,IAEA,KASAC,aAAA,WACA,MAAA,IAAA1B,KAAAyB,IACA,SAEA,SAUAE,eAAA,WACA,MAAA3B,MAAA4B,SACA,WAEA,OAQA,OAAAnC,KC1HA3F,EAAA,kBAAA,sBAAA,SAAA+H,GACA,GAAApC,GAAAC,WAAAoC,eAAAlC,QACAC,QAAA,MACAkC,UAAAF,EAQAG,OAAA,WACAxC,OAAAQ,KAAAiC,IAAAC,KAAA,WAAAxB,WAIA,OAAAjB,KChBA3F,EAAA,2BAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,OACAC,SAAA,oCAEAC,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,eAAAH,KAAAI,OAAAJ,MACAA,KAAAC,SAAAC,EAAAC,QAAA,OAAA,iBAAAH,KAAAI,OAAAJ,OASAgB,gBAAA,WACA,GAAAmB,GAAAnC,IACA,QAQAoC,cAAA,WAMA,MALAD,GAAAE,aACArC,KAAAqC,aAAA,gBAAAF,EAAAE,aAAA,iBAEArC,KAAAqC,aAAA,GAEAnC,EAAAC,QAAA,OAAAmB,QAAA,cAAA,WACAgB,EAAAxC,SAAAN,OAAA,uCAAA+C,OAAAvC,MAEAsC,EAAAxC,SAAAN,OAAA,sCAAA+C,OAAAvC,OAUAwC,cAAA,WACA,MAAAtC,GAAAC,QAAA,OAAAmB,QAAA,cAAA,SACA,WAEA,IASAmB,kBAAA,WACA,MAAAvC,GAAAC,QAAA,OAAAmB,QAAA,cAAA,SAGA,GAFAgB,EAAAxC,SAAAN,OAAA,oCAAA+C,OAAAvC,SAQAgC,OAAA,WACA,GAAAU,GAAAlD,OAAAQ,KAAAiC,IAAAC,KAAA,WACAlC,MAAAqC,aAAA7C,OAAAkD,GAAAC,YAAA,IAOA/B,QACAgC,iBAAA,eACAC,qBAAA,oBAWAC,aAAA,SAAAvE,GACA2B,EAAAC,QAAA,OAAAY,QAAA,gBAAAxC,IAWAwE,iBAAA,SAAAxE,GACA2B,EAAAC,QAAA,OAAAY,QAAA,oBAAAxC,KAKA,OAAAkB,KC7GA3F,EAAA,oBAAA,iBAAA,yBAAA,SAAAkJ,EAAAC,GACA,GAAAxD,GAAAC,WAAAwD,WAAAtD,QACAC,QAAA,MACAC,SAAA,sBAEAqD,SAEAC,KAAA,eAEAC,QAAA,mBASArB,OAAA,WAEA,GAAAsB,GAAApD,EAAAC,QAAA,OAAAmB,QAAA,uBAEAtB,MAAAoD,KAAAG,KAAA,GAAAP,IAAAQ,WAAAF,KACAtD,KAAAqD,QAAAE,KAAA,GAAAN,MAIA,OAAAxD,KC3BA3F,EAAA,yBAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,uBAGA,OAAAL,KCNA3F,EAAA,yBAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,6BAEAC,WAAA,WAEAC,KAAAK,MAAAC,GAAA,eAAAN,KAAAI,OAAAJ,OASAO,SAAA,WACAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,MASAQ,gBAAA,WAEA,OACAyC,YAAA,WACA,GAAAC,GAAAxD,EAAAC,QAAA,OAAAmB,QAAA,eACA,OAAAoC,GAAAnC,IAAA,YAAAA,IAAA,aAOA,OAAA9B,KCpCA3F,EAAA,2BAAA,mBAAA,sBAAA,uBAAA,SAAA6J,EAAAC,EAAAC,GAEA,GAAApE,GAAAC,WAAAwD,WAAAtD,QACAC,QAAA,MACAC,SAAA,kBAEAqD,SACAW,IAAA,iBACAC,UAAA,qBACAC,OAAA,sBAGAjE,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,uBAAAH,KAAAiE,kBAGAjC,OAAA,WACAhC,KAAA8D,IAAAP,KAAA,GAAAI,IAMA3D,KAAAiE,mBAGAA,gBAAA,WACA,GAAA5C,GAAAnB,EAAAC,QAAA,OAAAmB,QAAA,qBACA4C,EAAA7C,EAAAE,IAAA,oBAAAnH,KAAAiH,EACArB,MAAAgE,OAAAT,KAAAW,KAIA,OAAAzE,KAEA3F,EAAA,kCAAA,WC9CA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAsE,UAAA,oBACArE,SAAA,iCAGA,OAAAL,KAGA3F,EAAA,kBAAA,gCAAA,SAAAsK,GCRA,GAAA3E,GAAAC,WAAAwD,WAAAtD,QACAC,QAAA,MACAC,SAAA,gBAEAqD,SACAkB,OAAA,kBACAC,QAAA,oBAGAvE,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,uBAAAH,KAAAI,QACAF,EAAAC,QAAA,OAAAoE,MAAA,aAAAvE,KAAAwE,UAAAxE,OAKAgC,OAAA,WACAxC,OAAAQ,KAAAiC,IAAAwC,SAAAC,mBACAxE,EAAAC,QAAA,QAAAY,QAAA,aACAvB,OAAAQ,KAAAiC,IAAAwC,SAAAE,oBAGApE,SAAA,WACAL,EAAAC,QAAA,OAAAmB,QAAA,oBAIAsD,SAAAC,IAAA,OACA,IAAAC,GAAA,GAAAV,EACApE,MAAAsE,QAAAf,KAAAuB,GAEA5E,EAAAC,QAAA,QAAAY,QAAA,gBAGAyD,UAAA,WACA,MAAAhF,QAAAQ,KAAAiC,IAAAwC,WAKA,OAAAhF,KClCA3F,EAAA,iCAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,wBAGA,OAAAL,KCJA3F,EAAA,oCAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,iCAQAS,SAAA,WAEAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,KAEAN,EAAAC,QAAA,UAAAoE,MAAA,eAAAvE,KAAA+E,YAAA/E,MACAE,EAAAC,QAAA,UAAAoE,MAAA,cAAAvE,KAAAgF,WAAAhF,MACAE,EAAAC,QAAA,UAAAoE,MAAA,eAAAvE,KAAAiF,MAAAjF,OAGAY,QACAsE,mBAAA,oBACAC,mBAAA,eACAC,cAAA,YAWAC,aAAA,SAAA9G,GACA,GAAA+G,GAAApF,EAAAC,QAAA,OAAAmB,QAAA,oBACApB,GAAAC,QAAA,UAAAmF,EAAA/D,IAAA,OAAAR,QAAA,gBAAAxC,EAAAgH,OAAAvI,MAAAuB,IAUAiH,kBAAA,SAAAjH,GACA,IAAAA,EAAAkH,UACAlH,EAAAmH,WAAA,EACA1F,KAAAqF,aAAA9G,KAYAwG,YAAA,WACA,GAAAY,GAAAnG,OAAAQ,KAAAiC,IAAAC,KAAA,aACA,KAAA1C,OAAAoG,KAAAD,EAAAE,SACAF,EAAAE,IAAA,IACAF,EAAA5E,QAAA,SACA4E,EAAAG,UAUAd,WAAA,WACAxF,OAAAQ,KAAAiC,IAAAC,KAAA,cAAA6D,QASAd,MAAA,WACA,MAAAzF,QAAAQ,KAAAiC,IAAAC,KAAA,eAGA8D,SAAA,WACA9F,EAAAC,QAAA,UAAAY,QAAA,oBAIA,OAAAtB,KClGA3F,EAAA,mCAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,iCAGA,OAAAL,KCPA3F,EAAA,oBAAA,iCAAA,iCAAA,SAAAmM,EAAAC,GAEA,GAAAzG,GAAAC,WAAAwD,WAAAtD,QACAE,SAAA,kBAEAqD,SACAkB,OAAA,oBACAC,QAAA,sBAGAvE,WAAA,WACAG,EAAAC,QAAA,OAAAoE,MAAA,eAAAvE,KAAAiF,MAAAjF,MACAE,EAAAC,QAAA,UAAAoE,MAAA,qBAAAvE,KAAAmG,YAAAnG,MACAE,EAAAC,QAAA,UAAAoE,MAAA,sBAAAvE,KAAAoG,aAAApG,OAGAgC,OAAA,WACAxC,OAAAQ,KAAAiC,IAAAwC,SAAAC,oBAIAyB,YAAA,SAAAE,EAAAC,GACA,GAAAC,GAAArG,EAAAC,QAAA,OAAAmB,QAAA,aAAA+E,GACAvB,EAAAyB,EAAAhF,IAAA,kBAAAnH,KAAAmM,EAAAD,GACAE,EAAAD,EAAAhF,IAAA,iBAAAnH,KAAAmM,EAAAD,EAEAtG,MAAAqE,OAAAd,KAAAiD,GACAxG,KAAAsE,QAAAf,KAAAuB,IAIAsB,aAAA,WACApG,KAAAqE,OAAAd,KAAA,GAAA2C,IACAlG,KAAAsE,QAAAf,KAAA,GAAA2C,KAGAjB,MAAA,WACA,MAAAzF,QAAAQ,KAAAiC,IAAAwC,UAGA7D,QACA6F,0BAAA,qBAGAC,kBAAA,WACAxG,EAAAC,QAAA,OAAAY,QAAA,4BAKA,OAAAtB,KClDA3F,EAAA,mCAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,KAEAC,SAAA,2BAEA6G,gBAAA,WACA3G,KAAAK,MAAAuG,IAAA,gBAAA5G,KAAAI,SAGAL,WAAA,WACAC,KAAAK,MAAAC,GAAA,gBAAAN,KAAAI,OAAAJ,OAGAY,QACAC,UAAA,YAGAgG,SAAA,SAAAtI,GACA2B,EAAAC,QAAA,aAAAY,QAAA,iBAAAxC,EAAAyB,KAAAK,QAGAW,gBAAA,WACA,OACAG,cAAA,WACA,MAAAnB,MAAA8G,OACA,SADA,WAQA,OAAArH,KCjCA3F,EAAA,qCAAA,iCAAA,SAAAiN,GACA,GAAAtH,GAAAC,WAAAsH,cAAApH,QACAC,QAAA,MACAkC,UAAAgF,EACAjH,SAAA,8BAEAC,WAAA,WAGA,GAFAC,KAAAwD,WAAAxD,KAAAK,MAAAkB,IAAA,QACAvB,KAAAK,MAAAC,GAAA,SAAAN,KAAAI,OAAAJ,MACA,UAAAA,KAAAK,MAAAkB,IAAA,MACA,CAAArB,EAAAC,QAAA,UAAAmB,QAAA,oBAKAqF,gBAAA,WACA,GAAA,UAAA3G,KAAAK,MAAAkB,IAAA,MAAA,CACA,GAAA0F,GAAA/G,EAAAC,QAAA,UAAAmB,QAAA,iBACA2F,GAAAL,IAAA,MAAA5G,KAAAkH,aAAAlH,QAIAmH,WAAA,SAAAC,EAAArF,GACAvC,OAAA4H,EAAAnF,IAAAC,KAAA,eAAAmF,OAAAtF,EAAAE,KAGAiF,aAAA,WACA,GAAAD,GAAA/G,EAAAC,QAAA,UAAAmB,QAAA,iBACAtB,MAAAK,MAAAiH,IAAA,OAAAL,KAIA,OAAAxH,KChCA3F,EAAA,qCAAA,qCAAA,SAAAyN,GACA,GAAA9H,GAAAC,WAAAoC,eAAAlC,QACAC,QAAA,MACAC,SAAA,8BACAiC,UAAAwF,GAGA,OAAA9H,KCDA3F,EAAA,qBAAA,0BAAA,iBAAA,8BAAA,mBAAA,qCAAA,SAAA0M,EAAAgB,EAAAC,EAAAC,EAAAC,GACA,GAAAlI,GAAAC,WAAAwD,WAAAtD,QACAE,SAAA,mBACAmC,GAAA,cAEAkB,SACAkB,OAAA,aACAhH,KAAA,WACAuK,WAAA,kBACArB,OAAA,aACAsB,iBAAA,uBAGA9H,WAAA,WAEAC,KAAAI,QACA,IAAA0H,GAAA5H,EAAAC,QAAA,aAAAmB,QAAA,gBACAtB,MAAA6H,iBAAAtE,KAAA,GAAAoE,IAAAnE,WAAAsE,KAEA9H,KAAAqE,OAAAd,KAAA,GAAAiD,IAEAxG,KAAA3C,KAAAkG,KAAA,GAAAiE,IAKAtH,EAAAC,QAAA,OAAAoE,MAAA,gBAAAvE,KAAA+H,aAAA/H,OAGA+H,aAAA,WACA,MAAA/H,MAAAiC,IAIArB,QACAoH,wBAAA,aACAC,0BAAA,eACAC,yBAAA,eAWAC,WAAA,SAAA5J,GACA2B,EAAAC,QAAA,OAAAY,QAAA,mBAAAxC,IASA6J,YAAA,WACAlI,EAAAC,QAAA,OAAAY,QAAA,sBAUAsH,aAAA,SAAA9J,GACA2B,EAAAC,QAAA,OAAAY,QAAA,aAAAxC,KAKA,OAAAkB,KCjFA3F,EAAA,4BAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,mBAAAH,KAAAuI,iBACAvI,KAAAC,SAAAC,EAAAC,QAAA,OAAA,oBAAAH,KAAAoI,aACApI,KAAAC,SAAAC,EAAAC,QAAA,OAAA,yBAAAH,KAAAwI,kBAGAtI,EAAAC,QAAA,OAAAoE,MAAA,cAAAvE,KAAAmI,WAAAnI,MACAE,EAAAC,QAAA,OAAAoE,MAAA,eAAAvE,KAAAoI,YAAApI,MAMAE,EAAAC,QAAA,UAAAoE,MAAA,qBAAAvE,KAAAyI,mBAAAzI,MAGAE,EAAAC,QAAA,UAAAoE,MAAA,gBAAAvE,KAAA0I,aAAA1I,MAEAE,EAAAC,QAAA,UAAAoE,MAAA,eAAAvE,KAAA2I,YAAA3I,MAMAA,KAAA4I,mBAMA5I,KAAAC,SAAAC,EAAAC,QAAA,UAAA,iBAAAH,KAAA6I,gBAQAT,YAAA,WAEA,GAAA9C,GAAApF,EAAAC,QAAA,OAAAmB,QAAA,oBACA,KAAAgE,GAAAtF,KAAA8I,oBACA,OAAA,CAIA5I,GAAAC,QAAA,UAAAmF,EAAA/D,IAAA,OAAAR,QAAA,sBACAb,EAAAC,QAAA,UAAAY,QAAA,sBAGAb,EAAAC,QAAA,UAAAmB,QAAA,sBAGA,IAAAyH,GAAA7I,EAAAC,QAAA,OAAAmB,QAAA,gBACA9B,QAAAuJ,GAAAC,SAAA,oBAAAC,YAAA,mBAGA,IAAAC,GAAAlJ,KAAAyI,qBAGAU,EAAAjJ,EAAAC,QAAA,OAAAmB,QAAA,eACA9B,QAAA2J,GAAAC,KAAAC,MAAAH,GAGA,IAAA/G,GAAAnC,IAUAA,MAAAsJ,oBAAAC,YAAA,WACAL,GAAA1J,OAAA2J,GAAAC,IAAA,WACAI,cAAArH,EAAAmH,qBACApJ,EAAAC,QAAA,OAAAmB,QAAA,wBAAA,GACApB,EAAAC,QAAA,UAAAY,QAAA,YAEA,MASAwH,gBAAA,SAAAhK,GACA,GAAA8H,GAAA7G,OAAAjB,EAAAgH,QAAAe,KAAA,WACAtG,MAAAmI,WAAA9B,IAWA8B,WAAA,SAAA9B,EAAAC,GAEAA,EAAAA,IAAA,EAGApG,EAAAC,QAAA,UAAAmB,QAAA,qBAAA+E,EAAAC,EAGA,IAAAyC,GAAA7I,EAAAC,QAAA,OAAAmB,QAAA,gBACA9B,QAAAuJ,GAAAC,SAAA,oBAAAC,YAAA,mBAGA,IAAAE,GAAAjJ,EAAAC,QAAA,OAAAmB,QAAA,eACA9B,QAAA2J,GAAAC,KAAAC,MAAA,OAGA,IAAAlH,GAAAnC,IAWAA,MAAAyJ,mBAAAF,YAAA,WACA,OAAA/J,OAAA2J,GAAAC,IAAA,WACAI,cAAArH,EAAAsH,oBACAtH,EAAAuH,cACAxJ,EAAAC,QAAA,OAAAmB,QAAA,uBAAA+E,GACAnG,EAAAC,QAAA,UAAAY,QAAA,YAEA,MAQAyH,iBAAA,WAEA,GAAAW,GAAAjJ,EAAAC,QAAA,OAAAmB,QAAA,eAEA9B,QAAA2J,GAAAQ,YAAA,qBAQAD,YAAA,WAEA,GAAA/D,GAAAzF,EAAAC,QAAA,UAAAmB,QAAA,eAEA9B,QAAAmG,GAAAG,SAaA2C,mBAAA,WACA,GAAAM,GAAA7I,EAAAC,QAAA,OAAAmB,QAAA,iBACAsI,EAAApK,OAAAuJ,GAAAc,QAAA,GACA,OAAA,IAAAD,EAAA,MASAd,kBAAA,WACA,MAAA,IAAAjL,OAAAiM,KAAA9J,KAAA4I,iBAAAnN,QACA,GAEA,GAWAiN,aAAA,SAAAqB,GACA/J,KAAA4I,gBAAAmB,IAAA,GAUApB,YAAA,SAAAoB,SACA/J,MAAA4I,gBAAAmB,IASAlB,cAAA,WACAW,cAAAxJ,KAAAyJ,sBAIA,OAAAnB,KAEAxO,EAAA,0BAAA,kCAAA,SAAAkQ,GC9OA,GAAA3J,GAAA4J,SAAAC,MAAAtK,QACAuK,UACAC,cAAA,SAAA9D,GACA,MAAA,IAAA0D,GAAA1D,MAKA,OAAAjG,KCDAvG,EAAA,+BAAA,0BAAA,SAAAuQ,GACA,GAAA7G,GAAAyG,SAAAK,WAAA1K,QACAS,MAAAgK,GAEA,OAAA7G,KAEA1J,EAAA,qCAAA,WCbA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,+BAEAS,SAAA,WACAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,MAGAI,QACA2J,2BAAA,qBAGAC,kBAAA,SAAAvI,GACA/B,EAAAC,QAAA,mBAAAY,QAAA,0BAAAkB,EAAAjC,KAAAK,SAIA,OAAAZ,KAGA3F,EAAA,sCAAA,WCtBA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,sCAEAS,SAAA,WACAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,OAIA,OAAAf,KAEA3F,EAAA,yCAAA,kCAAA,oCAAA,SAAA2Q,EAAAC,GCbA,GAAAjL,GAAAC,WAAAoC,eAAAlC,QACAC,QAAA,MACAkC,UAAA0I,EACAE,UAAAD,EAEA3K,WAAA,WACAG,EAAAC,QAAA,OAAAoE,MAAA,qBAAAvE,KAAA4K,kBAAA5K,OAGAgC,OAAA,WAEAhC,KAAAQ,IAAAhB,OAAAQ,KAAAiC,IAAAwC,SACAjF,OAAAQ,KAAAQ,KAAA0B,KAAA,cAAAxB,SACAV,KAAAW,WAAAX,KAAAQ,IAIAhB,QAAAQ,KAAAiC,IAAA4I,UACAC,YAAA,wCACAC,OAAA,QACAC,UAAA,UACAC,KAAA,SAAA1M,EAAA2M,GACAhL,EAAAC,QAAA,mBAAAY,QAAA,oBAAAxC,EAAA2M,IAGAC,IAAA,SAAA5M,EAAA2M,GACAhL,EAAAC,QAAA,mBAAAY,QAAA,mBAAAmK,IAGAE,QAAA,SAAA7M,EAAA2M,GACAhL,EAAAC,QAAA,mBAAAY,QAAA,uBAAAmK,IAGAG,OAAA,SAAA9M,EAAA2M,GACAhL,EAAAC,QAAA,UAAAmB,QAAA,iBAGAgK,MAAA,SAAA/M,EAAA2M,GACAhL,EAAAC,QAAA,mBAAAY,QAAA,qBAAAmK,IAIAK,KAAA,SAAAhN,EAAA2M,GACAhL,EAAAC,QAAA,mBAAAY,QAAA,oBAAAmK,MAIA1L,OAAAQ,KAAAiC,IAAAwC,SAAA+G,WACAC,QAAA,GACAC,kBAAA,sBAEAX,OAAA,SAAAxM,GACA,GAAAsL,GAAArK,OAAAjB,EAAAgH,QAAAd,SAAAoF,QACA8B,EAAAnM,OAAAjB,EAAAgH,QAAAd,SAAAkH,SACAC,EAAApM,OAAAjB,EAAAgH,QAAAd,SAAAoH,QACAC,EAAAjC,EAAA,EACAkC,EAAAJ,EAAA,CAGA,OAFAnM,QAAAQ,MAAAwL,UAAA,SAAA,YAAAO,IAAAA,EAAAD,KAAAA,IAEAF,GAEAN,MAAA,SAAA/M,EAAA2M,GACAhL,EAAAC,QAAA,mBAAAY,QAAA,yBAAAf,KAAAkL,IAEAK,KAAA,SAAAhN,EAAA2M,GACAhL,EAAAC,QAAA,mBAAAY,QAAA,wBAAAf,KAAAkL,OAKAN,kBAAA,WACA,MAAApL,QAAAQ,KAAAiC,MAKA,OAAAxC,KCrEA3F,EAAA,gCAAA,WACA,GAAAuG,GAAA4J,SAAAC,MAAAtK,UAGA,OAAAS,KCJAvG,EAAA,mCAAA,8BAAA,SAAAkS,GACA,GAAAxI,GAAAyG,SAAAK,WAAA1K,QACAS,MAAA2L,EACAC,WAAA,SAEA,OAAAzI,KAEA1J,EAAA,qCAAA,WCdA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,qCAEAC,WAAA,WACAuC,EAAA4J,QAAAlM,KAAA,WAGAO,SAAA,WACAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,KAEAR,KAAAmM,UAAA,CACA,IAAAhK,GAAAnC,IACAR,QAAAQ,KAAAiC,IAAAC,KAAA,oBAAAsJ,WACAC,QAAA,GACAT,UAAA,YACAoB,QAAA,EACAV,kBAAA,2BAEAX,OAAA,SAAAxM,GACA,GAAAsL,GAAArK,OAAAjB,EAAAgH,QAAAd,SAAAoF,QACA8B,EAAAnM,OAAAjB,EAAAgH,QAAAd,SAAAkH,SACAC,EAAApM,OAAAjB,EAAAgH,QAAAd,SAAAoH,QACAC,EAAAjC,EAAA,EACAkC,EAAAJ,EAAA,CAGA,OAFAnM,QAAAQ,MAAAwL,UAAA,SAAA,YAAAO,IAAAA,EAAAD,KAAAA,IAEAF,GAGAN,MAAA,SAAA/M,EAAA2M,GACA/I,EAAAgK,UAAA,EACAjM,EAAAC,QAAA,mBAAAY,QAAA,iBAAAf,KAAAkL,IAGAK,KAAA,SAAAhN,EAAA2M,GACA/I,EAAAgK,UAAA,EACAjM,EAAAC,QAAA,mBAAAY,QAAA,gBAAAf,KAAAkL,MAGAvG,mBAEAnF,OAAAQ,KAAAiC,IAAAC,KAAA,YAAA4D,MAAA,WACAtG,OAAAQ,MAAAgJ,SAAA,YACAjD,KAAA,WACAvG,OAAAQ,MAAAiJ,YAAA,aAIArI,QACAyL,iBAAA,iBACAC,mBAAA,uBAGAC,eAAA,SAAAhO,GACAyB,KAAAmM,UACAjM,EAAAC,QAAA,UAAAY,QAAA,kBAAAxC,IAIAiO,oBAAA,SAAAjO,GACA,IAAAA,EAAAkH,UACAzF,KAAAuM,eAAAhO,GACA2B,EAAAC,QAAA,UAAAmB,QAAA,kBAIAN,gBAAA,WACA,OACAyL,iBAAA,WACA,GAAAlK,GAAA,GACAJ,EAAAnC,IAMA,OALAsC,GAAAoK,KAAA1M,KAAA2M,WAAA,SAAAlO,GACA,GAAAmO,GAAA1M,EAAAC,QAAA,UAAAmB,QAAA,WAAA7C,GACAoO,EAAAD,EAAArL,IAAA,WACAgB,IAAAD,EAAAxC,SAAAN,OAAA,qCAAA+C,QAAA9D,GAAAA,EAAAoO,SAAAA,EAAAD,KAAAA,EAAAE,WAAA3K,EAAA4K,iBAEAxK,GAGAwK,aAAA,WACA,MAAA/M,MAAA4M,KAAArL,IAAA,cACA,WAEA,OAOA,OAAA9B,KAEA3F,EAAA,6CAAA,mCAAA,SAAAkT,GC/FA,GAAAvN,GAAAC,WAAAoC,eAAAlC,QACAC,QAAA,MACAkC,UAAAiL,EAEAhL,OAAA,WACAxC,OAAAQ,KAAAiC,IAAAC,KAAA,gBAAAxB,WAIA,OAAAjB,KAEA3F,EAAA,gCAAA,wCAAA,kCAAA,6CAAA,SAAAmT,EAAAC,EAAAC,GCVA,GAAA1N,GAAAC,WAAAwD,WAAAtD,QACAE,SAAA,oCAEAqD,SACAiK,QAAA,mCACAC,QAAA,qBACAC,UAAA,wBAGAvN,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,UAAA,oBAAAH,KAAAuN,kBACAvN,KAAAC,SAAAC,EAAAC,QAAA,UAAA,eAAAH,KAAAwN,uBAEAxN,KAAAyN,gBAAAvN,EAAAC,QAAA,UAAAmB,QAAA,mBACAtB,KAAA0N,kBAAA1N,KAAAyN,gBAEAzN,KAAA2N,2BAAAzN,EAAAC,QAAA,UAAAmB,QAAA,oBACAtB,KAAA4N,oBAAA5N,KAAA2N,4BAIA3L,OAAA,WACA,GAAA6L,GAAA3N,EAAAC,QAAA,UAAAmB,QAAA,cACAtB,MAAAoN,QAAA7J,KAAA,GAAA0J,IAAAzJ,WAAAqK,KAEA7N,KAAAqN,QAAA9J,KAAA,GAAA4J,IAAA3J,WAAAxD,KAAA0N,qBACA1N,KAAAsN,UAAA/J,KAAA,GAAA4J,IAAA3J,WAAAxD,KAAA4N,wBAGA3I,MAAA,WACA,MAAAzF,QAAAQ,KAAAiC,IAAAwC,UAGA8I,iBAAA,SAAAO,GACA9N,KAAAqN,QAAAU,QACA/N,KAAAsN,UAAAS,QACA/N,KAAA8N,0BAAAA,EACA9N,KAAAqN,QAAA9J,KAAA,GAAA4J,IAAA3J,WAAAxD,KAAA8N,8BAGAN,sBAAA,WACAxN,KAAAqN,QAAA9J,KAAA,GAAA4J,IAAA3J,WAAAxD,KAAAyN,mBACAzN,KAAAsN,UAAA/J,KAAA,GAAA4J,IAAA3J,WAAAxD,KAAA2N,gCAKA,OAAAlO,KAEA3F,EAAA,4CAAA,WClDA,GAAA2F,GAAAC,WAAAoC,eAAAlC,QACAC,QAAA,MAEAE,WAAA,SAAAuG,GACAtG,KAAAgO,kBAAAC,UAAA3H,EAAA2H,YAGAC,aAAA,SAAA7N,GACA,MAAAH,GAAAC,QAAA,OAAAmB,QAAA,uBAAAjB,KAKA,OAAAZ,KAEA3F,EAAA,qCAAA,0CAAA,SAAAqU,GCfA,GAAA1O,GAAAC,WAAAwD,WAAAtD,QACAC,QAAA,MACAC,SAAA,mDAEAqD,SACAiL,SAAA,sBAGArO,WAAA,SAAAuG,GACAtG,KAAAK,MAAAC,GAAA,SAAAN,KAAAI,OAAAJ,MACAA,KAAAiO,UAAA3H,EAAA2H,WAGAtH,gBAAA,WACA3G,KAAAK,MAAAuG,IAAA,SAAA5G,KAAAI,SAGAG,SAAA,WACAP,KAAAK,MAAAkB,IAAA,WACAvB,KAAAoO,SAAA7K,KAAA,GAAA4K,IAAA3K,WAAAxD,KAAAK,MAAAkB,IAAA,YAAA0M,UAAAjO,KAAAiO,aAEAjO,KAAAoO,SAAAC,QAEAnO,EAAAC,QAAA,UAAAY,QAAA,sBAAAf,OAGAY,QACA0N,gBAAA,oBAGAC,iBAAA,SAAAhQ,GACA2B,EAAAC,QAAA,UAAAY,QAAA,2BAAAxC,EAAAyB,KAAAK,QAGAW,gBAAA,WACA,OACAwN,YAAA,WACA,MAAA,IAAAxO,KAAAyO,MACAnM,EAAAxC,SAAAN,OAAA,oDAAA+C,OAAAvC,MAEA,IAIA0O,eAAA,WACA,MAAA1O,MAAA2O,QACA,OAEA,YAOA,OAAAlP,KAEA3F,EAAA,+CAAA,qCAAA,SAAA8U,GCzDA,GAAAnP,GAAAC,WAAAoC,eAAAlC,QACAC,QAAA,MACAkC,UAAA6M,EAEA7O,WAAA,SAAAuG,GACAtG,KAAAgO,kBAAAC,UAAA3H,EAAA2H,aAIA,OAAAxO,KAEA3F,EAAA,iCAAA,+CAAA,SAAA+U,GCXA,GAAApP,GAAAC,WAAAwD,WAAAtD,QACAC,QAAA,MACAC,SAAA,wCAEAqD,SACA2L,cAAA,uBAGA/O,WAAA,SAAAuG,GACAtG,KAAAiO,UAAA3H,EAAAjG,MACAL,KAAA+O,gBAAAzI,EAAAyI,iBAGAxO,SAAA,WACAP,KAAA8O,cAAAvL,KAAA,GAAAsL,IAAArL,WAAAxD,KAAA+O,gBAAAd,UAAAjO,KAAAiO,cAGAjN,gBAAA,WACA,OACAgO,iBAAA,WACA,MAAA,mBAAAhP,MAAA4M,KACAtK,EAAAxC,SAAAN,OAAA,+CAAA+C,OAAAvC,MAEA,IAIAiP,mBAAA,WACA,GAAA5N,GAAAnB,EAAAC,QAAA,OAAAmB,QAAA,qBACA4N,EAAA7N,EAAAE,IAAA,MACAqL,EAAA1M,EAAAC,QAAA+O,GAAA5N,QAAA,WAAAtB,KAAA4M,KACA,OAAAA,GAAArL,IAAA,gBAMA,OAAA9B,KC5BA3F,EAAA,qCAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,qCAEAS,SAAA,WAOA,GANAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,KAEAhB,OAAAQ,KAAAiC,IAAA0C,mBAEA,aAAA3E,KAAAK,MAAAkB,IAAA,WAAA,CACA,GAAAY,GAAAnC,IACAR,QAAAQ,KAAAiC,IAAAuJ,WACAC,QAAA,GACAT,UAAA,YACAoB,QAAA,EACArB,OAAA,QAEAO,MAAA,SAAA/M,EAAA2M,GACA/I,EAAAgK,UAAA,EACAjM,EAAAC,QAAA,oBAAAY,QAAA,iBAAAf,KAAAkL,IAGAK,KAAA,SAAAhN,EAAA2M,GACA/I,EAAAgK,UAAA,EACAjM,EAAAC,QAAA,oBAAAY,QAAA,gBAAAf,KAAAkL,QAQAtK,QACAyL,iBAAA,kBAGA8C,eAAA,SAAA5Q,GACAyB,KAAAmM,WACA,aAAAnM,KAAAK,MAAAkB,IAAA,WACArB,EAAAC,QAAA,WAAAY,QAAA,kBAAAf,KAAAK,OAEA+O,OAAAC,KAAArP,KAAAK,MAAAkB,IAAA,QAAA,YAKAP,gBAAA,WACA,OACAG,cAAA,WACA,GAAAC,GAAA,SAQA,OAPA,IAAA5B,OAAAoG,KAAA5F,KAAAsP,SACAlO,GAAA,eAGA,aAAApB,KAAAuP,UACAnO,GAAA,mBAEAA,GAGAoO,YAAA,WACA,MAAA,IAAAhQ,OAAAoG,KAAA5F,KAAAsP,OACA,gCAAAtP,KAAAsP,MAAA,MAEA,OAOA,OAAA7P,KAEA3F,EAAA,uCAAA,mCAAA,SAAA2V,GCrFA,GAAAhQ,GAAAC,WAAAsH,cAAApH,QACAE,SAAA,sCACAiC,UAAA0N,EAEAzO,gBAAA,WACA,GAAAmB,GAAAnC,IACA,QACA0P,eAAA,WACA,MAAAvN,GAAAqB,WAAAqJ,UAGA1L,cAAA,WACA,MAAAgB,GAAAqB,WAAAmM,QAKAxI,WAAA,SAAAC,EAAArF,GACAvC,OAAA4H,EAAAnF,IAAAC,KAAA,iBAAAmF,OAAAtF,EAAAE,MAIA,OAAAxC,KCbA3F,EAAA,kCAAA,uCAAA,SAAA8V,GAEA,GAAAnQ,GAAAC,WAAAwD,WAAAtD,QACAE,SAAA,qCAEAqD,SACAkK,QAAA,qBACAC,UAAA,wBAGAvN,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,UAAA,qBAAAH,KAAA6P,mBACA7P,KAAAC,SAAAC,EAAAC,QAAA,UAAA,eAAAH,KAAA8P,wBAEA9P,KAAA+P,iBAAA7P,EAAAC,QAAA,WAAAmB,QAAA,wBACAtB,KAAA0N,kBAAA1N,KAAA+P,iBAEA/P,KAAAgQ,iBAAA9P,EAAAC,QAAA,WAAAmB,QAAA,wBACAtB,KAAA4N,oBAAA5N,KAAAgQ,kBAGAhO,OAAA,WACAhC,KAAAqN,QAAA9J,KAAA,GAAAqM,IAAApM,WAAAxD,KAAA0N,qBACA1N,KAAAsN,UAAA/J,KAAA,GAAAqM,IAAApM,WAAAxD,KAAA4N,wBAGA3I,MAAA,WACA,MAAAzF,QAAAQ,KAAAiC,IAAAwC,UAGAoL,kBAAA,SAAAI,EAAAC,GACAlQ,KAAAqN,QAAAU,QACA/N,KAAAsN,UAAAS,QACA/N,KAAAqN,QAAA9J,KAAA,GAAAqM,IAAApM,WAAAyM,KACAjQ,KAAAsN,UAAA/J,KAAA,GAAAqM,IAAApM,WAAA0M,MAIAJ,uBAAA,WACA9P,KAAAqN,QAAA9J,KAAA,GAAAqM,IAAApM,WAAAxD,KAAA+P,oBACA/P,KAAAsN,UAAA/J,KAAA,GAAAqM,IAAApM,WAAAxD,KAAAgQ,sBAKA,OAAAvQ,KAEA3F,EAAA,4CAAA,WCxDA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,8CAGA,OAAAL,KCEA3F,EAAA,6CAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,4CAEAC,WAAA,WACAC,KAAAK,MAAAC,GAAA,kBAAAN,KAAAI,OAAAJ,OAGA2G,gBAAA,WACA3G,KAAAK,MAAAuG,IAAA,kBAAA5G,KAAAI,SASAG,SAAA,WACAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,MAGAI,QACAuP,oBAAA,cAGAC,WAAA,SAAA7R,GACA2B,EAAAC,QAAA,UAAAY,QAAA,mBAAAf,KAAAK,SAIA,OAAAZ,KClCA3F,EAAA,uCAAA,2CAAA,SAAAuW,GACA,GAAA5Q,GAAAC,WAAAoC,eAAAlC,QACAC,QAAA,QACAsE,UAAA,aACApC,UAAAsO,GAGA,OAAA5Q,KCPA3F,EAAA,wCAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,sCAEAc,QACA0P,qBAAA,oBAGAC,iBAAA,SAAAhS,GACA2B,EAAAC,QAAA,UAAAY,QAAA,uBAIA,OAAAtB,KCZA3F,EAAA,gCACA,8BACA,+BACA,gCACA,iCACA,yCACA,sCACA,sCACA,SACA0W,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,GAAAxI,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAwD,WAAA,GAAAgN,KAEA/R,GAAA,WAEAsS,eAAA,SAAAzK,GACA,MAAA,IAAAmK,GAAAnK,MAIA7H,GAAA,YAEAsS,eAAA,SAAAzK,GACA,MAAA,IAAAqK,GAAArK,MAIA7H,GAAA,eAEAsS,eAAA,SAAAzK,GACA,MAAA,IAAAoK,GAAApK,MAIA7H,GAAA,mBAEAsS,eAAA,SAAAzK,GACA,MAAA,IAAAsK,GAAAtK,MAIA7H,GAAA,cAGA2L,cAAA,SAAA9D,GACA,MAAA,IAAAwK,GAAAxK,IAGAyK,eAAA,SAAAzK,GACA,MAAA,IAAAuK,GAAAvK,OAMApG,EAAAC,QAAA,OAAAoE,MAAA,uBAAAvE,KAAAgR,oBAAAhR,MAEAE,EAAAC,QAAA,OAAAoE,MAAA,aAAAvE,KAAAiR,UAAAjR,OAGAgR,oBAAA,WACA,MAAAhR,MAAAwD,YAGAyN,UAAA,SAAAxS,GACA,MAAAuB,MAAAwD,WAAAjC,IAAA9C,KAKA,OAAA6J,KCjFAxO,EAAA,4BAAA,WACA,GAAAuG,GAAA4J,SAAAC,MAAAtK,QACAuK,UACAjJ,UAAA,GACAE,QAAA,GACA0F,QAAA,EACArF,IAAA,GACAyP,SAAA,EACAtP,UAAA,IAIA,OAAAvB,KCZAvG,EAAA,+BAAA,0BAAA,SAAAqX,GACA,GAAA3N,GAAAyG,SAAAK,WAAA1K,QACAS,MAAA8Q,GAEA,OAAA3N,KAEA1J,EAAA,6BAAA,WCbA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,8BAEAC,WAAA,WACA,GAAAkH,GAAA/G,EAAAC,QAAA,UAAAmB,QAAA,iBACAtB,MAAAC,SAAAgH,EAAA,MAAAjH,KAAAI,QACAJ,KAAAC,SAAAgH,EAAA,SAAAjH,KAAAI,SAGAG,SAAA,WACA,GAAA0G,GAAA/G,EAAAC,QAAA,UAAAmB,QAAA,iBACA,IAAA2F,EAAAmK,OAAA3V,OACA+D,OAAAQ,KAAAiC,IAAAoP,OAEA7R,OAAAQ,KAAAiC,IAAAsB,SAKA,OAAA9D,KAEA3F,EAAA,4BAAA,WCtBA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,8BAGA,OAAAL,KCEA3F,EAAA,4BAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,yBAEAC,WAAA,aAWAQ,SAAA,WAKAP,KAAAqB,cAAAnB,EAAAC,QAAA,OAAAmB,QAAA,sBAGAV,QACA0Q,0BAAA,YACAC,mBAAA,cACAC,sBAAA,uBAGAC,UAAA,SAAAlT,GACA2B,EAAAC,QAAA,OAAAY,QAAA,aAAAxC,EAAAyB,KAAAK,QAGAqR,YAAA,SAAAnT,GACA2B,EAAAC,QAAA,OAAAY,QAAA,eAAAxC,EAAAyB,KAAAK,QAGAsR,oBAAA,SAAApT,GACA2B,EAAAC,QAAA,OAAAY,QAAA,kBAAAxC,EAAAyB,KAAAK,SAKA,OAAAZ,KAEA3F,EAAA,0BAAA,0BAAA,SAAA8X,GCrDA,GAAAnS,GAAAC,WAAAwD,WAAAtD,QACAC,QAAA,MACAC,SAAA,8BAEAqD,SACA0O,aAAA,qBAGA9R,WAAA,WACAC,KAAAK,MAAAC,GAAA,oBAAAN,KAAAI,OAAAJ,MACAA,KAAAK,MAAAC,GAAA,kBAAAN,KAAAI,OAAAJ,MACAA,KAAAK,MAAAC,GAAA,eAAAN,KAAAI,OAAAJ,OAGA2G,gBAAA,WACA3G,KAAAK,MAAAuG,IAAA,oBAAA5G,KAAAI,QACAJ,KAAAK,MAAAuG,IAAA,kBAAA5G,KAAAI,QACAJ,KAAAK,MAAAuG,IAAA,eAAA5G,KAAAI,SAGAG,SAAA,WACAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,KAEAR,KAAA6R,aAAAtO,KAAA,GAAAqO,IAAAvR,MAAAL,KAAAK,UAGAW,gBAAA,WACA,OACAG,cAAA,WACA,GAAAC,GAAA,eAIA,OAHApB,MAAA8R,aACA1Q,GAAA,WAEAA,GAEA2Q,eAAA,WACA,MAAA,IAAA/R,KAAAgS,SACA,kCAEA,IAGAC,WAAA,WACA,MAAAzS,QAAA0S,UAAAlS,KAAAvB,IACA,SAAAuB,KAAAvB,GAEAuB,KAAAvB,MAMAmC,QACAuR,MAAA,kBAGAC,eAAA,SAAA7T,GACAiB,OAAAjB,EAAAgH,QAAAd,SAAA4N,SAAA,uBACAnS,EAAAC,QAAA,OAAAY,QAAA,aAAAxC,EAAAyB,KAAAK,SAMA,OAAAZ,KAEA3F,EAAA,mCAAA,WCpEA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,qCAEA6G,gBAAA,WACAnH,OAAAQ,KAAAiC,IAAAwC,SAAAwE,YAAA,6BAAAqJ,UAAA,YAGA/R,SAAA,WACAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,MAGAwB,OAAA,WACAxC,OAAAQ,KAAAiC,IAAAwC,SAAA4N,SAAA,gBACA7S,OAAAQ,KAAAiC,IAAAwC,SAAAoG,SAAA,WAEArL,OAAAQ,KAAAiC,IAAAwC,SAAAuE,SAAA,6BACAxJ,OAAAQ,KAAAiC,IAAAwC,SAAA6N,WACAC,OAAA,SAAA/G,GACA,MAAAhM,QAAAgM,GAAA6G,SAAA,aAAA7S,OAAAgM,GAAA6G,SAAA,yBACA,EADA,QAIAG,WAAA,qBACAxH,UAAA,UACAC,KAAA,SAAA1M,EAAA2M,GACAA,EAAAuH,KAAAvH,EAAAM,UACAtL,EAAAC,QAAA,OAAAmB,QAAA,sBAAA4J;A/C7BA,E+C+BAC,IAAA,SAAA5M,EAAA2M,GACAA,EAAAuH,KAAAvH,EAAAM,UACAtL,EAAAC,QAAA,OAAAmB,QAAA,qBAAA4J,IAEAwH,KAAA,SAAAnU,EAAA2M,GACAA,EAAAuH,KAAAvH,EAAAM,UACAtL,EAAAC,QAAA,OAAAmB,QAAA,yBAAA4J,EACA,IAAAjE,GAAA/G,EAAAC,QAAA,UAAAmB,QAAA,iBACA2F,GAAAlG,QAAA,QAAAkG,QAMA,OAAAxH,KAEA3F,EAAA,2CAAA,yBAAA,iCAAA,SAAA6Y,EAAAC,GC/CA,GAAAnT,GAAAC,WAAAoC,eAAAlC,QACAC,QAAA,MACAkC,UAAA4Q,EACAhI,UAAAiI,EACAC,eAAA,EAEA9S,WAAA,WACAG,EAAAC,QAAA,UAAAoE,MAAA,iBAAAvE,KAAA8S,cAAA9S,KACA,IAAA+S,GAAArT,WAAAsT,cAAAzR,IAAA,8BACAvB,MAAAgO,kBAAA+E,cAAAA,IAGAxS,SAAA,WACA,GAAAP,KAAAwD,WAAA4N,OAAA3V,OAAA,EAAA,CACA+D,OAAAQ,KAAAiC,IAAA+G,SAAA,2BAAAA,SAAA,qBAEAxJ,QAAAQ,KAAAiC,IAAA4I,UACAoI,YAAA,WACAlI,OAAA,QACAmI,OAAA,oBACApI,YAAA,iCACAW,QAAA,IACAT,UAAA,YAEAI,QAAA,SAAA7M,EAAA2M,GACAhL,EAAAC,QAAA,OAAAmB,QAAA,yBAAA4J,IAGAD,KAAA,SAAA1M,EAAA2M,GACAhL,EAAAC,QAAA,OAAAmB,QAAA,sBAAA4J,IAGAC,IAAA,SAAA5M,EAAA2M,GACAhL,EAAAC,QAAA,OAAAmB,QAAA,qBAAA4J,IAGAI,MAAA,SAAA/M,EAAA2M,GACAhL,EAAAC,QAAA,OAAAmB,QAAA,uBAAA4J,IAGAG,OAAA,SAAA9M,EAAA2M,GACAhL,EAAAC,QAAA,OAAAmB,QAAA,wBAAA4J,IAGAK,KAAA,SAAAhN,EAAA2M,GACAhL,EAAAC,QAAA,OAAAmB,QAAA,sBAAA4J,QAMA4H,cAAA,WACA,MAAA9S,MAAAiC,KAIA,OAAAxC,KC/CA3F,EAAA,8BAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,+BAEAC,WAAA,WACA,GAAAoT,GAAAjT,EAAAC,QAAA,WAAAmB,QAAA,iBACAtB,MAAAC,SAAAkT,EAAA,MAAAnT,KAAAI,QACAJ,KAAAC,SAAAkT,EAAA,SAAAnT,KAAAI,SAGAG,SAAA,WACA,GAAA4S,GAAAjT,EAAAC,QAAA,WAAAmB,QAAA,iBACA,IAAA6R,EAAA/B,OAAA3V,OACA+D,OAAAQ,KAAAiC,IAAAoP,OAEA7R,OAAAQ,KAAAiC,IAAAsB,SAKA,OAAA9D,KCrBA3F,EAAA,6BAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,+BAGA,OAAAL,KCNA3F,EAAA,4BAAA,0BAAA,SAAA8X,GACA,GAAAnS,GAAAC,WAAAwD,WAAAtD,QACAC,QAAA,KACAC,SAAA,uBAEAqD,SACA0O,aAAA,qBAGA9R,WAAA,WACAC,KAAAK,MAAAC,GAAA,SAAAN,KAAAI,OAAAJ,OAGA2G,gBAAA,WACA3G,KAAAK,MAAAuG,IAAA,SAAA5G,KAAAI,SAGAG,SAAA,WACAP,KAAAK,MAAAkB,IAAA,cACA/B,OAAAQ,KAAAiC,IAAA+G,SAAA,UAEAxJ,OAAAQ,KAAAiC,IAAAgH,YAAA,UAGA,GAAAjJ,KAAAK,MAAAkB,IAAA,UACA/B,OAAAQ,KAAAiC,IAAA+G,SAAA,eAEAxJ,OAAAQ,KAAAiC,IAAAgH,YAAA,eAGAjJ,KAAA6R,aAAAtO,KAAA,GAAAqO,IAAAvR,MAAAL,KAAAK,UAGAO,QACAwS,eAAA,eACAjB,MAAA,kBAGAC,eAAA,SAAA7T,GACA,MAAAiB,OAAAjB,EAAAgH,QAAAd,SAAAvK,KAAA,YACAgG,EAAAC,QAAA,OAAAY,QAAA,aAAAxC,EAAAyB,KAAAK,QAIAgT,aAAA,SAAA9U,GACA,GAAA+U,GAAApT,EAAAC,QAAA,WAAAmB,QAAA,mBAAA,SACApB,GAAAC,QAAA,OAAAmB,QAAA,iBAAA/C,EAAA+U,EAAAtT,KAAAK,OACAH,EAAAC,QAAA,OAAAmB,QAAA,cAGAN,gBAAA,WACA,OACAuS,aAAA,WACA,GAAAC,GAAAxT,KAAAyO,KACAzO,MAAAyO,MAAA,GACAzO,KAAAhD,MAAAgD,KAAA8G,OACA9G,KAAA1F,KAAA0F,KAAAvB,GAAA,SACA,IAAA8D,GAAAD,EAAAxC,SAAAN,OAAA,gCAAA+C,OAAAvC,KAEA,OADAA,MAAAyO,MAAA+E,EACAjR,GAGA0M,mBAAA,WACA,GAAArC,GAAA1M,EAAAC,QAAA,WAAAmB,QAAA,WAAAtB,KAAA4M,KACA,OAAAA,GAAArL,IAAA,aAGAkS,cAAA,WACA,MAAAzT,MAAA0T,KACA,qHAAA1T,KAAA0T,KAAA,SAEA,IAIAC,gBAAA,WACA,MAAA3T,MAAA4T,eACA,iEAEA,OAOA,OAAAnU,KAEA3F,EAAA,oCAAA,WCjGA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,sCAEA6G,gBAAA,WACAnH,OAAAQ,KAAAiC,IAAAwC,SAAAA,SAAAwE,YAAA,qBAIA1I,SAAA,WACAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,MAGAwB,OAAA,WACAxC,OAAAQ,KAAAiC,IAAAwC,SAAAA,SAAAuE,SAAA,sBA+BA,OAAAvJ,KCtCA3F,EAAA,6BAAA,2BAAA,kCAAA,SAAA+Z,EAAAlJ,GACA,GAAAlL,GAAAC,WAAAsH,cAAApH,QACAE,SAAA,wBACAiC,UAAA8R,EACAlJ,UAAAA,EAEApK,SAAA,WACAf,OAAAQ,KAAAiC,IAAAqQ,WACAC,OAAA,gBACAuB,YAAA,sBACAtB,WAAA,qBACAE,KAAA,SAAAnU,EAAA2M,GACAhL,EAAAC,QAAA,OAAAmB,QAAA,kBAAA/C,EAAA2M,OAKA/D,WAAA,SAAAC,EAAArF,GACAvC,OAAA4H,EAAAnF,IAAAC,KAAA,SAAAmF,OAAAtF,EAAAE,MAIA,OAAAxC,KAEA3F,EAAA,+BAAA,WCjCA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,iCAGA,OAAAL,KAEA3F,EAAA,8BAAA,WCPA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,gCAGA,OAAAL,KAEA3F,EAAA,gCAAA,WCPA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,6BAEA6G,gBAAA,WACA3G,KAAAK,MAAAuG,IAAA,oBAAA5G,KAAAI,SAGAL,WAAA,WACAC,KAAAK,MAAAC,GAAA,oBAAAN,KAAAI,OAAAJ,OAGAY,QACAuR,MAAA,aAGAV,UAAA,SAAAlT,GACA2B,EAAAC,QAAA,YAAAY,QAAA,aAAAxC,EAAAyB,KAAAK,QAGAW,gBAAA,WACA,OACAG,cAAA,WACA,GAAAC,GAAA,iBAIA,OAHApB,MAAA8R,aACA1Q,GAAA,WAEAA,MAMA,OAAA3B,KAEA3F,EAAA,8BAAA,8BAAA,SAAAia,GCnCA,GAAAtU,GAAAC,WAAAoC,eAAAlC,QACAmC,UAAAgS,GAIA,OAAAtU,KCYA3F,EAAA,gCAEA,8BAEA,0BACA,yBACA,0CAEA,2BACA,0BACA,4BAEA,4BACA,2BACA,8BAEA,SACAwJ,EACA0Q,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,GAAAlM,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAwD,WAAA,GAAAF,KAEA7E,GAAA,SACAoO,SAAA,cACAqE,SACAuD,IAAA,eACAC,eAAA,eACAC,eAAA,uBACAC,eAAA,wBACAC,aAAA,iBACAC,GAAA,eACAC,KAAA,iBACAC,eAAA,oBAGAC,kBAAA,WACA,MAAA,IAAAjB,IAGAkB,iBAAA,WACA,MAAA,IAAAjB,IAGAkB,mBAAA,SAAA3R,GACA,GAAAA,GAAAtD,EAAAC,QAAA,UAAAmB,QAAA,iBACA,OAAA,IAAA4S,IAAA1Q,WAAAA,OAIA/E,GAAA,UACAoO,SAAA,mBACAqE,SACAuD,IAAA,eACAC,eAAA,gBACAU,eAAA,sBACAR,eAAA,wBACAC,aAAA,iBACAC,GAAA,eACAC,KAAA,iBACAC,eAAA,oBAGAC,kBAAA,WACA,MAAA,IAAAd,IAGAe,iBAAA,WACA,MAAA,IAAAd,IAGAe,mBAAA,WACA,GAAA3R,GAAAtD,EAAAC,QAAA,WAAAmB,QAAA,iBACA,OAAA,IAAA+S,IAAA7Q,WAAAA,OAIA/E,GAAA,WACAoO,SAAA,WACAqE,SACAuD,IAAA,eACAW,eAAA,sBACAT,eAAA,uBACAE,aAAA,iBACAC,GAAA,eACAC,KAAA,iBACAC,eAAA,oBAGAC,kBAAA,WACA,MAAA,IAAAX,IAGAY,iBAAA,WACA,MAAA,IAAAX,IAGAY,mBAAA,WACA,GAAA3R,GAAAtD,EAAAC,QAAA,YAAAmB,QAAA,qBACA,OAAA,IAAAkT,IAAAhR,WAAAA,OAIA/E,GAAA,UACAoO,SAAA,eACAzL,QAAA,UACAF,UAAA,uBACAO,IAAA4T,QAAAC,cAOApV,EAAAC,QAAA,OAAAoE,MAAA,uBAAAvE,KAAAuV,oBAAAvV,MACAE,EAAAC,QAAA,OAAAoE,MAAA,kBAAAvE,KAAAwV,eAAAxV,OAGAuV,oBAAA,WACA,MAAAvV,MAAAwD,YAGAgS,eAAA,SAAA/W,GACA,MAAAuB,MAAAwD,WAAAjC,IAAA9C,KAKA,OAAA6J,KCnJAxO,EAAA,yBAAA,WACA,GAAAuG,GAAA4J,SAAAC,MAAAtK,QACAuK,UACAsL,SAAA,GAGA1V,WAAA,WAEAC,KAAAM,GAAA,eAAAN,KAAA0V,aAAA1V,OAGA0V,aAAA,WAEAxV,EAAAC,QAAA,OAAAY,QAAA,eAAAf,KAAAuB,IAAA,YAIA,OAAAlB,KChBAvG,EAAA,wBAAA,uBAAA,SAAA6b,GACA,GAAArN,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEA,GAAAuD,GAAApD,EAAAC,QAAA,OAAAmB,QAAA,uBAEAtB,MAAAK,MAAA,GAAAsV,IACArQ,eAAA,EACAjE,cAAAiC,EAAA/B,IAAA,UACAqU,OAAA,IAMA1V,EAAAC,QAAA,OAAAoE,MAAA,WAAAvE,KAAA6V,QAAA7V,MACAE,EAAAC,QAAA,OAAAoE,MAAA,cAAAvE,KAAA8V,WAAA9V,MACAE,EAAAC,QAAA,OAAAoE,MAAA,oBAAAvE,KAAA+V,iBAAA/V,MACAE,EAAAC,QAAA,OAAAoE,MAAA,oBAAAvE,KAAAgW,iBAAAhW,MAKAE,EAAAC,QAAA,OAAAoE,MAAA,uBAAAvE,KAAAiW,oBAAAjW,MACAE,EAAAC,QAAA,OAAAoE,MAAA,uBAAAvE,KAAAkW,oBAAAlW,MACAE,EAAAC,QAAA,OAAAoE,MAAA,iBAAAvE,KAAAmW,cAAAnW,OAIAiW,oBAAA,SAAA5V,GACAL,KAAAmW,cAAA,gBAAA9V,IAGA8V,cAAA,SAAAC,EAAApZ,GAEA,MADAgD,MAAAK,MAAAiH,IAAA8O,EAAApZ,IACA,GAGA8Y,WAAA,SAAAM,GACA,MAAApW,MAAAK,MAAAkB,IAAA6U,IAGAP,QAAA,WACA,MAAA7V,MAAAK,OAGA0V,iBAAA,WACA,MAAA/V,MAAAK,MAAAkB,IAAA,kBAGA2U,oBAAA,SAAA7P,GAEA,MADArG,MAAAmW,cAAA,gBAAA9P,IACA,GAGA2P,iBAAA,WACA,GAAAK,GAAArW,KAAAK,MAAAkB,IAAA,gBACA,OAAArB,GAAAC,QAAA,OAAAmB,QAAA,aAAA+U,KAMA,OAAA/N,KCjEAxO,EAAA,8CAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,UAAA,2BAAAH,KAAAsW,qBAWAA,mBAAA,SAAA/X,EAAA8B,GACAA,EAAAkB,IAAA,WACAlB,EAAAiH,IAAA,WAAA,GAEAjH,EAAAiH,IAAA,WAAA,KAMA,OAAAgB,KCzBAxO,EAAA,8BAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,UAAA,SAAAH,KAAAuW,UAEArW,EAAAC,QAAA,OAAAoE,MAAA,YAAAvE,KAAAuW,SAAAvW,OAWAuW,SAAA,SAAAC,GAEA,GAAAtW,EAAAC,QAAA,OAAAmB,QAAA,cAAA,SACA,OAAA,CAOA,IAHAkV,EAAAA,GAAA,UAGA,WAAAA,EACA,GAAAC,GAAA,wBACA,IAAA,WAAAD,EACA,GAAAC,GAAA,cAIA,IAAA/S,GAAAxD,EAAAC,QAAA,OAAAmB,QAAA,gBAGAgF,EAAAoQ,KAAAC,MAAAD,KAAAE,UAAAlT,IAOAmT,EAAAnT,EAAAnC,IAAA,UAAAsV,UAcAvU,GAAAoK,KAAApG,EAAAwQ,OAAA,SAAAC,GACA,GAAAtY,GAAAsY,EAAAtY,SAEAsY,GAAAtY,SACAsY,GAAAC,SACA,IAAA5I,KAEA,KAAA,GAAAlU,KAAA6c,GACAA,EAAAhZ,eAAA7D,KAEAkU,EAAAlU,GAAA6c,EAAA7c,SAEA6c,GAAA7c,GAIA6c,GAAA3I,SAAAA,EACA2I,EAAAtY,GAAAA,IAIA6H,EAAA2Q,eAAAJ,CAOA,IAAAA,GAAAnT,EAAAnC,IAAA,WAAAsV,UAcAvU,GAAAoK,KAAApG,EAAA4Q,QAAA,SAAAV,GACA,GAAA/X,GAAA+X,EAAA/X,SAEA+X,GAAA/X,SACA+X,GAAAQ,SACA,IAAA5I,KAEA,KAAA,GAAAlU,KAAAsc,GACAA,EAAAzY,eAAA7D,KAEAkU,EAAAlU,GAAAsc,EAAAtc,SAEAsc,GAAAtc,GAIAsc,GAAApI,SAAAA,EACAoI,EAAA/X,GAAAA,IAIA6H,EAAA6Q,gBAAAN,EAGAvQ,EAAAoQ,KAAAE,UAAAtQ,GAEApG,EAAAC,QAAA,OAAAY,QAAA,kBAAAuF,GAEA,WAAAkQ,IACAtW,EAAAC,QAAA,OAAAmB,QAAA,iBAAA,WAAA,GACApB,EAAAC,QAAA,OAAAY,QAAA,mBAGAvB,OAAA4X,KAAAC,SAAAb,OAAAC,EAAAa,KAAAhR,EAAAiR,SAAAlC,QAAAmC,WAAA,SAAAC,GACA,IACAA,EAAAf,KAAAC,MAAAc,GACAA,EAAAjB,OAAAA,EAEAtW,EAAAC,QAAA,OAAAY,QAAA,oBAAA0W,GACA,MAAAC,GACA9S,QAAAC,IAAA,yBACAD,QAAAC,IAAA4S,QAQA,OAAAnP,KCrJAxO,EAAA,0BAAA,WACA,GAAAuG,GAAA4J,SAAAC,MAAAtK,UAIA,OAAAS,KCJAvG,EAAA,4BAAA,wBAAA,SAAA6d,GACA,GAAArP,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAK,MAAA,GAAAsX,GAEA3X,KAAAK,MAAAiH,IAAA,KAAAsQ,kBAAAnZ,IAEAuB,KAAAK,MAAAiH,IAAA,SAAApH,EAAAC,QAAA,UAAAmB,QAAA,mBAEAtB,KAAAK,MAAAiH,IAAA,UAAApH,EAAAC,QAAA,WAAAmB,QAAA,mBAEAtB,KAAAK,MAAAiH,IAAA,WAAApH,EAAAC,QAAA,YAAAmB,QAAA,iBAEApB,EAAAC,QAAA,OAAAoE,MAAA,eAAAvE,KAAA6X,YAAA7X,OASA6X,YAAA,WACA,MAAA7X,MAAAK,QAKA,OAAAiI,KC9BAxO,EAAA,iCAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,qBAAAH,KAAA8X,eAAA9X,MACAA,KAAAC,SAAAC,EAAAC,QAAA,OAAA,uBAAAH,KAAA+X,cAAA/X,MACAA,KAAAC,SAAAC,EAAAC,QAAA,OAAA,eAAAH,KAAAgY,sBAAAhY,OASA8X,eAAA,WAEA,GAAAG,GAAA/X,EAAAC,QAAA,OAAAmB,QAAA,wBACA4W,EAAAD,EAAA1W,IAAA,UAEA2W,GAAA5Q,IAAA,YAAA,IAUA0Q,sBAAA,SAAApC,GAEA,GAAAqC,GAAA/X,EAAAC,QAAA,OAAAmB,QAAA,wBACA4W,EAAAD,EAAA1W,IAAA,UAGA,IAAAqU,EAGA,GAAA/I,GAAA,mBAFA,IAAAA,GAAA,iBAKAqL,GAAA5Q,IAAA,WAAAuF,IAUAkL,cAAA,WAEA,GAAAE,GAAA/X,EAAAC,QAAA,OAAAmB,QAAA,wBACA4W,EAAAD,EAAA1W,IAAA,UAEA2W,GAAA5Q,IAAA,YAAA,KAKA,OAAAgB,KC5DAxO,EAAA,iCAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,gBAAAH,KAAAmY,SACAnY,KAAAC,SAAAC,EAAAC,QAAA,OAAA,oBAAAH,KAAAoY,cAGAD,QAAA,WACAjY,EAAAC,QAAA,OAAAmB,QAAA,YAAA,YAGA8W,YAAA,WACA,GAAAC,GAAAnY,EAAAC,QAAA,WAAAmB,QAAA,uBACApB,GAAAC,QAAA,OAAAmB,QAAA,cAAA,eAAAkC,WAAA6U,MAKA,OAAA/P,KCpBAxO,EAAA,4BAAA,WACA,GAAAuG,GAAA4J,SAAAC,MAAAtK,QACAuK,UACAvI,UAAA,IAIA,OAAAvB,KCPAvG,EAAA,+BAAA,0BAAA,SAAAqX,GACA,GAAA3N,GAAAyG,SAAAK,WAAA1K,QACAS,MAAA8Q,EACAlF,WAAA,SAAA5L,GACA,GAAA5B,GAAA6Z,SAAAjY,EAAAkY,IAAA1c,QAAA,IAAA,IACA,QAAA4C,IAGA,OAAA+E,KCRA1J,EAAA,gCAAA,8BAAA,0BAAA,SAAAue,EAAAG,GACA,GAAAlQ,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WACAC,KAAAwD,WAAA,GAAA6U,GAEAnY,EAAAC,QAAA,WAAAoE,MAAA,kBAAAvE,KAAAyY,eAAAzY,MAEAE,EAAAC,QAAA,WAAAoE,MAAA,uBAAAvE,KAAA0Y,cAAA1Y,MAEAA,KAAAC,SAAAC,EAAAC,QAAA,OAAA,eAAAH,KAAA2Y,uBAGAF,eAAA,SAAAjC,EAAAnW,EAAAuY,EAAAnK,EAAAnI,GACA,GAAAA,GAAA,mBAAAA,GAAAA,IACA,oBAAAmI,GAAAoK,WACApK,EAAAoK,SAAA,gBAEA,IAAAC,GAAA,GAAAN,IACAhC,OAAAA,EACAnW,MAAAA,EACAuY,QAAAA,EACAnK,MAAAA,EACAnI,KAAAA,GAGA,OADAtG,MAAAwD,WAAAuV,IAAAD,GACAA,GAGAJ,cAAA,WACA,MAAA1Y,MAAAwD,YAGAmV,qBAAA,SAAA/C,GACAA,GACA5V,KAAAwD,WAAAuK,UAMA,OAAAzF,KAEAxO,EAAA,iCAAA,WCjDA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,UAAA,oBAAAH,KAAAgZ,YAAAhZ,MACAA,KAAAC,SAAAC,EAAAC,QAAA,UAAA,mBAAAH,KAAAoQ,WAAApQ,OAGAgZ,YAAA,WACA,GAAAX,GAAAnY,EAAAC,QAAA,WAAAmB,QAAA,uBACA+W,GAAAY,MACA,IAAA9W,GAAAnC,IACAsC,GAAAoK,KAAA2L,EAAAjH,OAAA,SAAA8H,GACA/W,EAAAiO,WAAA8I,GAAA,KAEAb,EAAAtK,QAEA7N,EAAAC,QAAA,OAAAmB,QAAA,aACApB,EAAAC,QAAA,OAAAmB,QAAA,iBAAA,SAAA,GACApB,EAAAC,QAAA,OAAAmB,QAAA,iBAGA8O,WAAA,SAAA8I,EAAAC,GACAjZ,EAAAC,QAAA,WAAAmB,QAAA,QAAA4X,EAAA3X,IAAA,UAAA2X,EAAAC,KAKA,OAAA7Q,KCnBAxO,EAAA,qCAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,oBAAAH,KAAAoZ,kBAGAA,gBAAA,SAAA3B,GAEA,MAAA,YAAAA,EAAAjB,QACA,GAIA,mBAAAiB,GAAAnR,KAAA+S,UAGA,mBAAA5B,GAAAnR,KAAA+S,QAAAvC,QACAxU,EAAAoK,KAAA+K,EAAAnR,KAAA+S,QAAAvC,OAAA,SAAAwC,EAAAC,GACA,GAAAxC,GAAA7W,EAAAC,QAAA,UAAAmB,QAAA,YAAAiY,EACAxC,IACAA,EAAAzP,IAAA,KAAAgS,KAMA,mBAAA7B,GAAAnR,KAAA+S,QAAAnC,SACA5U,EAAAoK,KAAA+K,EAAAnR,KAAA+S,QAAAnC,QAAA,SAAAoC,EAAAC,GACA,GAAA/C,GAAAtW,EAAAC,QAAA,WAAAmB,QAAA,aAAAiY,EACA/C,IACAA,EAAAlP,IAAA,KAAAgS,MAMApZ,EAAAC,QAAA,OAAAmB,QAAA,iBAAA,WAAA,GACApB,EAAAC,QAAA,OAAAY,QAAA,sBAGAb,GAAAC,QAAA,OAAAmB,QAAA,iBAAA,SAAA,MAKA,OAAAgH,KC5CAxO,EAAA,kCAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,aAAAH,KAAAwZ,iBAEAtZ,EAAAC,QAAA,OAAAoE,MAAA,uBAAAvE,KAAAwZ,gBAAAxZ,OAGAwZ,gBAAA,SAAAjb,EAAA8B,GAKA,GAAA,mBAAAA,GACA,GAAA6O,GAAA1P,OAAAjB,EAAAgH,QAAAe,KAAA,UACAjG,EAAAH,EAAAC,QAAA,OAAAmB,QAAA,kBAAA4N,EAGAhP,GAAAC,QAAA,OAAAmB,QAAA,sBACApB,EAAAC,QAAA,OAAAmB,QAAA,gBAMA,GAAAjB,EAAAkB,IAAA,OAAA9F,SACAyE,EAAAC,QAAA,OAAAmB,QAAA,uBAAAjB,GACAH,EAAAC,QAAA,OAAAY,QAAA,uBAAAV,MAMA,OAAAiI,KCpCAxO,EAAA,+BAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,uBAAAH,KAAAyZ,kBAGAA,gBAAA,WACA,GAAApY,GAAAnB,EAAAC,QAAA,OAAAmB,QAAA,oBACAoY,SAAAC,UAAA,KAAA,KAAAvK,OAAAwK,SAAAC,KAAA,WAAAxY,EAAAE,IAAA,MACA,IAAAuY,GAAA,cACArY,EAAA2N,OAAAwK,SAAAG,WACAC,EAAAvY,EAAA5F,QAAAie,EAAA,GACAlV,SAAAC,IAAAmV,KAKA,OAAA1R,KCbAxO,EAAA,6BAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,QAAA,cAAAH,KAAAia,eACAja,KAAAC,SAAAC,EAAAC,QAAA,UAAA,SAAAH,KAAAia,eACAja,KAAAC,SAAAC,EAAAC,QAAA,UAAA,sBAAAH,KAAAia,eAGAja,KAAAC,SAAAC,EAAAC,QAAA,WAAA,eAAAH,KAAAka,aACAla,KAAAC,SAAAC,EAAAC,QAAA,WAAA,gBAAAH,KAAAma,cAEAna,KAAAC,SAAAC,EAAAC,QAAA,WAAA,sBAAAH,KAAAoa,oBACApa,KAAAC,SAAAC,EAAAC,QAAA,WAAA,uBAAAH,KAAAqa,qBACAra,KAAAC,SAAAC,EAAAC,QAAA,WAAA,wBAAAH,KAAAsa,sBACAta,KAAAC,SAAAC,EAAAC,QAAA,WAAA,eAAAH,KAAAoI,cAGA6R,cAAA,WACA,GAAA5Y,GAAAnB,EAAAC,QAAA,OAAAmB,QAAA,oBACA9B,QAAA+a,UAAA3T,IAAA,oBACApH,OAAA,SAAAoH,IAAA,oBACAvF,EAAAE,IAAA,YACA/B,OAAAkN,KAAArL,EAAAE,IAAA,WAAA,SAAAiZ,EAAAC,GACAjb,OAAA+a,UAAAja,GAAA,0BAAA,KAAAka,EAAA,SAAAjc,GACA2B,EAAAC,QAAA,WAAAY,QAAA0Z,EAAAlc,KAEAiB,OAAA,SAAAc,GAAA,0BAAA,KAAAka,EAAA,SAAAjc,GACA2B,EAAAC,QAAA,WAAAY,QAAA0Z,EAAAlc,KAEAiB,OAAA,YAAAc,GAAA,0BAAA,KAAAka,EAAA,SAAAjc,GACA2B,EAAAC,QAAA,WAAAY,QAAA0Z,EAAAlc,QAMA2b,YAAA,WACA,YAAAha,EAAAC,QAAA,OAAAmB,QAAA,qBACApB,EAAAC,QAAA,OAAAmB,QAAA,cAAA,YAEApB,EAAAC,QAAA,OAAAmB,QAAA,iBAKA6Y,aAAA,WACA,aAAAja,EAAAC,QAAA,OAAAmB,QAAA,qBACApB,EAAAC,QAAA,OAAAmB,QAAA,cAAA,aAEApB,EAAAC,QAAA,OAAAmB,QAAA,iBAIA8Y,mBAAA,WACA,GAAA9W,GAAApD,EAAAC,QAAA,OAAAmB,QAAA,wBACAoZ,EAAApX,EAAA/B,IAAA,SACArB,GAAAC,QAAA,OAAAmB,QAAA,0BAAAoZ,IAGAL,oBAAA,WACA,GAAA/W,GAAApD,EAAAC,QAAA,OAAAmB,QAAA,wBACAqZ,EAAArX,EAAA/B,IAAA,UACArB,GAAAC,QAAA,OAAAmB,QAAA,0BAAAqZ,IAGAL,qBAAA,WACA,GAAAhX,GAAApD,EAAAC,QAAA,OAAAmB,QAAA,wBACAsZ,EAAAtX,EAAA/B,IAAA,WACArB,GAAAC,QAAA,OAAAmB,QAAA,0BAAAsZ,IAGAxS,YAAA,WACAlI,EAAAC,QAAA,OAAAmB,QAAA,kBAKA,OAAAgH,KClFAxO,EAAA,gCAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAKAC,KAAA6a,kBACA,cAGA7a,KAAAC,SAAAC,EAAAC,QAAA,OAAA,iBAAAH,KAAA8a,cAGAA,YAAA,SAAAza,GACA,IAAA,GAAA0a,KAAA1a,GAAA2a,oBACA,GAAAC,GAAAF,EACAG,EAAA7a,EAAA2a,oBAAAD,EAGA7a,GAAAC,QAAA,QAAAE,EAAAkB,IAAA,SAAAD,QAAA,oBAAAtB,KAAA6a,mBAAA7a,KAAA6a,gBAEA,OAAA,IAAA7a,KAAA6a,iBAAA3e,QAAA6e,IACA,MAEA7a,GAAAC,QAAA,OAAAmB,QAAA,iBAAA,SAAA,KAKA,OAAAgH,KC9BAxO,EAAA,8BAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WACAG,EAAAC,QAAA,WAAAoE,MAAA,qBAAAvE,KAAAmb,kBAAAnb,MACAE,EAAAC,QAAA,WAAAoE,MAAA,iBAAAvE,KAAAob,cAAApb,MACAE,EAAAC,QAAA,WAAAoE,MAAA,oBAAAvE,KAAAqb,iBAAArb,MACAE,EAAAC,QAAA,WAAAoE,MAAA,uBAAAvE,KAAAsb,oBAAAtb,MAEAE,EAAAC,QAAA,WAAAoE,MAAA,kBAAAvE,KAAAub,eAAAvb,MACAE,EAAAC,QAAA,WAAAoE,MAAA,qBAAAvE,KAAAwb,kBAAAxb,MACAE,EAAAC,QAAA,WAAAoE,MAAA,wBAAAvE,KAAAyb,qBAAAzb,MACAE,EAAAC,QAAA,WAAAoE,MAAA,uBAAAvE,KAAA0b,oBAAA1b,OAWAmb,kBAAA,SAAAjC,EAAAC,GACA,GAAAwC,GAAAzC,EAAA3X,IAAA,SACAqX,EAAAM,EAAA3X,IAAA,WACAwZ,EAAAnC,EAAAmC,KACAa,EAAAhD,EAAAgD,MACAD,GAAArU,IAAAyT,EAAAa,GACA5b,KAAA6b,kBAAA3C,EAAAC,IAYAiC,cAAA,SAAAlC,EAAAC,GACA,GAAA2C,GAAA5C,EAAA3X,IAAA,SACAiC,EAAA0V,EAAA3X,IAAA,QAAAiC,UAIA,UAFAA,GAAAuY,OAAAD,EAAAva,IAAA,QAEA4X,EAAA,CACA,GAAAd,GAAAnY,EAAAC,QAAA,WAAAmB,QAAA,wBACA0a,EAAA3D,EAAA4D,OAAA5b,MAAAyb,GAEAxZ,GAAAoK,KAAAsP,EAAA,SAAA3b,GACAA,IAAA6Y,GACAb,EAAA6D,OAAA7b,KAKAmD,EAAA0Y,OAAAJ,GACA9b,KAAA6b,kBAAA3C,EAAAC,IAYAmC,oBAAA,SAAApC,EAAAC,GACA,GAAA2C,GAAA5C,EAAA3X,IAAA,SACA4a,EAAAjD,EAAA3X,IAAA,QAAAiC,UAEA,KAAA2V,EAAA,CACA,GAAAd,GAAAnY,EAAAC,QAAA,WAAAmB,QAAA,wBACA0a,EAAA3D,EAAA4D,OAAA5b,MAAAyb,GAEAxZ,GAAAoK,KAAAsP,EAAA,SAAA3b,GACAA,IAAA6Y,GACAb,EAAA6D,OAAA7b,KAKA8b,EAAAD,OAAAJ,GACA9b,KAAA6b,kBAAA3C,EAAAC,IAWAkC,iBAAA,SAAAnC,EAAAC,GACA,GAAAlL,GAAAiL,EAAA3X,IAAA,SACAiC,EAAA0V,EAAA3X,IAAA,QAAAiC,UAMA,IAJAtD,EAAAC,QAAA8N,EAAA1M,IAAA,iBAAAD,QAAA,MAAA2M,SAEAzK,GAAAqT,WAAA5I,EAAA1M,IAAA,QAEA4X,EAAA,CACA,GAAAd,GAAAnY,EAAAC,QAAA,WAAAmB,QAAA,wBACA0a,EAAA3D,EAAA4D,OAAA5b,MAAA4N,GAEA3L,GAAAoK,KAAAsP,EAAA,SAAA3b,GACAA,IAAA6Y,GACA7Y,EAAAiH,IAAA,YAAA,KAMA9D,EAAAzC,QAAA,QAAAyC,GAEAxD,KAAA6b,kBAAA3C,EAAAC,IAWAoC,eAAA,SAAArC,EAAAC,GACA,GAAA7S,GAAA4S,EAAA3X,IAAA,QACAuV,EAAAxQ,EAAAwQ,OAEA7P,EAAA/G,EAAAC,QAAA,UAAAmB,QAAA,iBACAgB,GAAAoK,KAAAoK,EAAA,SAAAgC,GACA,GAAA8C,GAAA9C,EAAA8C,OACAD,EAAA7C,EAAAzY,KACAsb,GAAArU,IAAA,QAAAsU,GACAhX,QAAAC,IAAA,OAAA8W,EAAApa,IAAA,SAAA,OAAAqa,KAEAhX,QAAAC,IAAAoC,EAAAgV,OAAAxN,MAAA,UACA7J,QAAAC,IAAAoC,EAAAgV,OAAAxN,MAAA,WAGAxH,EAAAgS,OACAjZ,KAAA6b,kBAAA3C,EAAAC,IAGAqC,kBAAA,SAAAtC,EAAAC,GACA,GAAA9Y,GAAA6Y,EAAA3X,IAAA,QAEA,KAAA4X,EAAA,CACA,GAAAd,GAAAnY,EAAAC,QAAA,WAAAmB,QAAA,wBACA0a,EAAA3D,EAAA4D,OAAA5b,MAAAA,GAEAiC,GAAAoK,KAAAsP,EAAA,SAAAlD,GACAA,IAAAI,GACAb,EAAA6D,OAAApD,KAKAzY,EAAAmD,WAAA0Y,OAAA7b,GACAL,KAAA6b,kBAAA3C,EAAAC,IAGAsC,qBAAA,SAAAvC,EAAAC,GACA,GAAA9Y,GAAA6Y,EAAA3X,IAAA,SACAiC,EAAA0V,EAAA3X,IAAA,QAAAiC,UAGA,IAFAA,EAAAuV,IAAA1Y,IAEA8Y,EAAA,CACA,GAAAd,GAAAnY,EAAAC,QAAA,WAAAmB,QAAA,wBACA0a,EAAA3D,EAAA4D,OAAA5b,MAAAA,GAEAiC,GAAAoK,KAAAsP,EAAA,SAAA3b,GACAA,IAAA6Y,GACA7Y,EAAAiH,IAAA,YAAA,KAKAtH,KAAA6b,kBAAA3C,EAAAC,IAGAuC,oBAAA,SAAAxC,EAAAC,GACA,GAAA7S,GAAA4S,EAAA3X,IAAA,QACAiC,EAAA8C,EAAA9C,WAEA4Y,EAAA9V,EAAA8V,SAEA9Z,GAAAoK,KAAA0P,EAAA,SAAAtD,GACA,GAAA8C,GAAA9C,EAAA8C,OACAS,EAAAvD,EAAAzY,KACAgc,GAAA/U,IAAA,QAAAsU,KAIApY,EAAAyV,OACAjZ,KAAA6b,kBAAA3C,EAAAC,IAWA0C,kBAAA,SAAA3C,EAAAC,GACA,GAAAA,GAAA,mBAAAA,GAAAA,GAAA,CACA,KAAAA,EAAA,CAEAjZ,EAAAC,QAAA,OAAAmB,QAAA,YACA,IAAA+W,GAAAnY,EAAAC,QAAA,WAAAmB,QAAA,uBACA+W,GAAA6D,OAAAhD,GACA,GAAAb,EAAA5c,SACAyE,EAAAC,QAAA,OAAAmB,QAAA,iBAAA,SAAA,GACApB,EAAAC,QAAA,OAAAmB,QAAA,oBAOA,OAAAgH,KCnOAxO,EAAA,oCAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WACAG,EAAAC,QAAA,OAAAoE,MAAA,kBAAAvE,KAAAsc,eAAAtc,OAGAsc,eAAA,SAAAjc,GAEA,GAAAxE,KAEAyG,GAAAoK,KAAArM,EAAAkc,WAAA,SAAA1W,EAAAkE,GAEA,GAAAlE,YAAAoE,UAAAK,WAAA,CAEA,GAAA8G,GAAAvL,EAAAxK,IAAA,SAAAgF,GAAA,MAAAA,GAAAwL,UACA2Q,EAAAla,EAAAuJ,MAAAhG,EAAA2W,SACAC,EAAA,GAAA5W,GAAA6W,YAAAtL,EAAAoL,EACA3gB,GAAAkO,GAAA0S,MACA5W,aAAAoE,UAAAC,QACArO,EAAAkO,GAAAlE,EAAAgG,UAKA,IAAA8Q,GAAAtc,EAAAwL,OAMA,OAJAvJ,GAAAoK,KAAA7Q,EAAA,SAAAgK,EAAAkE,GACA4S,EAAArV,IAAAyC,EAAAlE,KAGA8W,IAIA,OAAArU,KAEAxO,EAAA,gCAAA,qCAAA,SAAA6N,GC3CA,GAAAlI,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,6BAEAC,WAAA,SAAAuG,GACAtG,KAAAiO,UAAA3H,EAAA2H,WAGA2O,eAAA,WACA1c,EAAAC,QAAA,OAAAY,QAAA,uBAAAf,KAAAK,MAAAL,KAAAiO,YAGA1N,SAAA,WACAP,KAAA2H,sBAAA,CACA,IAAAxF,GAAAnC,IAEAR,QAAAQ,KAAAiC,IAAAC,KAAA,YAAAwK,KAAA,WACA,GAAApI,GAAA9E,OAAAQ,MAAA6c,KAAA,gBACArd,QAAAQ,MAAA8c,KAAA,WACAxY,QAAAA,EACAyY,SAAA,IACAC,MAAA,gBACAjc,QAAA,QACAkc,cAAA,MAIAzd,OAAAQ,KAAAiC,IAAAC,KAAA,eAAAwK,KAAA,WACAlN,OAAAQ,MAAA8c,KAAA,WACAI,MAAA,mBACA5Y,QAAA9E,OAAA,uBACAuB,QAAA,QACAoc,UACAC,EAAA,SACAC,EAAA,UAEAJ,aAAA,OACAK,YAAA,EACAN,MAAA,gBACAO,UAAA,IACAC,OAAA,WACA,GAAAC,GAAAje,OAAA2C,EAAAF,IAAAC,KAAA,WACAhC,GAAAC,QAAA,aAAAmB,QAAA,wBAAAmc,GACAvd,EAAAC,QAAA,aAAAmB,QAAA,eAAA,GACApB,EAAAC,QAAA,UAAAmB,QAAA,gBAAA,eAEAoc,gBAAA,WACAxd,EAAAC,QAAA,aAAAmB,QAAA,eAAA,GACApB,EAAAC,QAAA,UAAAmB,QAAA,eAAA,oBAMAU,OAAA,WACAhC,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,MAGAQ,gBAAA,WACA,GAAAmB,GAAAnC,IACA,QACA2d,cAAA,WAOA,MANA,mBAAAxb,GAAA8L,UAAA1M,IAAAvB,KAAA1F,MACA0F,KAAAhD,MAAAmF,EAAA8L,UAAA1M,IAAAvB,KAAA1F,MAEA0F,KAAAhD,MAAA,GAGAsF,EAAAxC,SAAAN,OAAA,yBAAAQ,KAAA4M,MAAArK,OAAAvC,OAGA4d,mBAAA,WACA,MAAA,kBAGAC,YAAA,WACA,MAAA,mBAAA7d,MAAA6J,MACA7J,KAAA6J,MAEA,YAIA4J,cAAA,WACA,MAAAzT,MAAA0T,KACA,qHAAA1T,KAAA0T,KAAA,SAEA,IAIAC,gBAAA,WACA,MAAA3T,MAAA4T,eACA,iEAEA,MAMAhT,QACAsY,OAAA,iBAGA4E,cAAA,SAAAvf,GACA2B,EAAAC,QAAA,OAAAY,QAAA,iBAAAxC,EAAAyB,KAAAK,MAAAL,KAAAiO,aAKA,OAAAxO,KCvGA3F,EAAA,uCAAA,gCAAA,SAAAikB,GACA,GAAAzV,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAG,EAAAC,QAAA,OAAAoE,MAAA,uBAAAvE,KAAAge,oBAAAhe,OAUAge,oBAAA,SAAA3d,GAEA,GAAAuM,GAAAvM,EAAAkB,IAAA,QAEA0c,EAAA/d,EAAAC,QAAAyM,GAAAtL,QAAA,uBAAAjB,IAAA0d,CAEA,OAAAE,KAKA,OAAA3V,KC5BAxO,EAAA,0CAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAG,EAAAC,QAAA,OAAAoE,MAAA,iBAAAvE,KAAA8d,cAAA9d,MAGAA,KAAAC,SAAAC,EAAAC,QAAA,OAAA,iBAAAH,KAAA8d,cAAA9d,OAYA8d,cAAA,SAAAvf,EAAA+U,EAAArF,GACA,GAAA3T,GAAAgZ,EAAA/R,IAAA,QACAqa,EAAA3N,EAAA1M,IAAAjH,GAEA0C,EAAAkD,EAAAC,QAAAmT,EAAA/R,IAAA,SAAAD,QAAA,uBAAA/C,EAAA0P,EAAA3T,EAAAgZ,EAEA,oBAAAtW,KACAA,EAAAwC,OAAAjB,EAAAgH,QAAAM,OAGAoI,EAAA3G,IAAAhN,EAAA0C,EAEA,IAAAke,GAAAle,EAEA4b,GACAmC,KAAAzgB,EACAshB,OAAAA,EACAV,MAAAA,GAGA7Z,EAAAnB,EAAAC,QAAA,OAAAmB,QAAA,qBACA4c,EAAA7c,EAAAE,IAAA,MAEA+R,EAAApT,EAAAC,QAAA+d,GAAA5c,QAAA,mBAAAhH,EAMA,WAAAgZ,EAAA/R,IAAA,UAEAqa,EADA,GAAAA,EACA,KAEA,MAIAV,EADA,GAAAA,EACA,KAEA,MAIA,IAAAzM,IACA0P,OAAAlQ,EAAA1M,IAAA,cACAkN,MAAAR,EAAA1M,IAAA,SACA2X,OAAA,WAAA5F,EAAA/R,IAAA,SAAA,SAAAqa,EAAA,OAAAV,EAGAhb,GAAAC,QAAA,WAAAmB,QAAA,kBAAA,gBAAA2M,EAAA2K,EAAAnK,KAKA,OAAAnG,KAEAxO,EAAA,wCAAA,gCAAA,SAAAikB,GClFA,GAAAte,GAAAC,WAAAsH,cAAApH,QACAE,SAAA,6BACAiC,UAAAgc,EAEAhe,WAAA,SAAAuG,GACAtG,KAAAwD,WAAAxD,KAAAK,MAAAkB,IAAA,YACAvB,KAAAgO,kBAAAC,UAAA3H,EAAA2H,YAGA1N,SAAA,WACAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,KAEAR,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,MAGAQ,gBAAA,WACA,OACA2c,cAAA,WACA,MAAArb,GAAAxC,SAAAN,OAAA,yBAAAQ,KAAA4M,MAAArK,OAAAvC,OAGA6d,YAAA,WACA,MAAA,mBAAA7d,MAAA6J,MACA7J,KAAA6J,MAEA,cAMA1C,WAAA,SAAAC,EAAArF,GACAvC,OAAA4H,EAAAnF,IAAAC,KAAA,0BAAAmF,OAAAtF,EAAAE,MAKA,OAAAxC,KC5BA3F,EAAA,6BAAA,WACA,GAAAuG,GAAA4J,SAAAC,MAAAtK,QACAuK,UACAiE,UAAA,GAGArO,WAAA,WAEAG,EAAAC,QAAA,OAAAY,QAAA,oBAAAf,MACA,mBAAAA,MAAAuB,IAAA,QAGArB,EAAAC,QAAAH,KAAAuB,IAAA,SAAAR,QAAA,oBAAAf,QAIA,OAAAK,KCtBAvG,EAAA,gCAAA,2BAAA,SAAAwZ,GACA,GAAA9P,GAAAyG,SAAAK,WAAA1K,QACAS,MAAAiT,GAEA,OAAA9P,KCJA1J,EAAA,4BAAA,uCAAA,gCAAA,SAAAskB,EAAAC,GACA,GAAA/V,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WACAG,EAAAC,QAAA,YAAAoE,MAAA,uBAAAvE,KAAAge,oBAAAhe,MAEAA,KAAAC,SAAAC,EAAAC,QAAA,YAAA,oBAAAH,KAAAse,2BAGAN,oBAAA,SAAA3d,GACA,MAAA+d,IAUAE,yBAAA,SAAAje,GACAA,EAAAiH,IAAA,WAAA,GAAA+W,GAAAhe,EAAAkB,IAAA,gBAKA,OAAA+G,KCvBAxO,EAAA,mCAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAG,EAAAC,QAAA,UAAAoE,MAAA,uBAAAvE,KAAAmW,cAAAnW,OAaAmW,cAAA,SAAA5X,EAAAod,EAAArhB,EAAAikB,GACA,GAAA/e,OAAAjB,EAAAgH,QAAAwV,KAAA,WACA,GAAA/d,GAAA,MAEA,IAAAA,GAAA,CAGA,OAAAA,KAKA,OAAAsL,KC/BAxO,EAAA,kCAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,aAAAH,KAAAyR,WACAzR,KAAAC,SAAAC,EAAAC,QAAA,OAAA,eAAAH,KAAA0R,aACA1R,KAAAC,SAAAC,EAAAC,QAAA,OAAA,kBAAAH,KAAAwe,iBAaA/M,UAAA,SAAAlT,EAAA8B,GACA,GAAAgB,GAAAnB,EAAAC,QAAA,OAAAmB,QAAA,qBACA4c,EAAA7c,EAAAE,IAAA,KACArB,GAAAC,QAAA+d,GAAA5c,QAAA,oBACAjB,EAAAiH,IAAA,cAAA,EACA,IAAAsF,GAAA1M,EAAAC,QAAA+d,GAAA5c,QAAA,WAAAjB,EAAAkB,IAAA,QACArB,GAAAC,QAAA,OAAAmB,QAAA,cAAA,gBAAAjB,MAAAA,EAAA0O,gBAAAnC,EAAArL,IAAA,oBAWAmQ,YAAA,SAAAnT,EAAA0P,GACA,GAAA0O,GAAAzc,EAAAC,QAAA,OAAAmB,QAAA,kBAAA2M,GAGAQ,GACA0P,OAAAlQ,EAAA1M,IAAA,cACAkN,MAAAR,EAAA1M,IAAA,SACA2X,OAAA,UACAL,SAAA,WAGAvS,GACA9C,WAAAyK,EAAAzK,YAGA6U,EAAAnY,EAAAC,QAAA,WAAAmB,QAAA,wBACA0a,EAAA3D,EAAA4D,OAAA5b,MAAA4N,GAEA3L,GAAAoK,KAAAsP,EAAA,SAAAlD,GACA,GAAAxS,GAAAwS,EAAAvX,IAAA,OACA,oBAAA+E,GAAAwQ,QACAxU,EAAAoK,KAAApG,EAAAwQ,OAAA,SAAAC,EAAAtZ,GACAsZ,EAAA1W,OAAA4N,IACA3H,EAAAwQ,OAAArZ,GAAA4C,MAAAsc,KAIA7D,EAAAxR,IAAA,OAAAhB,GACAwS,EAAAxR,IAAA,QAAAqV,GACA7D,EAAAxR,IAAA,YAAA,KAGApH,EAAAC,QAAA,WAAAmB,QAAA,kBAAA,eAAAqb,EAAA,KAAAlO,EAAAnI,EAEA,IAAAjF,GAAAnB,EAAAC,QAAA,OAAAmB,QAAA,qBACA4c,EAAA7c,EAAAE,IAAA,KACArB,GAAAC,QAAA+d,GAAA5c,QAAA,SAAA2M,IAWAuQ,eAAA,SAAAjgB,EAAA8B,GACA,GAAAsc,GAAAzc,EAAAC,QAAA,OAAAmB,QAAA,kBAAAjB,GACAgB,EAAAnB,EAAAC,QAAA,OAAAmB,QAAA,qBACA4c,EAAA7c,EAAAE,IAAA,KAGAob,GAAArV,IAAA,QAAAqV,EAAApb,IAAA,SAAA,QAEA,IAAAkd,GAAAve,EAAAC,QAAA+d,GAAA5c,QAAA,YACAqb,GAAArV,IAAA,KAAAmX,GAEAve,EAAAC,QAAA+d,GAAA5c,QAAA,MAAAqb,EAEA,IAAAlO,IACA0P,OAAA9d,EAAAkB,IAAA,cACAkN,MAAApO,EAAAkB,IAAA,SACA2X,OAAA,aACAL,SAAA,cAGAvS,GACA9C,WAAAtD,EAAAC,QAAA+d,GAAA5c,QAAA,kBAGApB,GAAAC,QAAA,WAAAmB,QAAA,kBAAA,kBAAAqb,EAAA,KAAAlO,EAAAnI,GAGApG,EAAAC,QAAA,OAAAmB,QAAA,eAKA,OAAAgH,KCnHAxO,EAAA,8BAAA,WACA,GAAAuG,GAAA4J,SAAAC,MAAAtK,QACAuK,UACArD,QAAA,IAIA,OAAAzG,KCPAvG,EAAA,iCAAA,4BAAA,SAAA4kB,GACA,GAAAlb,GAAAyG,SAAAK,WAAA1K,QACAS,MAAAqe,GAEA,OAAAlb,KCFA1J,EAAA,6BACA,iCACA,SACA6kB,GAEA,GAAArW,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WACAC,KAAA4e,qBAAA,GAAAD,EACA,IAAAxc,GAAAnC,IACAsC,GAAAoK,KAAA5E,UAAA,SAAA+W,GACA,GAAAA,EAAAC,KACA,GAAAA,GAAA,GAAAH,GAAAE,EAAAC,UAEA,IAAAA,GAAA,EAGA3c,GAAAyc,qBAAA7F,KACAta,GAAAogB,EAAApgB,GACAgQ,MAAAoQ,EAAApQ,MACAqQ,KAAAA,KAIA,IAAAA,GAAA,GAAAH,GAEA1X,EAAA/G,EAAAC,QAAA,UAAAmB,QAAA,iBACAgB,GAAAoK,KAAAzF,EAAAmK,OAAA,SAAA2F,GACA+H,EAAA/F,KACAta,GAAAsY,EAAAxV,IAAA,MACAkN,MAAAsI,EAAAxV,IAAA,SACAwd,IAAA,UAAAhI,EAAAxV,IAAA,MAAA,QAIAvB,KAAA4e,qBAAArd,IAAA,UAAA+F,IAAA,OAAAwX,GAEA9e,KAAAyd,kBACAzd,KAAAqP,MAAA,EAEArP,KAAAC,SAAAC,EAAAC,QAAA,aAAA,iBAAAH,KAAAgf,eAUA9e,EAAAC,QAAA,aAAAoE,MAAA,wBAAAvE,KAAAif,qBAAAjf,MAGAE,EAAAC,QAAA,aAAAoE,MAAA,gBAAAvE,KAAAkf,aAAAlf,OAUAgf,cAAA,SAAAzgB,EAAA4gB,GACA,GAAAC,GAAA5f,OAAAQ,KAAAyd,gBAAA5X,MACAwZ,EAAA7f,OAAAQ,KAAAyd,gBAAA6B,QACAC,EAAAF,EAAAF,EAAA5d,IAAA,OAAA9F,MACA2jB,GAAAA,EAAAI,OAAA,EAAAH,GAAAF,EAAA5d,IAAA,OAAA6d,EAAAI,OAAAH,GACA7f,OAAAQ,KAAAyd,gBAAA5X,IAAAuZ,GAAAE,MAAAC,GAAAxe,QAAA,WAGA0e,cAAA,SAAAlhB,IACA,YAAAiB,OAAAjB,EAAAgH,QAAA,GAAA1F,SAAA,SAAAL,OAAAjB,EAAAgH,QAAA,GAAA1F,UACAL,OAAAjB,EAAAgH,QAAAd,SAAAvC,KAAA,eAAAiQ,SAIAuN,gBAAA,SAAAnhB,GACA,GAAAyB,KAAAqP,KAAA,CACA9Q,EAAAohB,gBACA,IAAAC,GAAA5f,KAAA8W,OAAAmF,OAAAnV,QAAA,IAAA,EACA8Y,IACA5f,KAAAgf,cAAAzgB,EAAAqhB,KAKAC,YAAA,SAAAthB,GACAyB,KAAAqP,OACA9Q,EAAAohB,iBACA3f,KAAA8f,gBAAA,QAIAC,cAAA,SAAAxhB,GACAyB,KAAAqP,OACA9Q,EAAAohB,iBACA3f,KAAA8f,gBAAA,UAIAA,gBAAA,SAAAE,GACA,GAAA,QAAAA,EACA,GAAAC,GAAA,MAEA,IAAAA,GAAA,EAGA,IAAA,EAAAjgB,KAAA8W,OAAAmF,OAAAnV,QAAA,IAAArL,OAAA,CACA,GAAAmkB,GAAA5f,KAAA8W,OAAAmF,OAAAnV,QAAA,IAAA,GACAoZ,EAAAlgB,KAAA8W,OAAA5a,QAAA0jB,EACAA,GAAAtY,IAAA,UAAA,EAEA,IAAA6Y,GAAAngB,KAAA8W,OAAA1F,OAAA8O,EAAAD,EACAE,IACAA,EAAA7Y,IAAA,UAAA,OAKA,GAAAtH,KAAA8W,OAAAmF,OAAAnV,QAAA,IACAlC,QAAAC,IAAA,UACA,EAAA7E,KAAAogB,SAAAnE,OAAAnV,QAAA,IACAlC,QAAAC,IAAA,YAGA,EAAA7E,KAAA8W,OAAA1F,OAAA3V,OAEAuE,KAAA8W,OAAA1F,OAAA,GAAA9J,IAAA,UAAA,GAGAtH,KAAAqgB,OAAAjP,OAAA,GAAA9J,IAAA,UAAA,IAKA2X,qBAAA,SAAArT,GACA5L,KAAAyd,eAAA7R,GAGAsT,aAAA,WACA,MAAAlf,MAAA4e,sBAGA0B,WAAA,SAAAjR,GACArP,KAAAqP,KAAAA,EACA/M,EAAAoK,KAAA1M,KAAA4e,qBAAArd,IAAA,UAAA6P,OAAA,SAAA/Q,GACAA,EAAAiH,IAAA,UAAA,OAMA,OAAAgB,KCxJAxO,EAAA,qCAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B;A1FTA,A0FUAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,uBAAAH,KAAAugB,sBAGAA,oBAAA,SAAAjN,EAAArF,GACA,UAAAqF,EAAA/R,IAAA,UAOA,OAAA+G,KCjBAxO,EAAA,0BAAA,WACA,GAAAuG,GAAA4J,SAAAC,MAAAtK,UAIA,OAAAS,KCLAvG,EAAA,6BAAA,wBAAA,SAAA0mB,GACA,GAAAhd,GAAAyG,SAAAK,WAAA1K,QACAS,MAAAmgB,GAEA,OAAAhd,KCJA1J,EAAA,kCAAA,WACA,GAAAuG,GAAA4J,SAAAC,MAAAtK,QACAuK,UACAwE,SAAA,IAIA,OAAAtO,KCPAvG,EAAA,qCAAA,gCAAA,SAAA2mB,GACA,GAAAjd,GAAAyG,SAAAK,WAAA1K,QACAS,MAAAogB,GAEA,OAAAjd,KCJA1J,EAAA,oCAAA,WACA,GAAAuG,GAAA4J,SAAAC,MAAAtK,QACAuK,UACA/I,QAAA,KAIA,OAAAf,KCPAvG,EAAA,uCAAA,kCAAA,SAAA4mB,GACA,GAAAld,GAAAyG,SAAAK,WAAA1K,QACAS,MAAAqgB,GAEA,OAAAld,KCCA1J,EAAA,4BACA,4BACA,+BACA,oCACA,uCACA,SACA6mB,EACAtC,EACAuC,EACAjT,GAEA,GAAArF,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAwD,WAAA,GAAAmd,GAEA3gB,KAAA6gB,kBAAA,GAAAlT,GAAAkT,kBAGA,IAAA1e,GAAAnC,IAGAsC,GAAAoK,KAAAoU,cAAA,SAAAlU,GACA,GAAAkC,GAAA,GAAA8R,EAEAte,GAAAoK,KAAAE,EAAAkC,cAAA,SAAAiS,GACA,GAAAC,IACAvS,MAAAsS,EAAAtS,MACAE,QAAAoS,EAAApS,QACAP,SAAA,GAAAiQ,GAAA0C,EAAA3S,UAGAU,GAAAiK,IAAAiI,KAIA,mBAAA7e,GAAA0e,kBAAAtf,IAAAqL,EAAA2C,UACApN,EAAA0e,kBAAAtf,IAAAqL,EAAA2C,SAAAhO,IAAA,cAAA7E,KAAAkQ,EAAAnO,GAIA,IAAAwiB,IACAxiB,GAAAmO,EAAAnO,GACAoO,SAAAD,EAAAC,SACAqU,MAAAtU,EAAAsU,MACAC,WAAAvU,EAAAuU,WACArS,cAAAA,EACAsS,gBAAAxU,EAAAwU,gBAGAjf,GAAAqB,WAAAuV,IAAAkI,KAIA/gB,EAAAC,QAAA,UAAAoE,MAAA,WAAAvE,KAAAqhB,aAAArhB,MACAE,EAAAC,QAAA,UAAAoE,MAAA,qBAAAvE,KAAAshB,kBAAAthB,MACAE,EAAAC,QAAA,UAAAoE,MAAA,mBAAAvE,KAAAuhB,gBAAAvhB,MAEAA,KAAAC,SAAAC,EAAAC,QAAA,UAAA,kBAAAH,KAAAwhB,iBAUAH,aAAA,SAAA5iB,GACA,MAAAuB,MAAAwD,WAAAjC,IAAA9C,IAUA6iB,kBAAA,SAAA7iB,GACA,MAAAuB,MAAAwD,YAUAge,eAAA,SAAAjjB,GACA,GAAAqO,GAAApN,OAAAjB,EAAAgH,QAAAe,KAAA,KACApG,GAAAC,QAAA,UAAAmB,QAAA,kBAAAsL,IASA2U,gBAAA,WACA,MAAAvhB,MAAA6gB,oBAIA,OAAAvY,KC/GAxO,EAAA,sCAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,iBAAAH,KAAAyhB,WACAzhB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,gBAAAH,KAAA0hB,UAKAxhB,EAAAC,QAAA,mBAAAoE,MAAA,sBAAAvE,KAAA2hB,+BAAA3hB,OAgBAyhB,UAAA,SAAAG,EAAA1W,GACAlL,KAAAmJ,SAAAjJ,EAAAC,QAAA,OAAAmB,QAAA,gBACAtB,KAAA6hB,OAAA3hB,EAAAC,QAAA,OAAAmB,QAAA,cACA9B,OAAAQ,KAAAmJ,UAAA,GAAA2Y,MAAAC,YAAA,WAAA,UAAA,aACAviB,OAAAQ,KAAA6hB,QAAA,GAAAC,MAAAC,YAAA,WAAA,UAAA,aAEA/hB,KAAAgiB,qBAAAxiB,OAAA0L,EAAAH,QAAAc,SAYA6V,SAAA,SAAAE,EAAA1W,GACA1L,OAAAQ,KAAAmJ,UAAA,GAAA2Y,MAAAC,YAAA,WAAA,SAAA,aACAviB,OAAAQ,KAAA6hB,QAAA,GAAAC,MAAAC,YAAA,WAAA,SAAA,cAGAJ,+BAAA,WACA,MAAA3hB,MAAAgiB,uBAIA,OAAA1Z,KCtDAxO,EAAA,oCAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,yBAAAH,KAAAyhB,WACAzhB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,wBAAAH,KAAA0hB,WAcAD,UAAA,SAAAG,EAAA1W,GACAlL,KAAAmJ,SAAAjJ,EAAAC,QAAA,OAAAmB,QAAA,gBACAtB,KAAA6hB,OAAA3hB,EAAAC,QAAA,OAAAmB,QAAA,cACA9B,OAAAQ,KAAAmJ,UAAA,GAAA2Y,MAAAC,YAAA,WAAA,UAAA,aACAviB,OAAAQ,KAAA6hB,QAAA,GAAAC,MAAAC,YAAA,WAAA,UAAA,YAEA,IAAAE,GAAA/hB,EAAAC,QAAA,UAAAmB,QAAA,eACAiB,EAAAD,EAAAxC,SAAAN,OAAA,+BAAA+C,QAAA2f,IAAAD,EAAA7Q,OAAA3V,QACA+D,QAAA0L,EAAAH,QAAAxI,KAAAA,GACA/C,OAAA0L,EAAAH,QAAA7Q,KAAA,KAAA,yBACAsF,OAAA0L,EAAAuH,MAAArJ,IAAA,UAAA,QAWAsY,SAAA,SAAAE,EAAA1W,GACA1L,OAAAQ,KAAAmJ,UAAA,GAAA2Y,MAAAC,YAAA,WAAA,SAAA,aACAviB,OAAAQ,KAAA6hB,QAAA,GAAAC,MAAAC,YAAA,WAAA,SAAA,eAIA,OAAAzZ,KC9CAxO,EAAA,yCAAA,uCAAA,SAAA6T,GACA,GAAArF,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAwD,WAAA,GAAAmK,KAEAlP,GAAA,QACAoO,SAAA,eACAzL,QAAA,WACAuL,iBAIAzM,EAAAC,QAAA,UAAAoE,MAAA,kBAAAvE,KAAAmiB,eAAAniB,OAGAmiB,eAAA,WACA,MAAAniB,MAAAwD,aAIA,OAAA8E,KClBAxO,EAAA,8BAAA,mCAAA,SAAA+T,GACA,GAAAvF,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAwD,WAAA,GAAAqK,GAEA3N,EAAAC,QAAA,UAAAoE,MAAA,kBAAAvE,KAAAwhB,eAAAxhB,MACAE,EAAAC,QAAA,UAAAoE,MAAA,qBAAAvE,KAAAwK,kBAAAxK,MACAE,EAAAC,QAAA,UAAAoE,MAAA,cAAAvE,KAAAoiB,qBAAApiB,MACAE,EAAAC,QAAA,UAAAoE,MAAA,eAAAvE,KAAAqiB,iBAAAriB,MACAE,EAAAC,QAAA,UAAAoE,MAAA,gBAAAvE,KAAAsiB,kBAAAtiB,MAEAA,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,0BAAAH,KAAAwK,mBAEAxK,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,qBAAAH,KAAAuiB,oBAGAH,qBAAA,WACA,MAAApiB,MAAAwD,YAUAge,eAAA,SAAA5U,GAEA,GAAAqU,GAAA/gB,EAAAC,QAAA,UAAAmB,QAAA,WAAAsL,GAEA6R,EAAA,mBAAAjf,OAAAgjB,MAEAlc,GACA7H,GAAAggB,EAEA9O,KAAAsR,EAAA1f,IAAA,MAEAsL,SAAAoU,EAAA1f,IAAA,YAIA,OADAvB,MAAAwD,WAAAuV,IAAAzS,GACAmY,GAWAjU,kBAAA,SAAAjM,EAAA8B,GACAL,KAAAwD,WAAA0Y,OAAA7b,IASAkiB,kBAAA,WACA,GAAA,GAAAviB,KAAAwD,WAAA4N,OAAA3V,OAAA,CAEA,GAAAwL,GAAA/G,EAAAC,QAAA,UAAAmB,QAAA,iBAIAgB,GAAAoK,KAAA1M,KAAAwD,WAAA4N,OAAA,SAAA/Q,GAEA,GAAAoe,GAAAve,EAAAC,QAAA,UAAAmB,QAAA,kBAEAmhB,GAAAhkB,GAAAggB,EAAAhQ,MAAApO,EAAAkB,IAAA,YAAAqL,KAAAvM,EAAAkB,IAAA,SAEAob,EAAAzc,EAAAC,QAAA,UAAAmB,QAAA,MAAAmhB,GAAA,GAEAhU,GACA0P,OAAA,QACA1P,MAAAkO,EAAApb,IAAA,SACA2X,OAAA,QACAL,SAAA,YAEAvS,GACA9C,WAAAyD,EAEA/G,GAAAC,QAAA,WAAAmB,QAAA,kBAAA,YAAAqb,EAAA,KAAAlO,EAAAnI,KAIAW,EAAAlG,QAAA,QAAAkG,GAEAjH,KAAAwD,WAAAuK,QAGA7N,EAAAC,QAAA,UAAAmB,QAAA,gBASA+gB,iBAAA,WAEA,GAAAK,GAAAxiB,EAAAC,QAAA,OAAAmB,QAAA,sBAEAqhB,EAAAnjB,OAAAkjB,GAAA7X,SAAA,UAEAvI,GAAAoK,KAAA1M,KAAAwD,WAAA4N,OAAA,SAAA2F,GAEA,GAAA6L,GAAA7L,EAAAxV,IAAA,MACAshB,EAAAF,EAAAzmB,QAAA0mB,EAEA7L,GAAAzP,IAAA,QAAAub,KAGA7iB,KAAAwD,WAAAyV,QAGAqJ,kBAAA,WACAtiB,KAAAwD,WAAAuK,UAKA,OAAAzF,KCpIAxO,EAAA,sCAAA,mCAAA,SAAA+T,GACA,GAAAvF,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,iBAAAH,KAAA8iB,gBACA9iB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,gBAAAH,KAAA+iB,mBAEA/iB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,uBAAAH,KAAAgjB,qBACAhjB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,oBAAAH,KAAAijB,kBACAjjB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,mBAAAH,KAAAkjB,iBACAljB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,qBAAAH,KAAAmjB,mBACAnjB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,oBAAAH,KAAAojB,mBAUAJ,oBAAA,SAAA9X,GACA,GAAA1L,OAAA0L,EAAAuH,MAAAJ,SAAA,wBAAA,CACA,GAAAzF,GAAApN,OAAA0L,EAAAuH,MAAAnM,KAAA,MACAmY,EAAAve,EAAAC,QAAA,UAAAmB,QAAA,kBAAAsL,EACApN,QAAA0L,EAAAH,QAAA7Q,KAAA,KAAAukB,GACAve,EAAAC,QAAA,UAAAmB,QAAA,gBACA9B,OAAA0L,EAAAH,QAAAmR,SACAhc,EAAAC,QAAA,mBAAAY,QAAA,iBAAA6L,KASAkW,eAAA,WACA,GAAAO,GAAAnjB,EAAAC,QAAA,OAAAmB,QAAA,qBACA9B,QAAA6jB,GAAAra,SAAA,wBASA+Z,kBAAA,WACA,GAAAM,GAAAnjB,EAAAC,QAAA,OAAAmB,QAAA,qBACA9B,QAAA6jB,GAAApa,YAAA,wBAWAga,iBAAA,SAAA1kB,EAAA2M,GACA,GAAA1L,OAAA0L,EAAAuH,MAAAJ,SAAA,wBAAA,CACA,GAAAzF,GAAApN,OAAA0L,EAAAuH,MAAAnM,KAAA,MACA2a,EAAA/gB,EAAAC,QAAA,UAAAmB,QAAA,WAAAsL,GACAC,EAAAoU,EAAA1f,IAAA,WACAvB,MAAAsjB,cAAApY,EAAAH,OACAvL,OAAA0L,EAAAH,QAAAxI,KAAAsK,EAAA,qDACArN,OAAA0L,EAAAH,QAAA9B,YAAA,gBAAAD,SAAA,gBAAAI,KAAAqC,QAAA,MAAA5B,MAAA,GAAA8B,OAAA,IACA,IAAA+W,GAAAxiB,EAAAC,QAAA,OAAAmB,QAAA,qBACA9B,QAAAkjB,GAAArQ,SAAA,gBACA7S,OAAAkjB,GAAA1Z,SAAA,wBAaAka,gBAAA,SAAAhY,GACA,GAAA1L,OAAA0L,EAAAuH,MAAAJ,SAAA,wBAAA,CACA,GAAAkR,GAAArjB,EAAAC,QAAA,mBAAAmB,QAAA,sBACA9B,QAAAQ,KAAAsjB,eAAA/gB,KAAA/C,OAAA+jB,GAAAhhB,QACA/C,OAAAQ,KAAAsjB,eAAAra,YAAA,gBAAAD,SAAA,eACA,IAAA0Z,GAAAxiB,EAAAC,QAAA,OAAAmB,QAAA,qBACA9B,QAAAkjB,GAAArQ,SAAA,gBACA7S,OAAAkjB,GAAAzZ,YAAA,wBAaAka,kBAAA,SAAAjY,GACA1L,OAAA0L,EAAAuH,MAAAlP,OACA/D,OAAA0L,EAAAuH,MAAArJ,KAAAuF,QAAA,SAAAlD,QAAA,QACAjM,OAAA0L,EAAAH,QAAA3B,IAAA,UAAA,QAUAga,iBAAA,SAAAlY,GACA1L,OAAA0L,EAAAuH,MAAArJ,IAAA,UAAA,IACA5J,OAAA0L,EAAAH,QAAAmR,WAKA,OAAA5T,KC5HAxO,EAAA,kCAAA,uCAAA,SAAA6T,GACA,GAAArF,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,gBAAAH,KAAAuN,mBAaAA,iBAAA,SAAAqV,EAAArkB,GAEA,GAAA,IAAAiB,OAAAoG,KAAAgd,GAAA,CACA,GAAAY,KAKAlhB,GAAAoK,KAAA1M,KAAAyjB,iBAAAb,GAAA,SAAAviB,GACAmjB,EAAA9mB,KAAA2D,EAAAkB,IAAA,QAIA,IAAAuM,GAAA,GAAAH,KAEAlP,GAAA,WACAoO,SAAA,kBACAF,WAAA6W,IAKAtjB,GAAAC,QAAA,UAAAY,QAAA,oBAAA+M,GAEAvP,EAAAmH,WACA,EAAA8d,EAAA/nB,SACAyE,EAAAC,QAAA,UAAAmB,QAAA,kBAAAkiB,EAAA,IACAtjB,EAAAC,QAAA,UAAAmB,QAAA,qBAKApB,GAAAC,QAAA,UAAAY,QAAA,iBAWA0iB,iBAAA,SAAAb,GACAA,EAAAA,EAAAc,aAEA,IAAAlgB,GAAAtD,EAAAC,QAAA,UAAAmB,QAAA,sBAMAkiB,EAAAhgB,EAAAmgB,OAAA,SAAAtjB,GACA,GAAAujB,IAAA,CA+BA,OA5BA,IAAAvjB,EAAAkB,IAAA,MAAAmiB,cAAAxnB,QAAA0mB,GACAgB,GAAA,EACA,IAAAvjB,EAAAkB,IAAA,YAAAmiB,cAAAxnB,QAAA0mB,KACAgB,GAAA,GAMAvjB,EAAAkB,IAAA,SAAA,GAAAqhB,EAAA1mB,QAAA,MACAoG,EAAAoK,KAAArM,EAAAkB,IAAA,QAAA,SAAAwd,GACA6D,EAAA/mB,QAAA,IAAA,IAAAJ,OAAA,GACA,IAAAsjB,EAAA2E,cAAAxnB,QAAA0mB,EAAA/mB,QAAA,IAAA,OACA+nB,GAAA,KAOAvjB,EAAAkB,IAAA,UACAe,EAAAoK,KAAArM,EAAAkB,IAAA,SAAA,SAAA2f,GACA,IAAAA,EAAAwC,cAAAxnB,QAAA0mB,KACAgB,GAAA,KAKAA,GAGA,OAAAJ,KAIA,OAAAlb,KC3GAxO,EAAA,iCAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,iBAAAH,KAAA8iB,gBACA9iB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,gBAAAH,KAAA+iB,mBAEA/iB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,yBAAAH,KAAA8iB,gBACA9iB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,wBAAAH,KAAA+iB,mBAUA7iB,EAAAC,QAAA,OAAAoE,MAAA,yBAAAvE,KAAA6jB,sBAAA7jB,MACAE,EAAAC,QAAA,OAAAoE,MAAA,sBAAAvE,KAAA8jB,mBAAA9jB,MACAE,EAAAC,QAAA,OAAAoE,MAAA,qBAAAvE,KAAA+jB,kBAAA/jB,MACAE,EAAAC,QAAA,OAAAoE,MAAA,sBAAAvE,KAAAgkB,mBAAAhkB,MACAE,EAAAC,QAAA,OAAAoE,MAAA,uBAAAvE,KAAAikB,oBAAAjkB,MACAE,EAAAC,QAAA,OAAAoE,MAAA,wBAAAvE,KAAAkkB,qBAAAlkB,OASA8iB,eAAA,WACA,GAAAJ,GAAAxiB,EAAAC,QAAA,UAAAmB,QAAA,iBACA9B,QAAAkjB,GAAA1Z,SAAA,wBASA+Z,kBAAA,WACA,GAAAL,GAAAxiB,EAAAC,QAAA,UAAAmB,QAAA,iBACA9B,QAAAkjB,GAAAzZ,YAAA,wBAUA4a,sBAAA,SAAA3Y,GAIA,GAAA1L,OAAA0L,EAAAuH,MAAAJ,SAAA,wBAAA,CAEA,GAAAzF,GAAApN,OAAA0L,EAAAuH,MAAAnM,KAAA,MAEAmY,EAAAze,KAAAmkB,SAAAvX,GAAA,EAKApN,QAAA0L,EAAAH,QAAA7Q,KAAA,KAAAukB,GACAve,EAAAC,QAAA,UAAAmB,QAAA,eAEA9B,OAAA0L,EAAAH,QAAAmR,SAEAhc,EAAAC,QAAA,UAAAY,QAAA,iBAAA6L,OACA,IAAApN,OAAA0L,EAAAuH,MAAAJ,SAAA,YAAA,CAEA,GAAAlQ,GAAAnC,IAEAE,GAAAC,QAAA,UAAAmB,QAAA,eAEA,IAAA2gB,GAAA/hB,EAAAC,QAAA,UAAAmB,QAAA,eAEAohB,EAAAxiB,EAAAC,QAAA,UAAAmB,QAAA,iBAEA,IAAA9B,OAAAkjB,GAAArQ,SAAA,eAEA,GAAAsQ,GAAAnjB,OAAAkjB,GAAA7X,SAAA,eAGA,IAAA8X,IAAA,wBAIA,IAAAyB,GAAAzB,EAAAzmB,QAAA,wBAIAoG,GAAAoK,KAAAuV,EAAA7Q,OAAA,SAAA2F,EAAAtZ,GAEA,GAAAghB,GAAAtc,EAAAgiB,SAAApN,EAAAxV,IAAA,QAEAohB,GAAA3mB,OAAAooB,EAAA3mB,EAAA,EAAAghB,IAIA,IAAA2F,GAAAzB,EAAAzmB,QAAA,wBACAymB,GAAA3mB,OAAAooB,EAAA,GAEAlkB,EAAAC,QAAA,UAAAmB,QAAA,cAAAqhB,GAEAziB,EAAAC,QAAA,UAAAmB,QAAA,iBAEA9B,OAAA0L,EAAAH,QAAAmR,WAaAiI,SAAA,SAAAvX,EAAAyX,GAEAA,EAAAA,IAAA,CAEA,IAAApD,GAAA/gB,EAAAC,QAAA,UAAAmB,QAAA,WAAAsL,GAEA6R,EAAAve,EAAAC,QAAA,UAAAmB,QAAA,kBAEAqb,EAAAzc,EAAAC,QAAA,UAAAmB,QAAA,OAAA7C,GAAAggB,EAAAhQ,MAAAwS,EAAA1f,IAAA,YAAAqL,KAAAqU,EAAA1f,IAAA,OAAA8iB,GAEA5V,GACA0P,OAAA,QACA1P,MAAAkO,EAAApb,IAAA,SACA2X,OAAA,QACAL,SAAA,YAGAvS,GACA9C,WAAAtD,EAAAC,QAAA,UAAAmB,QAAA,kBAKA,OAFApB,GAAAC,QAAA,WAAAmB,QAAA,kBAAA,YAAAqb,EAAA,KAAAlO,EAAAnI,GAEAmY,GAUAqF,mBAAA,SAAA5Y,GACA,GAAA1L,OAAA0L,EAAAuH,MAAAJ,SAAA,wBAAA,CAEA,GAAAzF,GAAApN,OAAA0L,EAAAH,QAAAzE,KAAA,MAEA2a,EAAA/gB,EAAAC,QAAA,UAAAmB,QAAA,WAAAsL,GAEA6B,EAAAwS,EAAA1f,IAAA,YAEAmhB,EAAAxiB,EAAAC,QAAA,UAAAmB,QAAA,kBAEAgjB,EAAA9kB,OAAAkjB,GAAA7Y,OAEA7J,MAAAsjB,cAAApY,EAAAH,OAEAvL,OAAA0L,EAAAH,QAAAxI,KAAAkM,GAEAjP,OAAA0L,EAAAH,QAAA9B,YAAA,gBAAAD,SAAA,iBAAAI,KAAAS,MAAAya,EAAA3Y,OAAA,SAEAnM,OAAAkjB,GAAArQ,SAAA,gBACA7S,OAAAkjB,GAAA1Z,SAAA,0BAEA,IAAAxJ,OAAA0L,EAAAuH,MAAAJ,SAAA,YAAA,CAEA,GAAAqQ,GAAAxiB,EAAAC,QAAA,UAAAmB,QAAA,iBACA9B,QAAAkjB,GAAArQ,SAAA,gBACA7S,OAAAkjB,GAAA1Z,SAAA,wBAaA+a,kBAAA,SAAA7Y,GACA,GAAA1L,OAAA0L,EAAAuH,MAAAJ,SAAA,wBAAA,CAKA,GAAAkR,GAAArjB,EAAAC,QAAA,mBAAAmB,QAAA,sBAEA9B,QAAAQ,KAAAsjB,eAAA/gB,KAAA/C,OAAA+jB,GAAAhhB,QACA/C,OAAAQ,KAAAsjB,eAAAra,YAAA,iBAAAD,SAAA,gBAAAI,KAAAS,MAAA,GAAA8B,OAAA,IAEA,IAAA+W,GAAAxiB,EAAAC,QAAA,UAAAmB,QAAA,iBACA9B,QAAAkjB,GAAArQ,SAAA,gBACA7S,OAAAkjB,GAAAzZ,YAAA,0BAEA,IAAAzJ,OAAA0L,EAAAuH,MAAAJ,SAAA,YAAA,CAEA,GAAAqQ,GAAAxiB,EAAAC,QAAA,UAAAmB,QAAA,iBACA9B,QAAAkjB,GAAArQ,SAAA,gBACA7S,OAAAkjB,GAAAzZ,YAAA,wBAcA+a,mBAAA,SAAA9Y,GACA1L,OAAA0L,EAAAuH,MAAArJ,IAAA,UAAA,IACA5J,OAAA0L,EAAAH,QAAAmR,UAYA+H,oBAAA,SAAA/Y,GAEA1L,OAAA0L,EAAAuH,MAAAJ,SAAA,yBAAA7S,OAAA0L,EAAAuH,MAAAJ,SAAA,aACA7S,OAAA0L,EAAAuH,MAAArJ,IAAA,UAAA,OAAA7F,QAWA2gB,qBAAA,SAAAhZ,GAIA,GAHAhL,EAAAC,QAAA,UAAAmB,QAAA,gBAGA9B,OAAA0L,EAAAuH,MAAAJ,SAAA,0BAAA7S,OAAA0L,EAAAuH,MAAAJ,SAAA,YAAA,CAEA,GAAApL,GAAA/G,EAAAC,QAAA,UAAAmB,QAAA,kBACAijB,EAAA/kB,OAAA0L,EAAAuH,MAAAvY,KAAA,MAAA2B,QAAA,SAAA,IACA2oB,EAAAvd,EAAA1F,IAAAgjB,GAGAje,GAAAwQ,UACAxU,GAAAoK,KAAAzF,EAAAmK,OAAA,SAAA2F,GACA,GAAA0N,GAAA1N,EAAA2N,oBAAA/B,MACApD,EAAAxI,EAAAxV,IAAA,QAEA+E,GAAAwQ,OAAApa,MACA2D,MAAA0W,EACAgE,KAAA,QACAa,OAAA6I,EACAvJ,MAAAqE,KAKA,IAAA9Q,IACA0P,OAAA,QACA1P,MAAA+V,EAAAjjB,IAAA,SACA2X,OAAA,mBAAAsL,EAAAE,oBAAA/B,MAAA,OAAA6B,EAAAjjB,IAAA,SACAsX,SAAA,OAGA3Y,GAAAC,QAAA,WAAAmB,QAAA,kBAAA,aAAAkjB,EAAA,KAAA/V,EAAAnI,MAOA,OAAAgC,KC1SAxO,EAAA,8BAAA,WACA,GAAAuG,GAAA4J,SAAAC,MAAAtK,QACAuK,UACAwa,WAAA,QACAC,aAAA,SACA9S,YAAA,GAGA/R,WAAA,WAEAC,KAAA6kB,KAAA,SAAA7kB,KAAA8d,cAAA9d,KAGA,IAAAihB,GAAA/gB,EAAAC,QAAA,UAAAmB,QAAA,WAAAtB,KAAAuB,IAAA,SACA4f,EAAAF,EAAA1f,IAAA,cAGAY,EAAAnC,IACAsC,GAAAoK,KAAAuU,EAAA1f,IAAA,mBAAA,SAAAsE,EAAAkE,GACA5H,EAAAZ,IAAAwI,IACA5H,EAAAmF,IAAAyC,EAAAlE,KAaA3F,EAAAC,QAAA,UAAAY,QAAA,kBAAAf,MACAE,EAAAC,QAAA,UAAAghB,GAAApgB,QAAA,kBAAAf,MACAE,EAAAC,QAAA,UAAAH,KAAAuB,IAAA,SAAAR,QAAA,kBAAAf,MAEAA,KAAAC,SAAAC,EAAAC,QAAA,UAAA,eAAAH,KAAA8kB,cASAhH,cAAA,WACA5d,EAAAC,QAAA,OAAAY,QAAA,iBAAAf,OAUA8kB,YAAA,SAAAnC,GAEA,GAAAlkB,GAAAuB,KAAAuB,IAAA,KACA,IAAA/B,OAAA0S,UAAAzT,GACA,GAAAmkB,GAAA,SAAAnkB,MAEA,IAAAmkB,GAAAnkB,CAGA,IAAA8gB,GAAAoD,EAAAzmB,QAAA0mB,GAAA,CACArD,IAAAvf,KAAAuB,IAAA,UACAvB,KAAAsH,IAAA,QAAAiY,KAKA,OAAAlf,KCtEAvG,EAAA,iCAAA,4BAAA,SAAA6hB,GACA,GAAAnY,GAAAyG,SAAAK,WAAA1K,QACAS,MAAAsb,EACA1P,WAAA,QACA8Y,OAAA,EAEAhlB,WAAA,WACAC,KAAAM,GAAA,MAAAN,KAAAmkB,SAAAnkB,MACAA,KAAAM,GAAA,SAAAN,KAAAglB,YAAAhlB,MACAA,KAAA+b,WAUAoI,SAAA,SAAA9jB,GACAL,KAAA+b,OAAArf,KAAA2D,EAAAkB,IAAA,QASAyjB,YAAA,SAAA3kB,GACAL,KAAA6W,WAAAxW,EAAAkB,IAAA,OAAAlB,EAAAkB,IAAA,QAGA,OAAAiC,KCpCA1J,EAAA,2BAAA,gCAAA,4BAAA,SAAAmN,EAAA0U,GACA,GAAArT,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAwD,WAAA,GAAAyD,GAAA2Q,kBAAAd,QAEA9W,KAAAwD,WAAAqT,cAGA3W,EAAAC,QAAA,UAAAoE,MAAA,iBAAAvE,KAAAilB,mBAAAjlB,MACAE,EAAAC,QAAA,UAAAoE,MAAA,YAAAvE,KAAAklB,SAAAllB,MACAE,EAAAC,QAAA,UAAAoE,MAAA,iBAAAvE,KAAAmlB,cAAAnlB,MACAE,EAAAC,QAAA,UAAAoE,MAAA,YAAAvE,KAAAmlB,cAAAnlB,MAEAE,EAAAC,QAAA,UAAAoE,MAAA,MAAAvE,KAAAmkB,SAAAnkB,MACAE,EAAAC,QAAA,UAAAoE,MAAA,SAAAvE,KAAAolB,YAAAplB,MACAE,EAAAC,QAAA,UAAAoE,MAAA,cAAAvE,KAAAqlB,WAAArlB,OAGAilB,mBAAA,WACA,MAAAjlB,MAAAwD,YAGA0hB,SAAA,SAAAzmB,GACA,MAAAuB,MAAAwD,WAAAjC,IAAA9C,IAUA0lB,SAAA,SAAA7d,EAAA+d,GAEA,GADAA,EAAAA,IAAA,GACA,GAAA/d,YAAA2D,UAAAC,MACA,GAAA7J,GAAA,GAAAsb,GAAArV,OAEA,IAAAjG,GAAAiG,CASA,OANAtG,MAAAwD,WAAAuV,IAAA1Y,GAAAgkB,OAAAA,IAEAnkB,EAAAC,QAAA,OAAAmB,QAAA,iBAAA,SAAA,GAEApB,EAAAC,QAAA,UAAAY,QAAA,YAAAV,GAEAA,GAYAilB,mBAAA,SAAA7mB,EAAAnE,EAAA0C,GACA,GAAA2e,GAAA3b,KAAAwD,WAAAjC,IAAA9C,EACAkd,GAAArU,IAAAhN,EAAA0C,IAUAqoB,WAAA,SAAA1C,EAAAzX,GAEA,GAAAwX,GAAAxiB,EAAAC,QAAA,UAAAmB,QAAA,iBACA,IAAA9B,OAAAkjB,GAAArQ,SAAA,eAAA,CAEA,GAAAsQ,GAAAA,GAAAnjB,OAAAkjB,GAAA7X,SAAA,UACA3K,GAAAC,QAAA,UAAAY,QAAA,eAAA4hB,GAeA3iB,KAAAwD,WAAAyV,OAGA/Y,EAAAC,QAAA,OAAAmB,QAAA,iBAAA,SAAA,GAEApB,EAAAC,QAAA,OAAAmB,QAAA,eAWA8jB,YAAA,SAAA/kB,GACAL,KAAAwD,WAAA0Y,OAAA7b,GAEAH,EAAAC,QAAA,OAAAmB,QAAA,iBAAA,SAAA,GACApB,EAAAC,QAAA,OAAAmB,QAAA,cAWA6jB,cAAA,WACA,GAAAJ,GAAA/kB,KAAAwD,WAAAuhB,MAEA,OADA/kB,MAAAwD,WAAAuhB,SACA,OAAAA,IAIA,OAAAzc,KCnIAxO,EAAA,mCAAA,WACA,GAAAuG,GAAA4J,SAAAC,MAAAtK,UAIA,OAAAS,KCLAvG,EAAA,sCAAA,iCAAA,SAAAyrB,GACA,GAAA/hB,GAAAyG,SAAAK,WAAA1K,QACAS,MAAAklB,EACAtZ,WAAA,QAEAlM,WAAA,WAEAC,KAAAM,GAAA,OAAAN,KAAAqY,iBAAArY,MAEAA,KAAAM,GAAA,MAAAN,KAAAwlB,UAAAxlB,OAGAqY,iBAAA,WAEAnY,EAAAC,QAAA,mBAAAY,QAAA,eAAAf,OAGAwlB,UAAA,SAAAnlB,EAAAmD,IACAnD,EAAAkB,IAAA,WAMA,OAAAiC,KAEA1J,EAAA,+CAAA,WCjCA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAsE,UAAA,eACArE,SAAA,oCAEAC,WAAA,SAAAuG,GACAtG,KAAAiO,UAAA3H,EAAA2H,UACAjO,KAAAwD,WAAA8C,EAAA9C,WACAxD,KAAAylB,QAAAnf,EAAAmf,SAGAllB,SAAA,WACAf,OAAAQ,KAAAiC,IAAA/H,KAAA,KAAA8F,KAAAK,MAAAkY,MAGAvW,OAAA,WACAxC,OAAAQ,KAAAiC,IAAAC,KAAA,eAAA4D,SAGAlF,QACAwS,eAAA,eACA7B,mBAAA,eACAmU,MAAA,kBAGAC,aAAA,SAAApnB,GACA2B,EAAAC,QAAA,mBAAAY,QAAA,gBAAAxC,EAAAyB,KAAAK,MAAAL,KAAAiO,YAGA2X,aAAA,SAAArnB,GACA2B,EAAAC,QAAA,mBAAAY,QAAA,qBAAAf,KAAAK,MAAAL,KAAAwD,WAAAxD,KAAAiO,YAGA4X,eAAA,SAAAtnB,GACA,IAAAA,EAAAkH,SACAvF,EAAAC,QAAA,mBAAAY,QAAA,kBAAAf,KAAAwD,WAAAxD,KAAAiO,YAIAjN,gBAAA,WACA,GAAAmB,GAAAnC,IACA,QACA8lB,WAAA,WACA,MAAA3jB,GAAAsjB,YAOA,OAAAhmB,KAGA3F,EAAA,8CAAA,WCrDA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,KACAC,SAAA,oCAGA,OAAAL,KAEA3F,EAAA,gDAAA,4CAAA,4CAAA,SAAAisB,EAAAC,GCPA,GAAAvmB,GAAAC,WAAAsH,cAAApH,QACAE,SAAA,6BACAiC,UAAAgkB,EACApb,UAAAqb,EAEAjmB,WAAA,SAAAuG,GACAtG,KAAAwD,WAAA8C,EAAA2H,UAAA1M,IAAA,WACAvB,KAAAiO,UAAA3H,EAAA2H,UACAjO,KAAAgO,kBAAAxK,WAAAxD,KAAAwD,WAAAyK,UAAA3H,EAAA2H,UAAAwX,QAAAzlB,KAAAK,MAAAkB,IAAA,aAGAhB,SAAA,WACAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,KAEAR,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,IAEA,IAAA2B,GAAAnC,IACAR,QAAAQ,KAAAiC,IAAAC,KAAA,0BAAA2I,UACAob,OAAA,UACAlb,OAAA,QACAD,YAAA,uCACAob,sBAAA,EACAza,QAAA,IACAT,UAAA,UAEAM,MAAA,SAAA/M,EAAA2M,GACAhL,EAAAC,QAAA,mBAAAmB,QAAA,uBAAA4J,IAGAK,KAAA,SAAAhN,EAAA2M,GACAhL,EAAAC,QAAA,mBAAAmB,QAAA,sBAAA4J,IAGAG,OAAA,SAAA9M,EAAA2M,GACAhL,EAAAC,QAAA,mBAAAmB,QAAA,wBAAA4J,EAAAlL,KAAAmC,OAKAnB,gBAAA,WACA,OACAmlB,cAAA,WACA,GAAAV,GAAA,mBAcA,OAbA,IAAAzlB,KAAAylB,QAAAvpB,QAAA,WACAupB,GAAA,oBAEA,IAAAzlB,KAAAylB,QAAAvpB,QAAA,WACAupB,GAAA,oBAEA,IAAAzlB,KAAAylB,QAAAvpB,QAAA,UACAupB,GAAA,yBAEA,IAAAzlB,KAAAylB,QAAAvpB,QAAA,cACAupB,GAAA,4DAEAA,GAAA,qBAIA9H,cAAA,WACA,MAAArb,GAAAxC,SAAAN,OAAA,yBAAAQ,KAAA4M,MAAArK,OAAAvC,OAGA6d,YAAA,WACA,MAAA,mBAAA7d,MAAA6J,MACA7J,KAAA6J,MAEA,cAMA1C,WAAA,SAAAC,EAAArF,GACAvC,OAAA4H,EAAAnF,IAAAC,KAAA,0BAAAmF,OAAAtF,EAAAE,KAGArB,QACAwlB,oBAAA,kBAGAC,eAAA,SAAA9nB,GACA2B,EAAAC,QAAA,mBAAAY,QAAA,kBAAAf,KAAAwD,WAAAxD,KAAAiO,aAKA,OAAAxO,KChFA3F,EAAA,qCAAA,gCAAA,qCAAA,gDAAA,SAAAyrB,EAAAe,EAAAC,GACA,GAAAje,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAG,EAAAC,QAAA,mBAAAoE,MAAA,uBAAAvE,KAAAge,oBAAAhe,MAGAA,KAAAC,SAAAC,EAAAC,QAAA,UAAA,kBAAAH,KAAAwmB,wBAGAxmB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,gBAAAH,KAAA2lB,cACA3lB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,kBAAAH,KAAAwlB,WACAxlB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,qBAAAH,KAAA4lB,cAGA1lB,EAAAC,QAAA,mBAAAoE,MAAA,wBAAAvE,KAAAymB,qBAAAzmB,MACAE,EAAAC,QAAA,mBAAAoE,MAAA,sBAAAvE,KAAA0mB,mBAAA1mB,MACAE,EAAAC,QAAA,mBAAAoE,MAAA,uBAAAvE,KAAA2mB,oBAAA3mB,OAUAwmB,uBAAA,SAAAnmB,GACA,GAAAmc,GAAAnc,EAAAkB,IAAA,UAKA,IAJA,mBAAAib,GACAnc,EAAAiH,IAAA,YAAAsf,KAAA,EAAAnY,MAAA,MAAAzR,MAAA,MAAA2lB,MAAA,EAAAkE,SAAA,IAAAD,KAAA,EAAAnY,MAAA,MAAAzR,MAAA,MAAA2lB,MAAA,EAAAkE,SAAA,IAAAD,KAAA,EAAAnY,MAAA,QAAAzR,MAAA,QAAA2lB,MAAA,EAAAkE,SAAA,KAAAxC,QAAA,IAGA,GAAA7H,YAAAvS,UAAAK,WAAA,CACA,GAAAwc,GAAA,GAAAR,EACAQ,GAAA/N,IAAA1Y,EAAAkB,IAAA,YACAlB,EAAAiH,IAAA,UAAAwf,GAAAzC,QAAA,MAaAsB,aAAA,SAAApnB,EAAA8B,EAAAsb,GACA,GAAArhB,GAAAkF,OAAAjB,EAAAgH,QAAAe,KAAA,KACA,IAAA,YAAAhM,EACA,GAAAkF,OAAAjB,EAAAgH,QAAAwV,KAAA,WACA,GAAA/d,GAAA,MAEA,IAAAA,GAAA,MAGA,IAAAA,GAAAwC,OAAAjB,EAAAgH,QAAAM,KAGA,IAAA+V,GAAAvb,EAAAkB,IAAAjH,EAEA+F,GAAAiH,IAAAhN,EAAA0C,GAEAgD,KAAA+mB,kBAAA1mB,EAAAsb,EAEA,IAAAT,GAAAle,EAEA4b,GACAmC,KAAAzgB,EACAshB,OAAAA,EACAV,MAAAA,GAGAzM,GACA0P,OAAA,QACA1P,MAAAkN,EAAApa,IAAA,SACA2X,OAAA,UAAA7Y,EAAAkB,IAAA,SAAA,IAAAjH,EAAA,iBAAAshB,EAAA,OAAAV,EAGAhb,GAAAC,QAAA,WAAAmB,QAAA,kBAAA,gBAAAjB,EAAAuY,EAAAnK,IAWA+W,UAAA,SAAAhiB,EAAAmY,GACA,GAAAtb,GAAA,GAAAklB,IAAA9W,MAAA,GAAAzR,MAAA,GAAA4pB,KAAA,GAAAC,SAAA,EAAAlE,MAAAnf,EAAA/H,QACA+H,GAAAuV,IAAA1Y,EAGA,IAAAoO,IACA0P,OAAA,QACA1P,MAAAkN,EAAApa,IAAA,SACA2X,OAAA,eACAL,SAAA,WAGA3Y,GAAAC,QAAA,WAAAmB,QAAA,kBAAA,gBAAAjB,EAAA,KAAAoO,GAEAzO,KAAA+mB,kBAAA1mB,EAAAsb,IAYAiK,aAAA,SAAAvlB,EAAAmD,EAAAmY,GACA,GAAAgB,GAAAzc,EAAAC,QAAA,OAAAmB,QAAA,kBAAAjB,GAGAoO,GACA0P,OAAA,QACA1P,MAAAkN,EAAApa,IAAA,SACA2X,OAAA,UAAAyD,EAAApb,IAAA,SAAA,WACAsX,SAAA,WAGAvS,GACA9C,WAAAA,EAGAtD,GAAAC,QAAA,WAAAmB,QAAA,kBAAA,mBAAAqb,EAAA,KAAAlO,EAAAnI,EAEA,IAAA+R,GAAAnY,EAAAC,QAAA,WAAAmB,QAAA,wBACA0a,EAAA3D,EAAA4D,OAAA5b,MAAAA,GAEAiC,GAAAoK,KAAAsP,EAAA,SAAAlD,GACA,gBAAAA,GAAAvX,IAAA,SACAe,EAAAoK,KAAAoM,EAAAvX,IAAA,QAAA,SAAA0M,GACAA,EAAA5N,OAAAsb,IACA1N,EAAA5N,MAAAsc,KAIA7D,EAAAxR,IAAA,QAAAqV,GACA7D,EAAAxR,IAAA,YAAA,KAGA9D,EAAA0Y,OAAA7b,GACAL,KAAA+mB,kBAAA1mB,EAAAsb,IAYAoL,kBAAA,SAAA1mB,EAAAsb,GACAzb,EAAAC,QAAA,OAAAY,QAAA,iBAAAV,IAUA2d,oBAAA,SAAA3d,GACA,MAAAkmB,IAWAE,qBAAA,SAAAvb,EAAAL,EAAAuL,GACA,GAAA4Q,GAAAxnB,OAAAqL,GAAAA,SAAA,WACA2Z,EAAApO,EAAA5S,WAAAjC,KAAAgX,IAAA/Y,OAAA0L,EAAAuH,MAAAvY,KAAA,QACAoM,GACA9C,WAAA4S,EAAA5S,WACA4Y,aAEA9Z,GAAAoK,KAAAsa,EAAA,SAAAzO,EAAA9a,GACA,GAAA4e,GAAAjG,EAAA5S,WAAAjC,KAAAgX,IAAAA,IACAkM,EAAApI,EAAA9a,IAAA,QACA8a,GAAA/U,IAAA,QAAA7J,EACA,IAAA8hB,GAAA9hB,CAEA6I,GAAA8V,UAAA1f,MACA2D,MAAAgc,EACAtB,KAAA,QACAa,OAAA6I,EACAvJ,MAAAqE,MAIAnJ,EAAA5S,WAAAyV,MAEA,IAAAxK,IACA0P,OAAA,QACA1P,MAAA2H,EAAAuF,WAAApa,IAAA,SACA2X,OAAA,UAAAsL,EAAAjjB,IAAA,SAAA,oBAAAijB,EAAAE,oBAAA/B,MAAA,OAAA6B,EAAAjjB,IAAA,SACAsX,SAAA,OAGA3Y,GAAAC,QAAA,WAAAmB,QAAA,kBAAA,kBAAAkjB,EAAA,KAAA/V,EAAAnI,GAEAtG,KAAA+mB,kBAAAvC,EAAApO,EAAAuF,aAUA+K,mBAAA,SAAAxb,GACA1L,OAAA0L,EAAAuH,MAAArJ,IAAA,UAAA,KAUAud,oBAAA,SAAAzb,GACA1L,OAAA0L,EAAAJ,aAAA5I,KAAA,OAAAga,SACA1c,OAAA0L,EAAAuH,MAAArJ,IAAA,UAAA,OAAA7F,SAKA,OAAA+E,KC1PAxO,EAAA,mCAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAG,EAAAC,QAAA,UAAAoE,MAAA,mBAAAvE,KAAAinB,gBAAAjnB,MAEAA,KAAAC,SAAAC,EAAAC,QAAA,uBAAA,qBAAAH,KAAAinB,kBASAA,gBAAA,WACA,GAAAhgB,GAAA/G,EAAAC,QAAA,UAAAmB,QAAA,iBACAgB,GAAAoK,KAAAzF,EAAAmK,OAAA,SAAA2F,GACAA,EAAAzP,IAAA,cAAA,OAKA,OAAAgB,KCvBAxO,EAAA,oCAAA,gCAAA,SAAAukB,GACA,GAAA/V,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WACAC,KAAAwD,WAAA,GAAA6a,GAAA6I,eAGAhnB,EAAAC,QAAA,UAAAoE,MAAA,mBAAAvE,KAAAmnB,gBAAAnnB,OAGAmnB,gBAAA,SAAA7sB,GACA,MAAA0F,MAAAwD,WAAA4jB,WAAA9sB,KAAAA,MAKA,OAAAgO,KCbAxO,EAAA,sCAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAIAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,uBAAAH,KAAAugB,sBAGA8G,SAAA,SAAA/T,KAMAiN,oBAAA,SAAAjN,EAAArF,EAAAxO,GACA,GAAA,sBAAA6T,EAAA/R,IAAA,QAAA,CACA,GAAA+lB,GAAAtnB,KAAAunB,iBAAAjU,EACAA,GAAAhM,IAAA,UAAAggB,KAIAC,iBAAA,SAAAjU,GACA,GAAAgU,IAAAhU,EAAA/R,IAAA,mBAEAuV,EAAA5W,EAAAC,QAAA,UAAAmB,QAAA,iBAMA,OALAgB,GAAAoK,KAAAoK,EAAA1F,OAAA,SAAA2F,GACA,WAAAA,EAAAxV,IAAA,SACA+lB,EAAA5qB,MAAA+R,MAAAsI,EAAAxV,IAAA,SAAAvE,MAAA+Z,EAAAxV,IAAA,UAGA+lB,IAKA,OAAAhf,KClCAxO,EAAA,6BACA,4BACA,+BACA,qCACA,SACA0tB,EACAnJ,EACAoJ,GAEA,GAAAnf,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAA+P,iBAAA,GAAAyX,GACAxnB,KAAA+P,iBAAAJ,KAAA,YACA3P,KAAA+P,iBAAAlD,SAAA,YACA7M,KAAAgQ,iBAAA,GAAAwX,GACAxnB,KAAAgQ,iBAAAL,KAAA,YACA3P,KAAAgQ,iBAAAnD,SAAA,WAEA,IAAA1K,GAAAnC,IACAsC,GAAAoK,KAAAgb,eAAA,SAAA9a,GACA,GAAAkC,GAAA,GAAA2Y,EAEAnlB,GAAAoK,KAAAE,EAAAkC,cAAA,SAAAiS,GACA,GAAAC,IACAvS,MAAAsS,EAAAtS,MACAE,QAAAoS,EAAApS,QACAP,SAAA,GAAAiQ,GAAA0C,EAAA3S,UAGAU,GAAAiK,IAAAiI,IAIA,IAAA2G,IACAlpB,GAAAmO,EAAAnO,GACAoO,SAAAD,EAAAC,SACAqU,MAAAtU,EAAAsU,MACApS,cAAAA,EACAsS,gBAAAxU,EAAAwU,gBACA9R,MAAA1C,EAAA0C,MACAsY,KAAAhb,EAAAgb,KACArY,QAAA3C,EAAA2C,QAIApN,GAAAyK,EAAA2C,QAAA,WAAAwJ,IAAA4O,KAIAznB,EAAAC,QAAA,WAAAoE,MAAA,WAAAvE,KAAA6nB,QAAA7nB,MACAE,EAAAC,QAAA,WAAAoE,MAAA,uBAAAvE,KAAA8nB,oBAAA9nB,MACAE,EAAAC,QAAA,WAAAoE,MAAA,uBAAAvE,KAAA+nB,oBAAA/nB,OAUA6nB,QAAA,SAAAppB,GAEA,GAAAmO,GAAA5M,KAAA+P,iBAAAxO,IAAA9C,EAIA,OAHAmO,KACAA,EAAA5M,KAAAgQ,iBAAAzO,IAAA9C,IAEAmO,GASAkb,oBAAA,WACA,MAAA9nB,MAAA+P,kBASAgY,oBAAA,WACA,MAAA/nB,MAAAgQ,kBAUAwR,eAAA,SAAAjjB,GACA,GAAAqO,GAAApN,OAAAjB,EAAAgH,QAAAe,KAAA,KACApG,GAAAC,QAAA,UAAAmB,QAAA,kBAAAsL,IASA2U,gBAAA,WACA,MAAAvhB,MAAA6gB,oBAIA,OAAAvY,KCtHAxO,EAAA,gCAAA,WACA,GAAAuG,GAAA4J,SAAAC,MAAAtK,QACAuK,UACAwa,WAAA,SACAC,aAAA,UACA9S,YAAA,GAGA/R,WAAA,WAEAC,KAAA6kB,KAAA,SAAA7kB,KAAA8d,cAAA9d,KAGA,IAAA2nB,GAAAznB,EAAAC,QAAA,WAAAmB,QAAA,WAAAtB,KAAAuB,IAAA,SAGAY,EAAAnC,IACAsC,GAAAoK,KAAAib,EAAApmB,IAAA,mBAAA,SAAAsE,EAAAkE,GACA5H,EAAAZ,IAAAwI,IACA5H,EAAAmF,IAAAyC,EAAAlE,KAYA3F,EAAAC,QAAA,WAAAY,QAAA,kBAAAf,MACAE,EAAAC,QAAA,WAAAH,KAAAuB,IAAA,SAAAR,QAAA,kBAAAf,OASA8d,cAAA,WACA5d,EAAAC,QAAA,OAAAY,QAAA,iBAAAf,QAIA,OAAAK,KC3CAvG,EAAA,mCAAA,8BAAA,SAAAkuB,GACA,GAAAxkB,GAAAyG,SAAAK,WAAA1K,QACAS,MAAA2nB,EACA/b,WAAA,QACA8Y,OAAA,EAEAhlB,WAAA,WACAC,KAAAM,GAAA,MAAAN,KAAAioB,UAAAjoB,MACAA,KAAAM,GAAA,SAAAN,KAAAkoB,aAAAloB,MACAA,KAAA+b,WAUAkM,UAAA,SAAA5nB,GACAL,KAAA+b,OAAArf,KAAA2D,EAAAkB,IAAA,QASA2mB,aAAA,SAAA7nB,GACAL,KAAA6W,WAAAxW,EAAAkB,IAAA,OAAAlB,EAAAkB,IAAA,QAGA,OAAAiC,KCpCA1J,EAAA,4BAAA,kCAAA,8BAAA,SAAAqZ,EAAA6U,GACA,GAAA1f,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAwD,WAAA,GAAA2P,GAAAyE,kBAAAV,SAEAlX,KAAAwD,WAAAqT,cAGA3W,EAAAC,QAAA,WAAAoE,MAAA,iBAAAvE,KAAA0Y,cAAA1Y,MACAE,EAAAC,QAAA,WAAAoE,MAAA,aAAAvE,KAAAmoB,UAAAnoB,MACAE,EAAAC,QAAA,WAAAoE,MAAA,YAAAvE,KAAAooB,SAAApoB,MAEAE,EAAAC,QAAA,WAAAoE,MAAA,MAAAvE,KAAAioB,UAAAjoB,MACAE,EAAAC,QAAA,WAAAoE,MAAA,SAAAvE,KAAAqoB,aAAAroB,OAGA0Y,cAAA,WACA,MAAA1Y,MAAAwD,YAGA2kB,UAAA,SAAA1pB,GACA,MAAAuB,MAAAwD,WAAAjC,IAAA9C,IAUAwpB,UAAA,SAAA3hB,EAAA+d,GAEA,GADAA,EAAAA,IAAA,GACA,GAAA/d,YAAA2D,UAAAC,MACA,GAAA7J,GAAA,GAAA2nB,GAAA1hB,OAEA,IAAAjG,GAAAiG,CAOA,OAJAtG,MAAAwD,WAAAuV,IAAA1Y,GAAAgkB,OAAAA,IAEAnkB,EAAAC,QAAA,OAAAmB,QAAA,iBAAA,SAAA,GAEAjB,GAUAgoB,aAAA,SAAAhoB,GACAL,KAAAwD,WAAA0Y,OAAA7b,GAEAH,EAAAC,QAAA,OAAAmB,QAAA,iBAAA,SAAA,GACApB,EAAAC,QAAA,OAAAmB,QAAA,cAYA8mB,SAAA,WACA,GAAArD,GAAA/kB,KAAAwD,WAAAuhB,MAEA,OADA/kB,MAAAwD,WAAAuhB,SACA,OAAAA,IAIA,OAAAzc,KC7EAxO,EAAA,sCAAA,gCAAA,SAAAukB,GACA,GAAA/V,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WACAC,KAAAwD,WAAA,GAAA6a,GAAAiK,gBAGApoB,EAAAC,QAAA,WAAAoE,MAAA,mBAAAvE,KAAAmnB,gBAAAnnB,OAGAmnB,gBAAA,SAAA7sB,GACA,MAAA0F,MAAAwD,WAAA4jB,WAAA9sB,KAAAA,MAKA,OAAAgO,KCfAxO,EAAA,oCAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAG,EAAAC,QAAA,WAAAoE,MAAA,mBAAAvE,KAAAinB,gBAAAjnB,MAEAA,KAAAC,SAAAC,EAAAC,QAAA,uBAAA,qBAAAH,KAAAinB,kBASAA,gBAAA,WACA,GAAA9T,GAAAjT,EAAAC,QAAA,WAAAmB,QAAA,iBACAgB,GAAAoK,KAAAyG,EAAA/B,OAAA,SAAAoF,GACAA,EAAAlP,IAAA,cAAA,OAKA,OAAAgB,KCvBAxO,EAAA,sCAAA,kCAAA,8BAAA,SAAAqZ,EAAA6U,GACA,GAAA1f,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,WAAA,kBAAAH,KAAAioB,WAEA/nB,EAAAC,QAAA,WAAAoE,MAAA,iBAAAvE,KAAAioB,UAAAjoB,OAUAioB,UAAA,SAAArb,GACA,GAAAtG,IACA7H,GAAAyB,EAAAC,QAAA,WAAAmB,QAAA,aACAsL,KAAAA,EAAArL,IAAA,MACAkN,MAAA7B,EAAArL,IAAA,aAEAob,EAAAzc,EAAAC,QAAA,WAAAmB,QAAA,MAAAgF,GACAmI,GACA0P,OAAA,SACA1P,MAAAkO,EAAApb,IAAA,SACA2X,OAAA,QACAL,SAAA,YAGAvS,GACA9C,WAAAtD,EAAAC,QAAA,WAAAmB,QAAA,kBAGApB,GAAAC,QAAA,WAAAmB,QAAA,kBAAA,YAAAqb,EAAA,KAAAlO,EAAAnI,GACApG,EAAAC,QAAA,OAAAY,QAAA,gBAAA4b,KAIA,OAAArU,KCtCAxO,EAAA,kCAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,oBAAA,iBAAAH,KAAAyhB,WACAzhB,KAAAC,SAAAC,EAAAC,QAAA,oBAAA,gBAAAH,KAAA0hB,UAKAxhB,EAAAC,QAAA,oBAAAoE,MAAA,sBAAAvE,KAAA2hB,+BAAA3hB,OAgBAyhB,UAAA,SAAAG,EAAA1W,GACAlL,KAAAmJ,SAAAjJ,EAAAC,QAAA,OAAAmB,QAAA,gBACAtB,KAAA6hB,OAAA3hB,EAAAC,QAAA,OAAAmB,QAAA,cACA9B,OAAAQ,KAAAmJ,UAAA,GAAA2Y,MAAAC,YAAA,WAAA,UAAA,aACAviB,OAAAQ,KAAA6hB,QAAA,GAAAC,MAAAC,YAAA,WAAA,UAAA,aAEA/hB,KAAAgiB,qBAAAxiB,OAAA0L,EAAAH,QAAAc,SAYA6V,SAAA,SAAAE,EAAA1W,GACA1L,OAAAQ,KAAAmJ,UAAA,GAAA2Y,MAAAC,YAAA,WAAA,SAAA,aACAviB,OAAAQ,KAAA6hB,QAAA,GAAAC,MAAAC,YAAA,WAAA,SAAA,cAGAJ,+BAAA,WACA,MAAA3hB,MAAAgiB,uBAIA,OAAA1Z,KCtDAxO,EAAA,mCAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAKAG,EAAAC,QAAA,OAAAoE,MAAA,kBAAAvE,KAAAuoB,eAAAvoB,OAGAuoB,eAAA,SAAAhqB,EAAA2M;A7HfA,A6HgBA,GAAAsd,GAAAhpB,OAAA0L,EAAAH,QAAAzE,KAAA,QACAsG,EAAA1M,EAAAC,QAAA,WAAAmB,QAAA,WAAAknB,EACAtoB,GAAAC,QAAA,WAAAmB,QAAA,iBAAAsL,KAIA,OAAAtE,KCjBAxO,EAAA,8BAAA,WACA,GAAAuG,GAAA4J,SAAAC,MAAAtK,UAIA,OAAAS,KCLAvG,EAAA,iCAAA,4BAAA,SAAA2uB,GACA,GAAAjlB,GAAAyG,SAAAK,WAAA1K,QACAS,MAAAooB,GAEA,OAAAjlB,KCJA1J,EAAA,mCAAA,iCAAA,SAAA0tB,GACA,GAAAlf,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,oBAAA,gBAAAH,KAAA0oB,oBAaAA,kBAAA,SAAA9F,EAAArkB,GAGA,GAAA,IAAAiB,OAAAoG,KAAAgd,GAAA,CAEA,GAAA3S,MAKAF,EAAA7P,EAAAC,QAAA,WAAAmB,QAAA,uBACAgB,GAAAoK,KAAA1M,KAAAyjB,iBAAAb,EAAA7S,GAAA,SAAA1P,GACA4P,EAAAvT,KAAA2D,IAGA,IAAA6P,MACAF,EAAA9P,EAAAC,QAAA,WAAAmB,QAAA,uBACAgB,GAAAoK,KAAA1M,KAAAyjB,iBAAAb,EAAA5S,GAAA,SAAA3P,GACA6P,EAAAxT,KAAA2D,IAIA,IAAAsoB,GAAA,GAAAnB,GAAAvX,EACA0Y,GAAAhZ,KAAA,YACAgZ,EAAA9b,SAAA,WAEA,IAAA+b,GAAA,GAAApB,GAAAtX,EACA0Y,GAAAjZ,KAAA,YACAiZ,EAAA/b,SAAA,YAGA3M,EAAAC,QAAA,UAAAY,QAAA,qBAAA4nB,EAAAC,GAEArqB,EAAAmH,WACA,EAAAijB,EAAAltB,SACAyE,EAAAC,QAAA,WAAAmB,QAAA,iBAAAqnB,EAAAvX,OAAA,IACAlR,EAAAC,QAAA,UAAAmB,QAAA,qBAKApB,GAAAC,QAAA,UAAAY,QAAA,iBAWA0iB,iBAAA,SAAAb,EAAApf,GACAof,EAAAA,EAAAc,aAMA,IAAAF,GAAAhgB,EAAAmgB,OAAA,SAAAtjB,GACA,GAAAujB,IAAA,CA+BA,OA5BA,IAAAvjB,EAAAkB,IAAA,MAAAmiB,cAAAxnB,QAAA0mB,GACAgB,GAAA,EACA,IAAAvjB,EAAAkB,IAAA,YAAAmiB,cAAAxnB,QAAA0mB,KACAgB,GAAA,GAMAvjB,EAAAkB,IAAA,SAAA,GAAAqhB,EAAA1mB,QAAA,MACAoG,EAAAoK,KAAArM,EAAAkB,IAAA,QAAA,SAAAwd,GACA6D,EAAA/mB,QAAA,IAAA,IAAAJ,OAAA,GACA,IAAAsjB,EAAA2E,cAAAxnB,QAAA0mB,EAAA/mB,QAAA,IAAA,OACA+nB,GAAA,KAOAvjB,EAAAkB,IAAA,UACAe,EAAAoK,KAAArM,EAAAkB,IAAA,SAAA,SAAA2f,GACA,IAAAA,EAAAwC,cAAAxnB,QAAA0mB,KACAgB,GAAA,KAKAA,GAIA,OAAAJ,KAIA,OAAAlb,KChHAxO,EAAA,8BACA,4BACA,+BACA,qCACA,SACA0tB,EACAnJ,EACAoJ,GAEA,GAAAnf,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAwD,WAAA,GAAAgkB,EAEA,IAAArlB,GAAAnC,IACAsC,GAAAoK,KAAAmc,oBAAA,SAAAjc,GACA,GAAAkC,GAAA,GAAA2Y,EAEAnlB,GAAAoK,KAAAE,EAAAkC,cAAA,SAAAiS,GACA,GAAAC,IACAvS,MAAAsS,EAAAtS,MACAE,QAAAoS,EAAApS,QACAP,SAAA,GAAAiQ,GAAA0C,EAAA3S,UAGAU,GAAAiK,IAAAiI,IAIA,IAAA8H,IACArqB,GAAAmO,EAAAnO,GACAoO,SAAAD,EAAAC,SACAqU,MAAAtU,EAAAsU,MACApS,cAAAA,EACAsS,gBAAAxU,EAAAwU,gBACAtP,YAAA,EAIA3P,GAAAqB,WAAAuV,IAAA+P,KAIA5oB,EAAAC,QAAA,YAAAoE,MAAA,WAAAvE,KAAA6nB,QAAA7nB,MACAE,EAAAC,QAAA,YAAAoE,MAAA,qBAAAvE,KAAA0Y,cAAA1Y,OAUA6nB,QAAA,SAAAppB,GACA,MAAAuB,MAAAwD,WAAAjC,IAAA9C,IASAia,cAAA,WACA,MAAA1Y,MAAAwD,aAIA,OAAA8E,KCzEAxO,EAAA,mCAAA,WACA,GAAAuG,GAAA4J,SAAAC,MAAAtK,QACAuK,UACAwa,WAAA,eACA7S,YAAA,GAGA/R,WAAA,WAEAC,KAAA6kB,KAAA,SAAA7kB,KAAA8d,cAAA9d,OASA8d,cAAA,WACA5d,EAAAC,QAAA,OAAAY,QAAA,iBAAAf,QAIA,OAAAK,KCvBAvG,EAAA,6BAAA,iCAAA,SAAAivB,GACA,GAAAzgB,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAK,MAAA,GAAA0oB,GAAAnR,kBAAAxJ,UACAlO,EAAAC,QAAA,YAAAoE,MAAA,eAAAvE,KAAAgpB,YAAAhpB,OAGAgpB,YAAA,WACA,MAAAhpB,MAAAK,QAIA,OAAAiI,KCbAxO,EAAA,qCAAA,gCAAA,SAAAukB,GACA,GAAA/V,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WACAC,KAAAwD,WAAA,GAAA6a,GAAA4K,cAGA/oB,EAAAC,QAAA,YAAAoE,MAAA,mBAAAvE,KAAAmnB,gBAAAnnB,OAGAmnB,gBAAA,SAAA7sB,GACA,MAAA0F,MAAAwD,WAAA4jB,WAAA9sB,KAAAA,MAKA,OAAAgO,KCfAxO,EAAA,qCAAA,WACA,GAAAwO,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAEAG,EAAAC,QAAA,YAAAoE,MAAA,mBAAAvE,KAAAinB,gBAAAjnB,MAEAA,KAAAC,SAAAC,EAAAC,QAAA,uBAAA,qBAAAH,KAAAinB,kBASAA,gBAAA,WACA,GAAAzjB,GAAAtD,EAAAC,QAAA,YAAAmB,QAAA,qBACAgB,GAAAoK,KAAAlJ,EAAA4N,OAAA,SAAA2F,GACAA,EAAAzP,IAAA,cAAA,OAKA,OAAAgB,KCvBAxO,EAAA,kCAAA,iCAAA,SAAAivB,GACA,GAAAzgB,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,YAAA,aAAAH,KAAAyR,YAGAA,UAAA,SAAAlT,EAAAiiB,GACAtgB,EAAAC,QAAA,YAAAmB,QAAA,oBACAkf,EAAAlZ,IAAA,cAAA,EAEA,IAAAjH,GAAAH,EAAAC,QAAA,YAAAmB,QAAA,eACApB,GAAAC,QAAA,OAAAmB,QAAA,cAAA,gBAAAjB,MAAAA,EAAA0O,gBAAAyR,EAAAjf,IAAA,qBAIA,OAAA+G,KCfAxO,EACA,+BAIA,yBACA,+BACA,+BACA,uBACA,2CACA,2BACA,2BACA,8BACA,8BACA,+BACA,8BACA,kCACA,+BACA,4BACA,0BACA,6BACA,2BACA,iCACA,sCACA,uCACA,2BACA,gCACA,+BACA,4BACA,kCAIA,2BACA,mCACA,iCACA,wCACA,6BACA,qCACA,iCACA,8BACA,0BACA,oCACA,gCACA,mCACA,mCAKA,4BACA,2BACA,qCACA,iCACA,qCACA,+BACA,gCACA,kCAKA,6BACA,4BACA,oCACA,kCACA,kCAEA,SAIAovB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIAC,EACAC,EACAC,EACAC,EACAC,GAGA,GAAA9jB,GAAA5I,WAAA7B,OAAA+B,QACAG,WAAA,WAIA,GAAAiqB,GACA,GAAAd,GACA,GAAAC,GACA,GAAAC,GACA,GAAAE,GACA,GAAAC,GACA,GAAAE,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAG,GACA,GAAAC,GACA,GAAAC,GACA,GAAAK,GAqDA,GAAAnB,KAKA,OAAA/gB,KAGAzO,EAAAyB,QC9NA+wB,QAAAhX,QAAAiX,eAAA,aAGA,IAAApsB,GAAA+J,SAAAsiB,KAEA/sB,QAAA+a,UAAAiS,MAAA,SAAAC,GACA5yB,GAAA,oBAAA,+BAAA,SAAA6yB,EAAAC,GAEA,GAAAC,GAAAltB,WAAAmtB,YAAAjtB,QAEAG,WAAA,SAAAyc,GAEAtc,EAAAC,QAAA,OAAAY,QAAA,yBAAAf,KAEA,IAAA2sB,EAEAzsB,GAAAC,QAAA,OAAAY,QAAA,wBAAAf,OAGA8sB,QAAA,WACA,GAAAJ,EAUAxsB,GAAAC,QAAA,OAAAY,QAAA,iBAAAf,SAKA+sB,EAAA,GAAAH,EACAG,GAAAzhB,YAGAxR,EAAA,OAAA;AxIpjbnIA,ADoIA;ACntHA,ADuHA;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA,ADgBA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA,ADkDA;ACjfA,ADgBA;ACfhBA,ADiBA;AChzCA,AD0CA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA,ADiBA;AChdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9EA,AD+EA;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA,ADYA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA,ADmDA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA,ADYA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA,ADwCA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA,ADyBA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA,ADQA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA,AD4CA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA,ADwBA;ACvrBA,ADsBA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA,ADQA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1DA,AD2DA;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA,ADkBA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA,ADkDA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA,ADQA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA,ADoCA;ACnndA,ADeA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvEA,ADwEA;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA,ADiBA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA,ADkBA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA,AD6BA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA,ADwDA;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA,AD2BA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3FA,AD4FA;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxpHA,ADqHA;ACpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA,ADsCA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA,AD4CA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA,ADgCA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA,ADyCA;ACxhBA,ADiBA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbnKA,ADoKA;ACnKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA,ADeA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA,ADiBA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA,ADiBA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzHA,AD0HA;ACzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA,ADwDA;ACvrIA,ADsIA;ACrtpTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClFA,ADmFA;ACldA,ADeA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrDA,ADsDA;ACrnQA,ADoQA;ACnQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA,ADyBA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/CA,ADgjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA,ADwDA;ACvtFA,ADuFA;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA,ADkCA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA,ADgEA;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA,ADeA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA,ADiCA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA,ADyBA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA,ADkCA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA,ADyBA;ACxfile":"builder.js","sourcesContent":["/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"../lib/almond\", function(){});\n\n","/**\n * Renders an application menu item from a domain model.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/menuItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-app-menu-item',\n\n\t\tinitialize: function() {\n\t\t\t// Listen for domain changes and re-render when we detect one.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.render );\n\t\t\t// When we change the model (to disable it, for example), re-render.\n\t\t\tthis.model.on( 'change', this.render, this );\n\t\t},\n\n\t\t/**\n\t\t * When we render this view, remove the extra <div> tag created by backbone.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\t// Listen for clicks on our app menu.\n\t\tevents: {\n\t\t\t'click a': 'clickAppMenu'\n\t\t},\n\n\t\t/**\n\t\t * When we click on a menu item, fire a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * We pass this.model so that we know what item was clicked.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\te event\n\t\t * @return return\n\t\t */\n\t\tclickAppMenu: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:menu', e, this.model );\n\t\t},\n\n\t\t/**\n\t\t * These functions are available to templates, and help us to remove logic from template files.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\t/**\n\t\t\t\t * If we have any dashicons in our model, render them.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderDashicons: function() {\n\t\t\t\t\tif ( this.dashicons ) {\n\t\t\t\t\t\treturn '<span class=\"dashicons ' + this.dashicons + '\"></span>'\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * Render classes for our menu item, including active.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = this.classes;\n\t\t\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\t\t\tif ( currentDomain.get( 'id' ) == this.id ) {\n\t\t\t\t\t\tclasses += ' active';\n\t\t\t\t\t}\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * If our menu is a link (like preview), render its url.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderUrl: function() {\n\t\t\t\t\tif ( '' != this.url ) {\n\t\t\t\t\t\treturn this.url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '#';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * If our menu is a link (like preview), render its target.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderTarget: function() {\n\t\t\t\t\tif ( '' != this.url ) {\n\t\t\t\t\t\treturn '_blank';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '_self';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * If our menu item is disabled, output 'disabled'\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderDisabled: function() {\n\t\t\t\t\tif ( this.disabled ) {\n\t\t\t\t\t\treturn 'disabled';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Collection view that takes our app menu items and renders an individual view for each.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/menu',['views/app/menuItem'], function( appMenuItemView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: appMenuItemView,\n\n\t\t/**\n\t\t * When we show this view, get rid of the extra <div> tag added by backbone.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonShow: function() {\n\t\t\tjQuery( this.el ).find( 'li:last' ).unwrap();\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","/**\n * Renders the action buttons to the right of the app menu. i.e. Publish\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/menuButtons',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'span',\n\t\ttemplate: '#nf-tmpl-app-header-action-button',\n\n\t\tinitialize: function() {\n\t\t\t// Listen to changes on the app 'clean' state. When it changes, re-render.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:clean', this.render, this );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:loading', this.render, this );\n\t\t},\n\n\t\t/**\n\t\t * These functions are available to templates, and help us to remove logic from template files.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\ttemplateHelpers: function () {\n\t\t\tvar that = this;\n\t    \treturn {\n\n\t    \t\t/**\n\t    \t\t * Render our Publish button. If we're loading, render the loading version.\n\t    \t\t *\n\t    \t\t * @since  3.0\n\t    \t\t * @return string\n\t    \t\t */\n\t    \t\trenderPublish: function() {\n\t    \t\t\tif ( that.publishWidth ) {\n\t    \t\t\t\tthis.publishWidth = 'style=\"width:' + that.publishWidth + 'px !important\"';\n\t    \t\t\t} else {\n\t    \t\t\t\tthis.publishWidth = '';\n\t    \t\t\t}\n\t    \t\t\tif ( nfRadio.channel( 'app' ).request( 'get:setting', 'loading' ) ) {\n\t    \t\t\t\treturn _.template( jQuery( '#nf-tmpl-add-header-publish-loading' ).html(), this );\t    \t\t\t\t\n\t    \t\t\t} else {\n\t    \t\t\t\treturn _.template( jQuery( '#nf-tmpl-app-header-publish-button' ).html(), this );\n\t    \t\t\t}\n\t    \t\t},\n\n\t    \t\t/**\n\t    \t\t * If our app state is clean, disable publish.\n\t    \t\t * \n\t    \t\t * @since  3.0\n\t    \t\t * @return string\n\t    \t\t */\n\t    \t\tmaybeDisabled: function() {\n\t    \t\t\tif ( nfRadio.channel( 'app' ).request( 'get:setting', 'clean' ) ) {\n\t    \t\t\t\treturn 'disabled';\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t    \t\t},\n\n\t    \t\t/**\n\t    \t\t * If our app isn't clean, render our 'viewChanges' button.\n\t    \t\t * @since  version\n\t    \t\t * @return {[type]} [description]\n\t    \t\t */\n\t    \t\tmaybeRenderCancel: function() {\n\t    \t\t\tif ( ! nfRadio.channel( 'app' ).request( 'get:setting', 'clean' ) ) {\n\t    \t\t\t\treturn _.template( jQuery( '#nf-tmpl-app-header-view-changes' ).html(), this );\t    \t\t\t\t\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tvar publishEL = jQuery( this.el ).find( '.publish' );\n\t\t\tthis.publishWidth = jQuery( publishEL ).outerWidth( true );\n\t\t},\n\n\t\t/**\n\t\t * Listen for clicks on the Publish or view changes button.\n\t\t * @type {Object}\n\t\t */\n\t\tevents: {\n\t\t\t'click .publish': 'clickPublish',\n\t\t\t'click .viewChanges': 'clickViewChanges'\n\t\t},\n\n\t\t/**\n\t\t * When we click publish, trigger a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tclickPublish: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:publish', e );\n\t\t},\n\n\t\t/**\n\t\t * When we click view changes, trigger a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tclickViewChanges: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:viewChanges', e );\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Main application header. Includes links to all of our domains.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/header',['views/app/menu', 'views/app/menuButtons'], function( appMenuCollectionView, appMenuButtonsView ) {\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-app-header',\n\n\t\tregions: {\n\t\t\t// Menu is our main app menu.\n\t\t\tmenu: '.nf-app-menu',\n\t\t\t// Buttons represents the 'view changes' and 'Publish' buttons.\n\t\t\tbuttons: '.nf-app-buttons'\n\t\t},\n\n\t\t/**\n\t\t * Since this is a layout region, we need to fill the two areas: menu and buttons whenever we show this view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonShow: function() {\n\t\t\t// Get our domains\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\t// show the menu area using the appropriate view, passing our domain collection.\n\t\t\tthis.menu.show( new appMenuCollectionView( { collection: appDomainCollection } ) );\n\t\t\tthis.buttons.show( new appMenuButtonsView() );\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","/**\n * Renders our sub-header. i.e. add new field, add new action, etc.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/subHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-sub-header'\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders our form title.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/formTitle',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-header-form-title',\n\n\t\tinitialize: function() {\n\t\t\t// When we change the model (to disable it, for example), re-render.\n\t\t\tthis.model.on( 'change:title', this.render, this );\n\t\t},\n\n\t\t/**\n\t\t * When we render this view, remove the extra <div> tag created by backbone.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\t/**\n\t\t * These functions are available to templates, and help us to remove logic from template files.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t    \treturn {\n\t    \t\trenderTitle: function(){\n\t    \t\t\tvar formData = nfRadio.channel( 'app' ).request( 'get:formData' );\n\t    \t\t\treturn formData.get( 'settings' ).get( 'title' );\n\t\t\t\t},\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders our builder header.\n *\n * This is a layout view and handles two regions:\n * app - menu/buttons\n * subapp - title, add new field, etc.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/builderHeader',['views/app/header', 'views/app/subHeader', 'views/app/formTitle'], function( appHeaderView, appSubHeaderView, formTitleView ) {\n\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: \"div\",\n\t\ttemplate: \"#nf-tmpl-header\",\n\n\t\tregions: {\n\t\t\tapp: \"#nf-app-header\",\n\t\t\tformTitle: \"#nf-app-form-title\",\n\t\t\tappSub: \"#nf-app-sub-header\"\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.changeSubHeader );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tthis.app.show( new appHeaderView() );\n\n\t\t\t// var formData = nfRadio.channel( 'app' ).request( 'get:formData' );\n\t\t\t// var formSettings = formData.get( 'settings' );\n\t\t\t// this.formTitle.show( new formTitleView( { model: formSettings } ) );\n\n\t\t\tthis.changeSubHeader();\n\t\t},\n\n\t\tchangeSubHeader: function() {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar subHeaderView = currentDomain.get( 'getSubHeaderView' ).call( currentDomain );\n\t\t\tthis.appSub.show( subHeaderView );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/app/mainContentLoading',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n        className: 'nf-domain-loading',\n\t\ttemplate: '#nf-tmpl-main-content-loading'\n\t});\n\n\treturn view;\n} );\n\n","define( 'views/app/main',['views/app/mainContentLoading'], function( LoadingView ) {\n\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main',\n\n\t\tregions: {\n\t\t\theader: '#nf-main-header',\n\t\t\tcontent: '#nf-main-content'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.render );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:mainEl', this.getMainEl, this );\n\t\t\t\n\t\t\t// this.listenTo( nfRadio.channel( 'app' ), 'cancel:changes', this.render );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tjQuery( this.el ).parent().perfectScrollbar();\n\t\t\tnfRadio.channel( 'main' ).trigger( 'show:main' );\n\t\t\tjQuery( this.el ).parent().disableSelection();\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\t// var headerView = currentDomain.get( 'getMainHeaderView' ).call( currentDomain );\n\t\t\t// this.header.show( headerView );\n\t\t\t// var contentView = currentDomain.get( 'getMainContentView' ).call( currentDomain );\n\t\t\tconsole.log( 'test' );\n\t\t\tvar contentView = new LoadingView();\n\t\t\tthis.content.show( contentView );\n\n\t\t\tnfRadio.channel( 'main' ).trigger( 'render:main' );\n\t\t},\n\n\t\tgetMainEl: function() {\n\t\t\treturn jQuery( this.el ).parent();\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Menu view used on smaller screens.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/mobileMenu',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-menu-drawer'\n\t});\n\n\treturn view;\n} );\n","/**\n * Default drawer header.\n *\n * Includes our filter/search and 'Done' button.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/headerDefault',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-header-default',\n\n\t\t/**\n\t\t * When we render, remove the extra div added by backbone and add listeners related to our filter.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\t// Remove extra wrapping div.\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t\t// Respond to requests related to our filter.\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'clear:filter', this.clearFilter, this );\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'blur:filter', this.blurFilter, this );\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'get:filterEl', this.getEl, this );\n\t\t},\n\n\t\tevents: {\n\t\t\t'keyup .nf-filter'\t: 'maybeChangeFilter',\n\t\t\t'input .nf-filter'\t: 'changeFilter',\n\t\t\t'focus input'\t\t: 'getFocus'\n\t\t},\n\n\t\t/**\n\t\t * When the filter text is changed, trigger an event on our current drawer.\n\t\t * This lets us keep the logic separate from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tchangeFilter: function( e ) {\n\t\t\tvar currentDrawer = nfRadio.channel( 'app' ).request( 'get:currentDrawer' );\n\t\t\tnfRadio.channel( 'drawer-' + currentDrawer.get( 'id' ) ).trigger( 'change:filter', e.target.value, e );\n\t\t},\n\n\t\t/**\n\t\t * The user pressed a key. If it's the enter key, then run the change filter function.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tmaybeChangeFilter: function( e ) {\n\t\t\tif ( 13 == e.keyCode ) {\n\t\t\t\te.addObject = true;\n\t\t\t\tthis.changeFilter( e );\t\t\t\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Clear our filter.\n\t\t *\n\t\t * This triggers 'input' on the field, which will trigger a change if necessary.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tclearFilter: function() {\n\t\t\tvar filterEl =  jQuery( this.el ).find( '.nf-filter' );\n\t\t\tif ( '' != jQuery.trim( filterEl.val() ) ) {\n\t\t\t\tfilterEl.val('');\n\t\t\t\tfilterEl.trigger( 'input' );\n\t\t\t\tfilterEl.focus();\t\t\t\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Fire the 'blur' event on our filter. Used to force a change event when the user tabs.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tblurFilter: function() {\n\t\t\tjQuery( this.el ).find( '.nf-filter' ).blur();\n\t\t},\n\n\t\t/**\n\t\t * Return our filter dom element.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\tgetEl: function() {\n\t\t\treturn jQuery( this.el ).find( '.nf-filter' );\n\t\t},\n\n\t\tgetFocus: function() {\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'filter:focused' );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Empty drawer content view.\n * Called before we close the drawer.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/contentEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-empty'\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders our drawer region\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer',['views/app/drawer/headerDefault', 'views/app/drawer/contentEmpty'], function( drawerHeaderView, drawerEmptyView ) {\n\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttemplate: '#nf-tmpl-drawer',\n\n\t\tregions: {\n\t\t\theader: '#nf-drawer-header',\n\t\t\tcontent: '#nf-drawer-content'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:drawerEl', this.getEl, this );\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'load:drawerContent', this.loadContent, this );\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'empty:drawerContent', this.emptyContent, this );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tjQuery( this.el ).parent().perfectScrollbar();\n\t\t    // jQuery( this.el ).parent().disableSelection();\n\t\t},\n\n\t\tloadContent: function( drawerID, data ) {\n\t\t\tvar drawer = nfRadio.channel( 'app' ).request( 'get:drawer', drawerID );\n\t\t\tvar contentView = drawer.get( 'getContentView' ).call( drawer, data );\n\t\t\tvar headerView = drawer.get( 'getHeaderView' ).call( drawer, data );\n\n\t\t\tthis.header.show( headerView );\n\t\t\tthis.content.show( contentView );\n\n\t\t},\n\n\t\temptyContent: function() {\n\t\t\tthis.header.show( new drawerEmptyView() );\n\t\t\tthis.content.show( new drawerEmptyView() );\n\t\t},\n\n\t\tgetEl: function() {\n\t\t\treturn jQuery( this.el ).parent();\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-toggle-drawer': 'clickToggleDrawer'\n\t\t},\n\n\t\tclickToggleDrawer: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:toggleDrawerSize' );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n\n","/**\n * Single item view used for merge tags.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/mergeTagItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'li',\n\n\t\ttemplate: '#nf-tmpl-merge-tags-item',\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:active', this.render );\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:active', this.render, this );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click a': 'clickTag'\n\t\t},\n\n\t\tclickTag: function( e ) {\n\t\t\tnfRadio.channel( 'mergeTags' ).trigger( 'click:mergeTag', e, this.model );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tif ( this.active ) {\n\t\t\t\t\t\treturn 'active';\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Merge tags popup section\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/mergeTagsSection',['views/app/drawer/mergeTagItem'], function( mergeTagItemView ) {\n\tvar view = Marionette.CompositeView.extend({\n\t\ttagName: 'div',\n\t\tchildView: mergeTagItemView,\n\t\ttemplate: '#nf-tmpl-merge-tags-section',\n\n\t\tinitialize: function() {\n\t\t\tthis.collection = this.model.get( 'tags' );\n\t\t\tthis.model.on( 'change', this.render, this );\n\t\t\tif ( 'fields' == this.model.get( 'id' ) ) {\n\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\t// fieldCollection.on( 'all', this.updateFields, this );\n\t\t\t}\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tif ( 'fields' == this.model.get( 'id' ) ) {\n\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\tfieldCollection.off( 'all', this.updateFields, this );\n\t\t\t}\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( '.merge-tags' ).append( childView.el );\n\t\t},\n\n\t\tupdateFields: function() {\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tthis.model.set( 'tags', fieldCollection );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Merge tags popup\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/mergeTagsContent',['views/app/drawer/mergeTagsSection'], function( mergeTagsSectionView ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-merge-tags-content',\n\t\tchildView: mergeTagsSectionView\n\t});\n\n\treturn view;\n} );\n","/**\n * Builder view.\n *\n * This layout view has regions that represent our application areas:\n * header\n * main\n * menuDrawer - Mobile side-menu\n * drawer\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/builder',['views/app/builderHeader', 'views/app/main', 'views/app/drawer/mobileMenu', 'views/app/drawer', 'views/app/drawer/mergeTagsContent'], function( headerView, mainView, menuDrawerView, drawerView, mergeTagsContentView ) {\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttemplate: \"#nf-tmpl-builder\",\n\t\tel: '#nf-builder',\n\n\t\tregions: {\n\t\t\theader: \"#nf-header\",\n\t\t\tmain: \"#nf-main\",\n\t\t\tmenuDrawer: \"#nf-menu-drawer\",\n\t\t\tdrawer: \"#nf-drawer\",\n\t\t\tmergeTagsContent: '.merge-tags-content'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Layout views aren't self-rendering.\n\t\t\tthis.render();\n\t\t\tvar mergeTags = nfRadio.channel( 'mergeTags' ).request( 'get:mergeTags' );\n\t\t\tthis.mergeTagsContent.show( new mergeTagsContentView( { collection: mergeTags } ) );\n\t\t\t// Show our header.\n\t\t\tthis.header.show( new headerView() );\n\t\t\t// Show our main content.\n\t\t\tthis.main.show( new mainView() );\n\t\t\t// this.menuDrawer.show( new menuDrawerView() );\n\t\t\t// Show our drawer.\n\t\t\t// this.drawer.show( new drawerView() );\n\t\t\t// Respond to requests asking for the builder dom element.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:builderEl', this.getBuilderEl, this );\n\t\t},\n\n\t\tgetBuilderEl: function() {\n\t\t\treturn this.el;\n\t\t},\n\n\t\t// Listen for clicks\n\t\tevents: {\n\t\t\t'click .nf-open-drawer': 'openDrawer',\n\t\t\t'click .nf-change-domain': 'changeDomain',\n\t\t\t'click .nf-close-drawer': 'closeDrawer'\n\t\t},\n\n\t\t/**\n\t\t * Someone clicked to open a drawer, so fire a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te \tevent\n\t\t * @return void\n\t\t */\n\t\topenDrawer: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:openDrawer', e );\n\t\t},\n\t\t/**\n\t\t * Someone clicked to close a drawer, so fire a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tcloseDrawer: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:closeDrawer' );\n\t\t},\n\t\t/**\n\t\t * Someone clicked to change the domain, so fire a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te \tevent\n\t\t * @return void\n\t\t */\n\t\tchangeDomain: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:menu', e );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","/**\n * Handles opening and closing our drawer. This is where we display settings for fields, actions, and settings.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/drawer',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our drawer-related click events.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:openDrawer', this.clickOpenDrawer );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:closeDrawer', this.closeDrawer );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:toggleDrawerSize', this.toggleDrawerSize );\n\n\t\t\t// Reply to direct requests to open or close the drawer.\n\t\t\tnfRadio.channel( 'app' ).reply( 'open:drawer', this.openDrawer, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'close:drawer', this.closeDrawer, this );\n\n\t\t\t/*\n\t\t\t * When we close the drawer, we have to figure out what the right position should be.\n\t\t\t * This listens to requests from other parts of our app asking what the closed right position is.\n\t\t\t */\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'get:closedRightPos', this.getClosedDrawerPos, this );\n\t\t\t\n\t\t\t// Reply to requests to prevent our drawer from closing\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'prevent:close', this.preventClose, this );\n\t\t\t// Reply to requests to enable drawer closing\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'enable:close', this.enableClose, this );\n\n\t\t\t/*\n\t\t\t * Object that holds our array of 'prevent close' values.\n\t\t\t * We use an array so that registered requests can unregister and not affect each other.\n\t\t\t */\n\t\t\tthis.objPreventClose = {};\n\n\t\t\t/*\n\t\t\t *  Listen to focus events on the filter and stop our interval when it happens.\n\t\t\t *  This is to fix a bug that can cause the filter to gain focus every few seconds.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'filter:focused', this.filterFocused );\n\t\t},\n\n\t\t/**\n\t\t * Handles closing our drawer\n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tcloseDrawer: function() {\n\t\t\t// Get our current domain.\n\t\t\tvar currentDrawer = nfRadio.channel( 'app' ).request( 'get:currentDrawer' );\n\t\t\tif ( ! currentDrawer || this.maybePreventClose() ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Triggers the before close drawer action on our current domain's drawer channel.\n\t\t\tnfRadio.channel( 'drawer-' + currentDrawer.get( 'id' ) ).trigger( 'before:closeDrawer' );\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'before:closeDrawer' );\n\t\t\t\n\t\t\t// Send a message to our drawer to empty its contents.\n\t\t\tnfRadio.channel( 'drawer' ).request( 'empty:drawerContent' );\n\n\t\t\t// To close our drawer, we have to add our closed class to the builder and remove the opened class.\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tjQuery( builderEl ).addClass( 'nf-drawer-closed' ).removeClass( 'nf-drawer-opened' );\n\n\t\t\t// Get the right position of our closed drawer. Should be container size in -px.\n\t\t\tvar rightClosed = this.getClosedDrawerPos();\n\n\t\t\t// Get our drawer element and give change the 'right' property to our closed position.\n\t\t\tvar drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tjQuery( drawerEl ).css( { 'right': rightClosed } );\n\t\t\t\t\t\n\t\t\t// In order to access properties in 'this' context in our interval below, we have to set it here.\t\n\t\t\tvar that = this;\n\n\t\t\t/*\n\t\t\t * Since jQuery can't bind to a CSS change, we poll every .15 seconds to see if we've closed the drawer.\n\t\t\t *\n\t\t\t * Once our drawer is closed, we:\n\t\t\t * clear our interval\n\t\t\t * request that the app change it's current drawer to false\n\t\t\t * trigger a drawer closed message\n\t\t\t */\n\t\t\tthis.checkCloseDrawerPos = setInterval( function() {\n\t        \tif ( rightClosed == jQuery( drawerEl ).css( 'right' ) ) {\n\t        \t\tclearInterval( that.checkCloseDrawerPos );\n\t\t    \t\tnfRadio.channel( 'app' ).request( 'update:currentDrawer', false );\n\t\t    \t\tnfRadio.channel( 'drawer' ).trigger( 'closed' );\n\t        \t}\n\t\t\t}, 150 );\n\t\t},\n\n\t\t/**\n\t\t * Click handler for our 'open drawer' event.\n\t\t * @since  3.0\n\t\t * @param  e jQuery event\n\t\t * @return void\n\t\t */\n\t\tclickOpenDrawer: function( e ) {\n\t\t\tvar drawerID = jQuery( e.target ).data( 'drawerid' );\n\t\t\tthis.openDrawer( drawerID );\n\t\t},\n\n\t\t/**\n\t\t * Open our drawer.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string drawerID \tID of the drawer we want to open.\n\t\t * @param  object data     \tOptional data that we want to pass to the drawer.\n\t\t * @return void\n\t\t */\n\t\topenDrawer: function( drawerID, data ) {\n\t\t\t// If we haven't sent a data object, set the variable to false.\n\t\t\tdata = data || false;\n\n\t\t\t// Send out a message requesting our drawer view to load the content for our drawer ID.\n\t\t\tnfRadio.channel( 'drawer' ).request( 'load:drawerContent', drawerID, data );\n\n\t\t\t// To open our drawer, we have to add our opened class to our builder element and remove the closed class.\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tjQuery( builderEl ).addClass( 'nf-drawer-opened' ).removeClass( 'nf-drawer-closed' );\n\t\t\t\n\t\t\t// To open our drawer, we have to set the right position of our drawer to 0px.\n\t\t\tvar drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tjQuery( drawerEl ).css( { 'right': '0px' } );\n\t\t\t\n\t\t\t// In order to access properties in 'this' context in our interval below, we have to set it here.\t\n\t\t\tvar that = this;\n\n\t\t\t/*\n\t\t\t * Since jQuery can't bind to a CSS change, we poll every .15 seconds to see if we've opened the drawer.\n\t\t\t *\n\t\t\t * Once our drawer is opened, we:\n\t\t\t * clear our interval\n\t\t\t * focus our filter\n\t\t\t * request that the app update its current drawer to the one we opened\n\t\t\t * trigger a drawer opened message\n\t\t\t */\n\t\t\tthis.checkOpenDrawerPos = setInterval( function() {\n\t        \tif ( '0px' == jQuery( drawerEl ).css( 'right' ) ) {\n\t        \t\tclearInterval( that.checkOpenDrawerPos );\n\t        \t\tthat.focusFilter();\n\t\t    \t\tnfRadio.channel( 'app' ).request( 'update:currentDrawer', drawerID );\n\t\t    \t\tnfRadio.channel( 'drawer' ).trigger( 'opened' );\n\t        \t}\n\t\t\t}, 150 );\n\t\t},\n\n\t\t/**\n\t\t * Toggle the drawer from half to full screen and vise-versa\n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\ttoggleDrawerSize: function() {\n\t\t\t// Get our drawer element.\n\t\t\tvar drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\t// toggle our drawer size class.\n\t\t\tjQuery( drawerEl ).toggleClass( 'nf-drawer-expand' );\n\t\t},\n\n\t\t/**\n\t\t * Focus our filter\n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n        focusFilter: function() {\n        \t// Get our filter element\n        \tvar filterEl = nfRadio.channel( 'drawer' ).request( 'get:filterEl' );\n        \t// Focus\n        \tjQuery( filterEl ).focus();\n        },\n\n        /**\n         * Get the CSS right position (in px) of the closed drawer element.\n         * This is calculated by:\n         * getting the width of the builder element\n         * add 300 pixels\n         * make it negative\n         * \n         * @since  3.0\n         * @return void\n         */\n        getClosedDrawerPos: function() {\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tvar closedPos = jQuery( builderEl ).width() + 300;\n\t\t\treturn '-' + closedPos + 'px';\n        },\n\n        /**\n         * Check to see if anything has registered a prevent close key.\n         * \n         * @since  3.0\n         * @return boolean\n         */\n        maybePreventClose: function() {\n        \tif ( 0 == Object.keys( this.objPreventClose ).length ) {\n        \t\treturn false;\n        \t} else {\n        \t\treturn true;\n        \t}\n        },\n\n        /**\n         * Register a prevent close key.\n         * \n         * @since  3.0\n         * @param  string \tkey unique id for our 'prevent close' setting.\n         * @return void\n         */\n        preventClose: function( key ) {\n        \tthis.objPreventClose[ key ] = true;\n        },\n\n        /**\n         * Remove a previously registered prevent close key.\n         * \n         * @since  3.0\n         * @param  string \tkey unique id for our 'prevent close' setting.\n         * @return void\n         */\n        enableClose: function( key ) {\n        \tdelete this.objPreventClose[ key ];\n        },\n\n        /**\n         * When we focus our filter, make sure that our open drawer interval is cleared.\n         * \n         * @since  3.0\n         * @return void\n         */\n        filterFocused: function() {\n        \tclearInterval( this.checkOpenDrawerPos );\n        }\n\t});\n\n\treturn controller;\n} );\n","define( 'models/app/drawerModel',['views/app/drawer/headerDefault'], function( defaultHeaderView ) {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tgetHeaderView: function( data ) {\n\t\t\t\treturn new defaultHeaderView( data );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds all of our drawer models.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/drawerCollection',['models/app/drawerModel'], function( drawerModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: drawerModel\n\t} );\n\treturn collection;\n} );\n","define( 'views/fields/drawer/stagedField',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-staged-field',\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .dashicons-dismiss': 'removeStagedField'\n\t\t},\n\n\t\tremoveStagedField: function( el ) {\n\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'click:removeStagedField', el, this.model );\n\t\t}\n\t});\n\n\treturn view;\n} );\n\n","define( 'views/fields/drawer/stagingEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-staged-fields-empty',\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/drawer/stagingCollection',['views/fields/drawer/stagedField', 'views/fields/drawer/stagingEmpty'], function( stagedFieldView, stagedFieldsEmptyView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: stagedFieldView,\n\t\temptyView: stagedFieldsEmptyView,\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:stagedFieldsEl', this.getStagedFieldsEl, this );\n\t\t},\n\n\t\tonShow: function() {\n\n\t\t\tthis.$el = jQuery( this.el ).parent();\n\t\t\tjQuery( this.$el ).find( 'span:first' ).unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tvar that = this;\n\n\t\t\tjQuery( this.el ).sortable( {\n\t\t\t\tplaceholder: 'nf-staged-fields-sortable-placeholder',\n\t\t\t\thelper: 'clone',\n\t\t\t\ttolerance: 'pointer',\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'over:stagedFields', e, ui );\n\t\t\t\t},\n\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'out:stagedFields', ui );\n\t\t\t\t},\n\n\t\t\t\treceive: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'receive:stagedFields', ui );\n\t\t\t\t},\n\n\t\t\t\tupdate: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t\t},\n\n\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'start:stagedFields', ui );\n\n\t\t\t\t},\n\n\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'stop:stagedFields', ui );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tjQuery( this.el ).parent().draggable( {\n\t\t\t\topacity: 0.9,\n\t\t\t\tconnectToSortable: '.nf-fields-sortable',\n\n\t\t\t\thelper: function( e ) {\n\t\t\t\t\tvar width = jQuery( e.target ).parent().width();\n\t\t\t\t\tvar height = jQuery( e.target ).parent().height();\n\t\t\t\t\tvar element = jQuery( e.target ).parent().clone();\n\t\t\t\t\tvar left = width / 4;\n\t\t\t\t\tvar top = height / 2;\n\t\t\t\t\tjQuery( this ).draggable( 'option', 'cursorAt', { top: top, left: left } );\n\n\t\t\t\t\treturn element;\n\t\t\t\t},\n\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'startDrag:fieldStaging', this, ui );\n\t\t\t\t},\n\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'stopDrag:fieldStaging', this, ui );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tgetStagedFieldsEl: function() {\n\t\t\treturn jQuery( this.el );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","/**\n * Model for our staged field.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/stagingModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection of staged fields.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/stagingCollection',['models/fields/stagingModel'], function( stagingModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: stagingModel,\n\t\tcomparator: 'order'\n\t} );\n\treturn collection;\n} );\n","define( 'views/fields/drawer/typeSection',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-field-type-section',\n\t\t\n\t\tinitialize: function() {\n\t\t\t_.bindAll( this, 'render' );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tthis.dragging = false;\n\t\t\tvar that = this;\n\t\t\tjQuery( this.el ).find( 'div.nf-one-third' ).draggable( {\n\t\t\t\topacity: 0.9,\n\t\t\t\ttolerance: 'intersect',\n\t\t\t\tscroll: false,\n\t\t\t\tconnectToSortable: '.nf-field-type-droppable',\n\n\t\t\t\thelper: function( e ) {\n\t\t\t\t\tvar width = jQuery( e.target ).parent().width();\n\t\t\t\t\tvar height = jQuery( e.target ).parent().height();\n\t\t\t\t\tvar element = jQuery( e.target ).parent().clone();\n\t\t\t\t\tvar left = width / 4;\n\t\t\t\t\tvar top = height / 2;\n\t\t\t\t\tjQuery( this ).draggable( 'option', 'cursorAt', { top: top, left: left } );\n\n\t\t\t\t\treturn element;\n\t\t\t\t},\n\n\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\tthat.dragging = true;\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'startDrag:type', this, ui );\n\t\t\t\t},\n\n\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\tthat.dragging = false;\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'stopDrag:type', this, ui );\n\t\t\t\t}\n\n\t\t\t} ).disableSelection();\n\n\t\t\tjQuery( this.el ).find( '.nf-item' ).focus( function() {\n\t\t    \tjQuery( this ).addClass( 'active' );\n\t\t    } ).blur( function() {\n\t\t    \tjQuery( this ).removeClass( 'active' );\n\t\t    } );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-item': 'clickFieldType',\n\t\t\t'keydown .nf-item': 'maybeClickFieldType'\n\t\t},\n\n\t\tclickFieldType: function( e ) {\n\t\t\tif ( ! this.dragging ) {\n\t\t\t\tnfRadio.channel( 'drawer' ).trigger( 'click:fieldType', e );\n\t\t\t}\n\t\t},\n\n\t\tmaybeClickFieldType: function( e ) {\n\t\t\tif ( 13 == e.keyCode ) {\n\t\t\t\tthis.clickFieldType( e );\n\t\t\t\tnfRadio.channel( 'drawer' ).request( 'clear:filter' );\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderFieldTypes: function() {\n\t\t\t        var html = '';\n\t\t\t        var that = this;\n\t\t\t        _.each( this.fieldTypes, function( id ) {\n\t\t\t            var type = nfRadio.channel( 'fields' ).request( 'get:type', id );\n\t\t\t            var nicename = type.get( 'nicename' );\n\t\t\t            html += _.template( jQuery( '#nf-tmpl-drawer-field-type-button' ).html(), { id: id, nicename: nicename, type: type, savedField: that.isSavedField } );\n\t\t\t        } );\n\t\t\t        return html;\n\t\t\t\t},\n\n\t\t\t\tisSavedField: function() {\n\t\t\t\t\tif( this.type.get( 'savedField' ) ) {\n\t\t\t\t\t\treturn 'nf-saved';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/drawer/typeSectionCollection',['views/fields/drawer/typeSection'], function( fieldTypeSectionView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: fieldTypeSectionView,\n\n\t\tonShow: function() {\n\t\t\tjQuery( this.el ).find( '.nf-settings' ).unwrap();\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","define( 'views/fields/drawer/addField',['views/fields/drawer/stagingCollection', 'models/fields/stagingCollection', 'views/fields/drawer/typeSectionCollection'], function( drawerStagingView, StagingCollection, fieldTypeSectionCollectionView ) {\n\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttemplate: '#nf-tmpl-drawer-content-add-field',\n\n\t\tregions: {\n\t\t\tstaging: '#nf-drawer-staging .nf-reservoir',\n\t\t\tprimary: '#nf-drawer-primary',\n\t\t\tsecondary: '#nf-drawer-secondary'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'filter:fieldTypes', this.filterFieldTypes );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'clear:filter', this.removeFieldTypeFilter );\n\t\t\n\t\t\tthis.savedCollection = nfRadio.channel( 'drawer' ).request( 'get:savedFields' );\n\t\t\tthis.primaryCollection = this.savedCollection;\n\n\t\t\tthis.fieldTypeSectionCollection = nfRadio.channel( 'fields' ).request( 'get:typeSections' );\n\t\t\tthis.secondaryCollection = this.fieldTypeSectionCollection;\n\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tvar stagingCollection = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\t\t\tthis.staging.show( new drawerStagingView( { collection: stagingCollection } ) );\n\n\t\t\tthis.primary.show( new fieldTypeSectionCollectionView( { collection: this.primaryCollection } ) );\n\t\t\tthis.secondary.show( new fieldTypeSectionCollectionView( { collection: this.secondaryCollection } ) );\n\t\t},\n\n\t\tgetEl: function() {\n\t\t\treturn jQuery( this.el ).parent();\n\t\t},\n\n\t\tfilterFieldTypes: function( filteredSectionCollection ) {\n\t\t\tthis.primary.reset();\n\t\t\tthis.secondary.reset();\n\t\t\tthis.filteredSectionCollection = filteredSectionCollection;\n\t\t\tthis.primary.show( new fieldTypeSectionCollectionView( { collection: this.filteredSectionCollection } ) );\n\t\t},\n\n\t\tremoveFieldTypeFilter: function () {\n\t\t\tthis.primary.show( new fieldTypeSectionCollectionView( { collection: this.savedCollection } ) );\n\t\t\tthis.secondary.show( new fieldTypeSectionCollectionView( { collection: this.fieldTypeSectionCollection } ) );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","define( 'views/app/drawer/itemSettingCollection',[], function() {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.childViewOptions = { dataModel: data.dataModel };\n\t\t},\n\n\t\tgetChildView: function( model ) {\n\t\t\treturn nfRadio.channel( 'app' ).request( 'get:settingChildView', model );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","define( 'views/app/drawer/itemSettingGroup',['views/app/drawer/itemSettingCollection'], function( itemSettingCollectionView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-edit-field-setting-group',\n\t\t\n\t\tregions: {\n\t\t\tsettings: '.nf-field-settings'\n\t\t},\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.model.on( 'change', this.render, this );\n\t\t\tthis.dataModel = data.dataModel;\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change', this.render );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tif ( this.model.get( 'display' ) ) {\n\t\t\t\tthis.settings.show( new itemSettingCollectionView( { collection: this.model.get( 'settings' ), dataModel: this.dataModel } ) );\n\t\t\t} else {\n\t\t\t\tthis.settings.empty();\n\t\t\t}\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'render:settingGroup', this );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .toggle': 'clickToggleGroup'\n\t\t},\n\n\t\tclickToggleGroup: function( e ) {\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'click:toggleSettingGroup', e, this.model );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderLabel: function() {\n\t\t\t\t\tif ( '' != this.label ) {\n\t\t\t\t\t\treturn _.template( jQuery( '#nf-tmpl-drawer-content-edit-setting-group-label' ).html(), this );\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderArrowDir: function() {\n\t\t\t\t\tif ( this.display ) {\n\t\t\t\t\t\treturn 'down';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn 'right';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/app/drawer/itemSettingGroupCollection',['views/app/drawer/itemSettingGroup'], function( itemSettingGroupView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: itemSettingGroupView,\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.childViewOptions = { dataModel: data.dataModel };\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","define( 'views/app/drawer/editSettings',['views/app/drawer/itemSettingGroupCollection'], function( itemSettingGroupCollectionView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-edit-settings',\n\n\t\tregions: {\n\t\t\tsettingGroups: '.nf-settings-groups',\n\t\t},\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.dataModel = data.model;\n\t\t\tthis.groupCollection = data.groupCollection;\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.settingGroups.show( new itemSettingGroupCollectionView( { collection: this.groupCollection, dataModel: this.dataModel } ) );\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t    \treturn {\n\t    \t\tmaybeRenderTitle: function() {\n\t    \t\t\tif ( 'undefined' !== typeof this.type ) {\n\t    \t\t\t\treturn _.template( jQuery( '#nf-tmpl-drawer-content-edit-settings-title' ).html(), this );\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t    \t\t},\n\n\t    \t\trenderTypeNicename: function() {\n\t    \t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\t\t\tvar domainID = currentDomain.get( 'id' );\n\t    \t\t\tvar type = nfRadio.channel( domainID ).request( 'get:type', this.type );\n\t    \t\t\treturn type.get( 'nicename' );\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t});\n\n\treturn view;\n} );\n","/**\n * Button to add an action to the form.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/drawer/typeButton',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-action-type-button',\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t\t\n\t\t\tjQuery( this.el ).disableSelection();\n\t\t\t\n\t\t\tif ( 'installed' == this.model.get( 'section') ) {\n\t\t\t\tvar that = this;\n\t\t\t\tjQuery( this.el ).draggable( {\n\t\t\t\t\topacity: 0.9,\n\t\t\t\t\ttolerance: 'intersect',\n\t\t\t\t\tscroll: false,\n\t\t\t\t\thelper: 'clone',\n\n\t\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\t\tthat.dragging = true;\n\t\t\t\t\t\tnfRadio.channel( 'drawer-addAction' ).trigger( 'startDrag:type', this, ui );\n\t\t\t\t\t},\n\n\t\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\t\tthat.dragging = false;\n\t\t\t\t\t\tnfRadio.channel( 'drawer-addAction' ).trigger( 'stopDrag:type', this, ui );\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\t\t\t\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-item': 'clickAddAction'\n\t\t},\n\n\t\tclickAddAction: function( e ) {\n\t\t\tif ( ! this.dragging ) {\n\t\t\t\tif ( 'installed' == this.model.get( 'section' ) ) { // Is this an installed action?\n\t\t\t\t\tnfRadio.channel( 'actions' ).trigger( 'click:addAction', this.model );\n\t\t\t\t} else { // This isn't an installed action\n\t\t\t\t\twindow.open( this.model.get( 'link' ), '_blank' );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = 'nf-item';\n\t\t\t\t\tif ( '' != jQuery.trim( this.image ) ) {\n\t\t\t\t\t\tclasses += ' nf-has-img';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( 'installed' == this.section ) {\n\t\t\t\t\t\tclasses += ' nf-action-type';\n\t\t\t\t\t}\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\trenderStyle: function() {\n\t\t\t\t\tif ( '' != jQuery.trim( this.image ) ) {\n\t\t\t\t\t\treturn \"style=\\\"background-image: url(\" + this.image + \");\\\"\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/actions/drawer/typeCollection',['views/actions/drawer/typeButton'], function( actionTypeButtonView ) {\n\tvar view = Marionette.CompositeView.extend( {\n\t\ttemplate: '#nf-tmpl-drawer-action-type-section',\n\t\tchildView: actionTypeButtonView,\n\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t\t\treturn {\n\t\t\t\trenderNicename: function() {\n\t\t\t\t\treturn that.collection.nicename;\n\t\t\t\t},\n\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\treturn that.collection.slug;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( '.action-types' ).append( childView.el );\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","/**\n * Add action drawer.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/drawer/addAction',['views/actions/drawer/typeCollection'], function( actionTypeCollectionView ) {\n\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttemplate: '#nf-tmpl-drawer-content-add-action',\n\n\t\tregions: {\n\t\t\tprimary: '#nf-drawer-primary',\n\t\t\tsecondary: '#nf-drawer-secondary'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'filter:actionTypes', this.filteractionTypes );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'clear:filter', this.removeactionTypeFilter );\n\t\t\n\t\t\tthis.installedActions = nfRadio.channel( 'actions' ).request( 'get:installedActions' );\n\t\t\tthis.primaryCollection = this.installedActions;\n\n\t\t\tthis.availableActions = nfRadio.channel( 'actions' ).request( 'get:availableActions' );\n\t\t\tthis.secondaryCollection = this.availableActions;\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tthis.primary.show( new actionTypeCollectionView( { collection: this.primaryCollection } ) );\n\t\t\tthis.secondary.show( new actionTypeCollectionView( { collection: this.secondaryCollection } ) );\n\t\t},\n\n\t\tgetEl: function() {\n\t\t\treturn jQuery( this.el ).parent();\n\t\t},\n\n\t\tfilteractionTypes: function( filteredInstalled, filteredAvailable ) {\n\t\t\tthis.primary.reset();\n\t\t\tthis.secondary.reset();\n\t\t\tthis.primary.show( new actionTypeCollectionView( { collection: filteredInstalled } ) );\n\t\t\tthis.secondary.show( new actionTypeCollectionView( { collection: filteredAvailable } ) );\n\t\t\t\n\t\t},\n\n\t\tremoveactionTypeFilter: function () {\n\t\t\tthis.primary.show( new actionTypeCollectionView( { collection: this.installedActions } ) );\n\t\t\tthis.secondary.show( new actionTypeCollectionView( { collection: this.availableActions } ) );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","define( 'views/settings/drawer/editFormSettings',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-edit-form-settings'\n\t});\n\n\treturn view;\n} );\n","/**\n * Individual change item.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/contentViewChangesItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-view-changes-item',\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:disabled', this.render, this );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:disabled', this.render );\n\t\t},\n\n\t\t/**\n\t\t * When we render this element, remove the extra wrapping <div> that backbone creates.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .undoSingle': 'undoSingle'\n\t\t},\n\n\t\tundoSingle: function( e ) {\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'click:undoSingle', this.model );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Changes collection view.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/contentViewChanges',['views/app/drawer/contentViewChangesItem'], function( viewChangesItem ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'table',\n        className: 'nf-changes',\n\t\tchildView: viewChangesItem\n\t} );\n\n\treturn view;\n} );\n\n","/**\n * Handles clicks on the 'view changes' button in the header.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/headerViewChanges',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-header-view-changes',\n\n\t\tevents: {\n\t\t\t'click .undoChanges': 'clickUndoChanges'\n\t\t},\n\n\t\tclickUndoChanges: function( e ) {\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'click:undoChanges' );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Config file for our app drawers.\n *\n * this.collection represents all of our registered drawers.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/drawerConfig',[\n\t'models/app/drawerCollection',\n\t'views/fields/drawer/addField',\n\t'views/app/drawer/editSettings',\n\t'views/actions/drawer/addAction',\n\t'views/settings/drawer/editFormSettings',\n\t'views/app/drawer/contentViewChanges',\n\t'views/app/drawer/headerViewChanges'\n\t], function(\n\t\tdrawerCollection,\n\t\taddFieldView,\n\t\teditSettingsView,\n\t\taddActionView,\n\t\teditFormSettingsView,\n\t\tviewChangesView,\n\t\tviewChangesHeaderView\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\n\t\t\tthis.collection = new drawerCollection( [\n\t\t\t\t{\n\t\t\t\t\tid: 'addField',\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new addFieldView( data );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'addAction',\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new addActionView( data );\n\t\t\t\t\t}\n\t\t\t\t},\t\t\t\t\n\t\t\t\t{\n\t\t\t\t\tid: 'editSettings',\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new editSettingsView( data );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'editFormSettings',\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new editFormSettingsView( data );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'viewChanges',\n\n\t\t\t\t\t// getHeaderView() is defined by default, but we need to override it for the viewChanges drawer.\n\t\t\t\t\tgetHeaderView: function( data ) {\n\t\t\t\t\t\treturn new viewChangesHeaderView( data );\n\t\t\t\t\t},\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new viewChangesView( data );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t] );\n\n\t\t\t// Listen for requests for our drawer collection.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:drawerCollection', this.getDrawerCollection, this );\n\t\t\t// Listen for requests for specific drawer models.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:drawer', this.getDrawer, this );\n\t\t},\n\n\t\tgetDrawerCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tgetDrawer: function( id ) {\n\t\t\treturn this.collection.get( id );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model for our individual domains.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/domainModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tdashicons: '',\n\t\t\tclasses: '',\n\t\t\tactive: false,\n\t\t\turl: '',\n\t\t\thotkeys: false,\n\t\t\tdisabled: false\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Holds all of our domain models.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/domainCollection',['models/app/domainModel'], function( domainModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: domainModel\n\t} );\n\treturn collection;\n} );\n","define( 'views/fields/mainHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-header-fields',\n\n\t\tinitialize: function() {\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tthis.listenTo( fieldCollection, 'add', this.render );\n\t\t\tthis.listenTo( fieldCollection, 'remove', this.render );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tif ( fieldCollection.models.length == 0 ) {\n\t\t\t\tjQuery( this.el ).hide();\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).show();\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/subHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-sub-header-fields'\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders an application menu item from a domain model.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/itemControls',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-item-controls',\n\n\t\tinitialize: function() {\n\t\t\t// Listen for domain changes and re-render when we detect one.\n\t\t\t// this.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.render );\n\t\t},\n\n\t\t/**\n\t\t * When we render this view, remove the extra <div> tag created by backbone.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\t// this.$el = this.$el.children();\n\t\t\t// this.$el.unwrap();\n\t\t\t// this.setElement( this.$el );\n\t\t\t// \n\t\t\tthis.currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-edit-settings': 'clickEdit',\n\t\t\t'click .nf-delete': 'clickDelete',\n\t\t\t'click .nf-duplicate': 'clickDuplicateField'\n\t\t},\n\n\t\tclickEdit: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:edit', e, this.model );\n\t\t},\n\n\t\tclickDelete: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:delete', e, this.model );\n\t\t},\n\n\t\tclickDuplicateField: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:duplicate', e, this.model );\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/fieldItem',['views/app/itemControls'], function( itemControlsView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-content-field',\n\n\t\tregions: {\n\t\t\titemControls: '.nf-item-controls'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:editActive', this.render, this );\n\t\t\tthis.model.on( 'change:required', this.render, this );\n\t\t\tthis.model.on( 'change:label', this.render, this );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:editActive', this.render );\n\t\t\tthis.model.off( 'change:required', this.render );\n\t\t\tthis.model.off( 'change:label', this.render );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tthis.itemControls.show( new itemControlsView( { model: this.model } ) );\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t    \treturn {\n\t    \t\trenderClasses: function() {\n\t    \t\t\tvar classes = 'nf-field-wrap';\n\t    \t\t\tif ( this.editActive ) {\n\t    \t\t\t\tclasses += ' active';\n\t    \t\t\t}\n\t    \t\t\treturn classes;\n\t    \t\t},\n\t    \t\trenderRequired: function() {\n\t    \t\t\tif ( 1 == this.required ) {\n\t    \t\t\t\treturn '<span class=\"required\">*</span>';\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t    \t\t},\n\t    \t\tgetFieldID: function() {\n\t\t\t\t\tif ( jQuery.isNumeric( this.id ) ) {\n\t\t\t\t\t\treturn 'field-' + this.id;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this.id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\t\tevents: {\n\t\t\t'click': 'maybeClickEdit'\n\t\t},\n\n\t\tmaybeClickEdit: function( e ) {\n\t\t\tif ( jQuery( e.target ).parent().hasClass( 'nf-fields-sortable' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'click:edit', e, this.model );\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/mainContentEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-content-fields-empty',\n\n\t\tonBeforeDestroy: function() {\n\t\t\tjQuery( this.el ).parent().removeClass( 'nf-fields-empty-droppable' ).droppable( 'destroy' );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tif ( jQuery( this.el ).parent().hasClass( 'ui-sortable' ) ) {\n\t\t\t\tjQuery( this.el ).parent().sortable( 'destroy' );\n\t\t\t}\n\t\t\tjQuery( this.el ).parent().addClass( 'nf-fields-empty-droppable' );\n\t\t\tjQuery( this.el ).parent().droppable( {\n\t\t\t\taccept: function( draggable ) {\n\t\t\t\t\tif ( jQuery( draggable ).hasClass( 'nf-stage' ) || jQuery( draggable ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\thoverClass: 'nf-droppable-hover',\n\t\t\t\ttolerance: 'pointer',\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t\t},\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\t\t},\n\t\t\t\tdrop: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'receive:fieldsSortable', ui );\n\t\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\t\tfieldCollection.trigger( 'reset', fieldCollection );\n\t\t\t\t},\n\t\t\t} );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/mainContentFieldCollection',['views/fields/fieldItem', 'views/fields/mainContentEmpty'], function( mainContentFieldView, mainContentFieldEmptyView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: mainContentFieldView,\n\t\temptyView: mainContentFieldEmptyView,\n\t\treorderOnSort: true,\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:sortableEl', this.getSortableEl, this );\n\t\t\tvar fieldTemplate = Marionette.TemplateCache.get( '#nf-tmpl-main-content-field' );\n\t\t\tthis.childViewOptions = { fieldTemplate: fieldTemplate };\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tif ( this.collection.models.length > 0 ) {\n\t\t\t\tjQuery( this.el ).addClass( 'nf-field-type-droppable' ).addClass( 'nf-fields-sortable' );\n\t\t\t\tvar that = this;\n\t\t\t\tjQuery( this.el ).sortable( {\n\t\t\t\t\tcontainment: '#nf-main',\n\t\t\t\t\thelper: 'clone',\n\t\t\t\t\tcancel: '.nf-item-controls',\n\t\t\t\t\tplaceholder: 'nf-fields-sortable-placeholder',\n\t\t\t\t\topacity: 0.95,\n\t\t\t\t\ttolerance: 'intersect',\n\n\t\t\t\t\treceive: function( e, ui ) {\n\t\t\t\t\t\tnfRadio.channel( 'app' ).request( 'receive:fieldsSortable', ui );\n\t\t\t\t\t},\n\n\t\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t\t\t},\n\n\t\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\t\t\t},\n\n\t\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\t\tnfRadio.channel( 'app' ).request( 'start:fieldsSortable', ui );\n\t\t\t\t\t},\n\n\t\t\t\t\tupdate: function( e, ui ) {\n\t\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:fieldsSortable', ui );\n\t\t\t\t\t},\n\n\t\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\t\tnfRadio.channel( 'app' ).request( 'stop:fieldsSortable', ui );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\tgetSortableEl: function() {\n\t\t\treturn this.el;\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","/**\n * Add main header.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/mainHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-header-actions',\n\n\t\tinitialize: function() {\n\t\t\tvar actionCollection = nfRadio.channel( 'actions' ).request( 'get:collection' );\n\t\t\tthis.listenTo( actionCollection, 'add', this.render );\n\t\t\tthis.listenTo( actionCollection, 'remove', this.render );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar actionCollection = nfRadio.channel( 'actions' ).request( 'get:collection' );\n\t\t\tif ( actionCollection.models.length == 0 ) {\n\t\t\t\tjQuery( this.el ).hide();\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).show();\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Actions subheader view.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/subHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-sub-header-actions'\n\t});\n\n\treturn view;\n} );\n","/**\n * Single action table row\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/actionItem',['views/app/itemControls'], function( itemControlsView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'tr',\n\t\ttemplate: '#nf-tmpl-action-item',\n\t\t\n\t\tregions: {\n\t\t\titemControls: '.nf-item-controls'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change', this.render, this );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change', this.render );\n\t\t},\n\t\t\n\t\tonRender: function() {\n\t\t\tif ( this.model.get( 'editActive' ) ) {\n\t\t\t\tjQuery( this.el ).addClass( 'active' );\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).removeClass( 'active' );\n\t\t\t}\n\n\t\t\tif ( 0 == this.model.get( 'active' ) ) {\n\t\t\t\tjQuery( this.el ).addClass( 'deactivated' );\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).removeClass( 'deactivated' );\n\t\t\t}\n\n\t\t\tthis.itemControls.show( new itemControlsView( { model: this.model } ) );\n\t\t},\n\n\t\tevents: {\n\t\t\t'change input': 'changeToggle',\n\t\t\t'click': 'maybeClickEdit'\n\t\t},\n\n\t\tmaybeClickEdit: function( e ) {\n\t\t\tif ( 'TR' == jQuery( e.target ).parent().prop( 'tagName' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'click:edit', e, this.model );\n\t\t\t}\n\t\t},\n\n\t\tchangeToggle: function( e ) {\n\t\t\tvar settingModel = nfRadio.channel( 'actions' ).request( 'get:settingModel', 'active' );\n\t\t\tnfRadio.channel( 'app' ).request( 'change:setting', e, settingModel, this.model );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderToggle: function() {\n\t\t\t\t\tvar actionLabel = this.label;\n\t\t\t\t\tthis.label = '';\n\t\t\t\t\tthis.value = this.active;\n\t\t\t\t\tthis.name = this.id + '-active';\n\t\t\t\t\tvar html = _.template( jQuery( '#nf-tmpl-edit-setting-toggle' ).html(), this );\n\t\t\t\t\tthis.label = actionLabel;\n\t\t\t\t\treturn html;\n\t\t\t\t},\n\n\t\t\t\trenderTypeNicename: function() {\n\t\t\t\t\tvar type = nfRadio.channel( 'actions' ).request( 'get:type', this.type );\n\t\t\t\t\treturn type.get( 'nicename' );\n\t\t\t\t},\n\n\t\t\t\trenderTooltip: function() {\n\t\t\t\t\tif ( this.help ) {\n\t\t\t\t\t\treturn '<a class=\"nf-help\" href=\"#\"><span class=\"dashicons dashicons-admin-comments\"></span></a><div class=\"nf-help-text\">' + this.help + '</div>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderMergeTags: function() {\n\t\t\t\t\tif ( this.use_merge_tags ) {\n\t\t\t\t\t\treturn '<span class=\"dashicons dashicons-list-view merge-tags\"></span>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/actions/mainContentEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-content-actions-empty',\n\n\t\tonBeforeDestroy: function() {\n\t\t\tjQuery( this.el ).parent().parent().removeClass( 'nf-actions-empty' );\n\t\t\t// jQuery( this.el ).parent().removeClass( 'nf-fields-empty-droppable' ).droppable( 'destroy' );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tjQuery( this.el ).parent().parent().addClass( 'nf-actions-empty' );\n\t\t\t// if ( jQuery( this.el ).parent().hasClass( 'ui-sortable' ) ) {\n\t\t\t// \tjQuery( this.el ).parent().sortable( 'destroy' );\n\t\t\t// }\n\t\t\t// jQuery( this.el ).parent().addClass( 'nf-fields-empty-droppable' );\n\t\t\t// jQuery( this.el ).parent().droppable( {\n\t\t\t// \taccept: function( draggable ) {\n\t\t\t// \t\tif ( jQuery( draggable ).hasClass( 'nf-stage' ) || jQuery( draggable ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t// \t\t\treturn true;\n\t\t\t// \t\t}\n\t\t\t// \t},\n\t\t\t// \thoverClass: 'nf-droppable-hover',\n\t\t\t// \ttolerance: 'pointer',\n\t\t\t// \tover: function( e, ui ) {\n\t\t\t// \t\tui.item = ui.draggable;\n\t\t\t// \t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t// \t},\n\t\t\t// \tout: function( e, ui ) {\n\t\t\t// \t\tui.item = ui.draggable;\n\t\t\t// \t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\t// \t},\n\t\t\t// \tdrop: function( e, ui ) {\n\t\t\t// \t\tui.item = ui.draggable;\n\t\t\t// \t\tnfRadio.channel( 'app' ).request( 'receive:fieldsSortable', ui );\n\t\t\t// \t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t// \t\tfieldCollection.trigger( 'reset', fieldCollection );\n\t\t\t// \t},\n\t\t\t// } );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Main content view for our actions.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/mainContent',['views/actions/actionItem', 'views/actions/mainContentEmpty'], function( actionView, emptyView ) {\n\tvar view = Marionette.CompositeView.extend({\n\t\ttemplate: '#nf-tmpl-action-table',\n\t\tchildView: actionView,\n\t\temptyView: emptyView,\n\n\t\tonRender: function() {\n\t\t\tjQuery( this.el ).droppable( {\n\t\t\t\taccept: '.nf-one-third',\n\t\t\t\tactiveClass: 'nf-droppable-active',\n\t\t\t\thoverClass: 'nf-droppable-hover',\n\t\t\t\tdrop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'drop:actionType', e, ui );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( 'tbody' ).append( childView.el );\n\t\t},\n\t});\n\n\treturn view;\n} );\n","define( 'views/settings/mainHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-header-settings'\n\t});\n\n\treturn view;\n} );\n","define( 'views/settings/subHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-sub-header-settings'\n\t});\n\n\treturn view;\n} );\n","define( 'views/settings/settingItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-form-setting-type',\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:editActive', this.render );\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:editActive', this.render, this );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click': 'clickEdit'\n\t\t},\n\n\t\tclickEdit: function( e ) {\n\t\t\tnfRadio.channel( 'settings' ).trigger( 'click:edit', e, this.model );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = 'nf-setting-wrap';\n\t    \t\t\tif ( this.editActive ) {\n\t    \t\t\t\tclasses += ' active';\n\t    \t\t\t}\n\t    \t\t\treturn classes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/settings/mainContent',['views/settings/settingItem'], function( settingItem ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\tchildView: settingItem\n\t\t\n\t});\n\n\treturn view;\n} );\n","/**\n * Config file for our app domains.\n * \n * this.collection represents all of our app domain (fields, actions, settings) information.\n *\n * This doesn't store the current domain, but rather all the data about each.\n * \n * This data includes:\n * hotkeys\n * header view\n * subheader view\n * content view\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/domainConfig',[\n\t// Require our domain collection\n\t'models/app/domainCollection',\n\t// Require our fields domain files\n\t'views/fields/mainHeader',\n\t'views/fields/subHeader',\n\t'views/fields/mainContentFieldCollection',\n\t// Require our actions domain files\n\t'views/actions/mainHeader', \n\t'views/actions/subHeader',\n\t'views/actions/mainContent',\n\t// Require our settings domain files\n\t'views/settings/mainHeader',\n\t'views/settings/subHeader',\n\t'views/settings/mainContent',\n\t], \n\tfunction( \n\t\tappDomainCollection,\n\t\tfieldsMainHeaderView,\n\t\tfieldsSubHeaderView,\n\t\tfieldsMainContentFieldCollectionView,\n\t\tactionsMainHeaderView,\n\t\tactionsSubHeaderView,\n\t\tactionsMainContentView,\n\t\tsettingsMainHeaderView,\n\t\tsettingsSubHeaderView,\n\t\tsettingsMainContentView\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Define our app domains\n\t\t\tthis.collection = new appDomainCollection( [\n\t\t\t\t{\n\t\t\t\t\tid: 'fields',\n\t\t\t\t\tnicename: 'Form Fields',\n\t\t\t\t\thotkeys: {\n\t\t\t\t\t\t'Esc'\t\t\t\t: 'close:drawer',\n\t\t\t\t\t\t'Ctrl+Shift+n'\t\t: 'add:newField',\n\t\t\t\t\t\t'Ctrl+Shift+a'\t\t: 'changeDomain:actions',\n\t\t\t\t\t\t'Ctrl+Shift+s'\t\t: 'changeDomain:settings',\n\t\t\t\t\t\t'Alt+Ctrl+t'\t\t: 'open:mergeTags',\n\t\t\t\t\t\t'up'\t\t\t\t: 'up:mergeTags',\n\t\t\t\t\t\t'down'\t\t\t\t: 'down:mergeTags',\n\t\t\t\t\t\t'Shift+return'\t\t: 'return:mergeTags'\n\t\t\t\t\t},\n\n\t\t\t\t\tgetMainHeaderView: function() {\n\t\t\t\t\t\treturn new fieldsMainHeaderView();\n\t\t\t\t\t},\n\n\t\t\t\t\tgetSubHeaderView: function() {\n\t\t\t\t\t\treturn new fieldsSubHeaderView();\n\t\t\t\t\t},\n\n\t\t\t\t\tgetMainContentView: function( collection ) {\n\t\t\t\t\t\tvar collection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\t\t\treturn new fieldsMainContentFieldCollectionView( { collection: collection } );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'actions',\n\t\t\t\t\tnicename: 'Emails & Actions',\n\t\t\t\t\thotkeys: {\n\t\t\t\t\t\t'Esc'\t\t\t\t: 'close:drawer',\n\t\t\t\t\t\t'Ctrl+Shift+n'\t\t: 'add:newAction',\n\t\t\t\t\t\t'Ctrl+Shift+f'\t\t: 'changeDomain:fields',\n\t\t\t\t\t\t'Ctrl+Shift+s'\t\t: 'changeDomain:settings',\n\t\t\t\t\t\t'Alt+Ctrl+t'\t\t: 'open:mergeTags',\n\t\t\t\t\t\t'up'\t\t\t\t: 'up:mergeTags',\n\t\t\t\t\t\t'down'\t\t\t\t: 'down:mergeTags',\n\t\t\t\t\t\t'Shift+return'\t\t: 'return:mergeTags'\n\t\t\t\t\t},\n\n\t\t\t\t\tgetMainHeaderView: function() {\n\t\t\t\t\t\treturn new actionsMainHeaderView();\n\t\t\t\t\t},\n\n\t\t\t\t\tgetSubHeaderView: function() {\n\t\t\t\t\t\treturn new actionsSubHeaderView();\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t\tgetMainContentView: function() {\n\t\t\t\t\t\tvar collection = nfRadio.channel( 'actions' ).request( 'get:collection' );\n\t\t\t\t\t\treturn new actionsMainContentView( { collection: collection } );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'settings',\n\t\t\t\t\tnicename: 'Advanced',\n\t\t\t\t\thotkeys: {\n\t\t\t\t\t\t'Esc'\t\t\t\t: 'close:drawer',\n\t\t\t\t\t\t'Ctrl+Shift+f'\t\t: 'changeDomain:fields',\n\t\t\t\t\t\t'Ctrl+Shift+a'\t\t: 'changeDomain:actions',\n\t\t\t\t\t\t'Alt+Ctrl+t'\t\t: 'open:mergeTags',\n\t\t\t\t\t\t'up'\t\t\t\t: 'up:mergeTags',\n\t\t\t\t\t\t'down'\t\t\t\t: 'down:mergeTags',\n\t\t\t\t\t\t'Shift+return'\t\t: 'return:mergeTags'\n\t\t\t\t\t},\n\n\t\t\t\t\tgetMainHeaderView: function() {\n\t\t\t\t\t\treturn new settingsMainHeaderView();\n\t\t\t\t\t},\n\n\t\t\t\t\tgetSubHeaderView: function() {\n\t\t\t\t\t\treturn new settingsSubHeaderView();\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t\tgetMainContentView: function() {\n\t\t\t\t\t\tvar collection = nfRadio.channel( 'settings' ).request( 'get:typeCollection' );\n\t\t\t\t\t\treturn new settingsMainContentView( { collection: collection } );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'preview',\n\t\t\t\t\tnicename: 'Preview Form',\n\t\t\t\t\tclasses: 'preview',\n\t\t\t\t\tdashicons: 'dashicons-visibility',\n\t\t\t\t\turl: nfAdmin.previewurl\n\t\t\t\t}\n\t\t\t] );\n\n\t\t\t/*\n\t\t\t * Respond to requests to get the app domain collection.\n\t\t\t */\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:domainCollection', this.getDomainCollection, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:domainModel', this.getDomainModel, this );\n\t\t},\n\n\t\tgetDomainCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tgetDomainModel: function( id ) {\n\t\t\treturn this.collection.get( id );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model for our app data.\n * Listens for changes to the 'clean' attribute and triggers a radio message when the state changes.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/appModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tloading: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Listen to changes to our 'clean' attribute.\n\t\t\tthis.on( 'change:clean', this.changeStatus, this );\n\t\t},\n\n\t\tchangeStatus: function() {\n\t\t\t// Send out a radio message when the 'clean' attribute changes.\n\t\t\tnfRadio.channel( 'app' ).trigger( 'change:clean', this.get( 'clean' ) );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Creates and stores a model that represents app-wide data. i.e. current domain, current drawer, clean, etc.\n *\n * clean is a boolean that represents whether or not changes have been made.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/data',['models/app/appModel'], function( appModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Get the collection that represents all the parts of our application.\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\t// Setup our initial model.\n\t\t\tthis.model = new appModel( {\n\t\t\t\tcurrentDrawer: false,\n\t\t\t\tcurrentDomain: appDomainCollection.get( 'fields' ),\n\t\t\t\tclean: true\n\t\t\t} );\n\n\t\t\t/*\n\t\t\t * Respond to app channel requests for information about the state of our app.\n\t\t\t */\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:data', this.getData, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:setting', this.getSetting, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:currentDomain', this.getCurrentDomain, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:currentDrawer', this.getCurrentDrawer, this );\n\n\t\t\t/*\n\t\t\t * Respond to app channel requests to update app settings.\n\t\t\t */\t\t\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:currentDomain', this.updateCurrentDomain, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:currentDrawer', this.updateCurrentDrawer, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:setting', this.updateSetting, this );\n\n\t\t},\n\n\t\tupdateCurrentDomain: function( model ) {\n\t\t\tthis.updateSetting( 'currentDomain', model );\n\t\t},\n\n\t\tupdateSetting: function( setting, value ) {\n\t\t\tthis.model.set( setting, value );\n\t\t\treturn true;\n\t\t},\n\n\t\tgetSetting: function( setting ) {\n\t\t\treturn this.model.get( setting );\n\t\t},\n\n\t\tgetData: function() {\n\t\t\treturn this.model;\n\t\t},\n\n\t\tgetCurrentDomain: function() {\n\t\t\treturn this.model.get( 'currentDomain' );\n\t\t},\n\n\t\tupdateCurrentDrawer: function( drawerID ) {\n\t\t\tthis.updateSetting( 'currentDrawer', drawerID );\n\t\t\treturn true;\n\t\t},\n\n\t\tgetCurrentDrawer: function() {\n\t\t\tvar currentDrawerID = this.model.get( 'currentDrawer' );\n\t\t\treturn nfRadio.channel( 'app' ).request( 'get:drawer', currentDrawerID );\n\t\t}\n\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens for click events to expand/collapse setting groups.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/drawerToggleSettingGroup',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for click events on our settings group.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'click:toggleSettingGroup', this.toggleSettingGroup );\n\t\t},\n\n\t\t/**\n\t\t * Set the 'display' attribute of our group model to true or false to toggle.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te     \tevent\n\t\t * @param  backbone.model \tmodel \tgroup setting model\n\t\t * @return void\n\t\t */\n\t\ttoggleSettingGroup: function( e, model ) {\n\t\t\tif ( model.get( 'display' ) ) {\n\t\t\t\tmodel.set( 'display', false );\n\t\t\t} else {\n\t\t\t\tmodel.set( 'display', true );\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Updates our database with our form data.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/updateDB',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for the closing of the drawer and update when it's closed.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'closed', this.updateDB );\n\t\t\t// Respond to requests to update the database.\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:db', this.updateDB, this );\n\t\t},\n\n\t\t/**\n\t\t * Update our database.\n\t\t * If action isn't specified, assume we're updating the preview.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string \taction preview or publish\n\t\t * @return void\n\t\t */\n\t\tupdateDB: function( action ) {\n\t\t\t// If our app is clean, dont' update.\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'get:setting', 'clean' ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Default action to preview.\n\t\t\taction = action || 'preview';\n\n\t\t\t// Setup our ajax actions based on the action we're performing\n\t\t\tif ( 'preview' == action ) {\n\t\t\t\tvar jsAction = 'nf_preview_update';\n\t\t\t} else if ( 'publish' == action ) {\n\t\t\t\tvar jsAction = 'nf_save_form';\n\t\t\t}\n\n\t\t\t// Get our form data\n\t\t\tvar formData = nfRadio.channel( 'app' ).request( 'get:formData' );\n\n\t\t\t// Turn our formData model into an object\n\t\t\tvar data = JSON.parse( JSON.stringify( formData ) );\n\n\t\t\t/**\n\t\t\t * Prepare fields for submission.\n\t\t\t */\n\t\t\t\n\t\t\t// Get the field IDs that we've deleted.\n\t\t\tvar removedIDs = formData.get( 'fields' ).removedIDs;\n\n\t\t\t/*\n\t\t\t * data.fields is an array of objects like:\n\t\t\t * field.label = blah\n\t\t\t * field.label_pos = blah\n\t\t\t * etc.\n\t\t\t *\n\t\t\t * And we need that format to be:\n\t\t\t * field.settings.label = blah\n\t\t\t * field.settings.label_pos = blah\n\t\t\t *\n\t\t\t * So, we loop through our fields and create a field.settings object.\n\t\t\t */\n\t\t\t_.each( data.fields, function( field ) {\n\t\t\t\tvar id = field.id;\n\t\t\t\t// We dont' want to update id or parent_id\n\t\t\t\tdelete field.id;\n\t\t\t\tdelete field.parent_id;\n\t\t\t\tvar settings = {};\n\t\t\t\t// Loop through all the attributes of our fields\n\t\t\t\tfor (var prop in field) {\n\t\t\t\t    if ( field.hasOwnProperty( prop ) ) {\n\t\t\t\t    \t// Set our settings.prop value.\n\t\t\t\t        settings[ prop ] = field[ prop ];\n\t\t\t\t        // Delete the property from the field.\n\t\t\t\t        delete field[ prop ];\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\t// Update our field object.\n\t\t\t\tfield.settings = settings;\n\t\t\t\tfield.id = id;\n\t\t\t} );\n\n\t\t\t// Set our deleted_fields object so that we can know which fields were removed.\n\t\t\tdata.deleted_fields = removedIDs;\n\n\t\t\t/**\n\t\t\t * Prepare actions for submission.\n\t\t\t */\n\t\t\t\n\t\t\t// Get the action IDs that we've deleted.\n\t\t\tvar removedIDs = formData.get( 'actions' ).removedIDs;\n\n\t\t\t/*\n\t\t\t * data.actions is an array of objects like:\n\t\t\t * action.label = blah\n\t\t\t * action.label_pos = blah\n\t\t\t * etc.\n\t\t\t *\n\t\t\t * And we need that format to be:\n\t\t\t * action.settings.label = blah\n\t\t\t * action.settings.label_pos = blah\n\t\t\t *\n\t\t\t * So, we loop through our actions and create a field.settings object.\n\t\t\t */\n\t\t\t_.each( data.actions, function( action ) {\n\t\t\t\tvar id = action.id;\n\t\t\t\t// We dont' want to update id or parent_id\n\t\t\t\tdelete action.id;\n\t\t\t\tdelete action.parent_id;\n\t\t\t\tvar settings = {};\n\t\t\t\t// Loop through all the attributes of our actions\n\t\t\t\tfor (var prop in action) {\n\t\t\t\t    if ( action.hasOwnProperty( prop ) ) {\n\t\t\t\t    \t// Set our settings.prop value.\n\t\t\t\t        settings[ prop ] = action[ prop ];\n\t\t\t\t        // Delete the property from the action.\n\t\t\t\t        delete action[ prop ];\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\t// Update our action object.\n\t\t\t\taction.settings = settings;\n\t\t\t\taction.id = id;\n\t\t\t} );\n\n\t\t\t// Set our deleted_actions object so that we can know which actions were removed.\n\t\t\tdata.deleted_actions = removedIDs;\n\n\t\t\t// Turn our object into a JSON string.\n\t\t\tdata = JSON.stringify( data );\n\t\t\t// Run anything that needs to happen before we update.\n\t\t\tnfRadio.channel( 'app' ).trigger( 'before:updateDB', data );\n\n\t\t\tif ( 'publish' == action ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'loading', true );\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'change:loading' );\t\t\t\t\n\t\t\t}\n\t\t\t// Update\n\t\t\tjQuery.post( ajaxurl, { action: jsAction, form: data, security: nfAdmin.ajaxNonce }, function( response ) {\n\t\t\t\ttry {\n\t\t\t\t\tresponse = JSON.parse( response );\n\t\t\t\t\tresponse.action = action;\n\t\t\t\t\t// Run anything that needs to happen after we update.\n\t\t\t\t\tnfRadio.channel( 'app' ).trigger( 'response:updateDB', response );\n\t\t\t\t} catch( exception ) {\n\t\t\t\t\tconsole.log( 'Something went wrong!' );\n\t\t\t\t\tconsole.log( response );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model that represents our form data.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/formModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Stores our form data and responds to requests for it.\n * Form data stores fields, actions, and settings.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/formData',['models/app/formModel'], function( formModel) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Instantiate Form Model\n\t\t\tthis.model = new formModel;\n\t\t\t// Set our form ID\n\t\t\tthis.model.set( 'id', preloadedFormData.id );\n\t\t\t// Set our field collection\n\t\t\tthis.model.set( 'fields', nfRadio.channel( 'fields' ).request( 'get:collection' ) );\n\t\t\t// Set our actions collection\n\t\t\tthis.model.set( 'actions', nfRadio.channel( 'actions' ).request( 'get:collection' ) );\n\t\t\t// Set our settings collection\n\t\t\tthis.model.set( 'settings', nfRadio.channel( 'settings' ).request( 'get:settings' ) );\n\t\t\t// Respond to requests for form data.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:formData', this.getFormData, this );\n\t\t},\n\n\t\t/**\n\t\t * Return form data model.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return backbone.model\n\t\t */\n\t\tgetFormData: function() {\n\t\t\treturn this.model;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles changing our preview link when we change the 'clean' state of our app.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/previewLink',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for events that would change our preview link\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'before:sendChanges', this.disablePreview, this );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'response:sendChanges', this.enablePreview, this );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:clean', this.changePreviewNicename, this );\n\t\t},\n\n\t\t/**\n\t\t * Disable our preview link before we send data to update our preview.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tdisablePreview: function() {\n\t\t\t// Get our preview domain\n\t\t\tvar appDomains = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar preview = appDomains.get( 'preview' );\n\t\t\t// Set disabled to true. This will trigger the preview link view to redraw.\n\t\t\tpreview.set( 'disabled', true );\n\t\t},\n\n\t\t/**\n\t\t * Change the preview link text from \"Preview Form\" to \"Preview Changes\" or vice-versa\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  boolean \tclean app data state\n\t\t * @return void\n\t\t */\n\t\tchangePreviewNicename: function( clean ) {\n\t\t\t// Get our preview domain\n\t\t\tvar appDomains = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar preview = appDomains.get( 'preview' );\n\n\t\t\t// If we have unsaved changes, set our text to 'changes' otherwise, set it to 'form'\n\t\t\tif ( ! clean ) {\n\t\t\t\tvar nicename = 'Preview Changes';\n\t\t\t} else {\n\t\t\t\tvar nicename = 'Preview Form';\n\t\t\t}\n\n\t\t\tpreview.set( 'nicename', nicename );\n\t\t},\n\n\t\t/**\n\t\t * Enable our preview button.\n\t\t * This is triggered when we get a response from our preview update.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tenablePreview: function() {\n\t\t\t// Get our preview domain\n\t\t\tvar appDomains = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar preview = appDomains.get( 'preview' );\n\t\t\t// Set disabled to false. This will trigger the preview link view to redraw.\n\t\t\tpreview.set( 'disabled', false );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel for requests to change the current domain.\n *\n * The app menu and the main submenu both contain clickable links that change the current domain.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/menuButtons',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:publish', this.publish );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:viewChanges', this.viewChanges );\n\t\t},\n\n\t\tpublish: function() {\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db', 'publish' );\n\t\t},\n\n\t\tviewChanges: function() {\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'viewChanges', { collection: changeCollection } );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model that represents our change data.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/changeModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tdisabled: false\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Holds all of our change models.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/changeCollection',['models/app/changeModel'], function( domainModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: domainModel,\n\t\tcomparator: function( model ) {\n\t\t\tvar id = parseInt( model.cid.replace( 'c', '' ) );\n\t\t\treturn -id;\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Track settings changes across our app.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/trackChanges',['models/app/changeCollection', 'models/app/changeModel'], function( changeCollection, ChangeModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.collection = new changeCollection();\n\t\t\t// Respond to any requests to add a change directly.\n\t\t\tnfRadio.channel( 'changes' ).reply( 'register:change', this.registerChange, this );\n\t\t\t// Respond to requests for the change collection\n\t\t\tnfRadio.channel( 'changes' ).reply( 'get:changeCollection', this.getCollection, this );\n\t\t\t// Listen for changes in our clean state. If it goes to clean, clear our collection.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:clean', this.maybeResetCollection );\n\t\t},\n\n\t\tregisterChange: function( action, model, changes, label, data ) {\n\t\t\tvar data = typeof data !== 'undefined' ? data : {};\n\t\t\tif ( 'undefined' == typeof label.dashicon ) {\n\t\t\t\tlabel.dashicon = 'admin-generic';\n\t\t\t}\n\t\t\tvar changeModel = new ChangeModel({\n\t\t\t\taction: action,\n\t\t\t\tmodel: model,\n\t\t\t\tchanges: changes,\n\t\t\t\tlabel: label,\n\t\t\t\tdata: data\t\t\n\t\t\t} );\n\t\t\tthis.collection.add( changeModel );\n\t\t\treturn changeModel;\n\t\t},\n\n\t\tgetCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tmaybeResetCollection: function( clean ) {\n\t\t\tif ( clean ) {\n\t\t\t\tthis.collection.reset();\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define( 'controllers/app/undoChanges',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'click:undoChanges', this.undoChanges, this );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'click:undoSingle', this.undoSingle, this );\n\t\t},\n\n\t\tundoChanges: function() {\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\tchangeCollection.sort();\n\t\t\tvar that = this;\n\t\t\t_.each( changeCollection.models, function( change ) {\n\t\t\t\tthat.undoSingle( change, true );\n\t\t\t} );\n\t\t\tchangeCollection.reset();\n\t\t\t// Update preview.\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\t\t\t\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', true );\n\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t},\n\n\t\tundoSingle: function( change, undoAll ) {\n\t\t\tnfRadio.channel( 'changes' ).request( 'undo:' + change.get( 'action' ), change, undoAll );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens for our update:db response and replaces tmp ids with new ids if we were performing the publish action.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/publishResponse',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our app channel for the updateDB response.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'response:updateDB', this.publishResponse );\n\t\t},\n\n\t\tpublishResponse: function( response ) {\n\t\t\t// If we aren't performing a publish action, bail.\n\t\t\tif ( 'publish' !== response.action ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\t// Check to see if we have any new ids. \n\t\t\tif ( 'undefined' != typeof response.data.new_ids ) {\n\n\t\t\t\t// If we have any new fields, update their models with the new id.\n\t\t\t\tif ( 'undefined' != typeof response.data.new_ids.fields ) {\n\t\t\t\t\t_.each( response.data.new_ids.fields, function( newID, oldID ) {\n\t\t\t\t\t\tvar field = nfRadio.channel( 'fields' ).request( 'get:field', oldID );\n\t\t\t\t\t\tif ( field ) {\n\t\t\t\t\t\t\tfield.set( 'id', newID );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// If we have any new actions, update their models with the new id.\n\t\t\t\tif ( 'undefined' != typeof response.data.new_ids.actions ) {\n\t\t\t\t\t_.each( response.data.new_ids.actions, function( newID, oldID ) {\n\t\t\t\t\t\tvar action = nfRadio.channel( 'actions' ).request( 'get:action', oldID );\n\t\t\t\t\t\tif ( action ) {\n\t\t\t\t\t\t\taction.set( 'id', newID );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'loading', false );\n\t\t\tnfRadio.channel( 'app' ).trigger( 'change:loading' );\n\n\t\t\t// Mark our app as clean. This will disable the publish button and fire anything else that cares about the state.\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', true );\n\t\t}\n\t\t\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel for requests to change the current domain.\n *\n * The app menu and the main submenu both contain clickable links that change the current domain.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/changeDomain',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for both menu and submenu clicks.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:menu', this.changeAppDomain );\n\t\t\t// Reply to specific requests to change the domain\n\t\t\tnfRadio.channel( 'app' ).reply( 'change:currentDomain', this.changeAppDomain, this );\n\t\t},\n\n\t\tchangeAppDomain: function( e, model ) {\n\t\t\t/*\n\t\t\t * If we are passed a model, use that model.\n\t\t\t * Otherwise, get the domain from the event target data.\n\t\t\t */ \n\t\t\tif ( 'undefined' == typeof model ) {\n\t\t\t\tvar domainID = jQuery( e.target ).data( 'domain' );\n\t\t\t\tvar model = nfRadio.channel( 'app' ).request( 'get:domainModel', domainID );\n\t\t\t}\n\t\t\t// If a drawer is open, close it.\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'get:currentDrawer' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t}\n\t\t\t/*\n\t\t\t * If we aren't dealing with an external url (such as preview), update our app data\n\t\t\t * and trigger a radio message saying we've changed the domain.\n\t\t\t */ \n\t\t\tif ( 0 == model.get( 'url' ).length ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:currentDomain', model );\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'change:currentDomain', model );\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Modify the user's browser history when they click on a domain\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/pushstate',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.changePushState );\n\t\t},\n\n\t\tchangePushState: function() {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\thistory.pushState( null, null, window.location.href + '&domain=' + currentDomain.get( 'id' ) );\n\t\t\tvar reExp = /domain=\\\\d+/;\n\t\t\tvar url = window.location.toString();\n\t\t\tvar newUrl = url.replace( reExp, '' );\n\t\t\tconsole.log( newUrl );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles our hotkey execution. Needs to be cleaned up and made more programmatic.\n * \n * Our hotkeys are defined by the domain that we're currently viewing. In each domain's model, there is a hotkey object.\n * \n * Currently too much hotkey data is hard-coded here.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/hotkeys',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// When we change our domain, change the hotkeys to those within that object.\n\t\t\tthis.listenTo( nfRadio.channel( 'main' ), 'render:main', this.changeHotkeys );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'opened', this.changeHotkeys );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'render:settingGroup', this.changeHotkeys );\n\t\t\t// Currently, these are the functions that run when the new field or new action hotkey is pressed.\n\t\t\t// TODO: move these into a config module or into something more programmatic and scalable.\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'add:newField', this.addNewField );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'add:newAction', this.addNewAction );\n\t\t\t// Same as above, these functions need to be moved into a more modular/programmatic solution.\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'changeDomain:fields', this.changeDomainFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'changeDomain:actions', this.changeDomainActions );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'changeDomain:settings', this.changeDomainSettings );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'close:drawer', this.closeDrawer );\n\t\t},\n\n\t\tchangeHotkeys: function() {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tjQuery( document ).off( '.nfDomainHotkeys' );\n\t\t\tjQuery( 'input' ).off( '.nfDomainHotkeys' );\n\t\t\tif ( currentDomain.get( 'hotkeys' ) ) {\n\t\t\t\tjQuery.each( currentDomain.get( 'hotkeys' ), function( hotkey, msg ) {\n\t\t\t\t\tjQuery( document ).on( 'keydown.nfDomainHotkeys', null, hotkey, function( e ) {\n\t\t\t\t\t\tnfRadio.channel( 'hotkeys' ).trigger( msg, e );\n\t\t\t\t\t} );\n\t\t\t\t\tjQuery( 'input' ).on( 'keydown.nfDomainHotkeys', null, hotkey, function( e ) {\n\t\t\t\t\t\tnfRadio.channel( 'hotkeys' ).trigger( msg, e );\n\t\t\t\t\t} );\n\t\t\t\t\tjQuery( 'textarea' ).on( 'keydown.nfDomainHotkeys', null, hotkey, function( e ) {\n\t\t\t\t\t\tnfRadio.channel( 'hotkeys' ).trigger( msg, e );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\taddNewField: function() {\n\t\t\tif ( 'addField' != nfRadio.channel( 'app' ).request( 'get:currentDrawer' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'addField' );\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t}\n\t\t\t\n\t\t},\n\n\t\taddNewAction: function() {\n\t\t\tif ( 'addAction' != nfRadio.channel( 'app' ).request( 'get:currentDrawer' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'addAction' );\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t}\n\t\t},\n\n\t\tchangeDomainFields: function() {\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar fieldsDomain = appDomainCollection.get( 'fields' );\n\t\t\tnfRadio.channel( 'app' ).request( 'change:currentDomain', {}, fieldsDomain );\n\t\t},\n\n\t\tchangeDomainActions: function() {\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar actionsDomain = appDomainCollection.get( 'actions' );\n\t\t\tnfRadio.channel( 'app' ).request( 'change:currentDomain', {}, actionsDomain );\n\t\t},\n\n\t\tchangeDomainSettings: function() {\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar settingsDomain = appDomainCollection.get( 'settings' );\n\t\t\tnfRadio.channel( 'app' ).request( 'change:currentDomain', {}, settingsDomain );\n\t\t},\n\n\t\tcloseDrawer: function() {\n\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Change the clean state of our app when settings are changed.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/cleanState',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Set an array of field model attributes to ignore.\n\t\t\t * This list will be filtered just before we ignore anything.\n\t\t\t */ \n\t\t\tthis.ignoreAttributes = [\n\t\t\t\t'editActive'\n\t\t\t];\n\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'update:setting', this.setAppClean );\n\t\t},\n\n\t\tsetAppClean: function( model ) {\n\t\t\tfor( var attr in model.changedAttributes() ) {\n\t\t\t\tvar changedAttr = attr;\n\t\t\t\tvar after = model.changedAttributes()[ attr ];\n\t\t\t}\n\n\t\t\tvar ignoreAttributes = nfRadio.channel( 'undo-' + model.get( 'type' ) ).request( 'ignore:attributes', this.ignoreAttributes ) || this.ignoreAttributes;\n\t\t\t\n\t\t\tif ( -1 != this.ignoreAttributes.indexOf( attr ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * All of the core undo functions. Listens on the 'changes' channel for an undo request.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/coreUndo',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:changeSetting', this.undoChangeSetting, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:addObject', this.undoAddObject, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:removeObject', this.undoRemoveObject, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:duplicateObject', this.undoDuplicateObject, this );\n\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:sortFields', this.undoSortFields, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:addListOption', this.undoAddListOption, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:removeListOption', this.undoRemoveListOption, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:sortListOptions', this.undoSortListOptions, this );\n\t\t},\n\n\t\t/**\n\t\t * Undo settings that have been changed.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoChangeSetting: function( change, undoAll ) {\n\t\t\tvar fieldModel = change.get( 'model' );\n\t\t\tvar changes = change.get( 'changes' );\n\t\t\tvar attr = changes.attr;\n\t\t\tvar before = changes.before;\n\t\t\tfieldModel.set( attr, before );\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\t/**\n\t\t * Undo adding a field or an action.\n\t\t * Loops through our change collection and removes any change models based upon the one we're removing.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoAddObject: function( change, undoAll ) {\n\t\t\tvar objectModel = change.get( 'model' );\n\t\t\tvar collection = change.get( 'data' ).collection;\n\n\t\t\tdelete collection.newIDs[ objectModel.get( 'id' ) ];\n\t\t\t\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tvar results = changeCollection.where( { model: objectModel } );\n\n\t\t\t\t_.each( results, function( model ) {\n\t\t\t\t\tif ( model !== change ) {\n\t\t\t\t\t\tchangeCollection.remove( model );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tcollection.remove( objectModel );\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\t\t\n\n\t\t/**\n\t\t * Undo adding a field or an action.\n\t\t * Loops through our change collection and removes any change models based upon the one we're removing.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoDuplicateObject: function( change, undoAll ) {\n\t\t\tvar objectModel = change.get( 'model' );\n\t\t\tvar objectCollection = change.get( 'data' ).collection;\n\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tvar results = changeCollection.where( { model: objectModel } );\n\n\t\t\t\t_.each( results, function( model ) {\n\t\t\t\t\tif ( model !== change ) {\n\t\t\t\t\t\tchangeCollection.remove( model );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\n\t\t\tobjectCollection.remove( objectModel );\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\t/**\n\t\t * Undo removing a field or an action.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoRemoveObject: function( change, undoAll ) {\n\t\t\tvar dataModel = change.get( 'model' );\n\t\t\tvar collection = change.get( 'data' ).collection;\n\n\t\t\tnfRadio.channel( dataModel.get( 'objectDomain' ) ).request( 'add', dataModel );\n\n\t\t\tdelete collection.removedIDs[ dataModel.get( 'id' ) ];\n\t\t\t\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tvar results = changeCollection.where( { model: dataModel } );\n\n\t\t\t\t_.each( results, function( model ) {\n\t\t\t\t\tif ( model !== change ) {\n\t\t\t\t\t\tmodel.set( 'disabled', false );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\n\t\t\t// Trigger a reset on our field collection so that our view re-renders\n\t\t\tcollection.trigger( 'reset', collection );\n\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\t/**\n\t\t * Undo field sorting.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoSortFields: function( change, undoAll ) {\n\t\t\tvar data = change.get( 'data' );\n\t\t\tvar fields = data.fields;\n\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t_.each( fields, function( changeModel ) {\n\t\t\t\tvar before = changeModel.before;\n\t\t\t\tvar fieldModel = changeModel.model;\n\t\t\t\tfieldModel.set( 'order', before );\n\t\t\t\tconsole.log( 'set ' + fieldModel.get( 'label' ) + ' to ' + before );\n\t\t\t} );\n\t\t\tconsole.log( fieldCollection.where( { label: 'Name' } ) );\n\t\t\tconsole.log( fieldCollection.where( { label: 'Email' } ) );\n\n\n\t\t\tfieldCollection.sort();\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoAddListOption: function( change, undoAll ) {\n\t\t\tvar model = change.get( 'model' );\n\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tvar results = changeCollection.where( { model: model } );\n\n\t\t\t\t_.each( results, function( changeModel ) {\n\t\t\t\t\tif ( changeModel !== change ) {\n\t\t\t\t\t\tchangeCollection.remove( changeModel );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\n\t\t\tmodel.collection.remove( model );\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoRemoveListOption: function( change, undoAll ) {\n\t\t\tvar model = change.get( 'model' );\n\t\t\tvar collection = change.get( 'data' ).collection;\n\t\t\tcollection.add( model );\n\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tvar results = changeCollection.where( { model: model } );\n\n\t\t\t\t_.each( results, function( model ) {\n\t\t\t\t\tif ( model !== change ) {\n\t\t\t\t\t\tmodel.set( 'disabled', false );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoSortListOptions: function( change, undoAll ) {\n\t\t\tvar data = change.get( 'data' );\n\t\t\tvar collection = data.collection;\n\t\t\t\n\t\t\tvar objModels = data.objModels;\n\n\t\t\t_.each( objModels, function( changeModel ) {\n\t\t\t\tvar before = changeModel.before;\n\t\t\t\tvar optionModel = changeModel.model;\n\t\t\t\toptionModel.set( 'order', before );\n\t\t\t} );\t\t\t\t\n\n\n\t\t\tcollection.sort();\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\t/**\n\t\t * If our undo action was requested to 'remove' the change from the collection, remove it.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tremove \tshould we remove this item from our change collection\n\t\t * @return void\n\t\t */\n\t\tmaybeRemoveChange: function( change, undoAll ) {\t\t\t\n\t\t\tvar undoAll = typeof undoAll !== 'undefined' ? undoAll : false;\n\t\t\tif ( ! undoAll ) {\n\t\t\t\t// Update preview.\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tchangeCollection.remove( change );\n\t\t\t\tif ( 0 == changeCollection.length ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', true );\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Returns a clone of a backbone model with all the attributes looped through so that collections contained within are propely cloned.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/cloneModelDeep',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'app' ).reply( 'clone:modelDeep', this.cloneModelDeep, this );\n\t\t},\n\n\t\tcloneModelDeep: function( model ) {\n\t\t\t// Temporary value used to store any new collections.\n\t\t\tvar replace = {};\n\t\t\t// Loop over every model attribute and if we find a collection, clone each model and instantiate a new collection.\n\t\t\t_.each( model.attributes, function( val, key ) {\n\t\t\t\t// console.log( val );\n\t\t\t\tif( val instanceof Backbone.Collection ) { // Is this a backbone collection?\n\t\t\t\t\t// Clone each model.\n\t\t\t\t\tvar models = val.map( function( model ) { return model.clone(); } );\n\t\t\t\t\tvar options = _.clone( val.options );\n\t\t\t\t\tvar copy = new val.constructor( models, options );\n\t\t\t\t\treplace[ key ] = copy;\n\t\t\t\t} else if ( val instanceof Backbone.Model ) { // Is this a backbone model?\n\t\t\t\t\treplace[ key ] = val.clone();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Clone our original model\n\t\t\tvar newModel = model.clone();\n\t\t\t// Overwrite any collections we created above.\n\t\t\t_.each( replace, function( val, key ) {\n\t\t\t\tnewModel.set( key, val );\n\t\t\t} );\n\n\t\t\treturn newModel;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define( 'views/app/drawer/itemSetting',['views/app/drawer/mergeTagsContent'], function( mergeTagsContentView ) {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-edit-setting-wrap',\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.dataModel = data.dataModel;\n\t\t},\n\n\t\tonBeforeRender: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'before:renderSetting', this.model, this.dataModel );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.mergeTagsContentView = false;\n\t\t\tvar that = this;\n\n\t\t\tjQuery( this.el ).find( '.nf-help' ).each(function() {\n\t\t\t\tvar content = jQuery(this).next('.nf-help-text');\n\t\t\t\tjQuery( this ).jBox( 'Tooltip', {\n\t\t\t\t\tcontent: content,\n\t\t\t\t\tmaxWidth: 200,\n\t\t\t\t\ttheme: 'TooltipBorder',\n\t\t\t\t\ttrigger: 'click',\n\t\t\t\t\tcloseOnClick: true\n\t\t\t\t})\n\t\t    });\n\n\t\t\tjQuery( this.el ).find( '.merge-tags' ).each(function() {\n\t\t\t\tjQuery( this ).jBox( 'Tooltip', {\n\t\t\t\t\ttitle: 'Insert Merge Tag',\n\t\t\t\t\tcontent: jQuery( '.merge-tags-content' ),\n\t\t\t\t\ttrigger: 'click',\n\t\t\t\t\tposition: {\n\t\t\t\t\t\tx: 'center',\n\t\t\t\t\t\ty: 'bottom'\n\t\t\t\t\t},\n\t\t\t\t\tcloseOnClick: 'body',\n\t\t\t\t\tcloseOnEsc: true,\n\t\t\t\t\ttheme: 'TooltipBorder',\n\t\t\t\t\tmaxHeight: 200,\n\t\t\t\t\tonOpen: function() {\n\t\t\t\t\t\tvar currentElement = jQuery( that.el ).find( '.setting' );\n\t\t\t\t\t\tnfRadio.channel( 'mergeTags' ).request( 'update:currentElement', currentElement );\n\t\t\t\t\t\tnfRadio.channel( 'mergeTags' ).request( 'update:open', true );\n\t\t\t\t\t\tnfRadio.channel( 'drawer' ).request( 'prevent:close', 'merge-tags' );\n\t\t\t\t\t},\n\t\t\t\t\tonCloseComplete: function() {\n\t\t\t\t\t\tnfRadio.channel( 'mergeTags' ).request( 'update:open', false );\n\t\t\t\t\t\tnfRadio.channel( 'drawer' ).request( 'enable:close', 'merge-tags' );\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t    });\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t\t\tvar that = this;\n\t    \treturn {\n\t    \t\trenderSetting: function(){\n\t    \t\t\tif ( 'undefined' != typeof that.dataModel.get( this.name ) ) {\n\t    \t\t\t\tthis.value = that.dataModel.get( this.name );\n\t    \t\t\t} else {\n\t    \t\t\t\tthis.value = '';\n\t    \t\t\t}\n\n\t\t\t\t\treturn _.template( jQuery( '#nf-tmpl-edit-setting-' + this.type ).html(), this );\n\t\t\t\t},\n\n\t\t\t\trenderLabelClasses: function() {\n\t\t\t\t\treturn 'has-merge-tags';\n\t\t\t\t},\n\n\t\t\t\trenderWidth: function() {\n\t\t\t\t\tif ( 'undefined' != typeof this.width ) {\n\t\t\t\t\t\treturn this.width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn 'one-half';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderTooltip: function() {\n\t\t\t\t\tif ( this.help ) {\n\t\t\t\t\t\treturn '<a class=\"nf-help\" href=\"#\"><span class=\"dashicons dashicons-admin-comments\"></span></a><div class=\"nf-help-text\">' + this.help + '</div>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderMergeTags: function() {\n\t\t\t\t\tif ( this.use_merge_tags ) {\n\t\t\t\t\t\treturn '<span class=\"dashicons dashicons-list-view merge-tags\"></span>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tevents: {\n\t\t\t'change': 'changeSetting'\n\t\t},\n\n\t\tchangeSetting: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'change:setting', e, this.model, this.dataModel );\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n\n","/**\n * Returns the appropriate child view for our settings drawer.\n *\n * This enables settings types to register custom childviews for their settings.\n * The option-repeater setting for the list field is an example.\n * \n * @package Ninja Forms builder\n * @subpackage App - Edit Settings Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/getSettingChildView',['views/app/drawer/itemSetting'], function( itemSettingView ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests for field settings child views.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:settingChildView', this.getSettingChildView, this );\n\t\t},\n\n\t\t/**\n\t\t * Return the appropriate child setting view.\n\t\t *\n\t\t * @since  3.0\n\t\t * @param  backbone.model\tmodel \tField setting\n\t\t * @return backbone.view\n\t\t */\n\t\tgetSettingChildView: function( model ) {\n\t\t\t// Get our setting type.\n\t\t\tvar type = model.get( 'type' );\n\t\t\t// Request a setting childview from our setting type channel. (Setting type, not field type)\n\t\t\tvar settingChildView = nfRadio.channel( type ).request( 'get:settingChildView', model ) || itemSettingView;\n\t\t\t\n\t\t\treturn settingChildView\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Updates our model when the user changes a setting.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/changeSettingDefault',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests to update settings.\n\t\t\tnfRadio.channel( 'app' ).reply( 'change:setting', this.changeSetting, this );\n\n\t\t\t// Listen on our app channel for the change setting event. Fired by the setting view.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:setting', this.changeSetting, this );\n\t\t},\n\n\t\t/**\n\t\t * When we change our setting, update the model.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \t\t\te                event\n\t\t * @param  backbone.model \tsettingModel model that holds our field type settings info\n\t\t * @param  backbone.model \tdataModel       model that holds our field settings\n\t\t * @return void\n\t\t */\n\t\tchangeSetting: function( e, settingModel, dataModel ) {\n\t\t\tvar name = settingModel.get( 'name' );\n\t\t\tvar before = dataModel.get( name );\n\t\t\t// Sends out a request on the fields-type (fields-text, fields-checkbox, etc) channel to see if that field type needs to return a special value for saving.\n\t\t\tvar value = nfRadio.channel( settingModel.get( 'type' ) ).request( 'before:updateSetting', e, dataModel, name, settingModel );\n\t\t\t// If we didn't get a special field-type value, get the value from the event passed.\n\t\t\tif ( 'undefined' == typeof value ) {\n\t\t\t\tvalue = jQuery( e.target ).val();\n\t\t\t}\n\t\t\t// Update our field model with the new setting value.\n\t\t\tdataModel.set( name, value );\n\t\t\t// Register our setting change with our change tracker\n\t\t\tvar after = value;\n\t\t\t\n\t\t\tvar changes = {\n\t\t\t\tattr: name,\n\t\t\t\tbefore: before,\n\t\t\t\tafter: after\n\t\t\t}\n\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\n\t\t\tvar settingModel = nfRadio.channel( currentDomainID ).request( 'get:settingModel', name );\n\n\t\t\t/*\n\t\t\t * TODO: Make this more dynamic.\n\t\t\t * Currently, this is a very specific work-around. It should be more generalized.\n\t\t\t */\n\t\t\tif ( 'toggle' == settingModel.get( 'type' ) ) {\n\t\t\t\tif ( 1 == before ) {\n\t\t\t\t\tbefore = 'On';\n\t\t\t\t} else {\n\t\t\t\t\tbefore = 'Off';\n\t\t\t\t}\n\n\t\t\t\tif ( 1 == after ) {\n\t\t\t\t\tafter = 'On';\n\t\t\t\t} else {\n\t\t\t\t\tafter = 'Off';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar label = {\n\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\tchange: 'Changed ' + settingModel.get( 'label' ) + ' from ' + before + ' to ' + after\n\t\t\t};\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'changeSetting', dataModel, changes, label );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define( 'views/app/drawer/typeSettingFieldset',['views/app/drawer/itemSetting'], function( itemSettingView ) {\n\tvar view = Marionette.CompositeView.extend( {\n\t\ttemplate: '#nf-tmpl-edit-setting-wrap',\n\t\tchildView: itemSettingView,\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.collection = this.model.get( 'settings' );\n\t\t\tthis.childViewOptions = { dataModel: data.dataModel };\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t    \treturn {\n\t    \t\trenderSetting: function(){\n\t\t\t\t\treturn _.template( jQuery( '#nf-tmpl-edit-setting-' + this.type ).html(), this );\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\trenderWidth: function() {\n\t\t\t\t\tif ( 'undefined' != typeof this.width ) {\n\t\t\t\t\t\treturn this.width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn 'one-half';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( '.nf-field-sub-settings' ).append( childView.el );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","/**\n * Model that represents our setting.\n *\n * When the model is created, we trigger the init event in two radio channels.\n *\n * This lets specific types of settings modify the model before anything uses it.\n *\n * Fieldset, for instance, uses this hook to instantiate its settings as a collection.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/settingModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tsettings: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Send out two messages saying that we've initialized a setting model.\n\t\t\tnfRadio.channel( 'app' ).trigger( 'init:settingModel', this );\n\t\t\tif ( 'undefined' == typeof this.get( 'type' ) ) {\n\t\t\t\t// console.log( this );\n\t\t\t}\n\t\t\tnfRadio.channel( this.get( 'type' ) ).trigger( 'init:settingModel', this );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collections of settings for each field type.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/settingCollection',['models/app/settingModel'], function( settingModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: settingModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Handles actions related to field settings that use a fieldset\n * \n * @package Ninja Forms builder\n * @subpackage Fields - Edit Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/fieldset',['views/app/drawer/typeSettingFieldset','models/app/settingCollection'], function( fieldsetView, settingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'fieldset' ).reply( 'get:settingChildView', this.getSettingChildView, this );\n\t\t\t// When a list type field is initialized, create an option collection.\n\t\t\tthis.listenTo( nfRadio.channel( 'fieldset' ), 'init:settingModel', this.createSettingsCollection );\n\t\t},\n\n\t\tgetSettingChildView: function( model ) {\n\t\t\treturn fieldsetView;\n\t\t},\n\n\t\t/**\n\t\t * Instantiate settings collection when a fieldset type is initialized.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tmodel \tfield model being initialized\n\t\t * @return void\n\t\t */\n\t\tcreateSettingsCollection: function( model ) {\n\t\t\tmodel.set( 'settings', new settingCollection( model.get( 'settings' ) ) );\n\t\t},\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles actions related to our toggle field.\n * When we change the toggle, the setting value will be 'on' or ''.\n * We need to change this to 1 or 0.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - Edit Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/toggleSetting',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests for field setting filtering.\n\t\t\tnfRadio.channel( 'toggle' ).reply( 'before:updateSetting', this.updateSetting, this );\n\t\t},\n\n\t\t/**\n\t\t * Return either 1 or 0, depending upon the toggle position.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \t\t\te                event\n\t\t * @param  backbone.model \tfieldModel       field model\n\t\t * @param  string \t\t\tname             setting name\n\t\t * @param  backbone.model \tsettingTypeModel field type model\n\t\t * @return int              1 or 0\n\t\t */\n\t\tupdateSetting: function( e, fieldModel, name, settingTypeModel ) {\n\t\t\tif ( jQuery( e.target ).attr( 'checked' ) ) {\n\t\t\t\tvar value = 1;\n\t\t\t} else {\n\t\t\t\tvar value = 0;\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens for clicks on our action item action buttons.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - Main Sortable\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/itemControls',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for clicks to edit, delete, duplicate actions.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:edit', this.clickEdit );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:delete', this.clickDelete );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:duplicate', this.clickDuplicate );\n\n\t\t\t// Listen for our drawer close and remove our active edit state\n\t\t},\n\n\t\t/**\n\t\t * Open a drawer with our action model for editing settings.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te     \tevent\n\t\t * @param  backbone.model \tmodel \taction model\n\t\t * @return void\n\t\t */\n\t\tclickEdit: function( e, model ) {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\t\t\tnfRadio.channel( currentDomainID ).request( 'clear:editActive' );\n\t\t\tmodel.set( 'editActive', true );\n\t\t\tvar type = nfRadio.channel( currentDomainID ).request( 'get:type' , model.get( 'type' ) );\n\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'editSettings', { model: model, groupCollection: type.get( 'settingGroups' ) } );\n\t\t},\n\n\t\t/**\n\t\t * Delete a action model from our collection\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te     \tevent\n\t\t * @param  backbone.model \tmodel \taction model\n\t\t * @return void\n\t\t */\n\t\tclickDelete: function( e, dataModel ) {\n\t\t\tvar newModel = nfRadio.channel( 'app' ).request( 'clone:modelDeep', dataModel );\n\n\t\t\t// Add our action deletion to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\tchange: 'Removed',\n\t\t\t\tdashicon: 'dismiss'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: dataModel.collection\n\t\t\t};\n\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\tvar results = changeCollection.where( { model: dataModel } );\n\n\t\t\t_.each( results, function( changeModel ) {\n\t\t\t\tvar data = changeModel.get( 'data' );\n\t\t\t\tif ( 'undefined' != typeof data.fields ) {\n\t\t\t\t\t_.each( data.fields, function( field, index ) {\n\t\t\t\t\t\tif ( field.model == dataModel ) {\n\t\t\t\t\t\t\tdata.fields[ index ].model = newModel;\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\tchangeModel.set( 'data', data );\n\t\t\t\tchangeModel.set( 'model', newModel );\n\t\t\t\tchangeModel.set( 'disabled', true );\n\t\t\t} );\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'removeObject', newModel, null, label, data );\n\t\t\t\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\t\t\tnfRadio.channel( currentDomainID ).request( 'delete', dataModel );\n\t\t},\n\n\t\t/**\n\t\t * Duplicate a action within our collection, adding the word \"copy\" to the label.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te     \tevent\n\t\t * @param  backbone.model \tmodel \taction model\n\t\t * @return void\n\t\t */\n\t\tclickDuplicate: function( e, model ) {\n\t\t\tvar newModel = nfRadio.channel( 'app' ).request( 'clone:modelDeep', model );\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\n\t\t\t// Change our label.\n\t\t\tnewModel.set( 'label', newModel.get( 'label' ) + ' Copy' );\n\t\t\t// Update our ID to the new tmp id.\n\t\t\tvar tmpID = nfRadio.channel( currentDomainID ).request( 'get:tmpID' );\n\t\t\tnewModel.set( 'id', tmpID );\n\t\t\t// Add new model.\n\t\t\tnfRadio.channel( currentDomainID ).request( 'add', newModel );\n\t\t\t// Add our action addition to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: model.get( 'objectType' ),\n\t\t\t\tlabel: model.get( 'label' ),\n\t\t\t\tchange: 'Duplicated',\n\t\t\t\tdashicon: 'admin-page'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: nfRadio.channel( currentDomainID ).request( 'get:collection' )\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'duplicateObject', newModel, null, label, data );\n\t\t\t\n\t\t\t// Update preview.\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model that represents our merge tags.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/mergeTagModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tactive: false\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collections of merge tags.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/mergeTagCollection',['models/app/mergeTagModel'], function( mergeTagModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: mergeTagModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Config file for our merge tags.\n *\n * this.collection represents all of our registered merge tags.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/mergeTags',[\n\t'models/app/mergeTagCollection'\n\t], function(\n\tmergeTagCollection\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.tagSectionCollection = new mergeTagCollection();\n\t\t\tvar that = this;\n\t\t\t_.each( mergeTags, function( tagSection ) {\n\t\t\t\tif ( tagSection.tags ) {\n\t\t\t\t\tvar tags = new mergeTagCollection( tagSection.tags );\n\t\t\t\t} else {\n\t\t\t\t\tvar tags = '';\n\t\t\t\t}\n\n\t\t\t\tthat.tagSectionCollection.add( {\n\t\t\t\t\tid: tagSection.id,\n\t\t\t\t\tlabel: tagSection.label,\n\t\t\t\t\ttags: tags\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\tvar tags = new mergeTagCollection();\n\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t_.each( fieldCollection.models, function( field ) {\n\t\t\t\ttags.add( {\n\t\t\t\t\tid: field.get( 'id' ),\n\t\t\t\t\tlabel: field.get( 'label' ),\n\t\t\t\t\ttag: '{field:' + field.get( 'id' ) + '}'\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\tthis.tagSectionCollection.get( 'fields' ).set( 'tags', tags );\n\n\t\t\tthis.currentElement = {};\n\t\t\tthis.open = false;\n\n\t\t\tthis.listenTo( nfRadio.channel( 'mergeTags' ), 'click:mergeTag', this.clickMergeTag );\n\t\t\t/*\n\t\t\t * TODO: Hotkey support for adding tags.\n\t\t\t *\n\t\t\t\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'open:mergeTags', this.openMergeTags );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'up:mergeTags', this.upMergeTags );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'down:mergeTags', this.downMergeTags );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'return:mergeTags', this.returnMergeTags );\n\t\t\t*/\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'update:currentElement', this.updateCurrentElement, this );\n\n\t\t\t// Listen for requests for our mergeTag collection.\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'get:mergeTags', this.getMergeTags, this );\n\n\t\t\t/*\n\t\t\t * TODO: Hotkey support for adding tags.\n\t\t\t *\n\t\t\t\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'update:open', this.updateOpen, this );\n\t\t\t*/\n\t\t},\n\n\t\tclickMergeTag: function( e, tagModel ) {\n\t\t\tvar currentValue = jQuery( this.currentElement ).val();\n\t\t\tvar currentPos = jQuery( this.currentElement ).caret();\n\t\t\tvar newPos = currentPos + tagModel.get( 'tag' ).length;\n\t\t\tcurrentValue = currentValue.substr( 0, currentPos ) + tagModel.get( 'tag' ) + currentValue.substr( currentPos );\n\t\t\tjQuery( this.currentElement ).val( currentValue ).caret( newPos ).trigger( 'change' );\n\t\t},\n\n\t\topenMergeTags: function( e ) {\n\t\t\tif ( 'TEXTAREA' == jQuery( e.target )[0].tagName || 'INPUT' == jQuery( e.target )[0].tagName ) {\n\t\t\t\tjQuery( e.target ).parent().find( '.merge-tags' ).click();\n\t\t\t}\n\t\t},\n\n\t\treturnMergeTags: function( e ) {\n\t\t\tif ( this.open ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tvar currentModel = this.fields.where( { 'active': true } )[0];\n\t\t\t\tif ( currentModel ) {\n\t\t\t\t\tthis.clickMergeTag( e, currentModel );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tupMergeTags: function( e ) {\n\t\t\tif ( this.open ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.changeActiveTag( 'up' );\n\t\t\t}\n\t\t},\n\n\t\tdownMergeTags: function( e ) {\n\t\t\tif ( this.open ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.changeActiveTag( 'down' );\n\t\t\t}\n\t\t},\n\n\t\tchangeActiveTag: function( dir ) {\n\t\t\tif ( 'down' == dir ) {\n\t\t\t\tvar inc = 1;\n\t\t\t} else {\n\t\t\t\tvar inc = -1\n\t\t\t}\n\t\t\t// First, check to see if a field is currently active.\n\t\t\tif( 0 < this.fields.where( { 'active': true } ).length ) {\n\t\t\t\tvar currentModel = this.fields.where( { 'active': true } )[0];\n\t\t\t\tvar currentIndex = this.fields.indexOf( currentModel );\n\t\t\t\tcurrentModel.set( 'active', false );\n\n\t\t\t\tvar nextModel = this.fields.models[ currentIndex + inc ];\n\t\t\t\tif ( nextModel ) {\n\t\t\t\t\tnextModel.set( 'active', true );\n\t\t\t\t} else {\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if ( 0 < this.fields.where( { 'active': true } ) ) { // There aren't any active fields. Check for active system tags.\n\t\t\t\tconsole.log( 'system' );\n\t\t\t} else if ( 0 < this.userInfo.where( { 'active': true } ) ) { // No active user info LIs.\n\t\t\t\tconsole.log( 'userinfo' );\n\t\t\t} else { // No active LIs. We haven't made any active yet, or we've gotten to the bottom of the list.\n\t\t\t\t// Make sure that we have fields\n\t\t\t\tif ( 0 < this.fields.models.length ) {\n\t\t\t\t\t// Set our first field to active.\n\t\t\t\t\tthis.fields.models[0].set( 'active', true );\n\t\t\t\t} else {\n\t\t\t\t\t// Set our first system model to active.\n\t\t\t\t\tthis.system.models[0].set( 'active', true );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tupdateCurrentElement: function( element ) {\n\t\t\tthis.currentElement = element;\n\t\t},\n\n\t\tgetMergeTags: function() {\n\t\t\treturn this.tagSectionCollection;\n\t\t},\n\n\t\tupdateOpen: function( open ) {\n\t\t\tthis.open = open;\n\t\t\t_.each( this.tagSectionCollection.get( 'fields' ).models, function( model ) {\n\t\t\t\tmodel.set( 'active', false );\n\t\t\t} );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel for settings views being rendered.\n *\n * If we're about to render a setting model that's a select and has 'fields' as the 'fill' setting, add all our field models to its options.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/itemSettingFill',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for messages that are fired before a setting view is rendered.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'before:renderSetting', this.beforeRenderSetting );\n\t\t},\n\n\t\tbeforeRenderSetting: function( settingModel, dataModel ) {\n\t\t\tif ( 'fields' == settingModel.get( 'fill' ) ) {\n\t\t\t\t\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model for our field type\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/typeModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our field type models. \n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/typeCollection',['models/app/typeModel'], function( typeModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: typeModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Model that represents our type settings groups.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/settingGroupModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tdisplay: false\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection of our type settings groups.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/settingGroupCollection',['models/app/settingGroupModel'], function( settingGroupModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: settingGroupModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Model that represents our field type section on the add new field drawer.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/typeSectionModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tclasses: ''\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our field models.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/typeSectionCollection',['models/fields/typeSectionModel'], function( typeSectionModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: typeSectionModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Creates and stores a collection of field types. This includes all of the settings shown when editing a field.\n *\n * 1) Create our settings sections config\n * 2) Loops over our preloaded data and adds that to our field type collection\n *\n * Also responds to requests for data about field types\n *\n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/types',[\n\t'models/app/typeCollection',\n\t'models/app/settingCollection',\n\t'models/app/settingGroupCollection',\n\t'models/fields/typeSectionCollection'\n\t], function(\n\tfieldTypeCollection,\n\tsettingCollection,\n\tfieldTypeSettingGroupCollection,\n\tfieldTypeSectionCollection\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our field type collection\n\t\t\tthis.collection = new fieldTypeCollection();\n\t\t\t// Config for our settings sections\n\t\t\tthis.fieldTypeSections = new fieldTypeSectionCollection( fieldTypeSections );\n\n\t\t\t// Since we want to access the \"this\" context later, we assign it to that so it isn't overwritten\n\t\t\tvar that = this;\n\n\t\t\t// Loop through the field type data variable and add it to the field type collection array\n\t\t\t_.each( fieldTypeData, function ( type ) {\n\t\t\t\tvar settingGroups = new fieldTypeSettingGroupCollection();\n\t\t\t\t// Loop through the settings groups within this field type and create an object to add to the groups collection.\n\t\t\t\t_.each( type.settingGroups, function( group ) {\n\t\t\t\t\tvar groupTmp = {\n\t\t\t\t\t\tlabel: group.label,\n\t\t\t\t\t\tdisplay: group.display,\n\t\t\t\t\t\tsettings: new settingCollection( group.settings ),\n\t\t\t\t\t}\n\t\t\t\t\t// Add the tmp object to our setting groups collection\n\t\t\t\t\tsettingGroups.add( groupTmp );\n\t\t\t\t} );\n\n\t\t\t\t// Add our field type to the appropriate drawer section.\n\t\t\t\tif ( 'undefined' != typeof that.fieldTypeSections.get( type.section ) ) {\n\t\t\t\t\tthat.fieldTypeSections.get( type.section ).get( 'fieldTypes' ).push( type.id );\n\t\t\t\t}\n\n\t\t\t\t// Build an object for this type that we can add to our field type collection\n\t\t\t\tvar fieldType = {\n\t\t\t\t\tid: type.id,\n\t\t\t\t\tnicename: type.nicename,\n\t\t\t\t\talias: type.alias,\n\t\t\t\t\tparentType: type.parentType,\n\t\t\t\t\tsettingGroups: settingGroups,\n\t\t\t\t\tsettingDefaults: type.settingDefaults\n\t\t\t\t}\n\t\t\t\t// Add tmp object to our field type collection\n\t\t\t\tthat.collection.add( fieldType );\n\t\t\t} );\n\n\t\t\t// Respond to requests to get field type, collection, settings, and sections\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:type', this.getFieldType, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:typeCollection', this.getTypeCollection, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:typeSections', this.getTypeSections, this );\n\t\t\t// Listen to clicks on field types\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'click:fieldType', this.addStagedField );\n\t\t},\n\n\t\t/**\n\t\t * Return a field type by id\n\t\t *\n\t\t * @since  3.0\n\t\t * @param  string \t\t\tid \tfield type\n\t\t * @return backbone.model    \tfield type model\n\t\t */\n\t\tgetFieldType: function( id ) {\n        \treturn this.collection.get( id );\n        },\n\n        /**\n         * Return the entire field type collection\n         *\n         * @since  3.0\n         * @param  string \t\t\t\tid \t[description]\n         * @return backbone.collection    \tfield type collection\n         */\n\t\tgetTypeCollection: function( id ) {\n        \treturn this.collection;\n        },\n\n        /**\n         * Add a field type to our staging area when the field type button is clicked.\n         *\n         * @since 3.0\n         * @param Object e event\n         * @return void\n         */\n        addStagedField: function( e ) {\n        \tvar type = jQuery( e.target ).data( 'id' );\n        \tnfRadio.channel( 'fields' ).request( 'add:stagedField', type );\n        },\n\n        /**\n         * Return our field type settings sections\n         *\n         * @since  3.0\n         * @return backbone.collection field type settings sections\n         */\n        getTypeSections: function() {\n            return this.fieldTypeSections;\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Handles the logic for our field type draggables.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldTypeDrag',[], function( ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our field type draggables and run the appropriate function.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:type', this.startDrag );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:type', this.stopDrag );\n\t\t\t/*\n\t\t\t * Respond to requests for our helper clone.\n\t\t\t * This is used by other parts of the application to modify what the user is dragging in real-time.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'drawer-addField' ).reply( 'get:typeHelperClone', this.getCurrentDraggableHelperClone, this );\n\t\t},\n\n\t\t/**\n\t\t * When we start dragging:\n\t\t * get our drawer element\n\t\t * set its overflow property to visible !important -> forces the type drag element to be on at the top of the z-index.\n\t\t * get our main element\n\t\t * est its overflow propery to visible !important -> forces the type drag element to be on top of the z-index.\n\t\t * set our dragging helper clone\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  object context \tThis function is going to be called from a draggable. Context is the \"this\" reference to the draggable.\n\t\t * @param  object ui      \tObject sent by jQuery UI draggable.\n\t\t * @return void\n\t\t */\n\t\tstartDrag: function( context, ui ) {\n\t\t\tthis.drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tthis.mainEl = nfRadio.channel( 'app' ).request( 'get:mainEl' );\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\n\t\t\tthis.draggableHelperClone = jQuery( ui.helper ).clone();\n\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging, reset our overflow property to hidden !important.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  object context \tThis function is going to be called from a draggable. Context is the \"this\" reference to the draggable.\n\t\t * @param  object ui      \tObject sent by jQuery UI draggable.\n\t\t * @return {[type]}         [description]\n\t\t */\n\t\tstopDrag: function( context, ui ) {\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t},\n\n\t\tgetCurrentDraggableHelperClone: function() {\n\t\t\treturn this.draggableHelperClone;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles the dragging of our field staging area\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/stagingDrag',[], function( ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for the start and stop of our field staging dragging\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:fieldStaging', this.startDrag );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:fieldStaging', this.stopDrag );\n\t\t},\n\n\t\t/**\n\t\t * When the user starts dragging the staging area, we have to:\n\t\t * set the overflow property of the drawer to visible !important. If we don't, the button goes underneath the main section.\n\t\t * set the overflow proerty of the main to visible !important. If we don't, the dragged element goes underneath the drawer.\n\t\t * replace our helper with the stacked \"x fields\" template.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t context jQuery UI Draggable\n\t\t * @param  Object\t ui      jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstartDrag: function( context, ui ) {\n\t\t\tthis.drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tthis.mainEl = nfRadio.channel( 'app' ).request( 'get:mainEl' );\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\n\t\t\tvar stagedFields = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\t\t\tvar html = _.template( jQuery( '#nf-tmpl-staged-fields-drag' ).html(), { num: stagedFields.models.length } );\n\t\t\tjQuery( ui.helper ).html( html );\n\t\t\tjQuery( ui.helper ).prop( 'id', 'nf-staged-fields-drag' );\n\t\t\tjQuery( ui.item ).css( 'opacity', '0.7' );\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging the staging area, we have to set the overflow property to hidden !important\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t context jQuery UI Draggable\n\t\t * @param  Object\t ui      jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstopDrag: function( context, ui ) {\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles our saved fields type section.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/savedFieldsSection',['models/fields/typeSectionCollection'], function( fieldTypeSectionCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our collection for saved fields\n\t\t\tthis.collection = new fieldTypeSectionCollection( [\n\t\t\t\t{ \n\t\t\t\t\tid: 'saved',\n\t\t\t\t\tnicename: 'Saved Fields',\n\t\t\t\t\tclasses: 'nf-saved',\n\t\t\t\t\tfieldTypes: []\n\t\t\t\t}\n\t\t\t] );\n\t\t\t// Respond to requests for our saved fields collection.\n            nfRadio.channel( 'drawer' ).reply( 'get:savedFields', this.getSavedFields, this );\n\t\t},\n\n        getSavedFields: function() {\n            return this.collection;\n        }\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles most things related to our staging area:\n * 1) Creates a collection\n * 2) Listens for requests to CRUD items from the collection\n * 3) Adds our staged fields to the fields sortable when the drawer is closed\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/staging',['models/fields/stagingCollection'], function( stagingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our staged fields collection\n\t\t\tthis.collection = new stagingCollection();\n\t\t\t// Respond to requests related to our staging area.\n\t\t    nfRadio.channel( 'fields' ).reply( 'add:stagedField', this.addStagedField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'remove:stagedField', this.removeStagedField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:staging', this.getStagingCollection, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'sort:staging', this.sortStagedFields, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'clear:staging', this.clearStagedFields, this );\n\t\t\t// Listen to our remove staged field click event.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'click:removeStagedField', this.removeStagedField );\n\t\t\t// Listen to our event that fires just before a drawer is closed.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'before:closeDrawer', this.beforeCloseDrawer );\n\t\t},\n\n\t\tgetStagingCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\t/**\n\t\t * Add a field to our staging area\n\t\t * \n\t\t * @since 3.0\n\t\t * @param string type Type of field we're adding\n\t\t * @return tmpID\n\t\t */\n\t\taddStagedField: function( type ) {\n\t\t\t// Get our type model from the string.\n\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\t\t\t// Our tmp ID is a string with the time appended to make it unique.\n\t\t\tvar tmpID = 'nf-staged-field-' + jQuery.now();\n\t\t\t// Object that will be added to our staging collection.\n\t\t\tvar data = {\n\t\t\t\tid: tmpID,\n\t\t\t\t// i.e. firstname, textbox, etc.\n\t\t\t\tslug: fieldType.get( 'id' ),\n\t\t\t\t// i.e. First Name, Textbox, etc.\n\t\t\t\tnicename: fieldType.get( 'nicename' )\n\t\t\t}\n\t\t\t// \n\t\t\tthis.collection.add( data );\n\t\t\treturn tmpID;\n\t\t},\n\n\t\t/**\n\t\t * Remove a field from staging\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \t\t\te     \tEvent\n\t\t * @param  Backbone.model \tmodel \tstaged field model to remove\n\t\t * @return void\n\t\t */\n\t\tremoveStagedField: function( e, model ) {\n\t\t\tthis.collection.remove( model );\n\t\t},\n\n\t\t/**\n\t\t * Adds our staged fields to the main fields sortable before the drawer is closed.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tbeforeCloseDrawer: function() {\n\t\t\tif ( 0 != this.collection.models.length ) { // Make sure that we have models\n\t\t\t\t// Get our field collection.\n\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\n\t\t\t\tvar fields = [];\n\t\t\t\t// Loop through our staging collection\n\t\t\t\t_.each( this.collection.models, function( model ) {\n\t\t\t\t\t// Get a tmp ID for our new field.\n\t\t\t\t\tvar tmpID = nfRadio.channel( 'fields' ).request( 'get:tmpFieldID' );\n\t\t\t\t\t// Create an object that can be added as a model.\n\t\t\t\t\tvar tmpField = { id: tmpID, label: model.get( 'nicename' ), type: model.get( 'slug' ) };\n\t\t\t\t\t// Add our new field.\n\t\t\t\t\tvar newModel = nfRadio.channel( 'fields' ).request( 'add',  tmpField, false );\n\t\t\t\t\t// Add our field addition to our change log.\n\t\t\t\t\tvar label = {\n\t\t\t\t\t\tobject: 'Field',\n\t\t\t\t\t\tlabel: newModel.get( 'label' ),\n\t\t\t\t\t\tchange: 'Added',\n\t\t\t\t\t\tdashicon: 'plus-alt'\n\t\t\t\t\t};\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\tcollection: fieldCollection\n\t\t\t\t\t}\n\t\t\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addObject', newModel, null, label, data );\n\t\t\t\n\t\t\t\t} );\n\t\t\t\t// Trigger a reset on our field collection so that our view re-renders\n\t\t\t\tfieldCollection.trigger( 'reset', fieldCollection );\n\t\t\t\t// Empty the staging collection\n\t\t\t\tthis.collection.reset();\n\t\t\t}\n\t\t\t// Sort our fields.\n\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields' );\n\t\t},\n\n\t\t/**\n\t\t * Sort our staging area by the 'order' attribute.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tsortStagedFields: function() {\n\t\t\t// Get our staged fields sortable.\n\t\t\tvar sortableEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\t// Get the current order using jQuery sortable. Will be an array of IDs: [tmp-blah, tmp-blah]\n\t\t\tvar order = jQuery( sortableEl ).sortable( 'toArray' );\n\t\t\t// Loop through our models\n\t\t\t_.each( this.collection.models, function( field ) {\n\t\t\t\t// Search our order array for this field.\n\t\t\t\tvar search = field.get( 'id' );\n\t\t\t\tvar pos = order.indexOf( search );\n\t\t\t\t// Update our staged field model with the new order.\n\t\t\t\tfield.set( 'order', pos );\n\t\t\t} );\n\t\t\t// Sort our staging collection.\n\t\t\tthis.collection.sort();\n\t\t},\n\n\t\tclearStagedFields: function() {\n\t\t\tthis.collection.reset();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles actions related to our staged fields sortable.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/stagingSortable',['models/fields/stagingCollection'], function( stagingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our field type draggables\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:type', this.addActiveClass );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:type', this.removeActiveClass );\n\t\t\t// Listen to our sortable events\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'receive:stagedFields', this.receiveStagedFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'over:stagedFields', this.overStagedFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'out:stagedFields', this.outStagedFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'start:stagedFields', this.startStagedFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stop:stagedFields', this.stopStagedFields );\n\t\t},\n\n\t\t/**\n\t\t * Change our dropped field type helper so that it matches the other items in our sortable.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI item\n\t\t * @return void\n\t\t */\n\t\treceiveStagedFields: function( ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t\tvar type = jQuery( ui.item ).data( 'id' );\n\t\t\t\tvar tmpID = nfRadio.channel( 'fields' ).request( 'add:stagedField', type );\n\t\t\t\tjQuery( ui.helper ).prop( 'id', tmpID );\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t\tjQuery( ui.helper ).remove();\n\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'drop:fieldType', type );\t\t\t\t\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Add an active class to our sortable when a field type item is dragged\n\t\t * \n\t\t * @since 3.0\n\t\t */\n\t\taddActiveClass: function() {\n\t\t\tvar stagedFieldsEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\tjQuery( stagedFieldsEl ).addClass( 'nf-droppable-active' );\n\t\t},\n\n\t\t/**\n\t\t * Remove the active class from our sortable when the field type item is dropped.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tremoveActiveClass: function() {\n\t\t\tvar stagedFieldsEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\tjQuery( stagedFieldsEl ).removeClass( 'nf-droppable-active' );\n\t\t},\n\n\t\t/**\n\t\t * When the field type item is dragged over our sortable, we change the helper to match the sortable items.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te  event\n\t\t * @param  Object \tui jQuery UI Element\n\t\t * @return void\n\t\t */\n\t\toverStagedFields: function( e, ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t\tvar type = jQuery( ui.item ).data( 'id' );\n\t\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\t\t\t\tvar nicename = fieldType.get( 'nicename' );\n\t\t\t\tthis.currentHelper = ui.helper \n\t\t\t\tjQuery( ui.helper ).html( nicename + '<span class=\"dashicons dashicons-dismiss\"></span>' );\n\t\t\t\tjQuery( ui.helper ).removeClass( 'nf-one-third' ).addClass( 'nf-item-dock' ).css( { 'opacity': '0.8', 'width': '', 'height': '' } );\n\t\t\t\tvar sortableEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).addClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t},\n\n\t\t/**\n\t\t * When a field type item is moved away from our sortable, we change the helper to its previous appearance\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\toutStagedFields: function( ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t\tvar helperClone = nfRadio.channel( 'drawer-addField' ).request( 'get:typeHelperClone' );\t\n\t\t\t\tjQuery( this.currentHelper ).html( jQuery( helperClone ).html() );\n\t\t\t\tjQuery( this.currentHelper ).removeClass( 'nf-item-dock' ).addClass( 'nf-one-third' );\n\t\t\t\tvar sortableEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).removeClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t},\n\n\t\t/**\n\t\t * When a user starts to drag a sortable item, we need to set a few properties on the item and the helper.\n\t\t * These keep the original item in place while dragging and changes the opacity of the helper.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t ui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstartStagedFields: function( ui ) {\n\t\t\tjQuery( ui.item ).show();\n\t\t\tjQuery( ui.item ).css( { 'display': 'inline', 'opacity': '0.7' } );\n\t\t\tjQuery( ui.helper ).css( 'opacity', '0.5' );\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging a sortable item, remove our opacity setting and remove the helper item.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t ui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstopStagedFields: function( ui ) {\n\t\t\tjQuery( ui.item ).css( 'opacity', '' );\n\t\t\tjQuery( ui.helper ).remove();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Filters our field type collection.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/filterTypes',['models/fields/typeSectionCollection'], function( fieldTypeSectionCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our change filter event.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'change:filter', this.filterFieldTypes );\n\t\t},\n\n\t\t/**\n\t\t * Filter our field types in the add new field drawer\n\t\t * \n\t\t * Takes a search string and finds any field types that match either the name or alias.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string\t search \tstring being searched for\n\t\t * @param  object \t e      \tKeyup event\n\t\t * @return void\n\t\t */\n\t\tfilterFieldTypes: function( search, e ) {\n\t\t\t// Make sure that we aren't dealing with an empty string.\n\t\t\tif ( '' != jQuery.trim( search ) ) {\n        \t\tvar filtered = [];\n        \t\t/**\n        \t\t * Call the function that actually filters our collection,\n        \t\t * and then loop through our collection, adding each model to our filtered array.\n        \t\t */\n        \t\t_.each( this.filterCollection( search ), function( model ) {\n        \t\t\tfiltered.push( model.get( 'id' ) );\n        \t\t} );\n\n        \t\t// Create a new Field Type Section collection with the filtered array.\n        \t\tvar filteredSectionCollection = new fieldTypeSectionCollection( [\n\t\t\t\t{ \n\t\t\t\t\tid: 'filtered',\n\t\t\t\t\tnicename: 'Filtered Fields',\n\t\t\t\t\tfieldTypes: filtered\n\t\t\t\t}\n\t\t\t\t] );\n\n        \t\t// Request that our field types filter be applied, passing the collection we created above.\n        \t\tnfRadio.channel( 'drawer' ).trigger( 'filter:fieldTypes', filteredSectionCollection );\n        \t\t// If we've pressed the 'enter' key, add the field to staging and clear the filter.\n        \t\tif ( e.addObject ) {\n        \t\t\tif ( 0 < filtered.length ) {\n        \t\t\t\tnfRadio.channel( 'fields' ).request( 'add:stagedField', filtered[0] );\n        \t\t\t\tnfRadio.channel( 'drawer' ).request( 'clear:filter' );\n        \t\t\t}\n        \t\t}\n        \t} else {\n        \t\t// Clear our filter if the search text is empty.\n        \t\tnfRadio.channel( 'drawer' ).trigger( 'clear:filter' );\n        \t}\n        },\n\n        /**\n         * Search our field type collection for the search string.\n         * \n         * @since  3.0\n         * @param  string\t search \tstring being searched for\n         * @return backbone.collection\n         */\n        filterCollection: function( search ) {\n        \tsearch = search.toLowerCase();\n        \t// Get our list of field types\n        \tvar collection = nfRadio.channel( 'fields' ).request( 'get:typeCollection' );\n        \t/*\n        \t * Backbone collections have a 'filter' method that loops through every model,\n        \t * waiting for you to return true or false. If you return true, the model is kept.\n        \t * If you return false, it's removed from the filtered result.\n        \t */\n\t\t\tvar filtered = collection.filter( function( model ) {\n\t\t\t\tvar found = false;\n\t\t\t\t\n\t\t\t\t// If we match either the ID or nicename, return true.\n\t\t\t\tif ( model.get( 'id' ).toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t} else if ( model.get( 'nicename' ).toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * TODO: Hashtag searching. Doesn't really do anything atm.\n\t\t\t\t */\n\t\t\t\tif ( model.get( 'tags' ) && 0 == search.indexOf( '#' ) ) {\n\t\t\t\t\t_.each( model.get( 'tags' ), function( tag ) {\n\t\t\t\t\t\tif ( search.replace( '#', '' ).length > 1 ) {\n\t\t\t\t\t\t\tif ( tag.toLowerCase().indexOf( search.replace( '#', '' ) ) != -1 ) {\n\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// If we match any of the aliases, return true.\n\t\t\t\tif ( model.get( 'alias' ) ) {\n\t\t\t\t\t_.each( model.get( 'alias' ), function( alias ) {\n\t\t\t\t\t\tif ( alias.toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\treturn found;\n\t\t\t} );\n\t\t\t// Return our filtered collection.\n\t\t\treturn filtered;\n        }\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles all the actions/functions related to our main field sortable.\n * All of the actual logic for our sortable is held here; the view just calls it using nfRadio.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/sortable',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// When our field type buttons are dragged, we need to add or remove the active (blue) class.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:type', this.addActiveClass );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:type', this.removeActiveClass );\n\t\t\t// When our field staging is dragged, we need to add or remove the active (blue) class.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:fieldStaging', this.addActiveClass );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:fieldStaging', this.removeActiveClass );\n\t\t\t/*\n\t\t\t * Handles all the events fired by our sortable:\n\t\t\t * receive - dropped from type button or staging\n\t\t\t * over - dragging within or over the sortable\n\t\t\t * out - leaving the sortable\n\t\t\t * stop - stopped sorting/dragging\n\t\t\t * start - started sorting/dragging\n\t\t\t * update - stopped sorting/dragging and order has changed\n\t\t\t */\n\t\t\tnfRadio.channel( 'app' ).reply( 'receive:fieldsSortable', this.receiveFieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'over:fieldsSortable', this.overfieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'out:fieldsSortable', this.outFieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'stop:fieldsSortable', this.stopFieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'start:fieldsSortable', this.startFieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:fieldsSortable', this.updateFieldsSortable, this );\n\t\t},\n\n\t\t/**\n\t\t * Add the active class to our sortable so that its border is blue.\n\t\t * \n\t\t * @since 3.0\n\t\t * @return void\n\t\t */\n\t\taddActiveClass: function() {\n\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\tjQuery( sortableEl ).addClass( 'nf-droppable-active' );\t\n\t\t},\n\n\t\t/**\n\t\t * Remove the active class from our sortable\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tremoveActiveClass: function() {\n\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\tjQuery( sortableEl ).removeClass( 'nf-droppable-active' );\n\t\t},\n\n\t\t/**\n\t\t * Fires when we drop a field type button or staging onto our sortable\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\treceiveFieldsSortable: function( ui ) {\n\t\t\t/*\n\t\t\t * We have to do different things if we're dealing with a field type button or staging area.\n\t\t\t */ \n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) { // Field Type Button\n\t\t\t\t// Get our type string\n\t\t\t\tvar type = jQuery( ui.item ).data( 'id' );\n\t\t\t\t// Add a field (returns the tmp ID )\n\t\t\t\tvar tmpID = this.addField( type, false );\n\t\t\t\t/*\n\t\t\t\t * Update our helper id to the tmpID.\n\t\t\t\t * We do this so that when we sort, we have the proper ID.\n\t\t\t\t */ \n\t\t\t\tjQuery( ui.helper ).prop( 'id', tmpID );\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields' );\n\t\t\t\t// Remove the helper. Gets rid of a weird type artifact.\n\t\t\t\tjQuery( ui.helper ).remove();\n\t\t\t\t// Trigger a drop field type event.\n\t\t\t\tnfRadio.channel( 'fields' ).trigger( 'drop:fieldType', type );\n\t\t\t} else if ( jQuery( ui.item ).hasClass( 'nf-stage' ) ) { // Staging\n\t\t\t\t// Later, we want to reference 'this' context, so we define it here.\n\t\t\t\tvar that = this;\n\t\t\t\t// Make sure that our staged fields are sorted properly.\t\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t\t// Grab our staged fields.\n\t\t\t\tvar stagedFields = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\t\t\t\t// Get our current field order.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\t\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) { // Sortable isn't empty\n\t\t\t\t\t// If we're dealing with a sortable that isn't empty, get the order.\n\t\t\t\t\tvar order = jQuery( sortableEl ).sortable( 'toArray' );\n\t\t\t\t} else { // Sortable is empty\n\t\t\t\t\t// Sortable is empty, all we care about is our staged field draggable.\n\t\t\t\t\tvar order = ['nf-staged-fields-drag'];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Get the index of our droped element.\n\t\t\t\tvar insertedAt = order.indexOf( 'nf-staged-fields-drag' );\n\n\t\t\t\t// Loop through each staged fields model and insert a field.\n\t\t\t\tvar tmpIDs = [];\n\t\t\t\t_.each( stagedFields.models, function( field, index ) {\n\t\t\t\t\t// Add our field.\n\t\t\t\t\tvar tmpID = that.addField( field.get( 'slug' ) );\n\t\t\t\t\t// Add this newly created field to our order array.\n\t\t\t\t\torder.splice( insertedAt + index, 0, tmpID );\n\t\t\t\t} );\n\n\t\t\t\t// Remove our dropped element from our order array.\n\t\t\t\tvar insertedAt = order.indexOf( 'nf-staged-fields-drag' );\n\t\t\t\torder.splice( insertedAt, 1 );\n\t\t\t\t// Sort our fields\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields', order );\n\t\t\t\t// Clear our staging\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'clear:staging' );\n\t\t\t\t// Remove our helper. Fixes a weird artifact.\n\t\t\t\tjQuery( ui.helper ).remove();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Add a field.\n\t\t * Builds the object necessary to add a field to the field model collection.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string \ttype   field type\n\t\t * @param  boolean \tsilent add silently\n\t\t * @return string \ttmpID\n\t\t */\n\t\taddField: function( type, silent ) {\n\t\t\t// Default to false\n\t\t\tsilent = silent || false;\n\t\t\t// Get our field type model\n\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\t\t\t// Get our tmp ID\n\t\t\tvar tmpID = nfRadio.channel( 'fields' ).request( 'get:tmpFieldID' );\n\t\t\t// Add our field\n\t\t\tvar newModel = nfRadio.channel( 'fields' ).request( 'add',  { id: tmpID, label: fieldType.get( 'nicename' ), type: fieldType.get( 'id' ) }, silent );\n\t\t\t// Add our field addition to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: 'Field',\n\t\t\t\tlabel: newModel.get( 'label' ),\n\t\t\t\tchange: 'Added',\n\t\t\t\tdashicon: 'plus-alt'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: nfRadio.channel( 'fields' ).request( 'get:collection' )\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addObject', newModel, null, label, data );\n\t\t\t\n\t\t\treturn tmpID;\n\t\t},\n\n\t\t/**\n\t\t * When the user drags a field type or staging over our sortable, we need to modify the helper.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\toverfieldsSortable: function( ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) { // Field Type\n\t\t\t\t// String type\n\t\t\t\tvar type = jQuery( ui.helper ).data( 'id' );\n\t\t\t\t// Get our field type model.\n\t\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\t\t\t\t// Get our field type nicename.\n\t\t\t\tvar label = fieldType.get( 'nicename' );\n\t\t\t\t// Get our sortable element.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\t// Get our fieldwidth.\n\t\t\t\tvar fieldWidth = jQuery( sortableEl ).width();\n\t\t\t\t// Set our currentHelper to an object var so that we can access it later.\n\t\t\t\tthis.currentHelper = ui.helper;\n\t\t\t\t// Update our helper label.\n\t\t\t\tjQuery( ui.helper ).html( label );\n\t\t\t\t// Remove the field type draggable classes and add sortable classes.\n\t\t\t\tjQuery( ui.helper ).removeClass( 'nf-one-third' ).addClass( 'nf-field-wrap' ).css( { 'width': fieldWidth, 'height': '50px' } );\t\t\t\t\t\t\n\t\t\t\t// Add our hover class if our sortable has been initialized.\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).addClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t} else if ( jQuery( ui.item ).hasClass( 'nf-stage' ) ) { // Staging\n\t\t\t\t// Get our sortable, and if it's initialized add our hover class.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).addClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When the user moves a draggable outside of the sortable, we need to change the helper.\n\t\t * This returns the item to its pre-over state.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\toutFieldsSortable: function( ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) { // Field Type\n\t\t\t\t/*\n\t\t\t\t * Get our helper clone.\n\t\t\t\t * This will let us access the previous label and classes of our helper.\n\t\t\t\t */ \n\t\t\t\tvar helperClone = nfRadio.channel( 'drawer-addField' ).request( 'get:typeHelperClone' );\n\t\t\t\t// Set our helper label, remove our sortable class, and add the type class back to the type draggable.\n\t\t\t\tjQuery( this.currentHelper ).html( jQuery( helperClone ).html() );\n\t\t\t\tjQuery( this.currentHelper ).removeClass( 'nf-field-wrap' ).addClass( 'nf-one-third' ).css( { 'width': '', 'height': '' } );\n\t\t\t\t// Get our sortable and if it has been intialized, remove the droppable hover class.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).removeClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t} else if ( jQuery( ui.item ).hasClass( 'nf-stage' ) ) { // Staging\n\t\t\t\t// If we've initialized our sortable, remove the droppable hover class.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).removeClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging in the sortable:\n\t\t * remove our opacity setting\n\t\t * remove our ui helper\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstopFieldsSortable: function( ui ) {\n\t\t\tjQuery( ui.item ).css( 'opacity', '' )\n\t\t\tjQuery( ui.helper ).remove();\n\t\t},\n\n\t\t/**\n\t\t * When we start dragging in the sortable:\n\t\t * add an opacity setting of 0.5\n\t\t * show our item (jQuery hides the original item by default)\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstartFieldsSortable: function( ui ) {\n\t\t\t// If we aren't dragging an item in from types or staging, update our change log.\n\t\t\tif( ! jQuery( ui.item ).hasClass( 'nf-field-type-button' ) && ! jQuery( ui.item ).hasClass( 'nf-stage' ) ) { \n\t\t\t\tjQuery( ui.item ).css( 'opacity', '0.5' ).show();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Sort our fields when we change the order.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tupdateFieldsSortable: function( ui ) {\n\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields' );\n\n\t\t\t// If we aren't dragging an item in from types or staging, update our change log.\n\t\t\tif( ! jQuery( ui.item ).hasClass( 'nf-field-type-button' ) && ! jQuery( ui.item ).hasClass( 'nf-stage' ) ) { \n\n\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\tvar dragFieldID = jQuery( ui.item ).prop( 'id' ).replace( 'field-', '' );\n\t\t\t\tvar dragModel = fieldCollection.get( dragFieldID );\n\n\t\t\t\t// Add our change event to the change tracker.\n\t\t\t\tvar data = { fields: [] };\n\t\t\t\t_.each( fieldCollection.models, function( field ) {\n\t\t\t\t\tvar oldPos = field._previousAttributes.order;\n\t\t\t\t\tvar newPos = field.get( 'order' );\n\t\t\t\t\t\n\t\t\t\t\tdata.fields.push( {\n\t\t\t\t\t\tmodel: field,\n\t\t\t\t\t\tattr: 'order',\n\t\t\t\t\t\tbefore: oldPos,\n\t\t\t\t\t\tafter: newPos\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t\tvar label = {\n\t\t\t\t\tobject: 'Field',\n\t\t\t\t\tlabel: dragModel.get( 'label' ),\n\t\t\t\t\tchange: 'Re-ordered from ' + dragModel._previousAttributes.order + ' to ' + dragModel.get( 'order' ),\n\t\t\t\t\tdashicon: 'sort'\n\t\t\t\t};\n\n\t\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'sortFields', dragModel, null, label, data );\n\t\t\t}\n\n\t\t\t\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model that represents our form fields.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/fieldModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tobjectType: 'Field',\n\t\t\tobjectDomain: 'fields',\n\t\t\teditActive: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Listen for model attribute changes\n\t\t\tthis.bind( 'change', this.changeSetting, this );\n\t\t\t\n\t\t\t// Get our parent field type.\n\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', this.get( 'type' ) );\n\t\t\tvar parentType = fieldType.get( 'parentType' );\n\n\t\t\t// Loop through our field type \"settingDefaults\" and add any default settings.\n\t\t\tvar that = this;\n\t\t\t_.each( fieldType.get( 'settingDefaults' ), function( val, key ) {\n\t\t\t\tif ( ! that.get( key ) ) {\n\t\t\t\t\tthat.set( key, val );\n\t\t\t\t}\n\t\t\t} );\n\t\t\t\n\t\t\t/*\n\t\t\t * Trigger an init event on three channels:\n\t\t\t * \n\t\t\t * fields\n\t\t\t * fields-parentType\n\t\t\t * field-type\n\t\t\t *\n\t\t\t * This lets specific field types modify model attributes before anything uses them.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'fields' ).trigger( 'init:fieldModel', this );\n\t\t\tnfRadio.channel( 'fields-' + parentType ).trigger( 'init:fieldModel', this );\n\t\t\tnfRadio.channel( 'fields-' + this.get( 'type' ) ).trigger( 'init:fieldModel', this );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'update:order', this.updateOrder );\n\t\t},\n\n\t\t/**\n\t\t * When we change the model attributes, fire an event saying we've changed something.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tchangeSetting: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'update:setting', this );\n\t\t},\n\n\t\t/**\n\t\t * Listen to update order events.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  array \torder new field order\n\t\t * @return void\n\t\t */\n\t\tupdateOrder: function( order ) {\n\t\t\t// Get our current position.\n\t\t\tvar id = this.get( 'id' );\n\t\t\tif ( jQuery.isNumeric( id ) ) {\n\t\t\t\tvar search = 'field-' + id;\n\t\t\t} else {\n\t\t\t\tvar search = id;\n\t\t\t}\n\t\t\t// Get the index of our field inside our order array\n\t\t\tvar newPos = order.indexOf( search ) + 1;\n\t\t\tif ( newPos != this.get( 'order' ) ) {\n\t\t\t\tthis.set( 'order', newPos );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our field models. \n * This is the actual field data created by the user.\n *\n * We listen to the add and remove events so that we can push the new id to either the new fields or removed fields property.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/fieldCollection',['models/fields/fieldModel'], function( fieldModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: fieldModel,\n\t\tcomparator: 'order',\n\t\ttmpNum: 1,\n\n\t\tinitialize: function() {\n\t\t\tthis.on( 'add', this.addField, this );\n\t\t\tthis.on( 'remove', this.removeField, this );\n\t\t\tthis.newIDs = [];\n\t\t},\n\n\t\t/**\n\t\t * When we add a field, push the id onto our new fields property.\n\t\t * This lets us tell the server that this is a new field to be added rather than a field to be updated.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param void\n\t\t */\n\t\taddField: function( model ) {\n\t\t\tthis.newIDs.push( model.get( 'id' ) );\n\t\t},\n\n\t\t/**\n\t\t * When we remove a field, push the id onto our removed fields property.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param void\n\t\t */\n\t\tremoveField: function( model ) {\n\t\t\tthis.removedIDs[ model.get( 'id' ) ] = model.get( 'id' );\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Handles interactions with our field collection.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/data',['models/fields/fieldCollection', 'models/fields/fieldModel'], function( fieldCollection, fieldModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Load our field collection from our localized form data\n\t\t\tthis.collection = new fieldCollection( preloadedFormData.fields );\n\t\t\t// Set our removedIDs to an empty object. This will be populated when a field is removed so that we can add it to our 'deleted_fields' object.\n\t\t\tthis.collection.removedIDs = {};\n\n\t\t\t// Respond to requests for data about fields and to update/change/delete fields from our collection.\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:collection', this.getFieldCollection, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:field', this.getField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:tmpFieldID', this.getTmpFieldID, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:tmpID', this.getTmpFieldID, this );\n\n\t\t\tnfRadio.channel( 'fields' ).reply( 'add', this.addField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'delete', this.deleteField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'sort:fields', this.sortFields, this );\n\t\t},\n\n\t\tgetFieldCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tgetField: function( id ) {\n\t\t\treturn this.collection.get( id );\n\t\t},\n\n\t\t/**\n\t\t * Add a field to our collection. If silent is passed as true, no events will trigger.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param Object \tdata \tfield data to insert\n\t\t * @param bool \t\tsilent \tprevent events from firing as a result of adding\t \t\n\t\t */\n\t\taddField: function( data, silent ) {\n\t\t\tsilent = silent || false;\n\t\t\tif ( false === data instanceof Backbone.Model ) {\n\t\t\t\tvar model = new fieldModel( data );\n\t\t\t} else {\n\t\t\t\tvar model = data;\n\t\t\t}\t\t\t\n\n\t\t\tthis.collection.add( model, { silent: silent } );\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'add:field', model );\n\n\t\t\treturn model;\n\t\t},\n\n\t\t/**\n\t\t * Update a field setting by ID\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  int \t\tid    field id\n\t\t * @param  string \tname  setting name\n\t\t * @param  mixed \tvalue setting value\n\t\t * @return void\n\t\t */\n\t\tupdateFieldSetting: function( id, name, value ) {\n\t\t\tvar fieldModel = this.collection.get( id );\n\t\t\tfieldModel.set( name, value );\n\t\t},\n\n\t\t/**\n\t\t * Get our fields sortable EL\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Array \torder optional order array like: [field-1, field-4, field-2]\n\t\t * @return void\n\t\t */\n\t\tsortFields: function( order, ui ) {\n\t\t\t// Get our sortable element\n\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) { // Make sure that sortable is enabled\n\t\t\t\t// JS ternerary for setting our order\n\t\t\t\tvar order = order || jQuery( sortableEl ).sortable( 'toArray' );\n\t\t\t\tnfRadio.channel( 'fields' ).trigger( 'update:order', order );\n\t\t\t\t// Loop through all of our fields and update their order value\n\t\t\t\t// _.each( this.collection.models, function( field ) {\n\t\t\t\t// \t// Get our current position.\n\t\t\t\t// \tvar oldPos = field.get( 'order' );\n\t\t\t\t// \tvar id = field.get( 'id' );\n\t\t\t\t// \tif ( jQuery.isNumeric( id ) ) {\n\t\t\t\t// \t\tvar search = 'field-' + id;\n\t\t\t\t// \t} else {\n\t\t\t\t// \t\tvar search = id;\n\t\t\t\t// \t}\n\t\t\t\t// \t// Get the index of our field inside our order array\n\t\t\t\t// \tvar newPos = order.indexOf( search ) + 1;\n\t\t\t\t// \tfield.set( 'order', newPos );\n\t\t\t\t// } );\n\t\t\t\tthis.collection.sort();\n\n\t\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\t\t// Update our preview\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Delete a field from our collection.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tmodel \tfield model to be deleted\n\t\t * @return void\n\t\t */\n\t\tdeleteField: function( model ) {\n\t\t\tthis.collection.remove( model );\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t},\n\n\t\t/**\n\t\t * Return a new tmp id for our fields.\n\t\t * Gets the field collection length, adds 1, then returns that prepended with 'tmp-'.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return string\n\t\t */\n\t\tgetTmpFieldID: function() {\n\t\t\tvar tmpNum = this.collection.tmpNum;\n\t\t\tthis.collection.tmpNum++;\n\t\t\treturn 'tmp-' + tmpNum;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model for our list option.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/listOptionModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Model that represents our list options.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/listOptionCollection',['models/fields/listOptionModel'], function( listOptionModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: listOptionModel,\n\t\tcomparator: 'order',\n\n\t\tinitialize: function() {\n\t\t\t// Listen to the 'sort' event\n\t\t\tthis.on( 'sort', this.changeCollection, this );\n\t\t\t// Listen to the 'add' event\n\t\t\tthis.on( 'add', this.addOption, this );\n\t\t},\n\n\t\tchangeCollection: function() {\n\t\t\t// Trigger a 'sort:options' event so that our field model can update\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'sort:options', this );\n\t\t},\n\n\t\taddOption: function( model, collection ) {\n\t\t\tif ( ! model.get( 'order' ) ) {\n\t\t\t\t// console.log( collection.length );\n\t\t\t\t// model.set( 'order', this.length );\n\t\t\t}\n\t\t}\n\t} );\n\treturn collection;\n} );\n","define( 'views/fields/drawer/typeSettingListOption',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\tclassName: 'nf-table-row',\n\t\ttemplate: '#nf-tmpl-edit-setting-list-option',\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.dataModel = data.dataModel;\n\t\t\tthis.collection = data.collection;\n\t\t\tthis.columns = data.columns;\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tjQuery( this.el ).prop( 'id', this.model.cid );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tjQuery( this.el ).find( 'input:first' ).focus();\n\t\t},\n\n\t\tevents: {\n\t\t\t'change input': 'changeOption',\n\t\t\t'click .nf-delete': 'deleteOption',\n\t\t\t'keyup': 'maybeAddOption'\n\t\t},\n\n\t\tchangeOption: function( e ) {\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'change:option', e, this.model, this.dataModel );\n\t\t},\n\n\t\tdeleteOption: function( e ) {\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'click:deleteOption', this.model, this.collection, this.dataModel );\n\t\t},\n\n\t\tmaybeAddOption: function( e ) {\n\t\t\tif ( 13 == e.keyCode ) {\n\t\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'click:addOption', this.collection, this.dataModel );\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t\t\treturn {\n\t\t\t\tgetColumns: function() {\n\t\t\t\t\treturn that.columns;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n\n","define( 'views/fields/drawer/typeSettingListEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'tr',\n\t\ttemplate: '#nf-tmpl-edit-setting-list-empty'\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/drawer/typeSettingListComposite',['views/fields/drawer/typeSettingListOption', 'views/fields/drawer/typeSettingListEmpty'], function( listOptionView, listEmptyView ) {\n\tvar view = Marionette.CompositeView.extend( {\n\t\ttemplate: '#nf-tmpl-edit-setting-wrap',\n\t\tchildView: listOptionView,\n\t\temptyView: listEmptyView,\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.collection = data.dataModel.get( 'options' );\n\t\t\tthis.dataModel = data.dataModel;\n\t\t\tthis.childViewOptions = { collection: this.collection, dataModel: data.dataModel, columns: this.model.get( 'columns' ) };\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t\n\t\t\tvar that = this;\n\t\t\tjQuery( this.el ).find( '.nf-list-options-tbody' ).sortable( {\n\t\t\t\thandle: '.handle',\n\t\t\t\thelper: 'clone',\n\t\t\t\tplaceholder: 'nf-list-options-sortable-placeholder',\n\t\t\t\tforcePlaceholderSize: true,\n\t\t\t\topacity: 0.95,\n\t\t\t\ttolerance: 'pointer',\n\n\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'option-repeater' ).request( 'start:optionSortable', ui );\n\t\t\t\t},\n\n\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'option-repeater' ).request( 'stop:optionSortable', ui );\n\t\t\t\t},\n\n\t\t\t\tupdate: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'option-repeater' ).request( 'update:optionSortable', ui, this, that );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t    \treturn {\n\t    \t\trenderHeaders: function() {\n\t    \t\t\tvar columns = '<div>&nbsp;</div>';\n\t    \t\t\tif ( -1 != this.columns.indexOf( 'label' ) ) {\n\t    \t\t\t\tcolumns += '<div>Label</div>';\n\t    \t\t\t}\n\t    \t\t\tif ( -1 != this.columns.indexOf( 'value' ) ) {\n\t    \t\t\t\tcolumns += '<div>Value</div>';\n\t    \t\t\t}\n\t    \t\t\tif ( -1 != this.columns.indexOf( 'calc' ) ) {\n\t\t\t\t\t\tcolumns += '<div>Calc Value</div>';\n\t    \t\t\t}\n\t    \t\t\tif ( -1 != this.columns.indexOf( 'selected' ) ) {\n\t    \t\t\t\tcolumns += '<div><span class=\"dashicons dashicons-yes\"></span></div>';\n\t    \t\t\t}\n\t    \t\t\tcolumns += '<div>&nbsp;</div>'\n\t\t\t\t\treturn columns;\n\t\t\t\t},\n\n\t    \t\trenderSetting: function() {\n\t\t\t\t\treturn _.template( jQuery( '#nf-tmpl-edit-setting-' + this.type ).html(), this );\n\t\t\t\t},\n\n\t\t\t\trenderWidth: function() {\n\t\t\t\t\tif ( 'undefined' != typeof this.width ) {\n\t\t\t\t\t\treturn this.width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn 'one-half';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( '.nf-list-options-tbody' ).append( childView.el );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-add-new': 'clickAddOption'\n\t\t},\n\n\t\tclickAddOption: function( e ) {\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'click:addOption', this.collection, this.dataModel );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","/**\n * Handles list field stuff.\n * \n * When we instantiate a new field with the list type as a parent, we need to instantiate a new listOptionCollection for the 'options' attribute\n *\n * Also listens for changes to the options settings.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/optionRepeater',['models/fields/listOptionModel', 'models/fields/listOptionCollection', 'views/fields/drawer/typeSettingListComposite'], function( listOptionModel, listOptionCollection, listCompositeView ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests for the childView for list type fields.\n\t\t\tnfRadio.channel( 'option-repeater' ).reply( 'get:settingChildView', this.getSettingChildView, this );\n\t\t\t\t\t\t\n\t\t\t// When a list type field is initialized, create an option collection.\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'init:fieldModel', this.createOptionCollection );\n\t\t\t\n\t\t\t// Listen for changes to our list options.\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater' ), 'change:option', this.changeOption );\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater' ), 'click:addOption', this.addOption );\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater' ), 'click:deleteOption', this.deleteOption );\n\n\t\t\t// Respond to requests related to our list options sortable.\n\t\t\tnfRadio.channel( 'option-repeater' ).reply( 'update:optionSortable', this.updateOptionSortable, this );\n\t\t\tnfRadio.channel( 'option-repeater' ).reply( 'stop:optionSortable', this.stopOptionSortable, this );\n\t\t\tnfRadio.channel( 'option-repeater' ).reply( 'start:optionSortable', this.startOptionSortable, this );\n\t\t},\n\n\t\t/**\n\t\t * Instantiate an option collection when a list field type is initialized.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tmodel \tfield model being initialized\n\t\t * @return void\n\t\t */\n\t\tcreateOptionCollection: function( model ) {\n\t\t\tvar options = model.get( 'options' );\n\t\t\tif ( 'option-repeater' == options ) {\n\t\t\t\tmodel.set( 'options', [ { calc: 1, label: 'One', value: 'one', order: 0, selected: 0 }, { calc: 2, label: 'Two', value: 'two', order: 1, selected: 0 }, { calc: 3, label: 'Three', value: 'three', order: 2, selected: 0 } ], { silent: true } );\n\t\t\t}\n\n\t\t\tif ( false == options instanceof Backbone.Collection ) {\n\t\t\t\tvar optionCollection = new listOptionCollection();\n\t\t\t\toptionCollection.add( model.get( 'options' ) );\n\t\t\t\tmodel.set( 'options', optionCollection, { silent: true } );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Update an option value in our model.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te          event\n\t\t * @param  backbone.model \tmodel      option model\n\t\t * @param  backbone.model \tfieldModel field model\n\t\t * @return void\n\t\t */\n\t\tchangeOption: function( e, model, fieldModel ) {\n\t\t\tvar name = jQuery( e.target ).data( 'id' );\n\t\t\tif ( 'selected' == name ) {\n\t\t\t\tif ( jQuery( e.target ).attr( 'checked' ) ) {\n\t\t\t\t\tvar value = 1;\n\t\t\t\t} else {\n\t\t\t\t\tvar value = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar value = jQuery( e.target ).val();\n\t\t\t}\n\t\t\t\n\t\t\tvar before = model.get( name );\n\n\t\t\tmodel.set( name, value );\n\t\t\t// Triger an update on our fieldModel\n\t\t\tthis.triggerFieldModel( model, fieldModel );\n\n\t\t\tvar after = value;\n\t\t\t\n\t\t\tvar changes = {\n\t\t\t\tattr: name,\n\t\t\t\tbefore: before,\n\t\t\t\tafter: after\n\t\t\t}\n\n\t\t\tvar label = {\n\t\t\t\tobject: 'Field',\n\t\t\t\tlabel: fieldModel.get( 'label' ),\n\t\t\t\tchange: 'Option ' + model.get( 'label' ) + ' ' + name + ' changed from ' + before + ' to ' + after\n\t\t\t};\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'changeSetting', model, changes, label );\n\t\t},\n\n\t\t/**\n\t\t * Add an option to our list\n\t\t * \n\t\t * @since 3.0\n\t\t * @param backbone.collection \tcollection \tlist option collection\n\t\t * @param backbone.model \t\tfieldModel \tfield model\n\t\t * @return void\n\t\t */\n\t\taddOption: function( collection, fieldModel ) {\n\t\t\tvar model = new listOptionModel( { label: '', value: '', calc: '', selected: 0, order: collection.length } );\n\t\t\tcollection.add( model );\n\n\t\t\t// Add our field addition to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: 'Field',\n\t\t\t\tlabel: fieldModel.get( 'label' ),\n\t\t\t\tchange: 'Option Added',\n\t\t\t\tdashicon: 'plus-alt'\n\t\t\t};\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addListOption', model, null, label );\n\t\t\t\n\t\t\tthis.triggerFieldModel( model, fieldModel );\n\t\t},\n\n\t\t/**\n\t\t * Delete an option from our list\n\t\t * \n\t\t * @since  3.0\n\t\t * @param backbone.model \t\tmodel       list option model\n\t\t * @param backbone.collection \tcollection \tlist option collection\n\t\t * @param backbone.model \t\tfieldModel \tfield model\n\t\t * @return void\n\t\t */\n\t\tdeleteOption: function( model, collection, fieldModel ) {\n\t\t\tvar newModel = nfRadio.channel( 'app' ).request( 'clone:modelDeep', model );\n\n\t\t\t// Add our field deletion to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: 'Field',\n\t\t\t\tlabel: fieldModel.get( 'label' ),\n\t\t\t\tchange: 'Option ' + newModel.get( 'label' ) + ' Removed',\n\t\t\t\tdashicon: 'dismiss'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: collection\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'removeListOption', newModel, null, label, data );\n\t\t\t\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\tvar results = changeCollection.where( { model: model } );\n\n\t\t\t_.each( results, function( changeModel ) {\n\t\t\t\tif ( 'object' == typeof changeModel.get( 'data' ) ) {\n\t\t\t\t\t_.each( changeModel.get( 'data' ), function( dataModel ) {\n\t\t\t\t\t\tif ( dataModel.model == fieldModel ) {\n\t\t\t\t\t\t\tdataModel.model = newModel;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\tchangeModel.set( 'model', newModel );\n\t\t\t\tchangeModel.set( 'disabled', true );\n\t\t\t} );\n\n\t\t\tcollection.remove( model );\n\t\t\tthis.triggerFieldModel( model, fieldModel );\n\t\t},\n\n\t\t/**\n\t\t * Creates an arbitrary value on our collection, then clones and updates that collection.\n\t\t * This forces a change event to be fired on the fieldModel where the list option collection data is stored.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param backbone.collection \tcollection \tlist option collection\n\t\t * @param backbone.model \t\tfieldModel \tfield model\n\t\t * @return void\n\t\t */\n\t\ttriggerFieldModel: function( model, fieldModel ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'update:setting', model );\t\n\t\t},\n\n\t\t/**\n\t\t * Return our list composite view to the setting collection view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tmodel \tsettings model\n\t\t * @return void\n\t\t */\n\t\tgetSettingChildView: function( model ) {\n\t\t\treturn listCompositeView;\n\t\t},\n\n\t\t/**\n\t\t * When we sort our list options, change the order in our option model and trigger a change.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t \t\tsortable \tjQuery UI element\n\t\t * @param  backbone.model \tsetting  \tSetting model\n\t\t * @return void\n\t\t */\n\t\tupdateOptionSortable: function( ui, sortable, setting ) {\n\t\t\tvar newOrder = jQuery( sortable ).sortable( 'toArray' );\n\t\t\tvar dragModel = setting.collection.get( { cid: jQuery( ui.item ).prop( 'id' ) } );\n\t\t\tvar data = {\n\t\t\t\tcollection: setting.collection,\n\t\t\t\tobjModels: []\n\t\t\t};\n\t\t\t_.each( newOrder, function( cid, index ) {\n\t\t\t\tvar optionModel = setting.collection.get( { cid: cid } );\n\t\t\t\tvar oldPos = optionModel.get( 'order' );\n\t\t\t\toptionModel.set( 'order', index );\n\t\t\t\tvar newPos = index;\n\n\t\t\t\tdata.objModels.push( {\n\t\t\t\t\tmodel: optionModel,\n\t\t\t\t\tattr: 'order',\n\t\t\t\t\tbefore: oldPos,\n\t\t\t\t\tafter: newPos\n\t\t\t\t} );\n\t\t\t} );\n\t\t\t\n\t\t\tsetting.collection.sort();\n\n\t\t\tvar label = {\n\t\t\t\tobject: 'Field',\n\t\t\t\tlabel: setting.fieldModel.get( 'label' ),\n\t\t\t\tchange: 'Option ' + dragModel.get( 'label' ) + ' re-ordered from ' + dragModel._previousAttributes.order + ' to ' + dragModel.get( 'order' ),\n\t\t\t\tdashicon: 'sort'\n\t\t\t};\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'sortListOptions', dragModel, null, label, data );\n\n\t\t\tthis.triggerFieldModel( dragModel, setting.fieldModel );\n\t\t},\n\n\t\t/**\n\t\t * When we stop sorting our list options, reset our item opacity.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object ui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstopOptionSortable: function( ui ) {\n\t\t\tjQuery( ui.item ).css( 'opacity', '' );\n\t\t},\n\n\t\t/**\n\t\t * When we start sorting our list options, remove containing divs and set our item opacity to 0.5\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Objects ui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstartOptionSortable: function( ui ) {\n\t\t\tjQuery( ui.placeholder ).find( 'div' ).remove();\n\t\t\tjQuery( ui.item ).css( 'opacity', '0.5' ).show();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles adding and removing the active class from a field currently being edited.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - Edit Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/editActive',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests to remove the active class from all our fields.\n\t\t\tnfRadio.channel( 'fields' ).reply( 'clear:editActive', this.clearEditActive, this );\n\t\t\t// Listen for the closing drawer so that we can remove all of our active classes.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-editSettings' ), 'before:closeDrawer', this.clearEditActive );\n\t\t},\n\n\t\t/**\n\t\t * Loops through our fields collection and sets editActive to false.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n        clearEditActive: function() {\n            var fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n            _.each( fieldCollection.models, function( field ) {\n\t\t\t\tfield.set( 'editActive', false );\n            } );\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Fetches settings models so that we can get setting information\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldSettings',['models/app/settingCollection'], function( settingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.collection = new settingCollection( fieldSettings );\n\n\t\t\t// Responds to requests for settings models.\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:settingModel', this.getSettingModel, this );\n\t\t},\n\n\t\tgetSettingModel: function( name ) {\n\t\t\treturn this.collection.findWhere( { name: name } );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel for settings views being rendered.\n *\n * If we're rendering a product_assignment setting, add our products to the data model.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldQuantity',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for setting model init.\n\t\t\t// this.listenTo( nfRadio.channel( 'product_assignment' ), 'init:model', this.register );\n\t\t\t// Listen for messages that are fired before a setting view is rendered.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'before:renderSetting', this.beforeRenderSetting );\n\t\t},\n\n\t\tregister: function( settingModel ) {\n\t\t\t// Listen for changes to our field collection.\n\t\t\t// var fields = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t// fields.on( 'add', this.maybeUpdateProductFields, )\n\t\t},\n\n\t\tbeforeRenderSetting: function( settingModel, dataModel, view ) {\n\t\t\tif ( 'product_assignment' == settingModel.get( 'name' ) ) {\n\t\t\t\tvar productFields = this.getProductFields( settingModel );\n\t\t\t\tsettingModel.set( 'options', productFields );\n\t\t\t}\n\t\t},\n\n\t\tgetProductFields: function( settingModel ) {\n\t\t\tvar productFields = [ settingModel.get( 'select_product' ) ];\n\t\t\t// Update our dataModel with all of our product fields.\n\t\t\tvar fields = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t_.each( fields.models, function( field ) {\n\t\t\t\tif ( 'product' == field.get( 'type' ) ) {\n\t\t\t\t\tproductFields.push( { label: field.get( 'label' ), value: field.get( 'id' ) } );\n\t\t\t\t}\n\t\t\t} );\n\t\t\treturn productFields;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Creates and stores a collection of action types. This includes all of the settings shown when editing a field.\n *\n * Loops over our preloaded data and adds that to our action type collection\n *\n * Also responds to requests for data about action types\n *\n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/types',[\n\t'models/app/typeCollection',\n\t'models/app/settingCollection',\n\t'models/app/settingGroupCollection',\n\t], function(\n\ttypeCollection,\n\tsettingCollection,\n\tsettingGroupCollection\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our field type collection\n\t\t\tthis.installedActions = new typeCollection();\n\t\t\tthis.installedActions.slug = 'installed';\n\t\t\tthis.installedActions.nicename = 'Installed';\n\t\t\tthis.availableActions = new typeCollection();\n\t\t\tthis.availableActions.slug = 'available';\n\t\t\tthis.availableActions.nicename = 'Available';\n\n\t\t\tvar that = this;\n\t\t\t_.each( actionTypeData, function( type ) {\n\t\t\t\tvar settingGroups = new settingGroupCollection();\n\t\t\t\t// Loop through the settings groups within this field type and create an object to add to the groups collection.\n\t\t\t\t_.each( type.settingGroups, function( group ) {\n\t\t\t\t\tvar groupTmp = {\n\t\t\t\t\t\tlabel: group.label,\n\t\t\t\t\t\tdisplay: group.display,\n\t\t\t\t\t\tsettings: new settingCollection( group.settings ),\n\t\t\t\t\t}\n\t\t\t\t\t// Add the tmp object to our setting groups collection\n\t\t\t\t\tsettingGroups.add( groupTmp );\n\t\t\t\t} );\n\n\t\t\t\t// Build an object for this type that we can add to our field type collection\n\t\t\t\tvar actionType = {\n\t\t\t\t\tid: type.id,\n\t\t\t\t\tnicename: type.nicename,\n\t\t\t\t\talias: type.alias,\n\t\t\t\t\tsettingGroups: settingGroups,\n\t\t\t\t\tsettingDefaults: type.settingDefaults,\n\t\t\t\t\timage: type.image,\n\t\t\t\t\tlink: type.link,\n\t\t\t\t\tsection: type.section\n\t\t\t\t}\n\n\t\t\t\t// Add tmp object to the appropriate collection (either installed or available)\n\t\t\t\tthat[ type.section + 'Actions' ].add( actionType );\n\t\t\t} );\n\n\t\t\t// Respond to requests to get field type, collection, settings, and sections\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:type', this.getType, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:installedActions', this.getInstalledActions, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:availableActions', this.getAvailableActions, this );\n\t\t},\n\n\t\t/**\n\t\t * Return a field type by id\n\t\t *\n\t\t * @since  3.0\n\t\t * @param  string \t\t\tid \tfield type\n\t\t * @return backbone.model    \tfield type model\n\t\t */\n\t\tgetType: function( id ) {\n\t\t\t// Search our installed actions first\n\t\t\tvar type = this.installedActions.get( id );\n\t\t\tif ( ! type ) {\n\t\t\t\ttype = this.availableActions.get( id );\n\t\t\t}\n        \treturn type;\n        },\n\n        /**\n         * Return the installed action type collection\n         *\n         * @since  3.0\n         * @return backbone.collection    \tfield type collection\n         */\n\t\tgetInstalledActions: function() {\n        \treturn this.installedActions;\n        },\n\n        /**\n         * Return the available action type collection\n         *\n         * @since  3.0\n         * @return backbone.collection    \tfield type collection\n         */\n\t\tgetAvailableActions: function() {\n        \treturn this.availableActions;\n        },\n\n        /**\n         * Add a field type to our staging area when the field type button is clicked.\n         *\n         * @since 3.0\n         * @param Object e event\n         * @return void\n         */\n        addStagedField: function( e ) {\n        \tvar type = jQuery( e.target ).data( 'id' );\n        \tnfRadio.channel( 'fields' ).request( 'add:stagedField', type );\n        },\n\n        /**\n         * Return our field type settings sections\n         *\n         * @since  3.0\n         * @return backbone.collection field type settings sections\n         */\n        getTypeSections: function() {\n            return this.fieldTypeSections;\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Model that represents our form action.\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/actions/actionModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tobjectType: 'Action',\n\t\t\tobjectDomain: 'actions',\n\t\t\teditActive: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Listen for model attribute changes\n\t\t\tthis.bind( 'change', this.changeSetting, this );\n\n\t\t\t// Get our parent field type.\n\t\t\tvar actionType = nfRadio.channel( 'actions' ).request( 'get:type', this.get( 'type' ) );\n\n\t\t\t// Loop through our action type \"settingDefaults\" and add any default settings.\n\t\t\tvar that = this;\n\t\t\t_.each( actionType.get( 'settingDefaults' ), function( val, key ) {\n\t\t\t\tif ( ! that.get( key ) ) {\n\t\t\t\t\tthat.set( key, val );\n\t\t\t\t}\n\t\t\t} );\n\t\t\t\n\t\t\t/*\n\t\t\t * Trigger an init event on three channels:\n\t\t\t * \n\t\t\t * actions\n\t\t\t * action-type\n\t\t\t *\n\t\t\t * This lets specific field types modify model attributes before anything uses them.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'actions' ).trigger( 'init:fieldModel', this );\n\t\t\tnfRadio.channel( 'actions-' + this.get( 'type' ) ).trigger( 'init:fieldModel', this );\n\t\t},\n\n\t\t/**\n\t\t * When we change the model attributes, fire an event saying we've changed something.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tchangeSetting: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'update:setting', this );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our action models. \n * This is the actual action data created by the user.\n *\n * We listen to the add and remove events so that we can push the new id to either the new action or removed action property.\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/actions/actionCollection',['models/actions/actionModel'], function( actionModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: actionModel,\n\t\tcomparator: 'order',\n\t\ttmpNum: 1,\n\n\t\tinitialize: function() {\n\t\t\tthis.on( 'add', this.addAction, this );\n\t\t\tthis.on( 'remove', this.removeAction, this );\n\t\t\tthis.newIDs = [];\n\t\t},\n\n\t\t/**\n\t\t * When we add a field, push the id onto our new action property.\n\t\t * This lets us tell the server that this is a new field to be added rather than a field to be updated.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param void\n\t\t */\n\t\taddAction: function( model ) {\n\t\t\tthis.newIDs.push( model.get( 'id' ) );\n\t\t},\n\n\t\t/**\n\t\t * When we remove a field, push the id onto our removed action property.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param void\n\t\t */\n\t\tremoveAction: function( model ) {\n\t\t\tthis.removedIDs[ model.get( 'id' ) ] = model.get( 'id' );\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Handles interactions with our actions collection.\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/data',['models/actions/actionCollection', 'models/actions/actionModel'], function( actionCollection, actionModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Load our action collection from our localized form data\n\t\t\tthis.collection = new actionCollection( preloadedFormData.actions );\n\t\t\t// Set our removedIDs to an empty object. This will be populated when a action is removed so that we can add it to our 'deleted_actions' object.\n\t\t\tthis.collection.removedIDs = {};\n\n\t\t\t// Respond to requests for data about actions and to update/change/delete actions from our collection.\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:collection', this.getCollection, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:action', this.getAction, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:tmpID', this.getTmpID, this );\n\n\t\t\tnfRadio.channel( 'actions' ).reply( 'add', this.addAction, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'delete', this.deleteAction, this );\n\t\t},\n\n\t\tgetCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tgetAction: function( id ) {\n\t\t\treturn this.collection.get( id );\n\t\t},\n\n\t\t/**\n\t\t * Add a action to our collection. If silent is passed as true, no events will trigger.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param Object \tdata \taction data to insert\n\t\t * @param bool \t\tsilent \tprevent events from firing as a result of adding\t \t\n\t\t */\n\t\taddAction: function( data, silent ) {\n\t\t\tsilent = silent || false;\n\t\t\tif ( false === data instanceof Backbone.Model ) {\n\t\t\t\tvar model = new actionModel( data );\n\t\t\t} else {\n\t\t\t\tvar model = data;\n\t\t\t}\n\n\t\t\tthis.collection.add( model, { silent: silent } );\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\n\t\t\treturn model;\n\t\t},\n\n\t\t/**\n\t\t * Delete a action from our collection.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tmodel \taction model to be deleted\n\t\t * @return void\n\t\t */\n\t\tdeleteAction: function( model ) {\n\t\t\tthis.collection.remove( model );\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t},\n\n\n\t\t/**\n\t\t * Return a new tmp id for our actions.\n\t\t * Gets the action collection length, adds 1, then returns that prepended with 'tmp-'.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return string\n\t\t */\n\t\tgetTmpID: function() {\n\t\t\tvar tmpNum = this.collection.tmpNum;\n\t\t\tthis.collection.tmpNum++;\n\t\t\treturn 'tmp-' + tmpNum;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Fetches settings models so that we can get setting information\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/actionSettings',['models/app/settingCollection'], function( settingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.collection = new settingCollection( actionSettings );\n\n\t\t\t// Responds to requests for settings models.\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:settingModel', this.getSettingModel, this );\n\t\t},\n\n\t\tgetSettingModel: function( name ) {\n\t\t\treturn this.collection.findWhere( { name: name } );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles adding and removing the active class from a action currently being edited.\n * \n * @package Ninja Forms builder\n * @subpackage Actions - Edit Action Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/editActive',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests to remove the active class from all our actions.\n\t\t\tnfRadio.channel( 'actions' ).reply( 'clear:editActive', this.clearEditActive, this );\n\t\t\t// Listen for the closing drawer so that we can remove all of our active classes.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-editSettings' ), 'before:closeDrawer', this.clearEditActive );\n\t\t},\n\n\t\t/**\n\t\t * Loops through our actions collection and sets editActive to false.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n        clearEditActive: function() {\n            var actionCollection = nfRadio.channel( 'actions' ).request( 'get:collection' );\n            _.each( actionCollection.models, function( action ) {\n\t\t\t\taction.set( 'editActive', false );\n            } );\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Handles clicks and dragging for our action types.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/addActionTypes',['models/actions/actionCollection', 'models/actions/actionModel'], function( actionCollection, actionModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'actions' ), 'click:addAction', this.addAction );\n\n\t\t\tnfRadio.channel( 'actions' ).reply( 'add:actionType', this.addAction, this );\n\t\t},\n\n\t\t/**\n\t\t * Add an action to our collection. If silent is passed as true, no events will trigger.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param Object \tdata \taction data to insert\n\t\t * @param bool \t\tsilent \tprevent events from firing as a result of adding\t \t\n\t\t */\n\t\taddAction: function( type ) {\n\t\t\tvar data = {\n\t\t\t\tid: nfRadio.channel( 'actions' ).request( 'get:tmpID' ),\n\t\t\t\ttype: type.get( 'id' ),\n\t\t\t\tlabel: type.get( 'nicename' )\n\t\t\t}\n\t\t\tvar newModel = nfRadio.channel( 'actions' ).request( 'add', data );\n\t\t\tvar label = {\n\t\t\t\tobject: 'Action',\n\t\t\t\tlabel: newModel.get( 'label' ),\n\t\t\t\tchange: 'Added',\n\t\t\t\tdashicon: 'plus-alt'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: nfRadio.channel( 'actions' ).request( 'get:collection' )\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addObject', newModel, null, label, data );\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:edit', {}, newModel );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles the logic for our action type draggables.\n * \n * @package Ninja Forms builder\n * @subpackage Actions - New Action Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/typeDrag',[], function( ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our action type draggables and run the appropriate function.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addAction' ), 'startDrag:type', this.startDrag );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addAction' ), 'stopDrag:type', this.stopDrag );\n\t\t\t/*\n\t\t\t * Respond to requests for our helper clone.\n\t\t\t * This is used by other parts of the application to modify what the user is dragging in real-time.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'drawer-addAction' ).reply( 'get:typeHelperClone', this.getCurrentDraggableHelperClone, this );\n\t\t},\n\n\t\t/**\n\t\t * When we start dragging:\n\t\t * get our drawer element\n\t\t * set its overflow property to visible !important -> forces the type drag element to be on at the top of the z-index.\n\t\t * get our main element\n\t\t * est its overflow propery to visible !important -> forces the type drag element to be on top of the z-index.\n\t\t * set our dragging helper clone\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  object context \tThis function is going to be called from a draggable. Context is the \"this\" reference to the draggable.\n\t\t * @param  object ui      \tObject sent by jQuery UI draggable.\n\t\t * @return void\n\t\t */\n\t\tstartDrag: function( context, ui ) {\n\t\t\tthis.drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tthis.mainEl = nfRadio.channel( 'app' ).request( 'get:mainEl' );\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\n\t\t\tthis.draggableHelperClone = jQuery( ui.helper ).clone();\n\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging, reset our overflow property to hidden !important.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  object context \tThis function is going to be called from a draggable. Context is the \"this\" reference to the draggable.\n\t\t * @param  object ui      \tObject sent by jQuery UI draggable.\n\t\t * @return {[type]}         [description]\n\t\t */\n\t\tstopDrag: function( context, ui ) {\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t},\n\n\t\tgetCurrentDraggableHelperClone: function() {\n\t\t\treturn this.draggableHelperClone;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles the logic for our action type droppable.\n * \n * @package Ninja Forms builder\n * @subpackage Actions - New Action Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/droppable',[], function( ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Respond to requests for our helper clone.\n\t\t\t * This is used by other parts of the application to modify what the user is dragging in real-time.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'app' ).reply( 'drop:actionType', this.dropActionType, this );\n\t\t},\n\n\t\tdropActionType: function( e, ui ) {\n\t\t\tvar type_slug = jQuery( ui.helper ).data( 'type' );\n\t\t\tvar type = nfRadio.channel( 'actions' ).request( 'get:type', type_slug );\n\t\t\tnfRadio.channel( 'actions' ).request( 'add:actionType', type );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model for our action type\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/actions/typeModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our action type models. \n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/actions/typeCollection',['models/actions/typeModel'], function( actionTypeModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: actionTypeModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Filters our action type collection.\n * \n * @package Ninja Forms builder\n * @subpackage Actions - New Action Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/filterTypes',['models/actions/typeCollection'], function( typeCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our change filter event.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addAction' ), 'change:filter', this.filterActionTypes );\n\t\t},\n\n\t\t/**\n\t\t * Filter our action types in the add new action drawer\n\t\t * \n\t\t * Takes a search string and finds any action types that match either the name or alias.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string\t search \tstring being searched for\n\t\t * @param  object \t e      \tKeyup event\n\t\t * @return void\n\t\t */\n\t\tfilterActionTypes: function( search, e ) {\n\n\t\t\t// Make sure that we aren't dealing with an empty string.\n\t\t\tif ( '' != jQuery.trim( search ) ) {\n\n        \t\tvar filteredInstalled = [];\n        \t\t/**\n        \t\t * Call the function that actually filters our collection,\n        \t\t * and then loop through our collection, adding each model to our filteredInstalled array.\n        \t\t */\n\t\t\t\tvar installedActions = nfRadio.channel( 'actions' ).request( 'get:installedActions' );\n        \t\t_.each( this.filterCollection( search, installedActions ), function( model ) {\n        \t\t\tfilteredInstalled.push( model );\n        \t\t} );\n\n        \t\tvar filteredAvailable = [];\n        \t\tvar availableActions = nfRadio.channel( 'actions' ).request( 'get:availableActions' );\n        \t\t_.each( this.filterCollection( search, availableActions ), function( model ) {\n        \t\t\tfilteredAvailable.push( model );\n        \t\t} );\n\n        \t\t// Create a new Action Type Section collection with the filtered array.\n        \t\tvar newInstalled = new typeCollection( filteredInstalled );\n        \t\tnewInstalled.slug = 'installed';\n        \t\tnewInstalled.nicename = 'Installed';\n\n        \t\tvar newAvailable = new typeCollection( filteredAvailable );\n        \t\tnewAvailable.slug = 'available';\n        \t\tnewAvailable.nicename = 'Available';\n\n        \t\t// Request that our action types filter be applied, passing the collection we created above.\n        \t\tnfRadio.channel( 'drawer' ).trigger( 'filter:actionTypes', newInstalled, newAvailable );\n        \t\t// If we've pressed the 'enter' key, add the action to staging and clear the filter.\n        \t\tif ( e.addObject ) {\n        \t\t\tif ( 0 < newInstalled.length ) {\n        \t\t\t\tnfRadio.channel( 'actions' ).request( 'add:actionType', newInstalled.models[0] );\n        \t\t\t\tnfRadio.channel( 'drawer' ).request( 'clear:filter' );\n        \t\t\t}\n        \t\t}\n        \t} else {\n        \t\t// Clear our filter if the search text is empty.\n        \t\tnfRadio.channel( 'drawer' ).trigger( 'clear:filter' );\n        \t}\n        },\n\n        /**\n         * Search our action type collection for the search string.\n         * \n         * @since  3.0\n         * @param  string\t search \tstring being searched for\n         * @return backbone.collection\n         */\n        filterCollection: function( search, collection ) {\n        \tsearch = search.toLowerCase();\n        \t/*\n        \t * Backbone collections have a 'filter' method that loops through every model,\n        \t * waiting for you to return true or false. If you return true, the model is kept.\n        \t * If you return false, it's removed from the filtered result.\n        \t */\n\t\t\tvar filtered = collection.filter( function( model ) {\n\t\t\t\tvar found = false;\n\t\t\t\t\n\t\t\t\t// If we match either the ID or nicename, return true.\n\t\t\t\tif ( model.get( 'id' ).toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t} else if ( model.get( 'nicename' ).toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * TODO: Hashtag searching. Doesn't really do anything atm.\n\t\t\t\t */\n\t\t\t\tif ( model.get( 'tags' ) && 0 == search.indexOf( '#' ) ) {\n\t\t\t\t\t_.each( model.get( 'tags' ), function( tag ) {\n\t\t\t\t\t\tif ( search.replace( '#', '' ).length > 1 ) {\n\t\t\t\t\t\t\tif ( tag.toLowerCase().indexOf( search.replace( '#', '' ) ) != -1 ) {\n\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// If we match any of the aliases, return true.\n\t\t\t\tif ( model.get( 'alias' ) ) {\n\t\t\t\t\t_.each( model.get( 'alias' ), function( alias ) {\n\t\t\t\t\t\tif ( alias.toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\treturn found;\n\t\t\t} );\n\n\t\t\t// Return our filtered collection.\n\t\t\treturn filtered;\n        }\n\t});\n\n\treturn controller;\n} );\n","/**\n * Creates and stores a collection of form setting types. This includes all of the settings shown when editing a field.\n *\n * Loops over our preloaded data and adds that to our form setting type collection\n *\n * Also responds to requests for data about form setting types\n *\n * @package Ninja Forms builder\n * @subpackage Form Settings\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/settings/types',[\n\t'models/app/typeCollection',\n\t'models/app/settingCollection',\n\t'models/app/settingGroupCollection',\n\t], function(\n\ttypeCollection,\n\tsettingCollection,\n\tsettingGroupCollection\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our field type collection\n\t\t\tthis.collection = new typeCollection();\n\n\t\t\tvar that = this;\n\t\t\t_.each( formSettingTypeData, function( type ) {\n\t\t\t\tvar settingGroups = new settingGroupCollection();\n\t\t\t\t// Loop through the settings groups within this field type and create an object to add to the groups collection.\n\t\t\t\t_.each( type.settingGroups, function( group ) {\n\t\t\t\t\tvar groupTmp = {\n\t\t\t\t\t\tlabel: group.label,\n\t\t\t\t\t\tdisplay: group.display,\n\t\t\t\t\t\tsettings: new settingCollection( group.settings ),\n\t\t\t\t\t}\n\t\t\t\t\t// Add the tmp object to our setting groups collection\n\t\t\t\t\tsettingGroups.add( groupTmp );\n\t\t\t\t} );\n\n\t\t\t\t// Build an object for this type that we can add to our field type collection\n\t\t\t\tvar settingType = {\n\t\t\t\t\tid: type.id,\n\t\t\t\t\tnicename: type.nicename,\n\t\t\t\t\talias: type.alias,\n\t\t\t\t\tsettingGroups: settingGroups,\n\t\t\t\t\tsettingDefaults: type.settingDefaults,\n\t\t\t\t\teditActive: false\n\t\t\t\t}\n\n\t\t\t\t// Add tmp object to the appropriate collection (either installed or available)\n\t\t\t\tthat.collection.add( settingType );\n\t\t\t} );\n\n\t\t\t// Respond to requests to get field type, collection, settings, and sections\n\t\t\tnfRadio.channel( 'settings' ).reply( 'get:type', this.getType, this );\n\t\t\tnfRadio.channel( 'settings' ).reply( 'get:typeCollection', this.getCollection, this );\n\t\t},\n\n\t\t/**\n\t\t * Return a field type by id\n\t\t *\n\t\t * @since  3.0\n\t\t * @param  string \t\t\tid \tfield type\n\t\t * @return backbone.model    \tfield type model\n\t\t */\n\t\tgetType: function( id ) {\n\t\t\treturn this.collection.get( id );\n        },\n\n        /**\n         * Return the installed action type collection\n         *\n         * @since  3.0\n         * @return backbone.collection    \tfield type collection\n         */\n\t\tgetCollection: function() {\n        \treturn this.collection;\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Model that represents our form settings.\n * \n * @package Ninja Forms builder\n * @subpackage Form Settings\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/settings/settingsModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tobjectType: 'Form Setting',\n\t\t\teditActive: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Listen for model attribute changes\n\t\t\tthis.bind( 'change', this.changeSetting, this );\n\t\t},\n\n\t\t/**\n\t\t * When we change the model attributes, fire an event saying we've changed something.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tchangeSetting: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'update:setting', this );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Handles interactions with our form settings collection.\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/settings/data',['models/settings/settingsModel'], function( settingsModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Load our action collection from our localized form data\n\t\t\tthis.model = new settingsModel( preloadedFormData.settings );\n\t\t\tnfRadio.channel( 'settings' ).reply( 'get:settings', this.getSettings, this );\n\t\t},\n\n\t\tgetSettings: function() {\n\t\t\treturn this.model;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Fetches settings models so that we can get setting information\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/settings/formSettings',['models/app/settingCollection'], function( settingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.collection = new settingCollection( formSettings );\n\n\t\t\t// Responds to requests for settings models.\n\t\t\tnfRadio.channel( 'settings' ).reply( 'get:settingModel', this.getSettingModel, this );\n\t\t},\n\n\t\tgetSettingModel: function( name ) {\n\t\t\treturn this.collection.findWhere( { name: name } );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles adding and removing the active class from form settings currently being edited.\n * \n * @package Ninja Forms builder\n * @subpackage Form Settings\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/settings/editActive',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests to remove the active class from all our fields.\n\t\t\tnfRadio.channel( 'settings' ).reply( 'clear:editActive', this.clearEditActive, this );\n\t\t\t// Listen for the closing drawer so that we can remove all of our active classes.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-editSettings' ), 'before:closeDrawer', this.clearEditActive );\n\t\t},\n\n\t\t/**\n\t\t * Loops through our fields collection and sets editActive to false.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n        clearEditActive: function() {\n            var collection = nfRadio.channel( 'settings' ).request( 'get:typeCollection' );\n            _.each( collection.models, function( field ) {\n\t\t\t\tfield.set( 'editActive', false );\n            } );\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Listens for clicks on our form settings sections.\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/settings/clickEdit',['models/settings/settingsModel'], function( settingsModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'settings' ), 'click:edit', this.clickEdit );\n\t\t},\n\n\t\tclickEdit: function( e, typeModel ) {\n\t\t\tnfRadio.channel( 'settings' ).request( 'clear:editActive' );\n\t\t\ttypeModel.set( 'editActive', true );\n\n\t\t\tvar model = nfRadio.channel( 'settings' ).request( 'get:settings' );\n\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'editSettings', { model: model, groupCollection: typeModel.get( 'settingGroups' ) } );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Loads all of our controllers using Require JS.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine(\n\t'controllers/loadControllers',[\n\t\t/*\n\t\t * Application controllers\n\t\t */\n\t\t'controllers/app/drawer',\n\t\t'controllers/app/drawerConfig',\t\t\n\t\t'controllers/app/domainConfig',\n\t\t'controllers/app/data',\t\t\n\t\t'controllers/app/drawerToggleSettingGroup',\n\t\t'controllers/app/updateDB',\n\t\t'controllers/app/formData',\n\t\t'controllers/app/previewLink',\n\t\t'controllers/app/menuButtons',\n\t\t'controllers/app/trackChanges',\n\t\t'controllers/app/undoChanges',\n\t\t'controllers/app/publishResponse',\n\t\t'controllers/app/changeDomain',\n\t\t'controllers/app/pushstate',\n\t\t'controllers/app/hotkeys',\n\t\t'controllers/app/cleanState',\n\t\t'controllers/app/coreUndo',\n\t\t'controllers/app/cloneModelDeep',\n\t\t'controllers/app/getSettingChildView',\n\t\t'controllers/app/changeSettingDefault',\n\t\t'controllers/app/fieldset',\n\t\t'controllers/app/toggleSetting',\n\t\t'controllers/app/itemControls',\n\t\t'controllers/app/mergeTags',\n\t\t'controllers/app/itemSettingFill',\n\t\t/*\n\t\t * Fields domain controllers\n\t\t */\n\t\t'controllers/fields/types',\n\t\t'controllers/fields/fieldTypeDrag',\n\t\t'controllers/fields/stagingDrag',\n\t\t'controllers/fields/savedFieldsSection',\n\t\t'controllers/fields/staging',\n\t\t'controllers/fields/stagingSortable',\n\t\t'controllers/fields/filterTypes',\n\t\t'controllers/fields/sortable',\n\t\t'controllers/fields/data',\n\t\t'controllers/fields/optionRepeater',\n\t\t'controllers/fields/editActive',\n\t\t'controllers/fields/fieldSettings',\n\t\t'controllers/fields/fieldQuantity',\n\n\t\t/*\n\t\t * TODO: Actions domain controllers\n\t\t */\n\t\t'controllers/actions/types',\n\t\t'controllers/actions/data',\n\t\t'controllers/actions/actionSettings',\n\t\t'controllers/actions/editActive',\n\t\t'controllers/actions/addActionTypes',\n\t\t'controllers/actions/typeDrag',\n\t\t'controllers/actions/droppable',\n\t\t'controllers/actions/filterTypes',\n\n\t\t/*\n\t\t * TODO: Settings domain controllers\n\t\t */\n\t\t'controllers/settings/types',\n\t\t'controllers/settings/data',\n\t\t'controllers/settings/formSettings',\n\t\t'controllers/settings/editActive',\n\t\t'controllers/settings/clickEdit'\n\t],\n\tfunction(\n\t\t/*\n\t\t * Application controllers\n\t\t */\n\t\tDrawer,\n\t\tDrawerConfig,\n\t\tDomainConfig,\n\t\tAppData,\n\t\tDrawerToggleSettingGroup,\n\t\tUpdateDB,\n\t\tFormData,\n\t\tPreviewLink,\n\t\tAppMenuButtons,\n\t\tAppTrackChanges,\n\t\tAppUndoChanges,\n\t\tAppPublishResponse,\n\t\tAppChangeDomain,\n\t\tPushstate,\n\t\tHotkeys,\n\t\tCleanState,\n\t\tCoreUndo,\n\t\tCloneModelDeep,\n\t\tDrawerSettingChildView,\n\t\tChangeSettingDefault,\n\t\tFieldset,\n\t\tToggleSetting,\n\t\tItemControls,\n\t\tMergeTags,\n\t\tItemSettingFill,\n\t\t/*\n\t\t * Fields domain controllers\n\t\t */\n\t\tFieldTypes,\n\t\tFieldTypeDrag,\n\t\tFieldStagingDrag,\n\t\tSavedFields,\n\t\tStagedFieldsData,\n\t\tStagedFieldsSortable,\n\t\tDrawerFilterFieldTypes,\n\t\tMainContentFieldsSortable,\n\t\tFieldData,\n\t\tOptionRepeater,\n\t\tFieldsEditActive,\n\t\tFieldSettings,\n\t\tFieldQuantity,\n\t\t/*\n\t\t * TODO: Actions domain controllers\n\t\t */\n\t\tActionTypes,\n\t\tActionData,\n\t\tActionSettings,\n\t\tActionEditActive,\n\t\tActionAddTypes,\n\t\tActionTypeDrag,\n\t\tActionDroppable,\n\t\tActionFilterTypes,\n\t\t/*\n\t\t * TODO: Settings domain controllers\n\t\t */\n\t\tSettingTypes,\n\t\tSettingData,\n\t\tFormSettings,\n\t\tSettingsEditActive,\n\t\tSettingsClickEdit\n\t\t\n\t) {\n\t\tvar controller = Marionette.Object.extend( {\n\t\t\tinitialize: function() {\n\t\t\t\t/*\n\t\t\t\t * Application controllers\n\t\t\t\t */\n\t\t\t\tnew Hotkeys();\n\t\t\t\tnew Drawer();\n\t\t\t\tnew DrawerConfig();\n\t\t\t\tnew DomainConfig();\n\t\t\t\tnew DrawerToggleSettingGroup();\n\t\t\t\tnew UpdateDB();\n\t\t\t\tnew PreviewLink();\n\t\t\t\tnew AppMenuButtons();\n\t\t\t\tnew AppTrackChanges();\n\t\t\t\tnew AppUndoChanges();\n\t\t\t\tnew AppPublishResponse();\n\t\t\t\tnew AppChangeDomain();\n\t\t\t\tnew CleanState();\n\t\t\t\tnew CoreUndo();\n\t\t\t\tnew CloneModelDeep();\n\t\t\t\tnew ItemControls();\n\t\t\t\t// new Pushstate();\n\t\t\t\t/*\n\t\t\t\t * Fields domain controllers\n\t\t\t\t * \n\t\t\t\t * Field-specific controllers should be loaded before our field type controller.\n\t\t\t\t * This ensures that any 'init' hooks are properly registered.\n\t\t\t\t \n\t\t\t\tnew Fieldset();\n\t\t\t\tnew OptionRepeater();\n\n\t\t\t\tnew FieldTypes();\n\t\t\t\tnew FieldTypeDrag();\n\t\t\t\tnew FieldStagingDrag();\n\t\t\t\tnew SavedFields();\n\t\t\t\tnew StagedFieldsData();\n\t\t\t\tnew StagedFieldsSortable();\n\t\t\t\tnew DrawerFilterFieldTypes();\n\t\t\t\tnew MainContentFieldsSortable();\n\t\t\t\tnew ChangeSettingDefault();\n\t\t\t\tnew ToggleSetting();\n\t\t\t\tnew DrawerSettingChildView();\n\t\t\t\tnew FieldsEditActive();\n\t\t\t\tnew FieldSettings();\n\t\t\t\tnew FieldQuantity();\n\t\t\t\t/*\n\t\t\t\t * TODO: Actions domain controllers\n\t\t\t\t \n\t\t\t\tnew ActionTypes();\n\t\t\t\tnew ActionData();\n\t\t\t\tnew ActionSettings();\n\t\t\t\tnew ActionEditActive();\n\t\t\t\tnew ActionAddTypes();\n\t\t\t\tnew ActionTypeDrag();\n\t\t\t\tnew ActionDroppable();\n\t\t\t\tnew ActionFilterTypes();\n\t\t\t\t/*\n\t\t\t\t * TODO: Settings domain controllers\n\t\t\t\t \n\t\t\t\tnew SettingTypes();\n\t\t\t\tnew FormSettings();\n\t\t\t\tnew SettingData();\n\t\t\t\tnew SettingsEditActive();\n\t\t\t\tnew SettingsClickEdit();\n\t\t\t\t/*\n\t\t\t\t * Data controllers need to be set after every other controller has been setup, even if they aren't domain-specific.\n\t\t\t\t * We load them from domains to app specificity.\n\t\t\t\t\n\t\t\t\tnew FieldData();\n\t\t\t\tnew FormData();\n\t\t\t\tnew MergeTags();\n\t\t\t\tnew ItemSettingFill();\t\t\t\t\n\t\t\t\t*/\n\t\t\t\tnew AppData();\n\n\t\t\t}\n\t\t});\n\n\t\treturn controller;\n} );\n\n","require.config( {\n\tbaseUrl: nfAdmin.requireBaseUrl + '/builder/'\n} );\n\nvar nfRadio = Backbone.Radio;\n\njQuery( document ).ready( function( $ ) {\n\trequire( ['views/app/builder', 'controllers/loadControllers'], function( BuilderView, LoadControllers ) {\n\n\t\tvar NinjaForms = Marionette.Application.extend( {\n\n\t\t\tinitialize: function( options ) {\n\t\t\t\t// Trigger an event before we load our controllers.\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'before:loadControllers', this );\n\t\t\t\t// Load our controllers.\n\t\t\t\tvar loadControllers = new LoadControllers();\n\t\t\t\t// Trigger an event after we load our controllers.\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'after:loadControllers', this );\n\t\t\t},\n\n\t\t\tonStart: function() {\n\t\t\t\tvar builderView = new BuilderView();\n\n\t\t\t\t// Setup our default domain\n\t\t\t\t// var currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\n\t\t\t\t// var appDomains = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\t\t// var defaultDomain = appDomains.get( 'fields' );\n\t\t\t\t// nfRadio.channel( 'app' ).trigger( 'click:menu', {}, defaultDomain );\n\n\t\t\t\t// Trigger our after start event.\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'after:appStart', this );\n\t\t\t\t// nfUndoManager.startTracking();\t\n\t\t\t}\n\t\t} );\n\t\n\t\tvar ninjaForms = new NinjaForms();\n\t\tninjaForms.start();\n\t} );\n} );\ndefine(\"main\", function(){});\n\n"],"sourceRoot":"/source/"}