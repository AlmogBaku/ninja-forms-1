{"version":3,"sources":["../lib/almond.js","views/app/menuItem.js","views/app/menu.js","views/app/menuButtons.js","views/app/mobileMenuButton.js","views/app/header.js","views/app/subHeader.js","views/app/formTitle.js","views/app/builderHeader.js","views/app/main.js","views/app/mobileMenuItem.js","views/app/mobileMenu.js","views/app/drawer/contentEmpty.js","views/app/drawer.js","views/app/drawer/mergeTagItem.js","views/app/drawer/mergeTagsSection.js","models/app/mergeTagModel.js","models/app/mergeTagCollection.js","views/app/drawer/mergeTagsContent.js","views/app/builder.js","controllers/app/drawer.js","views/app/drawer/headerDefault.js","views/app/drawer/footerDefault.js","models/app/drawerModel.js","models/app/drawerCollection.js","views/fields/drawer/stagedField.js","views/fields/drawer/stagingEmpty.js","views/fields/drawer/stagingCollection.js","models/fields/stagingModel.js","models/fields/stagingCollection.js","views/fields/drawer/typeSection.js","views/fields/drawer/typeSectionCollection.js","views/fields/drawer/addField.js","views/app/drawer/itemSettingCollection.js","views/app/drawer/itemSettingGroup.js","views/app/drawer/itemSettingGroupCollection.js","views/app/drawer/editSettings.js","views/actions/drawer/typeButton.js","views/actions/drawer/typeCollection.js","views/actions/drawer/addAction.js","views/advanced/drawer/editFormSettings.js","views/app/drawer/contentViewChangesItem.js","views/app/drawer/contentViewChanges.js","views/app/drawer/headerViewChanges.js","views/app/drawer/settingError.js","views/app/drawer/itemSetting.js","views/app/drawer/contentNewForm.js","views/app/drawer/headerNewForm.js","controllers/app/drawerConfig.js","models/app/domainModel.js","models/app/domainCollection.js","views/fields/mainHeader.js","views/fields/subHeader.js","views/app/itemControls.js","views/fields/fieldItem.js","views/fields/mainContentEmpty.js","views/fields/mainContentFieldCollection.js","views/actions/mainHeader.js","views/actions/subHeader.js","views/actions/actionItem.js","views/actions/mainContentEmpty.js","views/actions/mainContent.js","views/advanced/mainHeader.js","views/advanced/subHeader.js","views/advanced/settingItem.js","views/advanced/mainContent.js","controllers/app/domainConfig.js","models/app/appModel.js","controllers/app/data.js","controllers/app/drawerToggleSettingGroup.js","controllers/app/updateDB.js","models/app/formModel.js","controllers/app/formData.js","controllers/app/previewLink.js","controllers/app/menuButtons.js","models/app/changeModel.js","models/app/changeCollection.js","controllers/app/trackChanges.js","controllers/app/undoChanges.js","controllers/app/publishResponse.js","controllers/app/changeDomain.js","controllers/app/pushstate.js","controllers/app/hotkeys.js","controllers/app/cleanState.js","controllers/app/coreUndo.js","controllers/app/cloneModelDeep.js","controllers/app/getSettingChildView.js","controllers/app/changeSettingDefault.js","views/app/drawer/typeSettingFieldset.js","models/app/settingModel.js","models/app/settingCollection.js","controllers/app/fieldset.js","controllers/app/toggleSetting.js","controllers/app/itemControls.js","controllers/app/mergeTags.js","controllers/app/itemSettingFill.js","controllers/app/confirmPublish.js","controllers/app/rte.js","controllers/app/changeMenu.js","controllers/app/mobile.js","controllers/app/notices.js","models/app/typeModel.js","models/app/typeCollection.js","models/app/settingGroupModel.js","models/app/settingGroupCollection.js","models/fields/typeSectionModel.js","models/fields/typeSectionCollection.js","controllers/fields/types.js","controllers/fields/fieldTypeDrag.js","controllers/fields/stagingDrag.js","controllers/fields/savedFieldsSection.js","controllers/fields/staging.js","controllers/fields/stagingSortable.js","controllers/fields/filterTypes.js","controllers/fields/sortable.js","models/fields/fieldModel.js","models/fields/fieldCollection.js","controllers/fields/data.js","models/app/optionRepeaterModel.js","models/app/optionRepeaterCollection.js","views/app/drawer/optionRepeaterError.js","views/app/drawer/optionRepeaterOption.js","views/app/drawer/optionRepeaterEmpty.js","views/app/drawer/optionRepeaterComposite.js","controllers/app/optionRepeater.js","controllers/fields/editActive.js","controllers/fields/fieldSettings.js","controllers/fields/fieldCreditCard.js","controllers/fields/fieldPassword.js","controllers/fields/fieldQuantity.js","controllers/fields/fieldShipping.js","controllers/fields/key.js","controllers/fields/notices.js","controllers/fields/mobile.js","controllers/actions/types.js","models/actions/actionModel.js","models/actions/actionCollection.js","controllers/actions/data.js","controllers/actions/actionSettings.js","controllers/actions/editActive.js","controllers/actions/addActionTypes.js","controllers/actions/typeDrag.js","controllers/actions/droppable.js","models/actions/typeModel.js","models/actions/typeCollection.js","controllers/actions/filterTypes.js","controllers/advanced/types.js","models/advanced/settingsModel.js","controllers/advanced/data.js","controllers/advanced/formSettings.js","controllers/advanced/editActive.js","controllers/advanced/clickEdit.js","controllers/advanced/calculations.js","controllers/loadControllers.js","main.js"],"names":["requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","view","Marionette","ItemView","extend","tagName","template","initialize","this","listenTo","nfRadio","channel","render","model","on","onRender","$el","children","unwrap","setElement","events","click a","clickAppMenu","trigger","templateHelpers","renderDashicons","dashicons","renderClasses","classes","currentDomain","request","get","renderUrl","url","formModel","renderTarget","renderDisabled","disabled","appMenuItemView","CollectionView","childView","onShow","el","find","reply","getViewChangesIcon","that","renderPublish","publishWidth","_","html","maybeDisabled","maybeRenderCancel","publishEL","outerWidth","click .publish","click .viewChanges","clickPublish","clickViewChanges","click .nf-mobile-menu","clickMobileMenu","builderEl","toggleClass","appMenuCollectionView","appMenuButtonsView","mobileMenuButtonView","LayoutView","regions","menu","buttons","mobileMenuButton","appDomainCollection","show","collection","click #nf-logo","clickLogo","renderTitle","formData","appHeaderView","appSubHeaderView","formTitleView","app","formTitle","appSub","changeSubHeader","formSettings","subHeaderView","header","content","getMainEl","parent","perfectScrollbar","disableSelection","contentView","mobileDashicon","mobileMenuItemView","CompositeView","attachHtml","collectionView","append","click .nf-publish","drawerEmptyView","footer","getEl","loadContent","emptyContent","drawerID","data","drawer","headerView","footerView","empty","click .nf-toggle-drawer","clickToggleDrawer","onBeforeDestroy","off","clickTag","active","mergeTagItemView","fieldCollection","updateFields","set","Backbone","Model","defaults","exclude","mergeTagModel","Collection","mergeTagsSectionView","MergeTagCollection","getMergeTagsView","reRender","settingModel","mergeTagCollection","defaultGroups","where","default_group","useMergeTags","each","remove","include","models","sectionModel","console","log","add","mainView","mobileMenuView","drawerView","mergeTagsContentView","menuDrawer","mergeTagsContent","mergeTags","mergeTagsClone","clone","getBuilderEl","getBuilderView","click .nf-open-drawer","click .nf-change-domain","click .nf-close-drawer","openDrawer","closeDrawer","changeDomain","controller","clickOpenDrawer","toggleDrawerSize","getClosedDrawerPos","preventClose","enableClose","maybePreventClose","objPreventClose","filterFocused","currentDrawer","addClass","removeClass","rightClosed","drawerEl","css","right","checkCloseDrawerPos","setInterval","clearInterval","target","currentDomainID","dataModel","hasFocus","checkOpenDrawerPos","focusFilter","filterEl","focus","closedPos","width","keys","key","getPreventClose","clearFilter","blurFilter","keyup .nf-filter","input .nf-filter","focus input","changeFilter","maybeChangeFilter","keyCode","addObject","trim","val","blur","getFocus","drawerDisabled","defaultHeaderView","defaultFooterView","getHeaderView","getFooterView","drawerModel","click .dashicons-dismiss","removeStagedField","stagedFieldView","stagedFieldsEmptyView","emptyView","getStagedFieldsEl","sortable","placeholder","helper","tolerance","over","ui","out","receive","update","start","stop","draggable","opacity","connectToSortable","height","element","left","top","stagingModel","comparator","bindAll","getTypeSection","dragging","scroll","click .nf-item","keydown .nf-item","mousedown .nf-item","clickFieldType","mousedownFieldType","maybeClickFieldType","renderFieldTypes","fieldTypes","type","nicename","savedField","isSavedField","fieldTypeSectionView","drawerStagingView","StagingCollection","fieldTypeSectionCollectionView","staging","primary","secondary","filterFieldTypes","removeFieldTypeFilter","savedCollection","primaryCollection","fieldTypeSectionCollection","secondaryCollection","stagingCollection","filteredSectionCollection","reset","childViewOptions","getChildView","itemSettingCollectionView","settings","click .toggle","clickToggleGroup","renderLabel","label","renderArrowDir","display","itemSettingGroupView","itemSettingGroupCollectionView","settingGroups","groupCollection","maybeRenderTitle","renderTypeNicename","domainID","clickAddAction","window","open","image","section","renderStyle","actionTypeButtonView","renderNicename","slug","actionTypeCollectionView","filteractionTypes","removeactionTypeFilter","installedActions","availableActions","filteredInstalled","filteredAvailable","click .undoSingle","undoSingle","viewChangesItem","className","click .undoChanges","clickUndoChanges","settingErrorView","error","renderOnChange","renderError","drawerOpened","drawerClosed","onBeforeRender","next","jBox","maxWidth","theme","closeOnClick","mask","input","autoNumeric","aSep","thousandsSeparator","aDec","decimalPoint","aSign","format","onAttach","renderVisible","renderSetting","renderLabelClasses","use_merge_tags","renderTooltip","help","renderMergeTags","hide_merge_tags","change .setting","keyup .setting","click .setting","click .extra","changeSetting","keyUpSetting","clickSetting","clickExtra","itemSettingView","formName","drawerCollection","addFieldView","editSettingsView","addActionView","editFormSettingsView","viewChangesView","viewChangesHeaderView","newFormView","newFormHeaderView","mobileItemControlsView","getContentView","getDrawerCollection","getDrawer","hotkeys","domainModel","hide","click .nf-edit-settings","click .nf-delete","click .nf-duplicate","clickEdit","clickDelete","clickDuplicateField","itemControlsView","itemControls","touch","ClassyWiggle","degrees","delay","editActive","renderRequired","required","getFieldID","isNumeric","click","maybeClickEdit","hasClass","droppable","accept","hoverClass","item","drop","mainContentFieldView","mainContentFieldEmptyView","reorderOnSort","getSortableEl","initSortable","destroySortable","containment","cancel","actionCollection","maybeDeactivate","change input","changeToggle","renderToggle","actionLabel","actionView","activeClass","settingItem","fieldsMainHeaderView","fieldsSubHeaderView","fieldsMainContentFieldCollectionView","actionsMainHeaderView","actionsSubHeaderView","actionsMainContentView","settingsMainHeaderView","settingsSubHeaderView","settingsMainContentView","Esc","Ctrl+Shift+n","Ctrl+Shift+a","Ctrl+Shift+s","Alt+Ctrl+t","up","down","Shift+return","getMainHeaderView","getSubHeaderView","getMainContentView","Ctrl+Shift+f","nfAdmin","previewurl","getDomainCollection","getDomainModel","loading","changeStatus","appModel","clean","mobile","isMobile","getData","getSetting","getCurrentDomain","getCurrentDrawer","updateCurrentDomain","updateCurrentDrawer","updateSetting","setting","currentDrawerID","toggleSettingGroup","errors","updateDB","action","jsAction","JSON","parse","stringify","removedIDs","fields","field","parent_id","deleted_fields","actions","deleted_actions","autoClose","post","ajaxurl","form","security","ajaxNonce","response","exception","silent","preloadedFormData","getFormModel","disablePreview","enablePreview","changePreviewNicename","appDomains","preview","publish","viewChanges","changeCollection","parseInt","cid","addNotice","ChangeModel","registerChange","getCollection","maybeResetCollection","changes","dashicon","changeModel","undoChanges","sort","change","undoAll","publishResponse","new_ids","newID","oldID","forms","history","replaceState","options","position","x","y","animation","close","offset","changeAppDomain","preventChange","enableChange","objPreventChange","maybePreventChange","changePushState","pushState","location","href","reExp","toString","newUrl","changeHotkeys","addNewField","addNewAction","changeDomainFields","changeDomainActions","changeDomainSettings","document","hotkey","msg","fieldsDomain","actionsDomain","settingsDomain","ignoreAttributes","setAppClean","attr","changedAttributes","changedAttr","after","undoChangeSetting","undoAddObject","undoRemoveObject","undoDuplicateObject","undoSortFields","undoAddListOption","undoRemoveListOption","undoSortListOptions","fieldModel","before","maybeRemoveChange","objectModel","newIDs","results","objectCollection","objModels","optionModel","cloneModelDeep","attributes","copy","constructor","newModel","getSettingChildView","settingChildView","object","maybePreventUI","objectType","updateKey","keyModel","fieldsetView","settingCollection","createSettingsCollection","settingTypeModel","clickDuplicate","tmpID","tagSectionCollection","tagSection","tags","fieldTags","tag","getFieldKeyFormat","calcTags","calcCollection","calc","currentElement","initMergeTags","clickMergeTag","addFieldTags","deleteFieldTags","updateCurrentElement","updateCurrentSetting","getSectionModel","replaceFieldKey","mergeTagsView","jBoxes","title","closeOnEsc","maxHeight","onOpen","setContent","prev","onClose","tagModel","currentValue","currentPos","caret","newPos","substr","summernote","fieldID","openMergeTags","returnMergeTags","preventDefault","currentModel","upMergeTags","changeActiveTag","downMergeTags","dir","inc","currentIndex","nextModel","userInfo","system","updateOpen","newKey","oldTag","oldKey","_previousAttributes","settingName","oldVal","re","RegExp","newVal","beforeRenderSetting","confirmPublish","initSettingModel","destroySetting","meta_image_frame","icons","align","alignCenter","alignJustify","alignLeft","alignRight","indent","outdent","bold","code","eraser","italic","link","unlink","magic","minus","orderedlist","redo","square","table","underline","undo","unorderedlist","currentContext","initRTE","settingView","linkButton","context","mediaButton","toolbar","codemirror","lineNumbers","prettifyHtml","callbacks","onBlur","removeRTE","linkDropdown","buttonGroup","button","contents","tooltip","clickLinkButton","toggle","dropdown","mergeTagsButton","openMediaManager","invoke","wp","media","frames","text","media_attachment","state","first","toJSON","insertMedia","range","closest","textEl","urlEl","isNewWindowEl","isNewWindow","filename","editFormText","changeMenu","formPublish","isNewForm","highlightAddNew","appendEditForm","form_id","isNaN","closeMobileMenu","closeNotice","notices","appDefaults","color","zIndex","constructOnInit","stack","mobileDefaults","desktopDefaults","openNotice","typeModel","settingGroupModel","typeSectionModel","fieldTypeCollection","fieldTypeSettingGroupCollection","fieldTypeSections","fieldTypeData","group","groupTmp","fieldType","alias","parentType","settingDefaults","getFieldType","getTypeCollection","getTypeSections","addStagedField","startDrag","stopDrag","getCurrentDraggableHelperClone","mainEl","style","setProperty","draggableHelperClone","stagedFields","num","getSavedFields","getStagingCollection","sortStagedFields","clearStagedFields","beforeCloseDrawer","now","tmpField","sortableEl","order","search","pos","addActiveClass","removeActiveClass","receiveStagedFields","overStagedFields","outStagedFields","startStagedFields","stopStagedFields","stagedFieldsEl","currentHelper","helperClone","filtered","filterCollection","toLowerCase","filter","found","receiveFieldsSortable","overfieldsSortable","outFieldsSortable","stopFieldsSortable","startFieldsSortable","updateFieldsSortable","addField","insertedAt","fieldWidth","dragFieldID","dragModel","oldPos","objectDomain","updateFieldKey","tmpNum","removeField","getFieldCollection","getField","getTmpFieldID","deleteField","sortFields","updateFieldSetting","changeErrors","size","errorsFound","opt","listOptionModel","addOption","ErrorView","columns","renderErrors","hasErrors","keyup","changeOption","deleteOption","keyupOption","maybeAddOption","getColumns","listOptionView","listEmptyView","listOptionCollection","optionCollection","handle","forcePlaceholderSize","renderHeaders","col","renderFieldsetClasses","click .nf-add-new","clickAddOption","listCompositeView","updateOptionSortable","stopOptionSortable","startOptionSortable","triggerDataModel","modelData","new","newOrder","clearEditActive","fieldSettings","getSettingModel","findWhere","dropCreditCardField","stageCreditCardField","newField","dropField","stageField","field_slug","productFields","getProductFields","addMask","newFieldKey","updateLabel","keyUp","keyExists","changed","setError","slugify","separator","testKey","startWiggle","stopWiggle","initWiggle","typeCollection","settingGroupCollection","actionTypeData","actionType","getType","getInstalledActions","getAvailableActions","actionModel","addAction","removeAction","getAction","getTmpID","deleteAction","actionSettings","dropActionType","type_slug","actionTypeModel","filterActionTypes","newInstalled","newAvailable","formSettingTypeData","settingType","bind","settingsModel","getSettings","updateCalc","sortCalc","checkName","checkEQ","checkAllCalcs","nameExists","eq","errorSelfRef","errorFutureCalc","calcs","match","calculations","targetCalc","selfRef","futureCalc","Drawer","DrawerConfig","DomainConfig","AppData","DrawerToggleSettingGroup","UpdateDB","FormData","PreviewLink","AppMenuButtons","AppTrackChanges","AppUndoChanges","AppPublishResponse","AppChangeDomain","Pushstate","Hotkeys","CleanState","CoreUndo","CloneModelDeep","DrawerSettingChildView","ChangeSettingDefault","Fieldset","ToggleSetting","ItemControls","MergeTags","ItemSettingFill","ConfirmPublish","RTE","ChangeMenu","AppMobile","AppNotices","FieldTypes","FieldTypeDrag","FieldStagingDrag","SavedFields","StagedFieldsData","StagedFieldsSortable","DrawerFilterFieldTypes","MainContentFieldsSortable","FieldData","OptionRepeater","FieldsEditActive","FieldSettings","FieldCreditCard","FieldPassword","FieldQuantity","FieldShipping","FieldKey","Notices","FieldsMobile","ActionTypes","ActionData","ActionSettings","ActionEditActive","ActionAddTypes","ActionTypeDrag","ActionDroppable","ActionFilterTypes","SettingTypes","SettingData","FormSettings","SettingsEditActive","SettingsClickEdit","AdvancedCalculations","baseUrl","requireBaseUrl","Radio","ready","$","BuilderView","LoadControllers","NinjaForms","Application","onStart","ninjaForms"],"mappings":"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A,EACAC,GAAA,EAEAC,EAAAH,EAAAI,MAAA,GAAAlQ,QAAA,iBAOA,IAAAiQ,EAAA,CACA,GAAAE,GAAA9U,EAAApe,UAEAgzB,GAAAA,EAAA57B,IAAA,SAAA2oB,GAEA,GAAA1pB,GAAA0pB,EAAAnoB,QAAA,IAAA,IAAAA,QAAA,SAAA,IAEAu7B,EAAAD,EAAA1D,WAAAn5B,KAAAA,GACAA,IAAA+nB,EAAA9gB,IAAA,SAEAma,EAAA2b,QAAA,wCACAN,GAAA,GACAK,GAAAA,EAAA71B,IAAA,SAAA8gB,EAAA9gB,IAAA,WAEAy1B,GAAA,EACAtb,EAAA4b,WAAA,2CAMAP,SACArb,GAAA2b,QAIAL,SACAtb,GAAA4b,WAIAjV,EAAApb,IAAA,SAAAyU,GACA2G,EAAAthB,QAAA,gBAAAshB,IAIAuU,cAAA,SAAA3yB,GACA,GAAA3B,GAAAtC,IACAiE,GAAAoE,OAAAhN,IAAA,SAAAi2B,GACAhvB,EAAAo0B,UAAApF,EAAA/vB,IAAA,QAAA+vB,GACAhvB,EAAAq0B,QAAArF,EAAA/vB,IAAA,MAAA+vB,OAMA,OAAA3nB,KCnJA7P,EACA,+BAIA,yBACA,+BACA,+BACA,uBACA,2CACA,2BACA,2BACA,8BACA,8BACA,+BACA,8BACA,kCACA,+BACA,4BACA,0BACA,6BACA,2BACA,iCACA,sCACA,uCACA,2BACA,gCACA,+BACA,4BACA,kCACA,iCACA,sBACA,6BACA,yBACA,0BAIA,2BACA,mCACA,iCACA,wCACA,6BACA,qCACA,iCACA,8BACA,0BACA,iCACA,gCACA,mCACA,qCACA,mCACA,mCACA,mCACA,yBACA,6BACA,4BAKA,4BACA,2BACA,qCACA,iCACA,qCACA,+BACA,gCACA,kCAKA,6BACA,4BACA,oCACA,kCACA,iCACA,qCAEA,SAIAy9B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIAC,EACAC,EACAC,EACAC,EACAC,EACAC,GACAC,GACAC,GAIAC,GACAC,GACAC,GACAC,GACAC,GACAC,IAGA,GAAA1xB,IAAAjK,WAAA7B,OAAA+B,QACAG,WAAA,WAIA,GAAAs4B,GACA,GAAAd,GACA,GAAAC,GACA,GAAAC,GACA,GAAAE,GACA,GAAAC,GACA,GAAAE,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAG,GACA,GAAAC,GACA,GAAAC,GACA,GAAAK,GACA,GAAAG,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GAQA,GAAAT,GACA,GAAAmB,GAEA,GAAAT,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAlB,GACA,GAAAE,GACA,GAAAH,GACA,GAAAsB,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GAIA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,IACA,GAAAC,IACA,GAAAC,IAIA,GAAAC,IACA,GAAAE,IACA,GAAAD,IACA,GAAAE,IACA,GAAAC,IACA,GAAAC,IAKA,GAAA3D,GACA,GAAAmC,GACA,GAAAhC,GACA,GAAAiB,GACA,GAAAC,KAIA,OAAApvB,MAGA9P,EAAAyB,QChQAggC,QAAAhhB,QAAAihB,eAAA,aAGA,IAAAr7B,GAAAgH,SAAAs0B,KAEAh8B,QAAAihB,UAAAgb,MAAA,SAAAC,GACA7hC,GAAA,oBAAA,+BAAA,SAAA8hC,EAAAC,GAEA,GAAAC,GAAAn8B,WAAAo8B,YAAAl8B,QAEAG,WAAA,SAAAif,GAEA9e,EAAAC,QAAA,OAAAY,QAAA,yBAAAf,KAEA,IAAA47B,EAEA17B,GAAAC,QAAA,OAAAY,QAAA,wBAAAf,OAGA+7B,QAAA,WACA,GAAAJ,EAEAz7B,GAAAC,QAAA,OAAAY,QAAA,iBAAAf,SAIAg8B,EAAA,GAAAH,EACAG,GAAAnujbpIA,ADqIA;ACpnIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA,ADmEA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA,ADgBA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA,ADkDA;ACjhBA,ADiBA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA,AD0CA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA,ADkBA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA,ADmDA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnGA,ADoGA;ACntIA,ADuIA;ACtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA,ADgBA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA,ADeA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9EA,AD+EA;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACflHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA,ADYA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA,ADmDA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA,ADYA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA,ADwCA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA,ADyBA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA,AD4CA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA,ADgBA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzQA,AD0QA;ACzQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA,ADgBA;ACfrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA,ADsBA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA,ADQA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrFA,ADsFA;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA,ADkBA;ACjjDA,ADkDA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA,ADQA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA,ADoCA;ACnlKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA,AD4BA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA,ADqBA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvEA,ADwEA;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA,ADiBA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA,AD8BA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACltFA,ADuFA;ACtpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA,AD2BA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3FA,AD4FA;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxrCA,ADsCA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3FA,AD4FA;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA,ADgEA;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA,ADkBA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnjTA,ADkTA;ACjTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA,AD2BA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA,ADeA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA,ADiBA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA,ADiBA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbzHA,AD0HA;ACzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA,ADwDA;ACvlrIA,ADsIA;ACrttTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA,ADmEA;AClnJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzDA,AD0DA;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnlGA,ADmGA;AClxPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA,ADyBA;ACxxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA,ADqBA;ACpjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7DA,AD8DA;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7CA,AD8CA;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjGA,ADkGA;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA,ADkCA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA,ADgEA;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA,ADeA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA,ADuCA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA,ADyBA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA,ADkCA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA,AD0BA;ACzjQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"builder.js","sourcesContent":["/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"../lib/almond\", function(){});\n\n","/**\n * Renders an application menu item from a domain model.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/menuItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-app-menu-item',\n\n\t\tinitialize: function() {\n\t\t\t// Listen for domain changes and re-render when we detect one.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.render );\n\t\t\t// When we change the model (to disable it, for example), re-render.\n\t\t\tthis.model.on( 'change', this.render, this );\n\t\t},\n\n\t\t/**\n\t\t * When we render this view, remove the extra <div> tag created by backbone.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\t// Listen for clicks on our app menu.\n\t\tevents: {\n\t\t\t'click a': 'clickAppMenu'\n\t\t},\n\n\t\t/**\n\t\t * When we click on a menu item, fire a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * We pass this.model so that we know what item was clicked.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\te event\n\t\t * @return return\n\t\t */\n\t\tclickAppMenu: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:menu', e, this.model );\n\t\t},\n\n\t\t/**\n\t\t * These functions are available to templates, and help us to remove logic from template files.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\t/**\n\t\t\t\t * If we have any dashicons in our model, render them.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderDashicons: function() {\n\t\t\t\t\tif ( this.dashicons ) {\n\t\t\t\t\t\treturn '<span class=\"dashicons ' + this.dashicons + '\"></span>'\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * Render classes for our menu item, including active.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = this.classes;\n\t\t\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\t\t\tif ( currentDomain.get( 'id' ) == this.id ) {\n\t\t\t\t\t\tclasses += ' active';\n\t\t\t\t\t}\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * If our menu is a link (like preview), render its url.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderUrl: function() {\n\t\t\t\t\tif ( '' != this.url ) {\n\t\t\t\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\t\t\t\t\t\treturn this.url + formModel.get( 'id' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '#';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * If our menu is a link (like preview), render its target.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderTarget: function() {\n\t\t\t\t\tif ( '' != this.url ) {\n\t\t\t\t\t\treturn '_blank';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '_self';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * If our menu item is disabled, output 'disabled'\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderDisabled: function() {\n\t\t\t\t\tif ( this.disabled ) {\n\t\t\t\t\t\treturn 'disabled';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Collection view that takes our app menu items and renders an individual view for each.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/menu',['views/app/menuItem'], function( appMenuItemView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: appMenuItemView,\n\n\t\t/**\n\t\t * When we show this view, get rid of the extra <div> tag added by backbone.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonShow: function() {\n\t\t\tjQuery( this.el ).find( 'li:last' ).unwrap();\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","/**\n * Renders the action buttons to the right of the app menu. i.e. Publish\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/menuButtons',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'span',\n\t\ttemplate: '#nf-tmpl-app-header-action-button',\n\n\t\tinitialize: function() {\n\t\t\t// Listen to changes on the app 'clean' state. When it changes, re-render.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:clean', this.render, this );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:loading', this.render, this );\n\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:viewChangesIcon', this.getViewChangesIcon, this );\n\t\t},\n\n\t\t/**\n\t\t * These functions are available to templates, and help us to remove logic from template files.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\ttemplateHelpers: function () {\n\t\t\tvar that = this;\n\t    \treturn {\n\n\t    \t\t/**\n\t    \t\t * Render our Publish button. If we're loading, render the loading version.\n\t    \t\t *\n\t    \t\t * @since  3.0\n\t    \t\t * @return string\n\t    \t\t */\n\t    \t\trenderPublish: function() {\n\t    \t\t\tif ( that.publishWidth ) {\n\t    \t\t\t\tthis.publishWidth = 'style=\"width:' + that.publishWidth + 'px !important\"';\n\t    \t\t\t} else {\n\t    \t\t\t\tthis.publishWidth = '';\n\t    \t\t\t}\n\t    \t\t\tif ( nfRadio.channel( 'app' ).request( 'get:setting', 'loading' ) ) {\n\t    \t\t\t\treturn _.template( jQuery( '#nf-tmpl-add-header-publish-loading' ).html(), this );\t    \t\t\t\t\n\t    \t\t\t} else {\n\t    \t\t\t\treturn _.template( jQuery( '#nf-tmpl-app-header-publish-button' ).html(), this );\n\t    \t\t\t}\n\t    \t\t},\n\n\t    \t\t/**\n\t    \t\t * If our app state is clean, disable publish.\n\t    \t\t * \n\t    \t\t * @since  3.0\n\t    \t\t * @return string\n\t    \t\t */\n\t    \t\tmaybeDisabled: function() {\n\t    \t\t\tif ( nfRadio.channel( 'app' ).request( 'get:setting', 'clean' ) ) {\n\t    \t\t\t\treturn 'disabled';\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t    \t\t},\n\n\t    \t\t/**\n\t    \t\t * If our app isn't clean, render our 'viewChanges' button.\n\t    \t\t * @since  version\n\t    \t\t * @return {[type]} [description]\n\t    \t\t */\n\t    \t\tmaybeRenderCancel: function() {\n\t    \t\t\tif ( ! nfRadio.channel( 'app' ).request( 'get:setting', 'clean' ) ) {\n\t    \t\t\t\treturn _.template( jQuery( '#nf-tmpl-app-header-view-changes' ).html(), this );\t    \t\t\t\t\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tvar publishEL = jQuery( this.el ).find( '.publish' );\n\t\t\tthis.publishWidth = jQuery( publishEL ).outerWidth( true );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\t// var viewChangesIcon = this.getViewChangesIcon();\n\t\t\t// jQuery( viewChangesIcon ).find( '.nf-cancel' ).ClassyWiggle( 'start', { degrees: ['1', '6', '1', '0', '-1', '-6', '-1', '0'], delay: 150 } );\n\t\t\t// jQuery( this.el).find( '.publish' ).ClassyWiggle( 'start', { degrees: ['.65', '1', '.65', '0', '-.65', '-1', '-.65', '0'], delay: 50 } );\n\t\t},\n\n\t\t/**\n\t\t * Listen for clicks on the Publish or view changes button.\n\t\t * @type {Object}\n\t\t */\n\t\tevents: {\n\t\t\t'click .publish': 'clickPublish',\n\t\t\t'click .viewChanges': 'clickViewChanges'\n\t\t},\n\n\t\t/**\n\t\t * When we click publish, trigger a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tclickPublish: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:publish', e );\n\t\t},\n\n\t\t/**\n\t\t * When we click view changes, trigger a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tclickViewChanges: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:viewChanges', e );\n\t\t},\n\n\t\tgetViewChangesIcon: function() {\n\t\t\treturn jQuery( this.el ).find( '.nf-cancel' );\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders the action buttons to the right of the app menu. i.e. Publish\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/mobileMenuButton',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'span',\n\t\ttemplate: '#nf-tmpl-mobile-menu-button',\n\n\t\tinitialize: function() {\n\t\t\t// Listen to changes on the app 'clean' state. When it changes, re-render.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:clean', this.render, this );\n\t\t},\n\n\t\t/**\n\t\t * These functions are available to templates, and help us to remove logic from template files.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\ttemplateHelpers: function () {\n\t\t\tvar that = this;\n\t    \treturn {\n\t    \t\t/**\n\t    \t\t * If our app state is clean, disable button.\n\t    \t\t * \n\t    \t\t * @since  3.0\n\t    \t\t * @return string\n\t    \t\t */\n\t    \t\tmaybeDisabled: function() {\n\t    \t\t\tif ( nfRadio.channel( 'app' ).request( 'get:setting', 'clean' ) ) {\n\t    \t\t\t\treturn 'disabled';\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t    \t\t}\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Listen for clicks on the mobile menu button.\n\t\t * @type {Object}\n\t\t */\n\t\tevents: {\n\t\t\t'click .nf-mobile-menu': 'clickMobileMenu'\n\t\t},\n\n\t\t/**\n\t\t * When we click publish, trigger a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tclickMobileMenu: function( e) {\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tjQuery( builderEl ).toggleClass( 'nf-menu-expand' );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Main application header. Includes links to all of our domains.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/header',['views/app/menu', 'views/app/menuButtons', 'views/app/mobileMenuButton'], function( appMenuCollectionView, appMenuButtonsView, mobileMenuButtonView ) {\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-app-header',\n\n\t\tregions: {\n\t\t\t// Menu is our main app menu.\n\t\t\tmenu: '.nf-app-menu',\n\t\t\t// Buttons represents the 'view changes' and 'Publish' buttons.\n\t\t\tbuttons: '.nf-app-buttons',\n\t\t\tmobileMenuButton: '.nf-mobile-menu-button'\n\t\t},\n\n\t\t/**\n\t\t * Since this is a layout region, we need to fill the two areas: menu and buttons whenever we show this view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\t// Get our domains\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\t// show the menu area using the appropriate view, passing our domain collection.\n\t\t\tthis.menu.show( new appMenuCollectionView( { collection: appDomainCollection } ) );\n\t\t\tthis.buttons.show( new appMenuButtonsView() );\n\t\t\tthis.mobileMenuButton.show( new mobileMenuButtonView() );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click #nf-logo': 'clickLogo'\n\t\t},\n\n\t\tclickLogo: function( e ) {\n\t\t\t\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","/**\n * Renders our sub-header. i.e. add new field, add new action, etc.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/subHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-sub-header'\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders our form title.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/formTitle',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-header-form-title',\n\n\t\tinitialize: function() {\n\t\t\t// When we change the model (to disable it, for example), re-render.\n\t\t\tthis.model.on( 'change:title', this.render, this );\n\t\t},\n\n\t\t/**\n\t\t * When we render this view, remove the extra <div> tag created by backbone.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\t/**\n\t\t * These functions are available to templates, and help us to remove logic from template files.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t    \treturn {\n\t    \t\trenderTitle: function(){\n\t    \t\t\tvar formData = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\t    \t\t\treturn formData.get( 'settings' ).get( 'title' );\n\t\t\t\t},\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders our builder header.\n *\n * This is a layout view and handles two regions:\n * app - menu/buttons\n * subapp - title, add new field, etc.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/builderHeader',['views/app/header', 'views/app/subHeader', 'views/app/formTitle'], function( appHeaderView, appSubHeaderView, formTitleView ) {\n\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: \"div\",\n\t\ttemplate: \"#nf-tmpl-header\",\n\n\t\tregions: {\n\t\t\tapp: \"#nf-app-header\",\n\t\t\tformTitle: \"#nf-app-form-title\",\n\t\t\tappSub: \"#nf-app-sub-header\"\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.changeSubHeader );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tthis.app.show( new appHeaderView() );\n\n\t\t\tvar formData = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\t\t\tvar formSettings = formData.get( 'settings' );\n\t\t\tthis.formTitle.show( new formTitleView( { model: formSettings } ) );\n\n\t\t\tthis.changeSubHeader();\n\t\t},\n\n\t\tchangeSubHeader: function() {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar subHeaderView = currentDomain.get( 'getSubHeaderView' ).call( currentDomain );\n\t\t\tthis.appSub.show( subHeaderView );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/app/main',[], function() {\n\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main',\n\n\t\tregions: {\n\t\t\theader: '#nf-main-header',\n\t\t\tcontent: '#nf-main-content'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.render );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:mainEl', this.getMainEl, this );\n\t\t\t\n\t\t\t// this.listenTo( nfRadio.channel( 'app' ), 'cancel:changes', this.render );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tif ( ! nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\tjQuery( this.el ).parent().perfectScrollbar();\n\t\t\t\tjQuery( this.el ).parent().disableSelection();\n\t\t\t}\n\t\t\tnfRadio.channel( 'main' ).trigger( 'show:main' );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\t// var headerView = currentDomain.get( 'getMainHeaderView' ).call( currentDomain );\n\t\t\t// this.header.show( headerView );\n\t\t\tvar contentView = currentDomain.get( 'getMainContentView' ).call( currentDomain );\n\t\t\tthis.content.show( contentView );\n\n\t\t\tnfRadio.channel( 'main' ).trigger( 'render:main' );\n\t\t},\n\n\t\tgetMainEl: function() {\n\t\t\treturn jQuery( this.el ).parent();\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders an application menu item from a domain model.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/mobileMenuItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-mobile-menu-item',\n\n\t\t/**\n\t\t * When we render this view, remove the extra <div> tag created by backbone.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\t// Listen for clicks on our app menu.\n\t\tevents: {\n\t\t\t'click a': 'clickAppMenu'\n\t\t},\n\n\t\t/**\n\t\t * When we click on a menu item, fire a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * We pass this.model so that we know what item was clicked.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\te event\n\t\t * @return return\n\t\t */\n\t\tclickAppMenu: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:menu', e, this.model );\n\t\t},\n\n\t\t/**\n\t\t * These functions are available to templates, and help us to remove logic from template files.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\t/**\n\t\t\t\t * If we have any dashicons in our model, render them.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderDashicons: function() {\n\t\t\t\t\tif ( this.mobileDashicon ) {\n\t\t\t\t\t\treturn '<span class=\"dashicons ' + this.mobileDashicon + '\"></span>'\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * Render classes for our menu item, including active.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = this.classes;\n\t\t\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\t\t\tif ( currentDomain.get( 'id' ) == this.id ) {\n\t\t\t\t\t\tclasses += ' active';\n\t\t\t\t\t}\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * If our menu is a link (like preview), render its url.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderUrl: function() {\n\t\t\t\t\tif ( '' != this.url ) {\n\t\t\t\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\t\t\t\t\t\treturn this.url + formModel.get( 'id' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '#';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * If our menu is a link (like preview), render its target.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderTarget: function() {\n\t\t\t\t\tif ( '' != this.url ) {\n\t\t\t\t\t\treturn '_blank';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '_self';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * If our menu item is disabled, output 'disabled'\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderDisabled: function() {\n\t\t\t\t\tif ( this.disabled ) {\n\t\t\t\t\t\treturn 'disabled';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Single item view used for the menu drawer.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/mobileMenu',['views/app/mobileMenuItem'], function( mobileMenuItemView ) {\n\tvar view = Marionette.CompositeView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-mobile-menu',\n\t\tchildView: mobileMenuItemView,\n\n\t\tinitialize: function() {\n\t\t\t// Listen to changes on the app 'clean' state. When it changes, re-render.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:clean', this.render, this );\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( '.secondary' ).append( childView.el );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\t/**\n\t    \t\t * If our app state is clean, disable button.\n\t    \t\t * \n\t    \t\t * @since  3.0\n\t    \t\t * @return string\n\t    \t\t */\n\t    \t\tmaybeDisabled: function() {\n\t    \t\t\tif ( nfRadio.channel( 'app' ).request( 'get:setting', 'clean' ) ) {\n\t    \t\t\t\treturn 'disabled';\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t    \t\t}\n\t\t\t};\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-publish': 'clickPublish'\n\t\t},\n\n\t\t/**\n\t\t * When we click publish, trigger a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tclickPublish: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:publish', e );\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tjQuery( builderEl ).toggleClass( 'nf-menu-expand' );\n\t\t},\n\t});\n\n\treturn view;\n} );\n","/**\n * Empty drawer content view.\n * Called before we close the drawer.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/contentEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-empty'\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders our drawer region\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer',['views/app/drawer/contentEmpty'], function( drawerEmptyView ) {\n\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttemplate: '#nf-tmpl-drawer',\n\n\t\tregions: {\n\t\t\theader: '#nf-drawer-header',\n\t\t\tcontent: '#nf-drawer-content',\n\t\t\tfooter: '#nf-drawer-footer'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:drawerEl', this.getEl, this );\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'load:drawerContent', this.loadContent, this );\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'empty:drawerContent', this.emptyContent, this );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tif ( ! nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\tjQuery( this.el ).parent().perfectScrollbar();\n\t\t\t}\n\t\t    // jQuery( this.el ).parent().disableSelection();\n\t\t},\n\n\t\tloadContent: function( drawerID, data ) {\n\t\t\tvar drawer = nfRadio.channel( 'app' ).request( 'get:drawer', drawerID );\n\t\t\tvar contentView = drawer.get( 'getContentView' ).call( drawer, data );\n\t\t\tvar headerView = drawer.get( 'getHeaderView' ).call( drawer, data );\n\t\t\tvar footerView = drawer.get( 'getFooterView' ).call( drawer, data );\n\n\t\t\tthis.header.show( headerView );\n\t\t\tthis.content.show( contentView );\n\t\t\tthis.footer.show( footerView );\n\n\t\t},\n\n\t\temptyContent: function() {\n\t\t\tthis.header.empty();\n\t\t\tthis.content.empty();\n\t\t\tthis.footer.empty();\n\t\t},\n\n\t\tgetEl: function() {\n\t\t\treturn jQuery( this.el ).parent();\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-toggle-drawer': 'clickToggleDrawer'\n\t\t},\n\n\t\tclickToggleDrawer: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:toggleDrawerSize' );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n\n","/**\n * Single item view used for merge tags.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/mergeTagItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'li',\n\n\t\ttemplate: '#nf-tmpl-merge-tags-item',\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:active', this.render );\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:active', this.render, this );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click a': 'clickTag'\n\t\t},\n\n\t\tclickTag: function( e ) {\n\t\t\tnfRadio.channel( 'mergeTags' ).trigger( 'click:mergeTag', e, this.model );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tif ( this.active ) {\n\t\t\t\t\t\treturn 'active';\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Merge tags popup section\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/mergeTagsSection',['views/app/drawer/mergeTagItem'], function( mergeTagItemView ) {\n\tvar view = Marionette.CompositeView.extend({\n\t\ttagName: 'div',\n\t\tchildView: mergeTagItemView,\n\t\ttemplate: '#nf-tmpl-merge-tags-section',\n\n\t\tinitialize: function() {\n\t\t\tthis.collection = this.model.get( 'tags' );\n\t\t\tthis.model.on( 'change', this.render, this );\n\t\t\tif ( 'fields' == this.model.get( 'id' ) ) {\n\t\t\t\t// var fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\t// fieldCollection.on( 'all', this.updateFields, this );\n\t\t\t}\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tif ( 'fields' == this.model.get( 'id' ) ) {\n\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\tfieldCollection.off( 'all', this.updateFields, this );\n\t\t\t}\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( '.merge-tags' ).append( childView.el );\n\t\t},\n\n\t\tupdateFields: function() {\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tthis.model.set( 'tags', fieldCollection );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Model that represents our merge tags.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/mergeTagModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tactive: false,\n\t\t\texclude: false\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collections of merge tags.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/mergeTagCollection',['models/app/mergeTagModel'], function( mergeTagModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: mergeTagModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Merge tags popup\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/mergeTagsContent',['views/app/drawer/mergeTagsSection', 'models/app/mergeTagCollection'], function( mergeTagsSectionView, MergeTagCollection ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-merge-tags-content',\n\t\tchildView: mergeTagsSectionView,\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'get:view', this.getMergeTagsView, this );\n\t\t},\n\n\t\treRender: function( settingModel ) {\n\t\t\tvar mergeTagCollection = nfRadio.channel( 'mergeTags' ).request( 'get:collection' );\n\t\t\tvar defaultGroups = mergeTagCollection.where( { default_group: true } );\n\t\t\tthis.collection = new MergeTagCollection( defaultGroups );\n\t\t\tvar that = this;\n\t\t\tvar useMergeTags = settingModel.get( 'use_merge_tags' );\n\t\t\tif ( 'object' == typeof useMergeTags ) {\n\t\t\t\tif ( 'undefined' != typeof useMergeTags.exclude ) {\n\t\t\t\t\t_.each( useMergeTags.exclude, function( exclude ) {\n\t\t\t\t\t\tthat.collection.remove( exclude );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tif ( 'undefined' != typeof useMergeTags.include ) {\n\t\t\t\t\t_.each( mergeTagCollection.models, function( sectionModel ) {\n\t\t\t\t\t\tif ( -1 != useMergeTags.include.indexOf( sectionModel.get( 'id' ) ) ) {\n\t\t\t\t\t\t\tconsole.log( sectionModel );\n\t\t\t\t\t\t\tthat.collection.add( sectionModel );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.render();\n\t\t},\n\n\t\tgetMergeTagsView: function() {\n\t\t\treturn this;\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Builder view.\n *\n * This layout view has regions that represent our application areas:\n * header\n * main\n * menuDrawer - Mobile side-menu\n * drawer\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/builder',['views/app/builderHeader', 'views/app/main', 'views/app/mobileMenu', 'views/app/drawer', 'views/app/drawer/mergeTagsContent'], function( headerView, mainView, mobileMenuView, drawerView, mergeTagsContentView ) {\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttemplate: \"#nf-tmpl-builder\",\n\t\tel: '#nf-builder',\n\n\t\tregions: {\n\t\t\theader: \"#nf-header\",\n\t\t\tmain: \"#nf-main\",\n\t\t\tmenuDrawer: \"#nf-menu-drawer\",\n\t\t\tdrawer: \"#nf-drawer\",\n\t\t\tmergeTagsContent: '.merge-tags-content'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Layout views aren't self-rendering.\n\t\t\tthis.render();\n\t\t\tvar mergeTags = nfRadio.channel( 'mergeTags' ).request( 'get:collection' );\n\t\t\tvar mergeTagsClone = mergeTags.clone();\n\t\t\tthis.mergeTagsContent.show( new mergeTagsContentView( { collection: mergeTagsClone } ) );\n\t\t\t// Show our header.\n\t\t\tthis.header.show( new headerView() );\n\t\t\t// Show our main content.\n\t\t\tthis.main.show( new mainView() );\n\t\t\t// Show our mobile menu\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tthis.menuDrawer.show( new mobileMenuView( { collection: appDomainCollection } ) );\n\t\t\t// Show our drawer.\n\t\t\tthis.drawer.show( new drawerView() );\n\t\t\t// Respond to requests asking for the builder dom element.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:builderEl', this.getBuilderEl, this );\n\t\t\t// Respond to requests asking for the builder view\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:builderView', this.getBuilderView, this );\n\t\t},\n\n\t\tgetBuilderEl: function() {\n\t\t\treturn this.el;\n\t\t},\n\n\t\tgetBuilderView: function() {\n\t\t\treturn this;\n\t\t},\n\n\t\t// Listen for clicks\n\t\tevents: {\n\t\t\t'click .nf-open-drawer': 'openDrawer',\n\t\t\t'click .nf-change-domain': 'changeDomain',\n\t\t\t'click .nf-close-drawer': 'closeDrawer'\n\t\t},\n\n\t\t/**\n\t\t * Someone clicked to open a drawer, so fire a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te \tevent\n\t\t * @return void\n\t\t */\n\t\topenDrawer: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:openDrawer', e );\n\t\t},\n\t\t/**\n\t\t * Someone clicked to close a drawer, so fire a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tcloseDrawer: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:closeDrawer' );\n\t\t},\n\t\t/**\n\t\t * Someone clicked to change the domain, so fire a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te \tevent\n\t\t * @return void\n\t\t */\n\t\tchangeDomain: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:menu', e );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","/**\n * Handles opening and closing our drawer. This is where we display settings for fields, actions, and settings.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/drawer',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our drawer-related click events.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:openDrawer', this.clickOpenDrawer );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:closeDrawer', this.closeDrawer );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:toggleDrawerSize', this.toggleDrawerSize );\n\n\t\t\t// Reply to direct requests to open or close the drawer.\n\t\t\tnfRadio.channel( 'app' ).reply( 'open:drawer', this.openDrawer, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'close:drawer', this.closeDrawer, this );\n\n\t\t\t/*\n\t\t\t * When we close the drawer, we have to figure out what the right position should be.\n\t\t\t * This listens to requests from other parts of our app asking what the closed right position is.\n\t\t\t */\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'get:closedRightPos', this.getClosedDrawerPos, this );\n\t\t\t\n\t\t\t// Reply to requests to prevent our drawer from closing\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'prevent:close', this.preventClose, this );\n\t\t\t// Reply to requests to enable drawer closing\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'enable:close', this.enableClose, this );\n\t\t\t// Reply to requests for our disabled/enabled state.\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'get:preventClose', this.maybePreventClose, this );\n\n\t\t\t/*\n\t\t\t * Object that holds our array of 'prevent close' values.\n\t\t\t * We use an array so that registered requests can unregister and not affect each other.\n\t\t\t */\n\t\t\tthis.objPreventClose = {};\n\n\t\t\t/*\n\t\t\t *  Listen to focus events on the filter and stop our interval when it happens.\n\t\t\t *  This is to fix a bug that can cause the filter to gain focus every few seconds.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'filter:focused', this.filterFocused );\n\t\t},\n\n\t\t/**\n\t\t * Handles closing our drawer\n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tcloseDrawer: function() {\n\t\t\t// Get our current domain.\n\t\t\tvar currentDrawer = nfRadio.channel( 'app' ).request( 'get:currentDrawer' );\n\t\t\tif ( ! currentDrawer || this.maybePreventClose() ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Triggers the before close drawer action on our current domain's drawer channel.\n\t\t\tnfRadio.channel( 'drawer-' + currentDrawer.get( 'id' ) ).trigger( 'before:closeDrawer' );\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'before:closeDrawer' );\n\t\t\t\n\t\t\t// Send a message to our drawer to empty its contents.\n\t\t\tnfRadio.channel( 'drawer' ).request( 'empty:drawerContent' );\n\n\t\t\t// To close our drawer, we have to add our closed class to the builder and remove the opened class.\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tjQuery( builderEl ).addClass( 'nf-drawer-closed' ).removeClass( 'nf-drawer-opened' );\n\t\t\tjQuery( builderEl ).removeClass( 'disable-main' );\n\n\t\t\t// Get the right position of our closed drawer. Should be container size in -px.\n\t\t\tvar rightClosed = this.getClosedDrawerPos();\n\n\t\t\t// Get our drawer element and give change the 'right' property to our closed position.\n\t\t\tvar drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tjQuery( drawerEl ).css( { 'right': rightClosed } );\n\n\t\t\t// In order to access properties in 'this' context in our interval below, we have to set it here.\t\n\t\t\tvar that = this;\n\n\t\t\t/*\n\t\t\t * Since jQuery can't bind to a CSS change, we poll every .15 seconds to see if we've closed the drawer.\n\t\t\t *\n\t\t\t * Once our drawer is closed, we:\n\t\t\t * clear our interval\n\t\t\t * request that the app change it's current drawer to false\n\t\t\t * trigger a drawer closed message\n\t\t\t */\n\t\t\tthis.checkCloseDrawerPos = setInterval( function() {\n\t        \tif ( rightClosed == jQuery( drawerEl ).css( 'right' ) ) {\n\t        \t\tclearInterval( that.checkCloseDrawerPos );\n\t\t    \t\tnfRadio.channel( 'app' ).request( 'update:currentDrawer', false );\n\t\t    \t\tnfRadio.channel( 'drawer' ).trigger( 'closed' );\n\t\t    \t\t// jQuery( drawerEl ).scrollTop( 0 );\n\t        \t}\n\t\t\t}, 150 );\n\t\t},\n\n\t\t/**\n\t\t * Click handler for our 'open drawer' event.\n\t\t * @since  3.0\n\t\t * @param  e jQuery event\n\t\t * @return void\n\t\t */\n\t\tclickOpenDrawer: function( e ) {\n\t\t\tvar drawerID = jQuery( e.target ).data( 'drawerid' );\n\t\t\tthis.openDrawer( drawerID );\n\t\t},\n\n\t\t/**\n\t\t * Open our drawer.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string drawerID \tID of the drawer we want to open.\n\t\t * @param  object data     \tOptional data that we want to pass to the drawer.\n\t\t * @return void\n\t\t */\n\t\topenDrawer: function( drawerID, data ) {\n\t\t\tif ( this.maybePreventClose() ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// If we haven't sent a data object, set the variable to an empty object.\n\t\t\tdata = data || {};\n\n\t\t\t/*\n\t\t\t * If we're dealing with something that has a model, set the proper active state.\n\t\t\t *\n\t\t\t * TODO: Make this more dynamic. I'm not sure that it fits in the drawer controller.\n\t\t\t */\n\t\t\tif ( 'undefined' != typeof data.model ) {\n\t\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\t\t\t\tnfRadio.channel( currentDomainID ).request( 'clear:editActive' );\n\t\t\t\tdata.model.set( 'editActive', true );\n\t\t\t\tthis.dataModel = data.model;\n\t\t\t}\n\n\t\t\t// Send out a message requesting our drawer view to load the content for our drawer ID.\n\t\t\tnfRadio.channel( 'drawer' ).request( 'load:drawerContent', drawerID, data );\n\n\t\t\t// To open our drawer, we have to add our opened class to our builder element and remove the closed class.\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tjQuery( builderEl ).addClass( 'nf-drawer-opened' ).removeClass( 'nf-drawer-closed' );\n\t\t\t\n\t\t\t// To open our drawer, we have to set the right position of our drawer to 0px.\n\t\t\tvar drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tjQuery( drawerEl ).css( { 'right': '0px' } );\n\t\t\t\n\t\t\t// In order to access properties in 'this' context in our interval below, we have to set it here.\t\n\t\t\tvar that = this;\n\n\t\t\t/*\n\t\t\t * Since jQuery can't bind to a CSS change, we poll every .15 seconds to see if we've opened the drawer.\n\t\t\t *\n\t\t\t * Once our drawer is opened, we:\n\t\t\t * clear our interval\n\t\t\t * focus our filter\n\t\t\t * request that the app update its current drawer to the one we opened\n\t\t\t * trigger a drawer opened message\n\t\t\t */\n\t\t\tthis.hasFocus = false;\n\n\t\t\tthis.checkOpenDrawerPos = setInterval( function() {\n\t        \tif ( '0px' == jQuery( drawerEl ).css( 'right' ) ) {\n\t        \t\tclearInterval( that.checkOpenDrawerPos );\n\t\t\t\t\tif ( ! that.hasFocus ) {\n\t\t        \t\tthat.focusFilter();\n\t\t\t\t\t\tthat.hasFocus = true;\n\t\t\t    \t\tnfRadio.channel( 'app' ).request( 'update:currentDrawer', drawerID );\n\t\t\t    \t\t// jQuery( drawerEl ).scrollTop( 0 );\n\t\t\t    \t\tnfRadio.channel( 'drawer' ).trigger( 'opened' );\n\t\t\t\t\t}   \t\t\n\t        \t}\n\t\t\t}, 150 );\n\t\t},\n\n\t\t/**\n\t\t * Toggle the drawer from half to full screen and vise-versa\n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\ttoggleDrawerSize: function() {\n\t\t\t// Get our drawer element.\n\t\t\tvar drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\t// toggle our drawer size class.\n\t\t\tjQuery( drawerEl ).toggleClass( 'nf-drawer-expand' );\n\t\t},\n\n\t\t/**\n\t\t * Focus our filter\n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n        focusFilter: function() {\n        \t// Get our filter element\n        \tvar filterEl = nfRadio.channel( 'drawer' ).request( 'get:filterEl' );\n        \t// Focus\n        \tjQuery( filterEl ).focus();\n        },\n\n        /**\n         * Get the CSS right position (in px) of the closed drawer element.\n         * This is calculated by:\n         * getting the width of the builder element\n         * add 300 pixels\n         * make it negative\n         * \n         * @since  3.0\n         * @return void\n         */\n        getClosedDrawerPos: function() {\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tvar closedPos = jQuery( builderEl ).width() + 300;\n\t\t\treturn '-' + closedPos + 'px';\n        },\n\n        /**\n         * Check to see if anything has registered a prevent close key.\n         * \n         * @since  3.0\n         * @return boolean\n         */\n        maybePreventClose: function() {\n        \tif ( 0 == Object.keys( this.objPreventClose ).length ) {\n        \t\treturn false;\n        \t} else {\n        \t\treturn true;\n        \t}\n        },\n\n        /**\n         * Register a prevent close key.\n         * \n         * @since  3.0\n         * @param  string \tkey unique id for our 'prevent close' setting.\n         * @return void\n         */\n        preventClose: function( key ) {\n        \tthis.objPreventClose[ key ] = true;\n        \t/*\n        \t * When we disable closing the drawer, add the disable class.\n        \t */\n        \t// Get our current drawer.\n\t\t\tthis.dataModel.set( 'drawerDisabled', true );\n        },\n\n        /**\n         * Remove a previously registered prevent close key.\n         * \n         * @since  3.0\n         * @param  string \tkey unique id for our 'prevent close' setting.\n         * @return void\n         */\n        enableClose: function( key ) {\n        \tdelete this.objPreventClose[ key ];\n        \t /*\n        \t * When we remove all of our disables preventing closing the drawer, remove the disable class.\n        \t */\n        \tif ( ! this.maybePreventClose() ) {\n\t        \t// Get our current drawer.\n\t\t\t\tthis.dataModel.set( 'drawerDisabled', false );        \t\t\n        \t}\n        },\n\n        /**\n         * When we focus our filter, make sure that our open drawer interval is cleared.\n         * \n         * @since  3.0\n         * @return void\n         */\n        filterFocused: function() {\n        \tclearInterval( this.checkOpenDrawerPos );\n        },\n\n        getPreventClose: function() {\n        \treturn this.objPreventClose;\n        }\n\t});\n\n\treturn controller;\n} );\n","/**\n * Default drawer header.\n *\n * Includes our filter/search and 'Done' button.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/headerDefault',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-header-default',\n\n\t\tinitialize: function() {\n\t\t\tif ( this.model ) {\n\t\t\t\t// Listen for our drawer being disabled.\n\t\t\t\tthis.model.on( 'change:drawerDisabled', this.render, this );\t\t\t\t\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When we render, remove the extra div added by backbone and add listeners related to our filter.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\t// Remove extra wrapping div.\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t\t// Respond to requests related to our filter.\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'clear:filter', this.clearFilter, this );\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'blur:filter', this.blurFilter, this );\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'get:filterEl', this.getEl, this );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tif ( this.model ) {\n\t\t\t\tthis.model.off( 'change:drawerDisabled', this.render );\n\t\t\t}\n\t\t},\n\n\t\tevents: {\n\t\t\t'keyup .nf-filter'\t: 'maybeChangeFilter',\n\t\t\t'input .nf-filter'\t: 'changeFilter',\n\t\t\t'focus input'\t\t: 'getFocus'\n\t\t},\n\n\t\t/**\n\t\t * When the filter text is changed, trigger an event on our current drawer.\n\t\t * This lets us keep the logic separate from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tchangeFilter: function( e ) {\n\t\t\tvar currentDrawer = nfRadio.channel( 'app' ).request( 'get:currentDrawer' );\n\t\t\tnfRadio.channel( 'drawer-' + currentDrawer.get( 'id' ) ).trigger( 'change:filter', e.target.value, e );\n\t\t},\n\n\t\t/**\n\t\t * The user pressed a key. If it's the enter key, then run the change filter function.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tmaybeChangeFilter: function( e ) {\n\t\t\tif ( 13 == e.keyCode ) {\n\t\t\t\te.addObject = true;\n\t\t\t\tthis.changeFilter( e );\t\t\t\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Clear our filter.\n\t\t *\n\t\t * This triggers 'input' on the field, which will trigger a change if necessary.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tclearFilter: function() {\n\t\t\tvar filterEl =  jQuery( this.el ).find( '.nf-filter' );\n\t\t\tif ( '' != jQuery.trim( filterEl.val() ) ) {\n\t\t\t\tfilterEl.val('');\n\t\t\t\tfilterEl.trigger( 'input' );\n\t\t\t\tfilterEl.focus();\t\t\t\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Fire the 'blur' event on our filter. Used to force a change event when the user tabs.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tblurFilter: function() {\n\t\t\tjQuery( this.el ).find( '.nf-filter' ).blur();\n\t\t},\n\n\t\t/**\n\t\t * Return our filter dom element.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\tgetEl: function() {\n\t\t\treturn jQuery( this.el ).find( '.nf-filter' );\n\t\t},\n\n\t\tgetFocus: function() {\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'filter:focused' );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderDisabled: function() {\n\t\t\t\t\t// Get our current domain.\n\t\t\t\t\tif ( this.drawerDisabled ) {\n\t\t\t\t\t\treturn 'disabled';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Default drawer footer\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/footerDefault',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-empty'\n\t});\n\n\treturn view;\n} );\n","define( 'models/app/drawerModel',['views/app/drawer/headerDefault', 'views/app/drawer/footerDefault'], function( defaultHeaderView, defaultFooterView ) {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tgetHeaderView: function( data ) {\n\t\t\t\treturn new defaultHeaderView( data );\n\t\t\t},\n\n\t\t\tgetFooterView: function( data ) {\n\t\t\t\treturn new defaultFooterView( data );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds all of our drawer models.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/drawerCollection',['models/app/drawerModel'], function( drawerModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: drawerModel\n\t} );\n\treturn collection;\n} );\n","define( 'views/fields/drawer/stagedField',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-staged-field',\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .dashicons-dismiss': 'removeStagedField'\n\t\t},\n\n\t\tremoveStagedField: function( el ) {\n\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'click:removeStagedField', el, this.model );\n\t\t}\n\t});\n\n\treturn view;\n} );\n\n","define( 'views/fields/drawer/stagingEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-staged-fields-empty',\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/drawer/stagingCollection',['views/fields/drawer/stagedField', 'views/fields/drawer/stagingEmpty'], function( stagedFieldView, stagedFieldsEmptyView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: stagedFieldView,\n\t\temptyView: stagedFieldsEmptyView,\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:stagedFieldsEl', this.getStagedFieldsEl, this );\n\t\t},\n\n\t\tonShow: function() {\n\n\t\t\tthis.$el = jQuery( this.el ).parent();\n\t\t\tjQuery( this.$el ).find( 'span:first' ).unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tvar that = this;\n\n\t\t\tjQuery( this.el ).sortable( {\n\t\t\t\tplaceholder: 'nf-staged-fields-sortable-placeholder',\n\t\t\t\thelper: 'clone',\n\t\t\t\ttolerance: 'pointer',\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'over:stagedFields', e, ui );\n\t\t\t\t},\n\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'out:stagedFields', ui );\n\t\t\t\t},\n\n\t\t\t\treceive: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'receive:stagedFields', ui );\n\t\t\t\t},\n\n\t\t\t\tupdate: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t\t},\n\n\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'start:stagedFields', ui );\n\n\t\t\t\t},\n\n\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'stop:stagedFields', ui );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tjQuery( this.el ).parent().draggable( {\n\t\t\t\topacity: 0.9,\n\t\t\t\tconnectToSortable: '.nf-fields-sortable',\n\n\t\t\t\thelper: function( e ) {\n\t\t\t\t\tvar width = jQuery( e.target ).parent().width();\n\t\t\t\t\tvar height = jQuery( e.target ).parent().height();\n\t\t\t\t\tvar element = jQuery( e.target ).parent().clone();\n\t\t\t\t\tvar left = width / 4;\n\t\t\t\t\tvar top = height / 2;\n\t\t\t\t\tjQuery( this ).draggable( 'option', 'cursorAt', { top: top, left: left } );\n\n\t\t\t\t\treturn element;\n\t\t\t\t},\n\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'startDrag:fieldStaging', this, ui );\n\t\t\t\t},\n\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'stopDrag:fieldStaging', this, ui );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tgetStagedFieldsEl: function() {\n\t\t\treturn jQuery( this.el );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","/**\n * Model for our staged field.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/stagingModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection of staged fields.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/stagingCollection',['models/fields/stagingModel'], function( stagingModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: stagingModel,\n\t\tcomparator: 'order'\n\t} );\n\treturn collection;\n} );\n","define( 'views/fields/drawer/typeSection',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-field-type-section',\n\t\t\n\t\tinitialize: function() {\n\t\t\t_.bindAll( this, 'render' );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:typeSection', this.getTypeSection, this );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tthis.dragging = false;\n\t\t\tvar that = this;\n\t\t\t/*\n\t\t\t * If we're on a mobile device, we don't want to enable dragging for our field type buttons.\n\t\t\t */\n\t\t\tif ( ! nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\tjQuery( this.el ).find( 'div.nf-one-third' ).draggable( {\n\t\t\t\t\topacity: 0.9,\n\t\t\t\t\ttolerance: 'intersect',\n\t\t\t\t\tscroll: false,\n\t\t\t\t\tconnectToSortable: '.nf-field-type-droppable',\n\n\t\t\t\t\thelper: function( e ) {\n\t\t\t\t\t\tvar width = jQuery( e.target ).parent().width();\n\t\t\t\t\t\tvar height = jQuery( e.target ).parent().height();\n\t\t\t\t\t\tvar element = jQuery( e.target ).parent().clone();\n\t\t\t\t\t\tvar left = width / 4;\n\t\t\t\t\t\tvar top = height / 2;\n\t\t\t\t\t\tjQuery( this ).draggable( 'option', 'cursorAt', { top: top, left: left } );\n\n\t\t\t\t\t\treturn element;\n\t\t\t\t\t},\n\n\t\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\t\tthat.dragging = true;\n\t\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'startDrag:type', this, ui );\n\t\t\t\t\t},\n\n\t\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\t\tthat.dragging = false;\n\t\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'stopDrag:type', this, ui );\n\t\t\t\t\t}\n\n\t\t\t\t} ).disableSelection();\n\n\t\t\t\tjQuery( this.el ).find( '.nf-item' ).focus( function() {\n\t\t\t    \tjQuery( this ).addClass( 'active' );\n\t\t\t    } ).blur( function() {\n\t\t\t    \tjQuery( this ).removeClass( 'active' );\n\t\t\t    } );\t\t\t\n\t\t\t}\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-item': 'clickFieldType',\n\t\t\t'keydown .nf-item': 'maybeClickFieldType',\n\t\t\t'mousedown .nf-item': 'mousedownFieldType'\n\t\t},\n\n\t\tclickFieldType: function( e ) {\n\t\t\tif ( ! this.dragging ) {\n\t\t\t\tnfRadio.channel( 'drawer' ).trigger( 'click:fieldType', e );\n\t\t\t}\n\t\t},\n\n\t\tmousedownFieldType: function( e ) {\n\t\t\tjQuery( e.target).addClass( 'clicked' );\n\t\t\tsetTimeout( function() {\n\t\t\t\tjQuery( e.target ).removeClass( 'clicked' );\n\t\t\t}, 1500 );\n\t\t},\n\n\t\tmaybeClickFieldType: function( e ) {\n\t\t\tif ( 13 == e.keyCode ) {\n\t\t\t\tthis.clickFieldType( e );\n\t\t\t\tnfRadio.channel( 'drawer' ).request( 'clear:filter' );\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderFieldTypes: function() {\n\t\t\t        var html = '';\n\t\t\t        var that = this;\n\t\t\t        _.each( this.fieldTypes, function( id ) {\n\t\t\t            var type = nfRadio.channel( 'fields' ).request( 'get:type', id );\n\t\t\t            var nicename = type.get( 'nicename' );\n\t\t\t            html += _.template( jQuery( '#nf-tmpl-drawer-field-type-button' ).html(), { id: id, nicename: nicename, type: type, savedField: that.isSavedField } );\n\t\t\t        } );\n\t\t\t        return html;\n\t\t\t\t},\n\n\t\t\t\tisSavedField: function() {\n\t\t\t\t\tif( this.type.get( 'savedField' ) ) {\n\t\t\t\t\t\treturn 'nf-saved';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgetTypeSection: function() {\n\t\t\treturn this.el;\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/drawer/typeSectionCollection',['views/fields/drawer/typeSection'], function( fieldTypeSectionView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: fieldTypeSectionView,\n\n\t\tonShow: function() {\n\t\t\tjQuery( this.el ).find( '.nf-settings' ).unwrap();\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","define( 'views/fields/drawer/addField',['views/fields/drawer/stagingCollection', 'models/fields/stagingCollection', 'views/fields/drawer/typeSectionCollection'], function( drawerStagingView, StagingCollection, fieldTypeSectionCollectionView ) {\n\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttemplate: '#nf-tmpl-drawer-content-add-field',\n\n\t\tregions: {\n\t\t\tstaging: '#nf-drawer-staging .nf-reservoir',\n\t\t\tprimary: '#nf-drawer-primary',\n\t\t\tsecondary: '#nf-drawer-secondary'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'filter:fieldTypes', this.filterFieldTypes );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'clear:filter', this.removeFieldTypeFilter );\n\t\t\n\t\t\tthis.savedCollection = nfRadio.channel( 'drawer' ).request( 'get:savedFields' );\n\t\t\tthis.primaryCollection = this.savedCollection;\n\n\t\t\tthis.fieldTypeSectionCollection = nfRadio.channel( 'fields' ).request( 'get:typeSections' );\n\t\t\tthis.secondaryCollection = this.fieldTypeSectionCollection;\n\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tvar stagingCollection = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\t\t\tthis.staging.show( new drawerStagingView( { collection: stagingCollection } ) );\n\n\t\t\tthis.primary.show( new fieldTypeSectionCollectionView( { collection: this.primaryCollection } ) );\n\t\t\tthis.secondary.show( new fieldTypeSectionCollectionView( { collection: this.secondaryCollection } ) );\n\t\t},\n\n\t\tgetEl: function() {\n\t\t\treturn jQuery( this.el ).parent();\n\t\t},\n\n\t\tfilterFieldTypes: function( filteredSectionCollection ) {\n\t\t\tthis.primary.reset();\n\t\t\tthis.secondary.reset();\n\t\t\tthis.filteredSectionCollection = filteredSectionCollection;\n\t\t\tthis.primary.show( new fieldTypeSectionCollectionView( { collection: this.filteredSectionCollection } ) );\n\t\t},\n\n\t\tremoveFieldTypeFilter: function () {\n\t\t\tthis.primary.show( new fieldTypeSectionCollectionView( { collection: this.savedCollection } ) );\n\t\t\tthis.secondary.show( new fieldTypeSectionCollectionView( { collection: this.fieldTypeSectionCollection } ) );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","define( 'views/app/drawer/itemSettingCollection',[], function() {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.childViewOptions = { dataModel: data.dataModel };\n\t\t},\n\n\t\tgetChildView: function( model ) {\n\t\t\treturn nfRadio.channel( 'app' ).request( 'get:settingChildView', model );\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","define( 'views/app/drawer/itemSettingGroup',['views/app/drawer/itemSettingCollection'], function( itemSettingCollectionView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-edit-field-setting-group',\n\t\t\n\t\tregions: {\n\t\t\tsettings: '.nf-field-settings'\n\t\t},\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.model.on( 'change', this.render, this );\n\t\t\tthis.dataModel = data.dataModel;\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change', this.render );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tif ( this.model.get( 'display' ) ) {\n\t\t\t\tthis.settings.show( new itemSettingCollectionView( { collection: this.model.get( 'settings' ), dataModel: this.dataModel } ) );\n\t\t\t} else {\n\t\t\t\tthis.settings.empty();\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'render:settingGroup', this );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .toggle': 'clickToggleGroup'\n\t\t},\n\n\t\tclickToggleGroup: function( e ) {\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'click:toggleSettingGroup', e, this.model );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderLabel: function() {\n\t\t\t\t\tif ( '' != this.label ) {\n\t\t\t\t\t\treturn _.template( jQuery( '#nf-tmpl-drawer-content-edit-setting-group-label' ).html(), this );\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderArrowDir: function() {\n\t\t\t\t\tif ( this.display ) {\n\t\t\t\t\t\treturn 'down';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn 'right';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/app/drawer/itemSettingGroupCollection',['views/app/drawer/itemSettingGroup'], function( itemSettingGroupView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: itemSettingGroupView,\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.childViewOptions = { dataModel: data.dataModel };\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","define( 'views/app/drawer/editSettings',['views/app/drawer/itemSettingGroupCollection'], function( itemSettingGroupCollectionView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-edit-settings',\n\n\t\tregions: {\n\t\t\tsettingGroups: '.nf-settings-groups',\n\t\t},\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.dataModel = data.model;\n\t\t\tthis.groupCollection = data.groupCollection;\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.settingGroups.show( new itemSettingGroupCollectionView( { collection: this.groupCollection, dataModel: this.dataModel } ) );\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t    \treturn {\n\t    \t\tmaybeRenderTitle: function() {\n\t    \t\t\tif ( 'undefined' !== typeof this.type ) {\n\t    \t\t\t\treturn _.template( jQuery( '#nf-tmpl-drawer-content-edit-settings-title' ).html(), this );\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t    \t\t},\n\n\t    \t\trenderTypeNicename: function() {\n\t    \t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\t\t\tvar domainID = currentDomain.get( 'id' );\n\t    \t\t\tvar type = nfRadio.channel( domainID ).request( 'get:type', this.type );\n\t    \t\t\treturn type.get( 'nicename' );\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t});\n\n\treturn view;\n} );\n","/**\n * Button to add an action to the form.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/drawer/typeButton',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-action-type-button',\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t\t\n\t\t\tjQuery( this.el ).disableSelection();\n\t\t\t\n\t\t\tif ( 'installed' == this.model.get( 'section') ) {\n\t\t\t\tvar that = this;\n\t\t\t\tjQuery( this.el ).draggable( {\n\t\t\t\t\topacity: 0.9,\n\t\t\t\t\ttolerance: 'intersect',\n\t\t\t\t\tscroll: false,\n\t\t\t\t\thelper: 'clone',\n\n\t\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\t\tthat.dragging = true;\n\t\t\t\t\t\tnfRadio.channel( 'drawer-addAction' ).trigger( 'startDrag:type', this, ui );\n\t\t\t\t\t},\n\n\t\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\t\tthat.dragging = false;\n\t\t\t\t\t\tnfRadio.channel( 'drawer-addAction' ).trigger( 'stopDrag:type', this, ui );\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\t\t\t\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-item': 'clickAddAction'\n\t\t},\n\n\t\tclickAddAction: function( e ) {\n\t\t\tif ( ! this.dragging ) {\n\t\t\t\tif ( 'installed' == this.model.get( 'section' ) ) { // Is this an installed action?\n\t\t\t\t\tnfRadio.channel( 'actions' ).trigger( 'click:addAction', this.model );\n\t\t\t\t} else { // This isn't an installed action\n\t\t\t\t\twindow.open( this.model.get( 'link' ), '_blank' );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = 'nf-item';\n\t\t\t\t\tif ( '' != jQuery.trim( this.image ) ) {\n\t\t\t\t\t\tclasses += ' nf-has-img';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( 'installed' == this.section ) {\n\t\t\t\t\t\tclasses += ' nf-action-type';\n\t\t\t\t\t}\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\trenderStyle: function() {\n\t\t\t\t\tif ( '' != jQuery.trim( this.image ) ) {\n\t\t\t\t\t\treturn \"style=\\\"background-image: url(\" + this.image + \");\\\"\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/actions/drawer/typeCollection',['views/actions/drawer/typeButton'], function( actionTypeButtonView ) {\n\tvar view = Marionette.CompositeView.extend( {\n\t\ttemplate: '#nf-tmpl-drawer-action-type-section',\n\t\tchildView: actionTypeButtonView,\n\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t\t\treturn {\n\t\t\t\trenderNicename: function() {\n\t\t\t\t\treturn that.collection.nicename;\n\t\t\t\t},\n\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\treturn that.collection.slug;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( '.action-types' ).append( childView.el );\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","/**\n * Add action drawer.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/drawer/addAction',['views/actions/drawer/typeCollection'], function( actionTypeCollectionView ) {\n\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttemplate: '#nf-tmpl-drawer-content-add-action',\n\n\t\tregions: {\n\t\t\tprimary: '#nf-drawer-primary',\n\t\t\tsecondary: '#nf-drawer-secondary'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'filter:actionTypes', this.filteractionTypes );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'clear:filter', this.removeactionTypeFilter );\n\t\t\n\t\t\tthis.installedActions = nfRadio.channel( 'actions' ).request( 'get:installedActions' );\n\t\t\tthis.primaryCollection = this.installedActions;\n\n\t\t\tthis.availableActions = nfRadio.channel( 'actions' ).request( 'get:availableActions' );\n\t\t\tthis.secondaryCollection = this.availableActions;\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tthis.primary.show( new actionTypeCollectionView( { collection: this.primaryCollection } ) );\n\t\t\tthis.secondary.show( new actionTypeCollectionView( { collection: this.secondaryCollection } ) );\n\t\t},\n\n\t\tgetEl: function() {\n\t\t\treturn jQuery( this.el ).parent();\n\t\t},\n\n\t\tfilteractionTypes: function( filteredInstalled, filteredAvailable ) {\n\t\t\tthis.primary.reset();\n\t\t\tthis.secondary.reset();\n\t\t\tthis.primary.show( new actionTypeCollectionView( { collection: filteredInstalled } ) );\n\t\t\tthis.secondary.show( new actionTypeCollectionView( { collection: filteredAvailable } ) );\n\t\t\t\n\t\t},\n\n\t\tremoveactionTypeFilter: function () {\n\t\t\tthis.primary.show( new actionTypeCollectionView( { collection: this.installedActions } ) );\n\t\t\tthis.secondary.show( new actionTypeCollectionView( { collection: this.availableActions } ) );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","define( 'views/advanced/drawer/editFormSettings',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-edit-form-settings'\n\t});\n\n\treturn view;\n} );\n","/**\n * Individual change item.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/contentViewChangesItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-view-changes-item',\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:disabled', this.render, this );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:disabled', this.render );\n\t\t},\n\n\t\t/**\n\t\t * When we render this element, remove the extra wrapping <div> that backbone creates.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .undoSingle': 'undoSingle'\n\t\t},\n\n\t\tundoSingle: function( e ) {\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'click:undoSingle', this.model );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Changes collection view.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/contentViewChanges',['views/app/drawer/contentViewChangesItem'], function( viewChangesItem ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'table',\n        className: 'nf-changes',\n\t\tchildView: viewChangesItem\n\t} );\n\n\treturn view;\n} );\n\n","/**\n * Handles clicks on the 'view changes' button in the header.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/headerViewChanges',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-header-view-changes',\n\n\t\tevents: {\n\t\t\t'click .undoChanges': 'clickUndoChanges'\n\t\t},\n\n\t\tclickUndoChanges: function( e ) {\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'click:undoChanges' );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Error view used for settings.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/settingError',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-edit-setting-error'\n\t});\n\n\treturn view;\n} );\n","define( 'views/app/drawer/itemSetting',['views/app/drawer/mergeTagsContent', 'views/app/drawer/settingError'], function( mergeTagsContentView, settingErrorView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-edit-setting-wrap',\n\n\t\tregions: {\n\t\t\terror: '.nf-setting-error'\n\t\t},\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.dataModel = data.dataModel;\n\n\t\t\t/*\n\t\t\t * Send out a request on the setting-type-{type} channel asking if we should render on dataModel change.\n\t\t\t * Defaults to true.\n\t\t\t * This lets specific settings, like RTEs, say that they don't want to be re-rendered when their data model changes.\n\t\t\t */\n\t\t\tvar renderOnChange = ( 'undefined' == typeof nfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).request( 'renderOnChange' ) ) ? true: nfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).request( 'renderOnChange' );\n\t\t\t\n\t\t\tif ( renderOnChange ) {\n\t\t\t\tthis.dataModel.on( 'change:' + this.model.get( 'name' ), this.render, this );\n\t\t\t}\n\n\t\t\tthis.model.on( 'change:error', this.renderError, this );\n\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor ( var name in deps ) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.on( 'change:' + name, this.render, this );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * When our drawer opens, send out a radio message on our setting type channel.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'opened', this.drawerOpened );\n\n\t\t\t/*\n\t\t\t * When our drawer closes, send out a radio message on our setting type channel.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'closed', this.drawerClosed );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.dataModel.off( 'change:' + this.model.get( 'name' ), this.render );\n\t\t\tthis.model.off( 'change:error', this.renderError );\n\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor (var name in deps) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.off( 'change:' + name, this.render );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Send out a radio message.\n\t\t\t */\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'destroy:setting', this.model, this.dataModel, this );\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'destroy:setting', this.model, this.dataModel, this );\n\t\t},\n\n\t\tonBeforeRender: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'before:renderSetting', this.model, this.dataModel );\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'before:renderSetting', this.model, this.dataModel, this );\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'before:renderSetting', this.model, this.dataModel, this );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.mergeTagsContentView = false;\n\t\t\tvar that = this;\n\n\t\t\t/*\n\t\t\t * Send out a radio message.\n\t\t\t */\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'render:setting', this.model, this.dataModel, this );\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'render:setting', this.model, this.dataModel, this );\n\n\t\t\tjQuery( this.el ).find( '.nf-help' ).each(function() {\n\t\t\t\tvar content = jQuery(this).next('.nf-help-text');\n\t\t\t\tjQuery( this ).jBox( 'Tooltip', {\n\t\t\t\t\tcontent: content,\n\t\t\t\t\tmaxWidth: 200,\n\t\t\t\t\ttheme: 'TooltipBorder',\n\t\t\t\t\ttrigger: 'click',\n\t\t\t\t\tcloseOnClick: true\n\t\t\t\t})\n\t\t    });\n\n\t\t    if ( this.model.get( 'use_merge_tags' ) ) {\n\t\t    \tnfRadio.channel( 'mergeTags' ).request( 'init', this );\n\t\t    }\n\n\t\t\t/*\n\t\t\t * Apply Setting Field Masks\n\t\t\t */\n\t\t\tvar mask = this.model.get( 'mask' );\n\n\t\t\tif( typeof mask != \"undefined\" ){\n\n\t\t\t\tvar input = jQuery( this.$el ).find( 'input' );\n\n\t\t\t\tswitch( mask.type ){\n\t\t\t\t\tcase 'numeric':\n\t\t\t\t\t\tinput.autoNumeric({\n\t\t\t\t\t\t\taSep: thousandsSeparator,\n\t\t\t\t\t\t\taDec: decimalPoint\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'currency':\n\t\t\t\t\t\tinput.autoNumeric({\n\t\t\t\t\t\t\taSign: '$', // TODO: Use form setting\n\t\t\t\t\t\t\taSep: thousandsSeparator,\n\t\t\t\t\t\t\taDec: decimalPoint\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'custom':\n\t\t\t\t\t\tif( mask.format ) input.mask( mask.format )\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// TODO: Error Logging.\n\t\t\t\t\t\tconsole.log( 'Notice: Mask type of \"' + mask.type + '\" is not supported.' );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.renderError();\n\t\t},\n\n\t\tonShow: function() {\t\t\t\n\t\t\t/*\n\t\t\t * Send out a radio message.\n\t\t\t */\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'show:setting', this.model, this.dataModel, this );\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'show:setting', this.model, this.dataModel, this );\n\t\t},\n\n\t\tonAttach: function() {\t\t\t\n\t\t\t/*\n\t\t\t * Send out a radio message.\n\t\t\t */\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'attach:setting', this.model, this.dataModel, this );\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'attach:setting', this.model, this.dataModel, this );\n\t\t},\n\n\t\trenderError: function() {\n\t\t\tif ( this.model.get( 'error' ) ) {\n\t\t\t\tjQuery( this.el ).find( '.nf-setting' ).addClass( 'nf-error' );\n\t\t\t\tthis.error.show( new settingErrorView( { model: this.model } ) );\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).find( '.nf-setting' ).removeClass( 'nf-error' );\n\t\t\t\tthis.error.empty();\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t\t\tvar that = this;\n\t    \treturn {\n\n\t    \t\trenderVisible: function() {\n\t\t\t\t\tif ( this.deps ) {\n\t\t\t\t\t\tfor (var name in this.deps) {\n\t\t\t\t\t\t    if ( this.deps.hasOwnProperty( name ) ) {\n\t\t\t\t\t\t        if ( that.dataModel.get( name ) != this.deps[ name ] ) {\n\t\t\t\t\t\t        \treturn 'style=\"display:none;\"';\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t    \t\t\treturn '';\n\t    \t\t},\n\n\t    \t\trenderSetting: function(){\n\t    \t\t\tif ( 'undefined' != typeof that.dataModel.get( this.name ) ) {\n\t    \t\t\t\tthis.value = that.dataModel.get( this.name );\n\t    \t\t\t} else {\n\t    \t\t\t\tthis.value = '';\n\t    \t\t\t}\n\n\t\t\t\t\treturn _.template( jQuery( '#nf-tmpl-edit-setting-' + this.type ).html(), this );\n\t\t\t\t},\n\n\t\t\t\trenderLabelClasses: function() {\n\t\t\t\t\tvar classes = '';\n\t\t\t\t\tif ( this.use_merge_tags ) {\n\t\t\t\t\t\tclasses += ' has-merge-tags';\n\t\t\t\t\t}\n\t\t\t\t\tif ( 'rte' == this.type ) {\n\t\t\t\t\t\tclasses += ' rte';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = 'nf-setting ';\n\t\t\t\t\tif ( 'undefined' != typeof this.width ) {\n\t\t\t\t\t\tclasses += 'nf-' + this.width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclasses += ' nf-one-half';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.error ) {\n\t\t\t\t\t\tclasses += ' nf-error';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\trenderTooltip: function() {\n\t\t\t\t\tif ( this.help ) {\n\t\t\t\t\t\treturn '<a class=\"nf-help\" href=\"#\"><span class=\"dashicons dashicons-admin-comments\"></span></a><div class=\"nf-help-text\">' + this.help + '</div>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderMergeTags: function() {\n\t\t\t\t\tif ( this.use_merge_tags && ! this.hide_merge_tags ) {\n\t\t\t\t\t\treturn '<span class=\"dashicons dashicons-list-view merge-tags\"></span>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tevents: {\n\t\t\t'change .setting': 'changeSetting',\n\t\t\t'keyup .setting': 'keyUpSetting',\n\t\t\t'click .setting': 'clickSetting',\n\t\t\t'click .extra': 'clickExtra'\n\t\t},\n\n\t\tchangeSetting: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'change:setting', e, this.model, this.dataModel );\n\t\t},\n\n\t\tkeyUpSetting: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'keyup:setting', e, this.model, this.dataModel );\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'keyup:setting', e, this.model, this.dataModel );\n\t\t},\n\n\t\tclickSetting: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:setting', e, this.model, this.dataModel );\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'click:setting', e, this.model, this.dataModel, this );\n\t\t},\n\n\t\tclickExtra: function( e ) {\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'click:extra', e, this.model, this.dataModel, this );\n\t\t},\n\n\t\tdrawerOpened: function() {\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'drawer:opened', this.model, this.dataModel, this );\n\t\t},\n\n\t\tdrawerClosed: function() {\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'drawer:closed', this.model, this.dataModel, this );\n\t\t}\n\t});\n\n\treturn view;\n} );\n\n","/**\n * Changes collection view.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/contentNewForm',['views/app/drawer/itemSetting'], function( itemSettingView) {\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-new-form',\n\n\t\tregions: {\n\t\t\tformName: '.new-form-name'\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar settingModel = nfRadio.channel( 'settings' ).request( 'get:settingModel', 'title' );\n\t\t\tvar dataModel = nfRadio.channel( 'settings' ).request( 'get:settings' );\n\t\t\tthis.formName.show( new itemSettingView( { model: settingModel, dataModel: dataModel } ) );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .publish': 'clickPublish'\n\t\t},\n\n\t\tclickPublish: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:confirmPublish', e );\n\t\t}\n\t} );\n\n\treturn view;\n} );\n\n","/**\n * Handles clicks on the 'view changes' button in the header.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/headerNewForm',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-header-new-form'\n\t});\n\n\treturn view;\n} );\n","/**\n * Config file for our app drawers.\n *\n * this.collection represents all of our registered drawers.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/drawerConfig',[\n\t'models/app/drawerCollection',\n\t'views/fields/drawer/addField',\n\t'views/app/drawer/editSettings',\n\t'views/actions/drawer/addAction',\n\t'views/advanced/drawer/editFormSettings',\n\t'views/app/drawer/contentViewChanges',\n\t'views/app/drawer/headerViewChanges',\n\t'views/app/drawer/contentNewForm',\n\t'views/app/drawer/headerNewForm'\n\t], function(\n\t\tdrawerCollection,\n\t\taddFieldView,\n\t\teditSettingsView,\n\t\taddActionView,\n\t\teditFormSettingsView,\n\t\tviewChangesView,\n\t\tviewChangesHeaderView,\n\t\tnewFormView,\n\t\tnewFormHeaderView,\n\t\tmobileItemControlsView\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\n\t\t\tthis.collection = new drawerCollection( [\n\t\t\t\t{\n\t\t\t\t\tid: 'addField',\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new addFieldView( data );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'addAction',\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new addActionView( data );\n\t\t\t\t\t}\n\t\t\t\t},\t\t\t\t\n\t\t\t\t{\n\t\t\t\t\tid: 'editSettings',\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new editSettingsView( data );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'viewChanges',\n\n\t\t\t\t\t// getHeaderView() is defined by default, but we need to override it for the viewChanges drawer.\n\t\t\t\t\tgetHeaderView: function( data ) {\n\t\t\t\t\t\treturn new viewChangesHeaderView( data );\n\t\t\t\t\t},\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new viewChangesView( data );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'newForm',\n\n\t\t\t\t\t// getHeaderView() is defined by default, but we need to override it for the newForm drawer.\n\t\t\t\t\tgetHeaderView: function( data ) {\n\t\t\t\t\t\treturn new newFormHeaderView( data );\n\t\t\t\t\t},\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new newFormView( data );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t] );\n\n\t\t\t// Listen for requests for our drawer collection.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:drawerCollection', this.getDrawerCollection, this );\n\t\t\t// Listen for requests for specific drawer models.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:drawer', this.getDrawer, this );\n\t\t},\n\n\t\tgetDrawerCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tgetDrawer: function( id ) {\n\t\t\treturn this.collection.get( id );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model for our individual domains.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/domainModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tdashicons: '',\n\t\t\tclasses: '',\n\t\t\tactive: false,\n\t\t\turl: '',\n\t\t\thotkeys: false,\n\t\t\tdisabled: false\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Holds all of our domain models.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/domainCollection',['models/app/domainModel'], function( domainModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: domainModel\n\t} );\n\treturn collection;\n} );\n","define( 'views/fields/mainHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-header-fields',\n\n\t\tinitialize: function() {\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tthis.listenTo( fieldCollection, 'add', this.render );\n\t\t\tthis.listenTo( fieldCollection, 'remove', this.render );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tif ( fieldCollection.models.length == 0 ) {\n\t\t\t\tjQuery( this.el ).hide();\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).show();\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/subHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-sub-header-fields'\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders an application menu item from a domain model.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/itemControls',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-item-controls',\n\n\t\tinitialize: function() {\n\t\t\t// Listen for domain changes and re-render when we detect one.\n\t\t\t// this.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.render );\n\t\t},\n\n\t\t/**\n\t\t * When we render this view, remove the extra <div> tag created by backbone.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\t// this.$el = this.$el.children();\n\t\t\t// this.$el.unwrap();\n\t\t\t// this.setElement( this.$el );\n\t\t\t// \n\t\t\tthis.currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-edit-settings': 'clickEdit',\n\t\t\t'click .nf-delete': 'clickDelete',\n\t\t\t'click .nf-duplicate': 'clickDuplicateField'\n\t\t},\n\n\t\tclickEdit: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:edit', e, this.model );\n\t\t},\n\n\t\tclickDelete: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:delete', e, this.model );\n\t\t},\n\n\t\tclickDuplicateField: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:duplicate', e, this.model );\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/fieldItem',['views/app/itemControls'], function( itemControlsView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-content-field',\n\n\t\tregions: {\n\t\t\titemControls: '.nf-item-controls'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:editActive', this.render, this );\n\t\t\tthis.model.on( 'change:label', this.render, this );\n\t\t\tthis.model.on( 'change:required', this.render, this );\n\t\t\tthis.model.on( 'change:id', this.render, this );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:editActive', this.render );\n\t\t\tthis.model.off( 'change:label', this.render );\n\t\t\tthis.model.off( 'change:required', this.render );\n\t\t\tthis.model.off( 'change:id', this.render );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tthis.itemControls.show( new itemControlsView( { model: this.model } ) );\n\t\t\tjQuery( this.el ).disableSelection();\n\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\tjQuery( this.el ).on( 'taphold', function( e, touch ) {\n\t\t\t\t\tjQuery( this ).addClass( 'ui-sortable-helper drag-selected' );\n\t\t\t\t\tjQuery( this ).ClassyWiggle( 'start', { degrees: ['.65', '1', '.65', '0', '-.65', '-1', '-.65', '0'], delay: 50 } );\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t    \treturn {\n\t    \t\trenderClasses: function() {\n\t    \t\t\tvar classes = 'nf-field-wrap';\n\t    \t\t\tif ( this.editActive ) {\n\t    \t\t\t\tclasses += ' active';\n\t    \t\t\t}\n\t    \t\t\treturn classes;\n\t    \t\t},\n\t    \t\trenderRequired: function() {\n\t    \t\t\tif ( 1 == this.required ) {\n\t    \t\t\t\treturn '<span class=\"required\">*</span>';\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t    \t\t},\n\t    \t\tgetFieldID: function() {\n\t\t\t\t\tif ( jQuery.isNumeric( this.id ) ) {\n\t\t\t\t\t\treturn 'field-' + this.id;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this.id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\t\tevents: {\n\t\t\t'click': 'maybeClickEdit'\n\t\t},\n\n\t\tmaybeClickEdit: function( e ) {\n\t\t\tif ( jQuery( e.target ).parent().hasClass( 'nf-fields-sortable' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'click:edit', e, this.model );\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/mainContentEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-content-fields-empty',\n\n\t\tonBeforeDestroy: function() {\n\t\t\tjQuery( this.el ).parent().removeClass( 'nf-fields-empty-droppable' ).droppable( 'destroy' );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tif ( jQuery( this.el ).parent().hasClass( 'ui-sortable' ) ) {\n\t\t\t\tjQuery( this.el ).parent().sortable( 'destroy' );\n\t\t\t}\n\t\t\tjQuery( this.el ).parent().addClass( 'nf-fields-empty-droppable' );\n\t\t\tjQuery( this.el ).parent().droppable( {\n\t\t\t\taccept: function( draggable ) {\n\t\t\t\t\tif ( jQuery( draggable ).hasClass( 'nf-stage' ) || jQuery( draggable ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\thoverClass: 'nf-droppable-hover',\n\t\t\t\ttolerance: 'pointer',\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t\t},\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\t\t},\n\t\t\t\tdrop: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'receive:fieldsSortable', ui );\n\t\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\t\tfieldCollection.trigger( 'reset', fieldCollection );\n\t\t\t\t},\n\t\t\t} );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/mainContentFieldCollection',['views/fields/fieldItem', 'views/fields/mainContentEmpty'], function( mainContentFieldView, mainContentFieldEmptyView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: mainContentFieldView,\n\t\temptyView: mainContentFieldEmptyView,\n\t\treorderOnSort: true,\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:sortableEl', this.getSortableEl, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'init:sortable', this.initSortable, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'destroy:sortable', this.destroySortable, this );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tif ( this.collection.models.length > 0 ) {\n\t\t\t\tjQuery( this.el ).addClass( 'nf-field-type-droppable' ).addClass( 'nf-fields-sortable' );\n\t\t\t\tvar that = this;\n\t\t\t\t/* TODO: There's a bug with some Android phones and chrome. The fix below hasn't been implement.\n\t\t\t\t\n\t\t\t\t * Instantiate our sortable field list, but only if we aren't on a mobile device.\n\t\t\t\t *\n\t\t\t\t * On Android, our sortable list isn't scrollable if it's instantiated at render.\n\t\t\t\t * Instead, for mobile, we need to instantiate our sortable when the user tapholds and then\n\t\t\t\t * destroy it when the drag stops.\n\t\t\t\t */\n\t\t\t\t// if ( ! nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\t\tthis.initSortable();\t\t\t\t\n\t\t\t\t// }\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'app' ).trigger( 'render:fieldsSortable', this );\n\t\t},\n\n\t\tgetSortableEl: function() {\n\t\t\treturn this.el;\n\t\t},\n\n\t\tinitSortable: function() {\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\tvar tolerance = 'pointer';\n\t\t\t} else {\n\t\t\t\tvar tolerance = 'intersect';\n\t\t\t}\n\n\t\t\tjQuery( this.el ).sortable( {\n\t\t\t\tcontainment: '#nf-main',\n\t\t\t\thelper: 'clone',\n\t\t\t\tcancel: '.nf-item-controls',\n\t\t\t\tplaceholder: 'nf-fields-sortable-placeholder',\n\t\t\t\topacity: 0.95,\n\t\t\t\ttolerance: tolerance,\n\n\t\t\t\treceive: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'receive:fieldsSortable', ui );\n\t\t\t\t},\n\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t\t},\n\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\t\t},\n\n\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'start:fieldsSortable', ui );\n\t\t\t\t},\n\n\t\t\t\tupdate: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:fieldsSortable', ui );\n\t\t\t\t},\n\n\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'stop:fieldsSortable', ui );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tdestroySortable: function() {\n\t\t\tjQuery( this.el ).sortable( 'destroy' );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","/**\n * Add main header.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/mainHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-header-actions',\n\n\t\tinitialize: function() {\n\t\t\tvar actionCollection = nfRadio.channel( 'actions' ).request( 'get:collection' );\n\t\t\tthis.listenTo( actionCollection, 'add', this.render );\n\t\t\tthis.listenTo( actionCollection, 'remove', this.render );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar actionCollection = nfRadio.channel( 'actions' ).request( 'get:collection' );\n\t\t\tif ( actionCollection.models.length == 0 ) {\n\t\t\t\tjQuery( this.el ).hide();\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).show();\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Actions subheader view.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/subHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-sub-header-actions'\n\t});\n\n\treturn view;\n} );\n","/**\n * Single action table row\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/actionItem',['views/app/itemControls'], function( itemControlsView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'tr',\n\t\ttemplate: '#nf-tmpl-action-item',\n\t\t\n\t\tregions: {\n\t\t\titemControls: '.nf-item-controls'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:label', this.render, this );\n\t\t\tthis.model.on( 'change:editActive', this.render, this );\n\t\t\tthis.model.on( 'change:active', this.maybeDeactivate, this );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:label', this.render );\n\t\t\tthis.model.off( 'change:editActive', this.render );\n\t\t\tthis.model.off( 'change:active', this.maybeDeactivate );\n\t\t},\n\t\t\n\t\tonRender: function() {\n\t\t\tif ( this.model.get( 'editActive' ) ) {\n\t\t\t\tjQuery( this.el ).addClass( 'active' );\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).removeClass( 'active' );\n\t\t\t}\n\n\t\t\tthis.maybeDeactivate();\n\t\t\t\n\t\t\tthis.itemControls.show( new itemControlsView( { model: this.model } ) );\n\t\t},\n\n\t\tmaybeDeactivate: function() {\n\t\t\tif ( 0 == this.model.get( 'active' ) ) {\n\t\t\t\tjQuery( this.el ).addClass( 'deactivated' );\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).removeClass( 'deactivated' );\n\t\t\t}\n\t\t},\n\n\t\tevents: {\n\t\t\t'change input': 'changeToggle',\n\t\t\t'click': 'maybeClickEdit'\n\t\t},\n\n\t\tmaybeClickEdit: function( e ) {\n\t\t\tif ( 'TR' == jQuery( e.target ).parent().prop( 'tagName' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'click:edit', e, this.model );\n\t\t\t}\n\t\t},\n\n\t\tchangeToggle: function( e ) {\n\t\t\tvar settingModel = nfRadio.channel( 'actions' ).request( 'get:settingModel', 'active' );\n\t\t\tnfRadio.channel( 'app' ).request( 'change:setting', e, settingModel, this.model );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderToggle: function() {\n\t\t\t\t\tvar actionLabel = this.label;\n\t\t\t\t\tthis.label = '';\n\t\t\t\t\tthis.value = this.active;\n\t\t\t\t\tthis.name = this.id + '-active';\n\t\t\t\t\tvar html = _.template( jQuery( '#nf-tmpl-edit-setting-toggle' ).html(), this );\n\t\t\t\t\tthis.label = actionLabel;\n\t\t\t\t\treturn html;\n\t\t\t\t},\n\n\t\t\t\trenderTypeNicename: function() {\n\t\t\t\t\tvar type = nfRadio.channel( 'actions' ).request( 'get:type', this.type );\n\t\t\t\t\treturn type.get( 'nicename' );\n\t\t\t\t},\n\n\t\t\t\trenderTooltip: function() {\n\t\t\t\t\tif ( this.help ) {\n\t\t\t\t\t\treturn '<a class=\"nf-help\" href=\"#\"><span class=\"dashicons dashicons-admin-comments\"></span></a><div class=\"nf-help-text\">' + this.help + '</div>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderMergeTags: function() {\n\t\t\t\t\tif ( this.use_merge_tags ) {\n\t\t\t\t\t\treturn '<span class=\"dashicons dashicons-list-view merge-tags\"></span>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/actions/mainContentEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-content-actions-empty',\n\n\t\tonBeforeDestroy: function() {\n\t\t\tjQuery( this.el ).parent().parent().removeClass( 'nf-actions-empty' );\n\t\t\t// jQuery( this.el ).parent().removeClass( 'nf-fields-empty-droppable' ).droppable( 'destroy' );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tjQuery( this.el ).parent().parent().addClass( 'nf-actions-empty' );\n\t\t\t// if ( jQuery( this.el ).parent().hasClass( 'ui-sortable' ) ) {\n\t\t\t// \tjQuery( this.el ).parent().sortable( 'destroy' );\n\t\t\t// }\n\t\t\t// jQuery( this.el ).parent().addClass( 'nf-fields-empty-droppable' );\n\t\t\t// jQuery( this.el ).parent().droppable( {\n\t\t\t// \taccept: function( draggable ) {\n\t\t\t// \t\tif ( jQuery( draggable ).hasClass( 'nf-stage' ) || jQuery( draggable ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t// \t\t\treturn true;\n\t\t\t// \t\t}\n\t\t\t// \t},\n\t\t\t// \thoverClass: 'nf-droppable-hover',\n\t\t\t// \ttolerance: 'pointer',\n\t\t\t// \tover: function( e, ui ) {\n\t\t\t// \t\tui.item = ui.draggable;\n\t\t\t// \t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t// \t},\n\t\t\t// \tout: function( e, ui ) {\n\t\t\t// \t\tui.item = ui.draggable;\n\t\t\t// \t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\t// \t},\n\t\t\t// \tdrop: function( e, ui ) {\n\t\t\t// \t\tui.item = ui.draggable;\n\t\t\t// \t\tnfRadio.channel( 'app' ).request( 'receive:fieldsSortable', ui );\n\t\t\t// \t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t// \t\tfieldCollection.trigger( 'reset', fieldCollection );\n\t\t\t// \t},\n\t\t\t// } );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Main content view for our actions.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/mainContent',['views/actions/actionItem', 'views/actions/mainContentEmpty'], function( actionView, emptyView ) {\n\tvar view = Marionette.CompositeView.extend({\n\t\ttemplate: '#nf-tmpl-action-table',\n\t\tchildView: actionView,\n\t\temptyView: emptyView,\n\n\t\tonRender: function() {\n\t\t\tjQuery( this.el ).droppable( {\n\t\t\t\taccept: '.nf-one-third',\n\t\t\t\tactiveClass: 'nf-droppable-active',\n\t\t\t\thoverClass: 'nf-droppable-hover',\n\t\t\t\tdrop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'drop:actionType', e, ui );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( 'tbody' ).append( childView.el );\n\t\t},\n\t});\n\n\treturn view;\n} );\n","define( 'views/advanced/mainHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-header-settings'\n\t});\n\n\treturn view;\n} );\n","define( 'views/advanced/subHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-sub-header-settings'\n\t});\n\n\treturn view;\n} );\n","define( 'views/advanced/settingItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-form-setting-type',\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:editActive', this.render );\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:editActive', this.render, this );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click': 'clickEdit'\n\t\t},\n\n\t\tclickEdit: function( e ) {\n\t\t\tnfRadio.channel( 'settings' ).trigger( 'click:edit', e, this.model );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = 'nf-setting-wrap';\n\t    \t\t\tif ( this.editActive ) {\n\t    \t\t\t\tclasses += ' active';\n\t    \t\t\t}\n\t    \t\t\treturn classes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/advanced/mainContent',['views/advanced/settingItem'], function( settingItem ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\tchildView: settingItem\n\t\t\n\t});\n\n\treturn view;\n} );\n","/**\n * Config file for our app domains.\n * \n * this.collection represents all of our app domain (fields, actions, settings) information.\n *\n * This doesn't store the current domain, but rather all the data about each.\n * \n * This data includes:\n * hotkeys\n * header view\n * subheader view\n * content view\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/domainConfig',[\n\t// Require our domain collection\n\t'models/app/domainCollection',\n\t// Require our fields domain files\n\t'views/fields/mainHeader',\n\t'views/fields/subHeader',\n\t'views/fields/mainContentFieldCollection',\n\t// Require our actions domain files\n\t'views/actions/mainHeader', \n\t'views/actions/subHeader',\n\t'views/actions/mainContent',\n\t// Require our settings domain files\n\t'views/advanced/mainHeader',\n\t'views/advanced/subHeader',\n\t'views/advanced/mainContent',\n\t], \n\tfunction( \n\t\tappDomainCollection,\n\t\tfieldsMainHeaderView,\n\t\tfieldsSubHeaderView,\n\t\tfieldsMainContentFieldCollectionView,\n\t\tactionsMainHeaderView,\n\t\tactionsSubHeaderView,\n\t\tactionsMainContentView,\n\t\tsettingsMainHeaderView,\n\t\tsettingsSubHeaderView,\n\t\tsettingsMainContentView\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Define our app domains\n\t\t\tthis.collection = new appDomainCollection( [\n\t\t\t\t{\n\t\t\t\t\tid: 'fields',\n\t\t\t\t\tnicename: 'Form Fields',\n\t\t\t\t\thotkeys: {\n\t\t\t\t\t\t'Esc'\t\t\t\t: 'close:drawer',\n\t\t\t\t\t\t'Ctrl+Shift+n'\t\t: 'add:newField',\n\t\t\t\t\t\t'Ctrl+Shift+a'\t\t: 'changeDomain:actions',\n\t\t\t\t\t\t'Ctrl+Shift+s'\t\t: 'changeDomain:settings',\n\t\t\t\t\t\t'Alt+Ctrl+t'\t\t: 'open:mergeTags',\n\t\t\t\t\t\t'up'\t\t\t\t: 'up:mergeTags',\n\t\t\t\t\t\t'down'\t\t\t\t: 'down:mergeTags',\n\t\t\t\t\t\t'Shift+return'\t\t: 'return:mergeTags'\n\t\t\t\t\t},\n\t\t\t\t\tmobileDashicon: 'dashicons-menu',\n\n\t\t\t\t\tgetMainHeaderView: function() {\n\t\t\t\t\t\treturn new fieldsMainHeaderView();\n\t\t\t\t\t},\n\n\t\t\t\t\tgetSubHeaderView: function() {\n\t\t\t\t\t\treturn new fieldsSubHeaderView();\n\t\t\t\t\t},\n\n\t\t\t\t\tgetMainContentView: function( collection ) {\n\t\t\t\t\t\tvar collection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\t\t\treturn new fieldsMainContentFieldCollectionView( { collection: collection } );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'actions',\n\t\t\t\t\tnicename: 'Emails & Actions',\n\t\t\t\t\thotkeys: {\n\t\t\t\t\t\t'Esc'\t\t\t\t: 'close:drawer',\n\t\t\t\t\t\t'Ctrl+Shift+n'\t\t: 'add:newAction',\n\t\t\t\t\t\t'Ctrl+Shift+f'\t\t: 'changeDomain:fields',\n\t\t\t\t\t\t'Ctrl+Shift+s'\t\t: 'changeDomain:settings',\n\t\t\t\t\t\t'Alt+Ctrl+t'\t\t: 'open:mergeTags',\n\t\t\t\t\t\t'up'\t\t\t\t: 'up:mergeTags',\n\t\t\t\t\t\t'down'\t\t\t\t: 'down:mergeTags',\n\t\t\t\t\t\t'Shift+return'\t\t: 'return:mergeTags'\n\t\t\t\t\t},\n\t\t\t\t\tmobileDashicon: 'dashicons-external',\n\n\t\t\t\t\tgetMainHeaderView: function() {\n\t\t\t\t\t\treturn new actionsMainHeaderView();\n\t\t\t\t\t},\n\n\t\t\t\t\tgetSubHeaderView: function() {\n\t\t\t\t\t\treturn new actionsSubHeaderView();\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t\tgetMainContentView: function() {\n\t\t\t\t\t\tvar collection = nfRadio.channel( 'actions' ).request( 'get:collection' );\n\t\t\t\t\t\treturn new actionsMainContentView( { collection: collection } );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'settings',\n\t\t\t\t\tnicename: 'Advanced',\n\t\t\t\t\thotkeys: {\n\t\t\t\t\t\t'Esc'\t\t\t\t: 'close:drawer',\n\t\t\t\t\t\t'Ctrl+Shift+f'\t\t: 'changeDomain:fields',\n\t\t\t\t\t\t'Ctrl+Shift+a'\t\t: 'changeDomain:actions',\n\t\t\t\t\t\t'Alt+Ctrl+t'\t\t: 'open:mergeTags',\n\t\t\t\t\t\t'up'\t\t\t\t: 'up:mergeTags',\n\t\t\t\t\t\t'down'\t\t\t\t: 'down:mergeTags',\n\t\t\t\t\t\t'Shift+return'\t\t: 'return:mergeTags'\n\t\t\t\t\t},\n\t\t\t\t\tmobileDashicon: 'dashicons-admin-generic',\n\n\t\t\t\t\tgetMainHeaderView: function() {\n\t\t\t\t\t\treturn new settingsMainHeaderView();\n\t\t\t\t\t},\n\n\t\t\t\t\tgetSubHeaderView: function() {\n\t\t\t\t\t\treturn new settingsSubHeaderView();\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t\tgetMainContentView: function() {\n\t\t\t\t\t\tvar collection = nfRadio.channel( 'settings' ).request( 'get:typeCollection' );\n\t\t\t\t\t\treturn new settingsMainContentView( { collection: collection } );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'preview',\n\t\t\t\t\tnicename: 'Preview Form',\n\t\t\t\t\tclasses: 'preview',\n\t\t\t\t\tdashicons: 'dashicons-visibility',\n\t\t\t\t\tmobileDashicon: 'dashicons-visibility',\n\t\t\t\t\turl: nfAdmin.previewurl\n\t\t\t\t}\n\t\t\t] );\n\n\t\t\t/*\n\t\t\t * Respond to requests to get the app domain collection.\n\t\t\t */\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:domainCollection', this.getDomainCollection, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:domainModel', this.getDomainModel, this );\n\t\t},\n\n\t\tgetDomainCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tgetDomainModel: function( id ) {\n\t\t\treturn this.collection.get( id );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model for our app data.\n * Listens for changes to the 'clean' attribute and triggers a radio message when the state changes.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/appModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tloading: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Listen to changes to our 'clean' attribute.\n\t\t\tthis.on( 'change:clean', this.changeStatus, this );\n\t\t},\n\n\t\tchangeStatus: function() {\n\t\t\t// Send out a radio message when the 'clean' attribute changes.\n\t\t\tnfRadio.channel( 'app' ).trigger( 'change:clean', this.get( 'clean' ) );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Creates and stores a model that represents app-wide data. i.e. current domain, current drawer, clean, etc.\n *\n * clean is a boolean that represents whether or not changes have been made.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/data',['models/app/appModel'], function( appModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Get the collection that represents all the parts of our application.\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\t// Setup our initial model.\n\t\t\tthis.model = new appModel( {\n\t\t\t\tcurrentDrawer: false,\n\t\t\t\tcurrentDomain: appDomainCollection.get( 'fields' ),\n\t\t\t\tclean: true\n\t\t\t} );\n\n\t\t\t/*\n\t\t\t * Set the mobile setting used to track whether or not we're on a mobile device.\n\t\t\t */\n\t\t\tvar mobile = ( 1 == nfAdmin.mobile ) ? true : false;\n\t\t\tthis.model.set( 'mobile', mobile );\n\n\t\t\t/*\n\t\t\t * Respond to requests to see if we are on mobile.\n\t\t\t */\n\t\t\tnfRadio.channel( 'app' ).reply( 'is:mobile', this.isMobile, this );\n\n\t\t\t/*\n\t\t\t * Respond to app channel requests for information about the state of our app.\n\t\t\t */\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:data', this.getData, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:setting', this.getSetting, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:currentDomain', this.getCurrentDomain, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:currentDrawer', this.getCurrentDrawer, this );\n\n\t\t\t/*\n\t\t\t * Respond to app channel requests to update app settings.\n\t\t\t */\t\t\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:currentDomain', this.updateCurrentDomain, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:currentDrawer', this.updateCurrentDrawer, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:setting', this.updateSetting, this );\n\n\t\t},\n\n\t\tupdateCurrentDomain: function( model ) {\n\t\t\tthis.updateSetting( 'currentDomain', model );\n\t\t},\n\n\t\tupdateSetting: function( setting, value ) {\n\t\t\tthis.model.set( setting, value );\n\t\t\treturn true;\n\t\t},\n\n\t\tgetSetting: function( setting ) {\n\t\t\treturn this.model.get( setting );\n\t\t},\n\n\t\tgetData: function() {\n\t\t\treturn this.model;\n\t\t},\n\n\t\tgetCurrentDomain: function() {\n\t\t\treturn this.model.get( 'currentDomain' );\n\t\t},\n\n\t\tupdateCurrentDrawer: function( drawerID ) {\n\t\t\tthis.updateSetting( 'currentDrawer', drawerID );\n\t\t\treturn true;\n\t\t},\n\n\t\tgetCurrentDrawer: function() {\n\t\t\tvar currentDrawerID = this.model.get( 'currentDrawer' );\n\t\t\treturn nfRadio.channel( 'app' ).request( 'get:drawer', currentDrawerID );\n\t\t},\n\n\t\tisMobile: function() {\n\t\t\treturn this.model.get( 'mobile' );\n\t\t}\n\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens for click events to expand/collapse setting groups.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/drawerToggleSettingGroup',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for click events on our settings group.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'click:toggleSettingGroup', this.toggleSettingGroup );\n\t\t},\n\n\t\t/**\n\t\t * Set the 'display' attribute of our group model to true or false to toggle.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te     \tevent\n\t\t * @param  backbone.model \tmodel \tgroup setting model\n\t\t * @return void\n\t\t */\n\t\ttoggleSettingGroup: function( e, model ) {\n\t\t\tif ( model.get( 'display' ) ) {\n\t\t\t\t/*\n\t\t\t\t * Make sure that none of our settings have errors\n\t\t\t\t */\n\t\t\t\tvar errors = false;\n\t\t\t\t_.each( model.get( 'settings' ).models, function( setting ) {\n\t\t\t\t\tif ( setting.get( 'error' ) ) {\n\t\t\t\t\t\terrors = true;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tif ( ! errors ) {\n\t\t\t\t\tmodel.set( 'display', false );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmodel.set( 'display', true );\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Updates our database with our form data.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/updateDB',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for the closing of the drawer and update when it's closed.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'closed', this.updateDB );\n\t\t\t// Respond to requests to update the database.\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:db', this.updateDB, this );\n\t\t},\n\n\t\t/**\n\t\t * Update our database.\n\t\t * If action isn't specified, assume we're updating the preview.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string \taction preview or publish\n\t\t * @return void\n\t\t */\n\t\tupdateDB: function( action ) {\n\t\t\t// If our app is clean, dont' update.\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'get:setting', 'clean' ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\t// Default action to preview.\n\t\t\taction = action || 'preview';\n\n\t\t\t// Setup our ajax actions based on the action we're performing\n\t\t\tif ( 'preview' == action ) {\n\t\t\t\tvar jsAction = 'nf_preview_update';\n\t\t\t} else if ( 'publish' == action ) {\n\t\t\t\tvar jsAction = 'nf_save_form';\n\t\t\t}\n\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\n\t\t\tif ( 'publish' == action && formModel.get( 'show_publish_options' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'newForm' );\n\t\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\t\tjQuery( builderEl ).addClass( 'disable-main' );\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Get our form data\n\t\t\tvar formData = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\n\t\t\t// Turn our formData model into an object\n\t\t\tvar data = JSON.parse( JSON.stringify( formData ) );\n\n\t\t\t/**\n\t\t\t * Prepare fields for submission.\n\t\t\t */\n\t\t\t\n\t\t\t// Get the field IDs that we've deleted.\n\t\t\tvar removedIDs = formData.get( 'fields' ).removedIDs;\n\n\t\t\t/*\n\t\t\t * data.fields is an array of objects like:\n\t\t\t * field.label = blah\n\t\t\t * field.label_pos = blah\n\t\t\t * etc.\n\t\t\t *\n\t\t\t * And we need that format to be:\n\t\t\t * field.settings.label = blah\n\t\t\t * field.settings.label_pos = blah\n\t\t\t *\n\t\t\t * So, we loop through our fields and create a field.settings object.\n\t\t\t */\n\t\t\t_.each( data.fields, function( field ) {\n\t\t\t\tvar id = field.id;\n\t\t\t\t// We dont' want to update id or parent_id\n\t\t\t\tdelete field.id;\n\t\t\t\tdelete field.parent_id;\n\t\t\t\tvar settings = {};\n\t\t\t\t// Loop through all the attributes of our fields\n\t\t\t\tfor (var prop in field) {\n\t\t\t\t    if ( field.hasOwnProperty( prop ) ) {\n\t\t\t\t    \t// Set our settings.prop value.\n\t\t\t\t        settings[ prop ] = field[ prop ];\n\t\t\t\t        // Delete the property from the field.\n\t\t\t\t        delete field[ prop ];\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\t// Update our field object.\n\t\t\t\tfield.settings = settings;\n\t\t\t\tfield.id = id;\n\t\t\t} );\n\n\t\t\t// Set our deleted_fields object so that we can know which fields were removed.\n\t\t\tdata.deleted_fields = removedIDs;\n\n\t\t\t/**\n\t\t\t * Prepare actions for submission.\n\t\t\t */\n\t\t\t\n\t\t\t// Get the action IDs that we've deleted.\n\t\t\tvar removedIDs = formData.get( 'actions' ).removedIDs;\n\n\t\t\t/*\n\t\t\t * data.actions is an array of objects like:\n\t\t\t * action.label = blah\n\t\t\t * action.label_pos = blah\n\t\t\t * etc.\n\t\t\t *\n\t\t\t * And we need that format to be:\n\t\t\t * action.settings.label = blah\n\t\t\t * action.settings.label_pos = blah\n\t\t\t *\n\t\t\t * So, we loop through our actions and create a field.settings object.\n\t\t\t */\n\t\t\t_.each( data.actions, function( action ) {\n\t\t\t\tvar id = action.id;\n\t\t\t\t// We dont' want to update id or parent_id\n\t\t\t\tdelete action.id;\n\t\t\t\tdelete action.parent_id;\n\t\t\t\tvar settings = {};\n\t\t\t\t// Loop through all the attributes of our actions\n\t\t\t\tfor (var prop in action) {\n\t\t\t\t    if ( action.hasOwnProperty( prop ) ) {\n\t\t\t\t    \t// Set our settings.prop value.\n\t\t\t\t        settings[ prop ] = action[ prop ];\n\t\t\t\t        // Delete the property from the action.\n\t\t\t\t        delete action[ prop ];\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\t// Update our action object.\n\t\t\t\taction.settings = settings;\n\t\t\t\taction.id = id;\n\t\t\t} );\n\n\t\t\t// Set our deleted_actions object so that we can know which actions were removed.\n\t\t\tdata.deleted_actions = removedIDs;\n\n\t\t\t// Turn our object into a JSON string.\n\t\t\tdata = JSON.stringify( data );\n\t\t\t// Run anything that needs to happen before we update.\n\t\t\tnfRadio.channel( 'app' ).trigger( 'before:updateDB', data );\n\n\t\t\tif ( 'publish' == action ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'loading', true );\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'change:loading' );\t\n\n\t\t\t\t// If we're on mobile, show a notice that we're publishing\n\t\t\t\tif ( nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\t\tnfRadio.channel( 'notices' ).request( 'add', 'publishing', 'Your Changes Are Being Published', { autoClose: false } );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update\n\t\t\tjQuery.post( ajaxurl, { action: jsAction, form: data, security: nfAdmin.ajaxNonce }, function( response ) {\n\t\t\t\ttry {\n\t\t\t\t\tresponse = JSON.parse( response );\n\t\t\t\t\tresponse.action = action;\n\t\t\t\t\t// Run anything that needs to happen after we update.\n\t\t\t\t\tnfRadio.channel( 'app' ).trigger( 'response:updateDB', response );\n\t\t\t\t} catch( exception ) {\n\t\t\t\t\tconsole.log( 'Something went wrong!' );\n\t\t\t\t\tconsole.log( response );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model that represents our form data.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/formModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tinitialize: function() {\n\t\t\tif ( ! jQuery.isNumeric( this.get( 'id' ) ) ) {\n\t\t\t\tthis.set( 'show_publish_options', true, { silent: true } );\n\t\t\t} else {\n\t\t\t\tthis.set( 'show_publish_options', false, { silent: true } );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Stores our form data and responds to requests for it.\n * Form data stores fields, actions, and settings.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/formData',['models/app/formModel'], function( formModel) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Instantiate Form Model\n\t\t\tthis.model = new formModel( { id: preloadedFormData.id } );\n\t\t\t// Set our field collection\n\t\t\tthis.model.set( 'fields', nfRadio.channel( 'fields' ).request( 'get:collection' ) );\n\t\t\t// Set our actions collection\n\t\t\tthis.model.set( 'actions', nfRadio.channel( 'actions' ).request( 'get:collection' ) );\n\t\t\t// Set our settings collection\n\t\t\tthis.model.set( 'settings', nfRadio.channel( 'settings' ).request( 'get:settings' ) );\n\t\t\t// Respond to requests for form data.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:formModel', this.getFormModel, this );\n\t\t},\n\n\t\t/**\n\t\t * Return form data model.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return backbone.model\n\t\t */\n\t\tgetFormModel: function() {\n\t\t\treturn this.model;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles changing our preview link when we change the 'clean' state of our app.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/previewLink',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for events that would change our preview link\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'before:sendChanges', this.disablePreview, this );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'response:sendChanges', this.enablePreview, this );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:clean', this.changePreviewNicename, this );\n\t\t},\n\n\t\t/**\n\t\t * Disable our preview link before we send data to update our preview.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tdisablePreview: function() {\n\t\t\t// Get our preview domain\n\t\t\tvar appDomains = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar preview = appDomains.get( 'preview' );\n\t\t\t// Set disabled to true. This will trigger the preview link view to redraw.\n\t\t\tpreview.set( 'disabled', true );\n\t\t},\n\n\t\t/**\n\t\t * Change the preview link text from \"Preview Form\" to \"Preview Changes\" or vice-versa\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  boolean \tclean app data state\n\t\t * @return void\n\t\t */\n\t\tchangePreviewNicename: function( clean ) {\n\t\t\t// Get our preview domain\n\t\t\tvar appDomains = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar preview = appDomains.get( 'preview' );\n\n\t\t\t// If we have unsaved changes, set our text to 'changes' otherwise, set it to 'form'\n\t\t\tif ( ! clean ) {\n\t\t\t\tvar nicename = 'Preview Changes';\n\t\t\t} else {\n\t\t\t\tvar nicename = 'Preview Form';\n\t\t\t}\n\n\t\t\tpreview.set( 'nicename', nicename );\n\t\t},\n\n\t\t/**\n\t\t * Enable our preview button.\n\t\t * This is triggered when we get a response from our preview update.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tenablePreview: function() {\n\t\t\t// Get our preview domain\n\t\t\tvar appDomains = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar preview = appDomains.get( 'preview' );\n\t\t\t// Set disabled to false. This will trigger the preview link view to redraw.\n\t\t\tpreview.set( 'disabled', false );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel for requests to change the current domain.\n *\n * The app menu and the main submenu both contain clickable links that change the current domain.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/menuButtons',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:publish', this.publish );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:viewChanges', this.viewChanges );\n\t\t},\n\n\t\tpublish: function() {\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db', 'publish' );\n\t\t},\n\n\t\tviewChanges: function() {\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'viewChanges', { collection: changeCollection } );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model that represents our change data.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/changeModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tdisabled: false\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Holds all of our change models.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/changeCollection',['models/app/changeModel'], function( domainModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: domainModel,\n\n\t\tcomparator: function( model ) {\n\t\t\tvar id = parseInt( model.cid.replace( 'c', '' ) );\n\t\t\treturn -id;\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.on( 'add', this.addNotice, this );\n\t\t},\n\n\t\taddNotice: function( model ) {\n\t\t\tif ( ! nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\t// Show a notice that we've made the change.\n\t\t\t\t// nfRadio.channel( 'notices' ).request( 'add', 'action', model.get( 'label' ).label + ' ' + model.get( 'label' ).change );\t\t\t\t\n\t\t\t}\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Track settings changes across our app.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/trackChanges',['models/app/changeCollection', 'models/app/changeModel'], function( changeCollection, ChangeModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.collection = new changeCollection();\n\t\t\t// Respond to any requests to add a change directly.\n\t\t\tnfRadio.channel( 'changes' ).reply( 'register:change', this.registerChange, this );\n\t\t\t// Respond to requests for the change collection\n\t\t\tnfRadio.channel( 'changes' ).reply( 'get:changeCollection', this.getCollection, this );\n\t\t\t// Listen for changes in our clean state. If it goes to clean, clear our collection.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:clean', this.maybeResetCollection );\n\t\t},\n\n\t\tregisterChange: function( action, model, changes, label, data ) {\n\t\t\tvar data = typeof data !== 'undefined' ? data : {};\n\t\t\tif ( 'undefined' == typeof label.dashicon ) {\n\t\t\t\tlabel.dashicon = 'admin-generic';\n\t\t\t}\n\t\t\tvar changeModel = new ChangeModel({\n\t\t\t\taction: action,\n\t\t\t\tmodel: model,\n\t\t\t\tchanges: changes,\n\t\t\t\tlabel: label,\n\t\t\t\tdata: data\t\t\n\t\t\t} );\n\t\t\tthis.collection.add( changeModel );\n\t\t\treturn changeModel;\n\t\t},\n\n\t\tgetCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tmaybeResetCollection: function( clean ) {\n\t\t\tif ( clean ) {\n\t\t\t\tthis.collection.reset();\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define( 'controllers/app/undoChanges',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'click:undoChanges', this.undoChanges, this );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'click:undoSingle', this.undoSingle, this );\n\t\t},\n\n\t\tundoChanges: function() {\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\tchangeCollection.sort();\n\t\t\tvar that = this;\n\t\t\t_.each( changeCollection.models, function( change ) {\n\t\t\t\tthat.undoSingle( change, true );\n\t\t\t} );\n\t\t\tchangeCollection.reset();\n\t\t\t// Update preview.\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\t\t\t\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', true );\n\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t},\n\n\t\tundoSingle: function( change, undoAll ) {\n\t\t\tnfRadio.channel( 'changes' ).request( 'undo:' + change.get( 'action' ), change, undoAll );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens for our update:db response and replaces tmp ids with new ids if we were performing the publish action.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/publishResponse',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our app channel for the updateDB response.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'response:updateDB', this.publishResponse );\n\t\t},\n\n\t\tpublishResponse: function( response ) {\n\t\t\t// If we aren't performing a publish action, bail.\n\t\t\tif ( 'publish' !== response.action ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\t// Check to see if we have any new ids. \n\t\t\tif ( 'undefined' != typeof response.data.new_ids ) {\n\n\t\t\t\t// If we have any new fields, update their models with the new id.\n\t\t\t\tif ( 'undefined' != typeof response.data.new_ids.fields ) {\n\t\t\t\t\t_.each( response.data.new_ids.fields, function( newID, oldID ) {\n\t\t\t\t\t\tvar field = nfRadio.channel( 'fields' ).request( 'get:field', oldID );\n\t\t\t\t\t\tif ( field ) {\n\t\t\t\t\t\t\tfield.set( 'id', newID );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// If we have any new actions, update their models with the new id.\n\t\t\t\tif ( 'undefined' != typeof response.data.new_ids.actions ) {\n\t\t\t\t\t_.each( response.data.new_ids.actions, function( newID, oldID ) {\n\t\t\t\t\t\tvar action = nfRadio.channel( 'actions' ).request( 'get:action', oldID );\n\t\t\t\t\t\tif ( action ) {\n\t\t\t\t\t\t\taction.set( 'id', newID );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// If we have a new form id, update the model with the new id.\n\t\t\t\tif ( 'undefined' != typeof response.data.new_ids.forms ) {\n\t\t\t\t\t_.each( response.data.new_ids.forms, function( newID, oldID ) {\n\t\t\t\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\t\t\t\t\t\tformModel.set( 'id', newID );\n\t\t\t\t\t\thistory.replaceState( '', '', 'admin.php?page=ninja-forms&form_id=' + newID );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'loading', false );\n\t\t\tnfRadio.channel( 'app' ).trigger( 'change:loading' );\n\n\t\t\t// If we're on mobile, show a notice that we're publishing\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\tnfRadio.channel( 'notices' ).request( 'close', 'publishing' );\n\t\t\t\tvar options = {}\t\t\n\t\t\t} else {\n\t\t\t\tvar options = {\n\t\t\t\t\tposition: {\n\t\t\t\t\t\tx: 'right',\n\t\t\t\t\t\ty: 'top'\n\t\t\t\t\t},\n\t\t\t\t\tanimation: {\n\t\t\t\t\t\topen: 'slide:right',\n\t\t\t\t\t\tclose: 'slide:right'\n\t\t\t\t\t},\n\t\t\t\t\toffset: {\n\t\t\t\t\t\tx: -40,\n\t\t\t\t\t\ty: 120\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Add a notice that we've published.\n\t\t\tnfRadio.channel( 'notices' ).request( 'add', 'published', 'Changes Published', options );\t\n\t\t\t// Mark our app as clean. This will disable the publish button and fire anything else that cares about the state.\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', true );\n\t\t}\n\t\t\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel for requests to change the current domain.\n *\n * The app menu and the main submenu both contain clickable links that change the current domain.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/changeDomain',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for both menu and submenu clicks.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:menu', this.changeAppDomain );\n\t\t\t// Reply to specific requests to change the domain\n\t\t\tnfRadio.channel( 'app' ).reply( 'change:currentDomain', this.changeAppDomain, this );\n\n\t\t\t// Reply to requests to prevent our drawer from closing\n\t\t\tnfRadio.channel( 'app' ).reply( 'prevent:changeDomain', this.preventChange, this );\n\t\t\t// Reply to requests to enable drawer closing\n\t\t\tnfRadio.channel( 'app' ).reply( 'enable:changeDomain', this.enableChange, this );\n\n\t\t\t/*\n\t\t\t * Object that holds our array of 'prevent change' values.\n\t\t\t * We use an array so that registered requests can unregister and not affect each other.\n\t\t\t */\n\t\t\tthis.objPreventChange = {};\n\t\t},\n\n\t\tchangeAppDomain: function( e, model ) {\n\t\t\t/*\n\t\t\t * If we have disabled movement between domains, return false.\n\t\t\t */\n\t\t\tif ( this.maybePreventChange() ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * If we are passed a model, use that model.\n\t\t\t * Otherwise, get the domain from the event target data.\n\t\t\t */ \n\t\t\tif ( 'undefined' == typeof model ) {\n\t\t\t\tvar domainID = jQuery( e.target ).data( 'domain' );\n\t\t\t\tvar model = nfRadio.channel( 'app' ).request( 'get:domainModel', domainID );\n\t\t\t}\n\t\t\t// If a drawer is open, close it.\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'get:currentDrawer' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t}\n\t\t\t/*\n\t\t\t * If we aren't dealing with an external url (such as preview), update our app data\n\t\t\t * and trigger a radio message saying we've changed the domain.\n\t\t\t */ \n\t\t\tif ( 0 == model.get( 'url' ).length ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:currentDomain', model );\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'change:currentDomain', model );\n\t\t\t}\n\t\t},\n\n\t\t/**\n         * Check to see if anything has registered a key to prevent changing the domain.\n         * \n         * @since  3.0\n         * @return boolean\n         */\n        maybePreventChange: function() {\n        \tif ( 0 == Object.keys( this.objPreventChange ).length ) {\n        \t\treturn false;\n        \t} else {\n        \t\treturn true;\n        \t}\n        },\n\n        /**\n         * Register a key to prevent changing the domain.\n         * \n         * @since  3.0\n         * @param  string \tkey unique id for our 'prevent change domain' setting.\n         * @return void\n         */\n        preventChange: function( key ) {\n        \tthis.objPreventChange[ key ] = true;\n        },\n\n        /**\n         * Remove a previously registered key that is preventing our domain from changing.\n         * \n         * @since  3.0\n         * @param  string \tkey unique id for our 'prevent change domain' setting.\n         * @return void\n         */\n        enableChange: function( key ) {\n        \tdelete this.objPreventChange[ key ];\n        },\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Modify the user's browser history when they click on a domain\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/pushstate',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.changePushState );\n\t\t},\n\n\t\tchangePushState: function() {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\thistory.pushState( null, null, window.location.href + '&domain=' + currentDomain.get( 'id' ) );\n\t\t\tvar reExp = /domain=\\\\d+/;\n\t\t\tvar url = window.location.toString();\n\t\t\tvar newUrl = url.replace( reExp, '' );\n\t\t\tconsole.log( newUrl );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles our hotkey execution. Needs to be cleaned up and made more programmatic.\n * \n * Our hotkeys are defined by the domain that we're currently viewing. In each domain's model, there is a hotkey object.\n * \n * Currently too much hotkey data is hard-coded here.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/hotkeys',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// When we change our domain, change the hotkeys to those within that object.\n\t\t\tthis.listenTo( nfRadio.channel( 'main' ), 'render:main', this.changeHotkeys );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'opened', this.changeHotkeys );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'render:settingGroup', this.changeHotkeys );\n\t\t\t// Currently, these are the functions that run when the new field or new action hotkey is pressed.\n\t\t\t// TODO: move these into a config module or into something more programmatic and scalable.\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'add:newField', this.addNewField );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'add:newAction', this.addNewAction );\n\t\t\t// Same as above, these functions need to be moved into a more modular/programmatic solution.\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'changeDomain:fields', this.changeDomainFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'changeDomain:actions', this.changeDomainActions );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'changeDomain:settings', this.changeDomainSettings );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'close:drawer', this.closeDrawer );\n\t\t},\n\n\t\tchangeHotkeys: function() {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tjQuery( document ).off( '.nfDomainHotkeys' );\n\t\t\tjQuery( 'input' ).off( '.nfDomainHotkeys' );\n\t\t\tif ( currentDomain.get( 'hotkeys' ) ) {\n\t\t\t\tjQuery.each( currentDomain.get( 'hotkeys' ), function( hotkey, msg ) {\n\t\t\t\t\tjQuery( document ).on( 'keydown.nfDomainHotkeys', null, hotkey, function( e ) {\n\t\t\t\t\t\tnfRadio.channel( 'hotkeys' ).trigger( msg, e );\n\t\t\t\t\t} );\n\t\t\t\t\tjQuery( 'input' ).on( 'keydown.nfDomainHotkeys', null, hotkey, function( e ) {\n\t\t\t\t\t\tnfRadio.channel( 'hotkeys' ).trigger( msg, e );\n\t\t\t\t\t} );\n\t\t\t\t\tjQuery( 'textarea' ).on( 'keydown.nfDomainHotkeys', null, hotkey, function( e ) {\n\t\t\t\t\t\tnfRadio.channel( 'hotkeys' ).trigger( msg, e );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\taddNewField: function() {\n\t\t\tif ( 'addField' != nfRadio.channel( 'app' ).request( 'get:currentDrawer' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'addField' );\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t}\n\t\t\t\n\t\t},\n\n\t\taddNewAction: function() {\n\t\t\tif ( 'addAction' != nfRadio.channel( 'app' ).request( 'get:currentDrawer' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'addAction' );\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t}\n\t\t},\n\n\t\tchangeDomainFields: function() {\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar fieldsDomain = appDomainCollection.get( 'fields' );\n\t\t\tnfRadio.channel( 'app' ).request( 'change:currentDomain', {}, fieldsDomain );\n\t\t},\n\n\t\tchangeDomainActions: function() {\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar actionsDomain = appDomainCollection.get( 'actions' );\n\t\t\tnfRadio.channel( 'app' ).request( 'change:currentDomain', {}, actionsDomain );\n\t\t},\n\n\t\tchangeDomainSettings: function() {\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar settingsDomain = appDomainCollection.get( 'settings' );\n\t\t\tnfRadio.channel( 'app' ).request( 'change:currentDomain', {}, settingsDomain );\n\t\t},\n\n\t\tcloseDrawer: function() {\n\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Change the clean state of our app when settings are changed.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/cleanState',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Set an array of field model attributes to ignore.\n\t\t\t * This list will be filtered just before we ignore anything.\n\t\t\t */ \n\t\t\tthis.ignoreAttributes = [\n\t\t\t\t'editActive'\n\t\t\t];\n\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'update:setting', this.setAppClean );\n\t\t},\n\n\t\tsetAppClean: function( model ) {\n\t\t\tfor( var attr in model.changedAttributes() ) {\n\t\t\t\tvar changedAttr = attr;\n\t\t\t\tvar after = model.changedAttributes()[ attr ];\n\t\t\t}\n\n\t\t\tvar ignoreAttributes = nfRadio.channel( 'undo-' + model.get( 'type' ) ).request( 'ignore:attributes', this.ignoreAttributes ) || this.ignoreAttributes;\n\t\t\t\n\t\t\tif ( -1 != this.ignoreAttributes.indexOf( attr ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * All of the core undo functions. Listens on the 'changes' channel for an undo request.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/coreUndo',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:changeSetting', this.undoChangeSetting, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:addObject', this.undoAddObject, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:removeObject', this.undoRemoveObject, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:duplicateObject', this.undoDuplicateObject, this );\n\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:sortFields', this.undoSortFields, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:addListOption', this.undoAddListOption, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:removeListOption', this.undoRemoveListOption, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:sortListOptions', this.undoSortListOptions, this );\n\t\t},\n\n\t\t/**\n\t\t * Undo settings that have been changed.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoChangeSetting: function( change, undoAll ) {\n\t\t\tvar fieldModel = change.get( 'model' );\n\t\t\tvar changes = change.get( 'changes' );\n\t\t\tvar attr = changes.attr;\n\t\t\tvar before = changes.before;\n\t\t\tfieldModel.set( attr, before );\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\t/**\n\t\t * Undo adding a field or an action.\n\t\t * Loops through our change collection and removes any change models based upon the one we're removing.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoAddObject: function( change, undoAll ) {\n\t\t\tvar objectModel = change.get( 'model' );\n\t\t\tvar collection = change.get( 'data' ).collection;\n\n\t\t\tdelete collection.newIDs[ objectModel.get( 'id' ) ];\n\t\t\t\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tvar results = changeCollection.where( { model: objectModel } );\n\n\t\t\t\t_.each( results, function( model ) {\n\t\t\t\t\tif ( model !== change ) {\n\t\t\t\t\t\tchangeCollection.remove( model );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tcollection.remove( objectModel );\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\t\t\n\n\t\t/**\n\t\t * Undo adding a field or an action.\n\t\t * Loops through our change collection and removes any change models based upon the one we're removing.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoDuplicateObject: function( change, undoAll ) {\n\t\t\tvar objectModel = change.get( 'model' );\n\t\t\tvar objectCollection = change.get( 'data' ).collection;\n\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tvar results = changeCollection.where( { model: objectModel } );\n\n\t\t\t\t_.each( results, function( model ) {\n\t\t\t\t\tif ( model !== change ) {\n\t\t\t\t\t\tchangeCollection.remove( model );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\n\t\t\tobjectCollection.remove( objectModel );\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\t/**\n\t\t * Undo removing a field or an action.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoRemoveObject: function( change, undoAll ) {\n\t\t\tvar dataModel = change.get( 'model' );\n\t\t\tvar collection = change.get( 'data' ).collection;\n\n\t\t\tnfRadio.channel( dataModel.get( 'objectDomain' ) ).request( 'add', dataModel );\n\n\t\t\tdelete collection.removedIDs[ dataModel.get( 'id' ) ];\n\t\t\t\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tvar results = changeCollection.where( { model: dataModel } );\n\n\t\t\t\t_.each( results, function( model ) {\n\t\t\t\t\tif ( model !== change ) {\n\t\t\t\t\t\tmodel.set( 'disabled', false );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\n\t\t\t// Trigger a reset on our field collection so that our view re-renders\n\t\t\tcollection.trigger( 'reset', collection );\n\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\t/**\n\t\t * Undo field sorting.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoSortFields: function( change, undoAll ) {\n\t\t\tvar data = change.get( 'data' );\n\t\t\tvar fields = data.fields;\n\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t_.each( fields, function( changeModel ) {\n\t\t\t\tvar before = changeModel.before;\n\t\t\t\tvar fieldModel = changeModel.model;\n\t\t\t\tfieldModel.set( 'order', before );\n\t\t\t\t// console.log( 'set ' + fieldModel.get( 'label' ) + ' to ' + before );\n\t\t\t} );\n\t\t\t// console.log( fieldCollection.where( { label: 'Name' } ) );\n\t\t\t// console.log( fieldCollection.where( { label: 'Email' } ) );\n\n\n\t\t\tfieldCollection.sort();\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoAddListOption: function( change, undoAll ) {\n\t\t\tvar model = change.get( 'model' );\n\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tvar results = changeCollection.where( { model: model } );\n\n\t\t\t\t_.each( results, function( changeModel ) {\n\t\t\t\t\tif ( changeModel !== change ) {\n\t\t\t\t\t\tchangeCollection.remove( changeModel );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\n\t\t\tmodel.collection.remove( model );\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoRemoveListOption: function( change, undoAll ) {\n\t\t\tvar model = change.get( 'model' );\n\t\t\tvar collection = change.get( 'data' ).collection;\n\t\t\tcollection.add( model );\n\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tvar results = changeCollection.where( { model: model } );\n\n\t\t\t\t_.each( results, function( model ) {\n\t\t\t\t\tif ( model !== change ) {\n\t\t\t\t\t\tmodel.set( 'disabled', false );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoSortListOptions: function( change, undoAll ) {\n\t\t\tvar data = change.get( 'data' );\n\t\t\tvar collection = data.collection;\n\t\t\t\n\t\t\tvar objModels = data.objModels;\n\n\t\t\t_.each( objModels, function( changeModel ) {\n\t\t\t\tvar before = changeModel.before;\n\t\t\t\tvar optionModel = changeModel.model;\n\t\t\t\toptionModel.set( 'order', before );\n\t\t\t} );\t\t\t\t\n\n\n\t\t\tcollection.sort();\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\t/**\n\t\t * If our undo action was requested to 'remove' the change from the collection, remove it.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tremove \tshould we remove this item from our change collection\n\t\t * @return void\n\t\t */\n\t\tmaybeRemoveChange: function( change, undoAll ) {\t\t\t\n\t\t\tvar undoAll = typeof undoAll !== 'undefined' ? undoAll : false;\n\t\t\tif ( ! undoAll ) {\n\t\t\t\t// Update preview.\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tchangeCollection.remove( change );\n\t\t\t\tif ( 0 == changeCollection.length ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', true );\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Returns a clone of a backbone model with all the attributes looped through so that collections contained within are propely cloned.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/cloneModelDeep',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'app' ).reply( 'clone:modelDeep', this.cloneModelDeep, this );\n\t\t},\n\n\t\tcloneModelDeep: function( model ) {\n\t\t\t// Temporary value used to store any new collections.\n\t\t\tvar replace = {};\n\t\t\t// Loop over every model attribute and if we find a collection, clone each model and instantiate a new collection.\n\t\t\t_.each( model.attributes, function( val, key ) {\n\t\t\t\t// console.log( val );\n\t\t\t\tif( val instanceof Backbone.Collection ) { // Is this a backbone collection?\n\t\t\t\t\t// Clone each model.\n\t\t\t\t\tvar models = val.map( function( model ) { return model.clone(); } );\n\t\t\t\t\tvar options = _.clone( val.options );\n\t\t\t\t\tvar copy = new val.constructor( models, options );\n\t\t\t\t\treplace[ key ] = copy;\n\t\t\t\t} else if ( val instanceof Backbone.Model ) { // Is this a backbone model?\n\t\t\t\t\treplace[ key ] = val.clone();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Clone our original model\n\t\t\tvar newModel = model.clone();\n\t\t\t// Overwrite any collections we created above.\n\t\t\t_.each( replace, function( val, key ) {\n\t\t\t\tnewModel.set( key, val );\n\t\t\t} );\n\n\t\t\treturn newModel;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Returns the appropriate child view for our settings drawer.\n *\n * This enables settings types to register custom childviews for their settings.\n * The option-repeater setting for the list field is an example.\n * \n * @package Ninja Forms builder\n * @subpackage App - Edit Settings Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/getSettingChildView',['views/app/drawer/itemSetting'], function( itemSettingView ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests for field settings child views.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:settingChildView', this.getSettingChildView, this );\n\t\t},\n\n\t\t/**\n\t\t * Return the appropriate child setting view.\n\t\t *\n\t\t * @since  3.0\n\t\t * @param  backbone.model\tmodel \tField setting\n\t\t * @return backbone.view\n\t\t */\n\t\tgetSettingChildView: function( model ) {\n\t\t\t// Get our setting type.\n\t\t\tvar type = model.get( 'type' );\n\t\t\t// Request a setting childview from our setting type channel. (Setting type, not field type)\n\t\t\tvar settingChildView = nfRadio.channel( type ).request( 'get:settingChildView', model ) || itemSettingView;\n\t\t\t\n\t\t\treturn settingChildView\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Updates our model when the user changes a setting.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/changeSettingDefault',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests to update settings.\n\t\t\tnfRadio.channel( 'app' ).reply( 'change:setting', this.changeSetting, this );\n\n\t\t\t// Listen on our app channel for the change setting event. Fired by the setting view.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:setting', this.changeSetting, this );\n\t\t},\n\n\t\t/**\n\t\t * When we change our setting, update the model.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \t\t\te                event\n\t\t * @param  backbone.model \tsettingModel model that holds our field type settings info\n\t\t * @param  backbone.model \tdataModel       model that holds our field settings\n\t\t * @return void\n\t\t */\n\t\tchangeSetting: function( e, settingModel, dataModel ) {\n\t\t\tvar name = settingModel.get( 'name' );\n\t\t\tvar before = dataModel.get( name );\n\t\t\t// Sends out a request on the fields-type (fields-text, fields-checkbox, etc) channel to see if that field type needs to return a special value for saving.\n\t\t\tvar value = nfRadio.channel( settingModel.get( 'type' ) ).request( 'before:updateSetting', e, dataModel, name, settingModel );\n\t\t\t// If we didn't get a special field-type value, get the value from the event passed.\n\t\t\tif ( 'undefined' == typeof value ) {\n\t\t\t\tvalue = jQuery( e.target ).val();\n\t\t\t}\n\t\t\t// Update our field model with the new setting value.\n\t\t\tdataModel.set( name, value );\n\t\t\t// Register our setting change with our change tracker\n\t\t\tvar after = value;\n\t\t\t\n\t\t\tvar changes = {\n\t\t\t\tattr: name,\n\t\t\t\tbefore: before,\n\t\t\t\tafter: after\n\t\t\t}\n\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\n\t\t\t/*\n\t\t\t * TODO: Make this more dynamic.\n\t\t\t * Currently, this is a very specific work-around. It should be more generalized.\n\t\t\t */\n\t\t\tif ( 'toggle' == settingModel.get( 'type' ) ) {\n\t\t\t\tif ( 1 == before ) {\n\t\t\t\t\tbefore = 'On';\n\t\t\t\t} else {\n\t\t\t\t\tbefore = 'Off';\n\t\t\t\t}\n\n\t\t\t\tif ( 1 == after ) {\n\t\t\t\t\tafter = 'On';\n\t\t\t\t} else {\n\t\t\t\t\tafter = 'Off';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar label = {\n\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\tchange: 'Changed ' + settingModel.get( 'label' ) + ' from ' + before + ' to ' + after\n\t\t\t};\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'changeSetting', dataModel, changes, label );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define( 'views/app/drawer/typeSettingFieldset',['views/app/drawer/itemSetting'], function( itemSettingView ) {\n\tvar view = Marionette.CompositeView.extend( {\n\t\ttemplate: '#nf-tmpl-edit-setting-wrap',\n\t\tchildView: itemSettingView,\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.collection = this.model.get( 'settings' );\n\t\t\tthis.childViewOptions = { dataModel: data.dataModel };\n\t\t\tthis.dataModel = data.dataModel;\n\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor ( var name in deps ) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.on( 'change:' + name, this.render, this );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor (var name in deps) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.off( 'change:' + name, this.render );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonRender: function() {\n\t\t\t// this.$el = this.$el.children();\n\t\t\t// this.$el.unwrap();\n\t\t\t// this.setElement( this.$el );\n\n\t\t\t// this.$el = this.$el.children();\n\t\t\t// this.$el.unwrap();\n\t\t\t// this.setElement( this.$el );\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t\t\tvar that = this;\n\t    \treturn {\n\t    \t\trenderVisible: function() {\n\t\t\t\t\tif ( this.deps ) {\n\t\t\t\t\t\tfor (var name in this.deps) {\n\t\t\t\t\t\t    if ( this.deps.hasOwnProperty( name ) ) {\n\t\t\t\t\t\t        if ( that.dataModel.get( name ) !== this.deps[ name ] ) {\n\t\t\t\t\t\t        \treturn 'style=\"display:none;\"';\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t    \t\t\treturn '';\n\t    \t\t},\n\t    \t\trenderSetting: function(){\n\t\t\t\t\treturn _.template( jQuery( '#nf-tmpl-edit-setting-' + this.type ).html(), this );\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = '';\n\t\t\t\t\tif ( 'undefined' != typeof this.width ) {\n\t\t\t\t\t\tclasses += this.width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclasses += ' one-half';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.error ) {\n\t\t\t\t\t\tclasses += ' nf-error';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\trenderError: function() {\n\t\t\t\t\tif ( this.error ) {\n\t\t\t\t\t\treturn this.error;\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( '.nf-field-sub-settings' ).append( childView.el );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","/**\n * Model that represents our setting.\n *\n * When the model is created, we trigger the init event in two radio channels.\n *\n * This lets specific types of settings modify the model before anything uses it.\n *\n * Fieldset, for instance, uses this hook to instantiate its settings as a collection.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/settingModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tsettings: false,\n\t\t\thide_merge_tags: false,\n\t\t\terror: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Send out two messages saying that we've initialized a setting model.\n\t\t\tnfRadio.channel( 'app' ).trigger( 'init:settingModel', this );\n\t\t\tnfRadio.channel( this.get( 'type' ) ).trigger( 'init:settingModel', this );\n\n\t\t\tthis.on( 'change:error', this.maybePreventUI, this );\n\n\t\t\t/*\n\t\t\t * If we have an objectType set on our collection, then we're creating a model for the generic settings collection.\n\t\t\t * If we're using merge tags in this setting\n\t\t\t */\n\t\t\tif ( this.get( 'use_merge_tags' ) && 'undefined' != typeof this.collection.options.objectType ) {\n\t\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'update:fieldKey', this.updateKey );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When a field key is updated, send out a radio message requesting that this setting be checked for the old key.\n\t\t * We want to send the message on the objectType channel.\n\t\t * This means that if this setting is for fields, it will trigger on the fields channel, actions, etc.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Backbone.Model \tkeyModel data model representing the field for which the key just changed\n\t\t * @return void\n\t\t */\n\t\tupdateKey: function( keyModel ) {\n\t\t\tnfRadio.channel( this.collection.options.objectType ).trigger( 'update:fieldKey', keyModel, this );\n\t\t},\n\n\t\tmaybePreventUI: function() {\n\t\t\tif ( this.get( 'error' ) ) {\n\t\t\t\tnfRadio.channel( 'drawer' ).request( 'prevent:close', 'setting-' + this.get( 'name' ) + '-error' );\n\t\t\t\tnfRadio.channel( 'app' ).request( 'prevent:changeDomain', 'setting-' + this.get( 'name' ) + '-error' );\t\t\t\t\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'drawer' ).request( 'enable:close', 'setting-' + this.get( 'name' ) + '-error' );\n\t\t\t\tnfRadio.channel( 'app' ).request( 'enable:changeDomain', 'setting-' + this.get( 'name' ) + '-error' );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collections of settings for each field type.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/settingCollection',['models/app/settingModel'], function( settingModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: settingModel,\n\n\t\tinitialize: function( models, options ) {\n\t\t\tthis.options = options || {};\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Handles actions related to field settings that use a fieldset\n * \n * @package Ninja Forms builder\n * @subpackage Fields - Edit Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/fieldset',['views/app/drawer/typeSettingFieldset','models/app/settingCollection'], function( fieldsetView, settingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'fieldset' ).reply( 'get:settingChildView', this.getSettingChildView, this );\n\t\t\t// When a list type field is initialized, create an option collection.\n\t\t\tthis.listenTo( nfRadio.channel( 'fieldset' ), 'init:settingModel', this.createSettingsCollection );\n\t\t},\n\n\t\tgetSettingChildView: function( model ) {\n\t\t\treturn fieldsetView;\n\t\t},\n\n\t\t/**\n\t\t * Instantiate settings collection when a fieldset type is initialized.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tmodel \tfield model being initialized\n\t\t * @return void\n\t\t */\n\t\tcreateSettingsCollection: function( model ) {\n\t\t\tmodel.set( 'settings', new settingCollection( model.get( 'settings' ) ) );\n\t\t},\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles actions related to our toggle field.\n * When we change the toggle, the setting value will be 'on' or ''.\n * We need to change this to 1 or 0.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - Edit Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/toggleSetting',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// We don't want the RTE setting to re-render when the value changes.\n\t\t\tnfRadio.channel( 'setting-type-toggle' ).reply( 'renderOnChange', function(){ return false } );\n\n\t\t\t// Respond to requests for field setting filtering.\n\t\t\tnfRadio.channel( 'toggle' ).reply( 'before:updateSetting', this.updateSetting, this );\n\t\t},\n\n\t\t/**\n\t\t * Return either 1 or 0, depending upon the toggle position.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \t\t\te                event\n\t\t * @param  backbone.model \tfieldModel       field model\n\t\t * @param  string \t\t\tname             setting name\n\t\t * @param  backbone.model \tsettingTypeModel field type model\n\t\t * @return int              1 or 0\n\t\t */\n\t\tupdateSetting: function( e, fieldModel, name, settingTypeModel ) {\n\t\t\tif ( jQuery( e.target ).attr( 'checked' ) ) {\n\t\t\t\tvar value = 1;\n\t\t\t} else {\n\t\t\t\tvar value = 0;\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens for clicks on our action item action buttons.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - Main Sortable\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/itemControls',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for clicks to edit, delete, duplicate actions.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:edit', this.clickEdit );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:delete', this.clickDelete );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:duplicate', this.clickDuplicate );\n\n\t\t\t// Listen for our drawer close and remove our active edit state\n\t\t},\n\n\t\t/**\n\t\t * Open a drawer with our action model for editing settings.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te     \tevent\n\t\t * @param  backbone.model \tmodel \taction model\n\t\t * @return void\n\t\t */\n\t\tclickEdit: function( e, model ) {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\t\t\tvar type = nfRadio.channel( currentDomainID ).request( 'get:type' , model.get( 'type' ) );\n\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'editSettings', { model: model, groupCollection: type.get( 'settingGroups' ) } );\n\t\t},\n\n\t\t/**\n\t\t * Delete a action model from our collection\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te     \tevent\n\t\t * @param  backbone.model \tmodel \taction model\n\t\t * @return void\n\t\t */\n\t\tclickDelete: function( e, dataModel ) {\n\t\t\tvar newModel = nfRadio.channel( 'app' ).request( 'clone:modelDeep', dataModel );\n\n\t\t\t// Add our action deletion to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\tchange: 'Removed',\n\t\t\t\tdashicon: 'dismiss'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: dataModel.collection\n\t\t\t};\n\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\tvar results = changeCollection.where( { model: dataModel } );\n\n\t\t\t_.each( results, function( changeModel ) {\n\t\t\t\tvar data = changeModel.get( 'data' );\n\t\t\t\tif ( 'undefined' != typeof data.fields ) {\n\t\t\t\t\t_.each( data.fields, function( field, index ) {\n\t\t\t\t\t\tif ( field.model == dataModel ) {\n\t\t\t\t\t\t\tdata.fields[ index ].model = newModel;\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\tchangeModel.set( 'data', data );\n\t\t\t\tchangeModel.set( 'model', newModel );\n\t\t\t\tchangeModel.set( 'disabled', true );\n\t\t\t} );\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'removeObject', newModel, null, label, data );\n\t\t\t\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\t\t\tnfRadio.channel( currentDomainID ).request( 'delete', dataModel );\n\t\t},\n\n\t\t/**\n\t\t * Duplicate a action within our collection, adding the word \"copy\" to the label.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te     \tevent\n\t\t * @param  backbone.model \tmodel \taction model\n\t\t * @return void\n\t\t */\n\t\tclickDuplicate: function( e, model ) {\n\t\t\tvar newModel = nfRadio.channel( 'app' ).request( 'clone:modelDeep', model );\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\n\t\t\t// Change our label.\n\t\t\tnewModel.set( 'label', newModel.get( 'label' ) + ' Copy' );\n\t\t\t// Update our ID to the new tmp id.\n\t\t\tvar tmpID = nfRadio.channel( currentDomainID ).request( 'get:tmpID' );\n\t\t\tnewModel.set( 'id', tmpID );\n\t\t\t// Add new model.\n\t\t\tnfRadio.channel( currentDomainID ).request( 'add', newModel );\n\t\t\t\n\t\t\t// Add our action addition to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: model.get( 'objectType' ),\n\t\t\t\tlabel: model.get( 'label' ),\n\t\t\t\tchange: 'Duplicated',\n\t\t\t\tdashicon: 'admin-page'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: nfRadio.channel( currentDomainID ).request( 'get:collection' )\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'duplicateObject', newModel, null, label, data );\n\t\t\t\n\t\t\tmodel.trigger( 'change:label', model );\n\n\t\t\t// Update preview.\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Config file for our merge tags.\n *\n * this.collection represents all of our registered merge tags.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/mergeTags',[\n\t'models/app/mergeTagCollection'\n\t], function(\n\tmergeTagCollection\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.tagSectionCollection = new mergeTagCollection();\n\t\t\tvar that = this;\n\t\t\t_.each( mergeTags, function( tagSection ) {\n\t\t\t\tif ( tagSection.tags ) {\n\t\t\t\t\tvar tags = new mergeTagCollection( tagSection.tags );\n\t\t\t\t} else {\n\t\t\t\t\tvar tags = '';\n\t\t\t\t}\n\n\t\t\t\tthat.tagSectionCollection.add( {\n\t\t\t\t\tid: tagSection.id,\n\t\t\t\t\tlabel: tagSection.label,\n\t\t\t\t\ttags: tags,\n\t\t\t\t\tdefault_group: tagSection.default_group\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\tvar fieldTags = new mergeTagCollection();\n\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t_.each( fieldCollection.models, function( field ) {\n\t\t\t\t// TODO: Make this dynamic\n\t\t\t\tif ( 'submit' !== field.get( 'type' ) ) {\n\t\t\t\t\tfieldTags.add( {\n\t\t\t\t\t\tid: field.get( 'id' ),\n\t\t\t\t\t\tlabel: field.get( 'label' ),\n\t\t\t\t\t\ttag: that.getFieldKeyFormat( field.get( 'key' ) )\n\t\t\t\t\t} );\t\t\t\t\t\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.tagSectionCollection.get( 'fields' ).set( 'tags', fieldTags );\n\n\t\t\tvar calcTags = new mergeTagCollection();\n\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\t\t\tvar calcCollection = formModel.get( 'settings' ).get( 'calculations' );\n\t\t\t_.each( calcCollection, function( calc ) {\n\t\t\t\tcalcTags.add( {\n\t\t\t\t\tlabel: calc.name,\n\t\t\t\t\ttag: '{calc:' + calc.name + '}'\n\t\t\t\t} );\t\t\t\t\t\n\t\t\t\t\n\t\t\t} );\n\n\t\t\tthis.tagSectionCollection.get( 'calcs' ).set( 'tags', calcTags );\n\n\t\t\tthis.currentElement = {};\n\t\t\tthis.settingModel = {};\n\t\t\tthis.open = false;\n\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'init', this.initMergeTags, this );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'mergeTags' ), 'click:mergeTag', this.clickMergeTag );\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'add:field', this.addFieldTags );\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'delete:field', this.deleteFieldTags );\n\t\t\t\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'update:currentElement', this.updateCurrentElement, this );\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'update:currentSetting', this.updateCurrentSetting, this );\n\n\t\t\t// Listen for requests for our mergeTag collection.\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'get:collection', this.getCollection, this );\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'get:mergeTag', this.getSectionModel, this );\n\n\t\t\t// When we edit a key, check for places that key might be used.\n\t\t\tthis.listenTo( nfRadio.channel( 'fieldSetting-key' ), 'update:setting', this.updateKey );\n\n\t\t\t// Reply to requests to check a data model for a field key when one is updated.\n\t\t\tnfRadio.channel( 'app' ).reply( 'replace:fieldKey', this.replaceFieldKey, this );\n\n\t\t\t// Reply to requests to check a data model for a field key when one is updated.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:fieldKeyFormat', this.getFieldKeyFormat, this );\n\n\t\t\t/*\n\t\t\t * TODO: Hotkey support for adding tags.\n\t\t\t *\n\t\t\t\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'open:mergeTags', this.openMergeTags );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'up:mergeTags', this.upMergeTags );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'down:mergeTags', this.downMergeTags );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'return:mergeTags', this.returnMergeTags );\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'update:open', this.updateOpen, this );\n\t\t\t*/\n\t\t},\n\n\t\t/**\n\t\t * Init merge tags within the passed view.\n\t\t * @since  3.0\n\t\t * @param  backbone.view view to be searched for merge tags.\n\t\t * @return void\n\t\t */\n\t\tinitMergeTags: function( view ) {\n\t\t\tvar mergeTagsView = nfRadio.channel( 'mergeTags' ).request( 'get:view' );\n\t\t\tvar that = this;\n\t\t\t/*\n\t\t\t * Apply merge tags jQuery plugin.\n\t\t\t *\n\t\t\t * Prevent jBox from being called multiple times on the same element\n\t\t\t */\n\t\t\tthis.jBoxes = {};\n\t\t\tvar that = this;\n\t\t\tjQuery( view.el ).find( '.merge-tags' ).each(function() {\n\t\t\t\tif ( 'undefined' == typeof jQuery( this ).data( 'jBox-id' ) ) {\n\t\t\t\t\tvar jBox = jQuery( this ).jBox( 'Tooltip', {\n\t\t\t\t\t\ttitle: 'Insert Merge Tag',\n\t\t\t\t\t\ttrigger: 'click',\n\t\t\t\t\t\tposition: {\n\t\t\t\t\t\t\tx: 'center',\n\t\t\t\t\t\t\ty: 'bottom'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcloseOnClick: 'body',\n\t\t\t\t\t\tcloseOnEsc: true,\n\t\t\t\t\t\ttheme: 'TooltipBorder',\n\t\t\t\t\t\tmaxHeight: 200,\n\n\t\t\t\t\t\tonOpen: function() {\n\t\t\t\t\t\t\tmergeTagsView.reRender( view.model );\n\t\t\t\t\t\t\tthis.setContent( jQuery( '.merge-tags-content' ) );\n\t\t\t\t\t\t\tvar currentElement = jQuery( this.target ).prev( '.setting' );\n\t\t\t\t\t\t\tif ( 0 == currentElement.length ) {\n\t\t\t\t\t\t\t\tcurrentElement = jQuery( view.el ).find( '.setting' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthat.updateCurrentSetting( view.model );\n\t\t\t\t\t\t\tthat.updateCurrentElement( currentElement );\n\t\t\t\t\t\t\t// nfRadio.channel( 'drawer' ).request( 'prevent:close', 'merge-tags' );\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonClose: function() {\n\t\t\t\t\t\t\t// nfRadio.channel( 'drawer' ).request( 'enable:close', 'merge-tags' );\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tjQuery( this ).data( 'jBox-id', jBox.id );\t\t\t\t\t\n\t\t\t\t}\n\t\t    });\n\t\t},\n\n\t\tclickMergeTag: function( e, tagModel ) {\n\t\t\t/*\n\t\t\t * TODO: Make this more dynamic.\n\t\t\t * Currently, the RTE is the only section that modifies how merge tags work,\n\t\t\t * but another type of setting might need to do this in the future.\n\t\t\t */\n\t\t\tif ( 'rte' != this.settingModel.get( 'type' ) ) {\n\t\t\t\tvar currentValue = jQuery( this.currentElement ).val();\n\t\t\t\tvar currentPos = jQuery( this.currentElement ).caret();\n\t\t\t\tvar newPos = currentPos + tagModel.get( 'tag' ).length;\n\t\t\t\tcurrentValue = currentValue.substr( 0, currentPos ) + tagModel.get( 'tag' ) + currentValue.substr( currentPos );\n\t\t\t\tjQuery( this.currentElement ).val( currentValue ).caret( newPos ).trigger( 'change' );\t\t\t\t\n\t\t\t} else { // We're in an RTE\n\t\t\t\tjQuery( this.currentElement ).summernote( 'insertText', tagModel.get( 'tag' ) );\n\t\t\t}\n\n\t\t},\n\n\t\taddFieldTags: function( fieldModel ) {\n\t\t\t// TODO: Make this dynamic\n\t\t\tif ( 'submit' !== fieldModel.get( 'type' ) ) {\n\t\t\t\tthis.tagSectionCollection.get( 'fields' ).get( 'tags' ).add( {\n\t\t\t\t\tid: fieldModel.get( 'id' ),\n\t\t\t\t\tlabel: fieldModel.get( 'label' ),\n\t\t\t\t\ttag: this.getFieldKeyFormat( fieldModel.get( 'key' ) )\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\tdeleteFieldTags: function( fieldModel ) {\n\t\t\tvar fieldID = fieldModel.get( 'id' );\n\t\t\tvar tagModel = this.tagSectionCollection.get( 'fields' ).get( 'tags' ).get( fieldID );\n\t\t\tthis.tagSectionCollection.get( 'fields' ).get( 'tags' ).remove( tagModel );\n\t\t},\n\n\t\topenMergeTags: function( e ) {\n\t\t\tif ( 'TEXTAREA' == jQuery( e.target )[0].tagName || 'INPUT' == jQuery( e.target )[0].tagName ) {\n\t\t\t\tjQuery( e.target ).parent().find( '.merge-tags' ).click();\n\t\t\t}\n\t\t},\n\n\t\treturnMergeTags: function( e ) {\n\t\t\tif ( this.open ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tvar currentModel = this.fields.where( { 'active': true } )[0];\n\t\t\t\tif ( currentModel ) {\n\t\t\t\t\tthis.clickMergeTag( e, currentModel );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tupMergeTags: function( e ) {\n\t\t\tif ( this.open ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.changeActiveTag( 'up' );\n\t\t\t}\n\t\t},\n\n\t\tdownMergeTags: function( e ) {\n\t\t\tif ( this.open ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.changeActiveTag( 'down' );\n\t\t\t}\n\t\t},\n\n\t\tchangeActiveTag: function( dir ) {\n\t\t\tif ( 'down' == dir ) {\n\t\t\t\tvar inc = 1;\n\t\t\t} else {\n\t\t\t\tvar inc = -1\n\t\t\t}\n\t\t\t// First, check to see if a field is currently active.\n\t\t\tif( 0 < this.fields.where( { 'active': true } ).length ) {\n\t\t\t\tvar currentModel = this.fields.where( { 'active': true } )[0];\n\t\t\t\tvar currentIndex = this.fields.indexOf( currentModel );\n\t\t\t\tcurrentModel.set( 'active', false );\n\n\t\t\t\tvar nextModel = this.fields.models[ currentIndex + inc ];\n\t\t\t\tif ( nextModel ) {\n\t\t\t\t\tnextModel.set( 'active', true );\n\t\t\t\t} else {\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if ( 0 < this.fields.where( { 'active': true } ) ) { // There aren't any active fields. Check for active system tags.\n\t\t\t\tconsole.log( 'system' );\n\t\t\t} else if ( 0 < this.userInfo.where( { 'active': true } ) ) { // No active user info LIs.\n\t\t\t\tconsole.log( 'userinfo' );\n\t\t\t} else { // No active LIs. We haven't made any active yet, or we've gotten to the bottom of the list.\n\t\t\t\t// Make sure that we have fields\n\t\t\t\tif ( 0 < this.fields.models.length ) {\n\t\t\t\t\t// Set our first field to active.\n\t\t\t\t\tthis.fields.models[0].set( 'active', true );\n\t\t\t\t} else {\n\t\t\t\t\t// Set our first system model to active.\n\t\t\t\t\tthis.system.models[0].set( 'active', true );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tupdateCurrentElement: function( element ) {\n\t\t\tthis.currentElement = element;\n\t\t},\n\n\t\tupdateCurrentSetting: function( settingModel ) {\n\t\t\tthis.settingModel = settingModel;\n\t\t},\n\n\t\tgetCollection: function() {\n\t\t\treturn this.tagSectionCollection;\n\t\t},\n\n\t\tgetSectionModel: function( id ) {\n\t\t\treturn this.tagSectionCollection.get( id );\n\t\t},\n\n\t\tupdateOpen: function( open ) {\n\t\t\tthis.open = open;\n\t\t\t_.each( this.tagSectionCollection.get( 'fields' ).models, function( model ) {\n\t\t\t\tmodel.set( 'active', false );\n\t\t\t} );\n\t\t},\n\n\t\tupdateKey: function( fieldModel ) {\n\t\t\tvar newKey = fieldModel.get( 'key' );\n\t\t\tvar oldTag = this.tagSectionCollection.get( 'fields' ).get( 'tags' ).get( fieldModel.get( 'id' ) );\n\t\t\tif ( 'undefined' != typeof oldTag ) {\n\t\t\t\toldTag.set( 'tag', this.getFieldKeyFormat( newKey ) );\t\t\t\t\n\t\t\t}\n\n\t\t},\n\n\t\tgetFieldKeyFormat: function( key ) {\n\t\t\treturn '{field:' + key + '}';\n\t\t},\n\n\t\treplaceFieldKey: function( dataModel, keyModel, settingModel ) {\n\t\t\tvar oldKey = this.getFieldKeyFormat( keyModel._previousAttributes[ 'key' ] );\n\t\t\tvar newKey = this.getFieldKeyFormat( keyModel.get( 'key' ) );\n\t\t\tvar settingName = settingModel.get( 'name' );\n\t\t\tvar oldVal = dataModel.get( settingName );\n\t\t\tif ( 'string' == typeof oldVal ) {\n\t\t\t\tvar re = new RegExp( oldKey, 'g' );\n\t\t\t\tnewVal = oldVal.replace( re, newKey );\n\t\t\t\tdataModel.set( settingName, newVal );\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel for settings views being rendered.\n *\n * If we're about to render a setting model that's a select and has 'fields' as the 'fill' setting, add all our field models to its options.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/itemSettingFill',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for messages that are fired before a setting view is rendered.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'before:renderSetting', this.beforeRenderSetting );\n\t\t},\n\n\t\tbeforeRenderSetting: function( settingModel, dataModel ) {\n\t\t\tif ( 'fields' == settingModel.get( 'fill' ) ) {\n\t\t\t\t\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Modify the user's browser history when they click on a domain\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/confirmPublish',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:confirmPublish', this.confirmPublish );\n\t\t},\n\n\t\tconfirmPublish: function() {\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\t\t\tformModel.set( 'show_publish_options', false );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db', 'publish' );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles actions related to settings that utilise the Rich Text Editor\n *\n * @package Ninja Forms builder\n * @subpackage App - Settings Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/rte',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// We don't want the RTE setting to re-render when the value changes.\n\t\t\tnfRadio.channel( 'setting-type-rte' ).reply( 'renderOnChange', function(){ return false } );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'rte' ), 'init:settingModel', this.initSettingModel );\n\n\t\t\t// When an RTE setting is shown, re-render RTE.\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-type-rte' ), 'render:setting', this.renderSetting );\n\n\t\t\t// When an RTE setting view is destroyed, remove our RTE.\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-type-rte' ), 'destroy:setting', this.destroySetting );\n\n\t\t\t// When an element within the RTE is clicked, check to see if we should insert a link.\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-type-rte' ), 'click:extra', this.clickExtra );\n\n\t\t\t// Instantiates the variable that holds the media library frame.\n\t\t\tthis.meta_image_frame;\n\n\t\t\tjQuery.summernote.options.icons = {\n\t\t        'align': 'dashicons dashicons-editor-alignleft',\n\t\t        'alignCenter': 'dashicons dashicons-editor-aligncenter',\n\t\t        'alignJustify': 'dashicons dashicons-editor-justify',\n\t\t        'alignLeft': 'dashicons dashicons-editor-alignleft',\n\t\t        'alignRight': 'dashicons dashicons-editor-alignright',\n\t\t        'indent': 'dashicons dashicons-editor-indent',\n\t\t        'outdent': 'dashicons dashicons-editor-outdent',\n\t\t        // 'arrowsAlt': 'dashicons fa-arrows-alt',\n\t\t        'bold': 'dashicons dashicons-editor-bold',\n\t\t        'caret': 'dashicons dashicons-arrow-down',\n\t\t        // 'circle': 'dashicons fa-circle',\n\t\t        'close': 'dashicons dashicons-dismiss',\n\t\t        'code': 'dashicons dashicons-editor-code',\n\t\t        'eraser': 'dashicons dashicons-editor-removeformatting',\n\t\t        // 'font': 'dashicons fa-font',\n\t\t        // 'frame': 'dashicons fa-frame',\n\t\t        'italic': 'dashicons dashicons-editor-italic',\n\t\t        'link': 'dashicons dashicons-admin-links',\n\t\t        'unlink': 'dashicons dashicons-editor-unlink',\n\t\t        'magic': 'dashicons dashicons-editor-paragraph',\n\t\t        // 'menuCheck': 'dashicons fa-check',\n\t\t        'minus': 'dashicons dashicons-minus',\n\t\t        'orderedlist': 'dashicons dashicons-editor-ol',\n\t\t        // 'pencil': 'dashicons fa-pencil',\n\t\t        // 'picture': 'dashicons fa-picture-o',\n\t\t        // 'question': 'dashicons fa-question',\n\t\t        'redo': 'dashicons dashicons-redo',\n\t\t        'square': 'dashicons fa-square',\n\t\t        // 'strikethrough': 'dashicons fa-strikethrough',\n\t\t        // 'subscript': 'dashicons fa-subscript',\n\t\t        // 'superscript': 'dashicons fa-superscript',\n\t\t        'table': 'dashicons dashicons-editor-table',\n\t\t        // 'textHeight': 'dashicons fa-text-height',\n\t\t        // 'trash': 'dashicons fa-trash',\n\t\t        'underline': 'dashicons dashicons-editor-underline',\n\t\t        'undo': 'dashicons dashicons-undo',\n\t\t        'unorderedlist': 'dashicons dashicons-editor-ul',\n\t\t        // 'video': 'dashicons fa-youtube-play'\n\t\t      }\n\n\t\t      this.currentContext = {};\n\t\t},\n\n\t\tinitSettingModel: function( settingModel ) {\n\t\t\tsettingModel.set( 'hide_merge_tags', true );\n\t\t},\n\n\t\tinitRTE: function( settingModel, dataModel, settingView ) {\n\t\t\t/*\n\t\t\t * Custom Button for links\n\t\t\t */\n\t\t\tvar that = this;\n\t\t\t// var linkButton = this.linkButton();\n\t\t\tvar linkButton = function( context ) {\n\t\t\t\treturn that.linkButton( context );\n\t\t\t}\n\t\t\tvar mediaButton = function( context ) {\n\t\t\t\treturn that.mediaButton( context );\n\t\t\t}\n\t\t\tvar mergeTags = this.mergeTags();\n\n\t\t\tvar toolbar = [\n\t\t\t\t[ 'paragraphStyle', ['style'] ],\n\t\t\t\t[ 'fontStyle', [ 'bold', 'italic', 'underline','clear' ] ],\n\t\t\t\t[ 'lists', [ 'ul', 'ol' ] ],\n\t\t\t    [ 'paragraph', [ 'paragraph' ] ],\n\t\t\t    [ 'customGroup', [ 'linkButton', 'unlink' ] ],\n\t\t\t    [ 'table', [ 'table' ] ],\n\t\t\t    [ 'actions', [ 'undo', 'redo' ] ],\n\t\t\t    [ 'tools', [ 'mediaButton', 'mergeTags', 'codeview' ] ]\n\t\t\t];\n\n\t\t\tjQuery( settingView.el ).find( 'div.setting' ).summernote( {\n\t\t\t\ttoolbar: toolbar,\n\t\t\t\tbuttons: {\n\t\t\t\t\tlinkButton: linkButton,\n\t\t\t\t\tmergeTags: mergeTags,\n\t\t\t\t\tmediaButton: mediaButton\n\t\t\t\t},\n\t\t\t\theight: 150,   //set editable area's height\n\t\t\t\tcodemirror: { // codemirror options\n\t\t\t\t    theme: 'monokai',\n\t\t\t\t    lineNumbers: true\n\t\t\t\t},\n\t\t\t\tprettifyHtml: true,\n\t\t\t\tcallbacks: {\n\t\t\t\t\tonBlur: function() {\n\t\t\t\t\t\tvar name = settingModel.get( 'name' );\n\t\t\t\t\t\tvar before = dataModel.get( name );\n\t\t\t\t\t\tvar after = jQuery( this ).summernote( 'code' );\n\n\t\t\t\t\t\tvar changes = {\n\t\t\t\t\t\t\tattr: name,\n\t\t\t\t\t\t\tbefore: before,\n\t\t\t\t\t\t\tafter: after\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar label = {\n\t\t\t\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\t\t\t\tchange: 'Changed ' + settingModel.get( 'label' ) + ' from ' + before + ' to ' + after\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'changeSetting', dataModel, changes, label );\n\n\t\t\t\t\t\tdataModel.set( settingModel.get( 'name' ), after );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\trenderSetting: function( settingModel, dataModel, settingView ) {\n\t\t\tthis.initRTE( settingModel, dataModel,settingView );\n\t\t},\n\n\t\tdestroySetting: function( settingModel, dataModel, settingView ) {\n\t\t\tthis.removeRTE( settingModel, dataModel, settingView );\n\t\t},\n\n\t\tremoveRTE: function( settingModel, dataModel, settingView ) {\n\t\t\tjQuery( settingView.el ).find( 'div.setting' ).summernote( 'destroy' );\n\t\t},\n\n\t\tdrawerOpened: function( settingModel, dataModel, settingView ) {\n\t\t\tthis.initRTE( settingModel, dataModel, settingView );\n\t\t},\n\n\t\tlinkButton: function( context ) {\n\t\t\tvar that = this;\n\t\t\tvar ui = jQuery.summernote.ui;\n\t\t\tvar linkButton = _.template( jQuery( '#nf-tmpl-rte-link-button' ).html(), {} );\n\t\t\tvar linkDropdown = _.template( jQuery( '#nf-tmpl-rte-link-dropdown' ).html(), {} );\n\t\t\treturn ui.buttonGroup([\n\t\t\t\tui.button({\n\t            className: 'dropdown-toggle',\n\t            contents: linkButton,\n\t            tooltip: 'Insert Link',\n\t            click: function( e ) {\n\t            \tthat.clickLinkButton( e, context );\n\t            },\n\t            data: {\n\t              toggle: 'dropdown'\n\t            }\n\t          }),\n\t\t\t\tui.dropdown([\n\t            ui.buttonGroup({\n\t              children: [\n\t                ui.button({\n\t                  contents: linkDropdown,\n\t                  tooltip: ''\n\t                }),\n\t              ]\n\t            })\n\t          ])\n\t\t\t]).render();\n\t\t},\n\n\t\tmergeTags: function( context ) {\n\t\t\tvar ui = jQuery.summernote.ui;\n\t\t\tvar mergeTagsButton = _.template( jQuery( '#nf-tmpl-rte-merge-tags-button' ).html(), {} );\n\t\t\treturn ui.button({\n\t            className: 'dropdown-toggle',\n\t            contents: mergeTagsButton,\n\t            tooltip: 'Merge Tags'\n\t          }).render();\n\t\t},\n\n\t\tmediaButton: function( context ) {\n\t\t\tvar that = this;\n\t\t\tvar ui = jQuery.summernote.ui;\n\t\t\tvar mediaButton = _.template( jQuery( '#nf-tmpl-rte-media-button' ).html(), {} );\n\t\t\treturn ui.button({\n\t            className: 'dropdown-toggle',\n\t            contents: mediaButton,\n\t            tooltip: 'Insert Media',\n\t            click: function( e ) {\n\t            \tthat.openMediaManager( e, context );\n\t            }\n\t          }).render();\n\t\t},\n\n\t\topenMediaManager: function( e, context ) {\n\t\t\tcontext.invoke( 'editor.saveRange' );\n\t\t\t// If the frame already exists, re-open it.\n\t\t\tif ( this.meta_image_frame ) {\n\t\t\t\tthis.meta_image_frame.open();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Sets up the media library frame\n\t\t\tthis.meta_image_frame = wp.media.frames.meta_image_frame = wp.media({\n\t\t\t\ttitle: 'Select a file',\n\t\t\t\tbutton: { text:  'insert' }\n\t\t\t});\n\n\t\t\tvar that = this;\n\n\t\t\t// Runs when an image is selected.\n\t\t\tthis.meta_image_frame.on('select', function(){\n\n\t\t\t\t// Grabs the attachment selection and creates a JSON representation of the model.\n\t\t\t\tvar media_attachment = that.meta_image_frame.state().get('selection').first().toJSON();\n\t\t\t\tthat.insertMedia( media_attachment, context );\n\t\t\t});\n\n\t\t\t// Opens the media library frame.\n\t\t\tthis.meta_image_frame.open();\n\t\t},\n\n\t\tclickLinkButton: function ( e, context ) {\n\t\t\tvar range = context.invoke( 'editor.createRange' );\n\t\t\tcontext.invoke( 'editor.saveRange' );\n\t\t\tvar text = range.toString()\n\t\t\tthis.currentContext = context;\n\n\t\t\tjQuery( e.target ).closest( '.note-customGroup > .note-btn-group' ).on ('hide.bs.dropdown', function ( e ) {\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\tjQuery( e.target ).closest( '.note-customGroup > .note-btn-group' ).on ('shown.bs.dropdown', function ( e ) {\n\t\t\t\tjQuery( e.target ).parent().parent().find( '.link-text' ).val( text );\n\t\t\t\tjQuery( e.target ).parent().parent().find( '.link-url' ).focus();\n\t\t\t});\n\t\t},\n\n\t\tclickExtra: function( e, settingModel, dataModel, settingView ) {\n\t\t\tvar textEl = jQuery( e.target ).parent().find( '.link-text' );\n\t\t\tvar urlEl = jQuery( e.target ).parent().find( '.link-url' );\n\t\t\tvar isNewWindowEl = jQuery( e.target ).parent().find( '.link-new-window' );\n\t\t\tthis.currentContext.invoke( 'editor.restoreRange' );\n\t\t\tif ( jQuery( e.target ).hasClass( 'insert-link' ) ) {\n\t\t\t\tvar text = textEl.val();\n\t\t\t\tvar url = urlEl.val();\n\t\t\t\tvar isNewWindow = ( isNewWindowEl.prop( 'checked' ) ) ? true: false;\n\t\t\t\tif ( 0 != text.length && 0 != url.length ) {\n\t\t\t\t\tthis.currentContext.invoke( 'editor.createLink', { text:text, url: url, isNewWindow: isNewWindow } );\n\t\t\t\t}\n\t\t\t}\n\t\t\ttextEl.val( '' );\n\t\t\turlEl.val( '' );\n\t\t\tisNewWindowEl.prop( 'checked', false );\n\t\t\tjQuery( e.target ).closest( 'div.note-btn-group.open' ).removeClass( 'open' );\n\t\t},\n\n\t\tinsertMedia: function( media, context ) {\n\t\t\tcontext.invoke( 'editor.restoreRange' );\n\t\t\tif ( 'image' == media.type ) {\n\t\t\t\tcontext.invoke( 'editor.insertImage', media.url );\n\t\t\t} else {\n\t\t\t\tcontext.invoke( 'editor.createLink', { text: media.filename, url: media.url } );\n\t\t\t}\n\n\t\t}\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Listens to our app channel for the app to start.\n *\n * If the form is a new form, then highlight the Add New submenu item.\n * Otherwise, append an Edit Form submenu for context.\n *\n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/changeMenu',[], function() {\n    var controller = Marionette.Object.extend({\n\n        editFormText: '',\n\n        initialize: function () {\n            this.editFormText = nfAdmin.editFormText || 'Edit Form';\n            this.listenTo(nfRadio.channel('app'), 'after:appStart', this.changeMenu);\n            this.listenTo( nfRadio.channel( 'app' ), 'response:updateDB', this.formPublish );\n        },\n\n        changeMenu: function () {\n            var form = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\n            if ( this.isNewForm( form.id ) ) {\n                this.highlightAddNew();\n            } else {\n                this.appendEditForm();\n            }\n        },\n\n        isNewForm: function( form_id ) {\n            return isNaN( form_id );\n        },\n\n        highlightAddNew: function() {\n            jQuery( '.wp-submenu li' ).removeClass( 'current' );\n            jQuery( 'a[href=\"admin.php?page=ninja-forms&form_id=new\"]' ).parent().addClass( 'current' );\n        },\n\n        appendEditForm: function() {\n            var html = '<li class=\"current\"><a href=\"#\">' + this.editFormText + '</a></li>';\n            if ( jQuery( 'li a:contains(\"' + this.editFormText + '\")' ).length == 0 ) {\n                jQuery( '.wp-submenu li' ).removeClass( 'current' );\n                jQuery( 'a[href=\"admin.php?page=ninja-forms&form_id=new\"]' ).parent().after( html );\n            }\n        },\n\n        formPublish: function( response ) {\n            if ( 'publish' !== response.action ) return false;\n            this.changeMenu();\n        }\n    });\n\n    return controller;\n});\n","/**\n * When we click on a domain link, close the mobile menu.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/mobile',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for clicks on our app menu.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:menu', this.closeMobileMenu );\n\t\t},\n\n\t\tcloseMobileMenu: function() {\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tjQuery( builderEl ).removeClass( 'nf-menu-expand' );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Add a jBox notice to the screen.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/notices',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'notices' ).reply( 'add', this.addNotice, this );\n\t\t\tnfRadio.channel( 'notices' ).reply( 'close', this.closeNotice, this );\n\t\t\tthis.notices = {};\n\t\t},\n\n\t\taddNotice: function( key, msg, options ) {\n\n\t\t\tvar appDefaults = {\n\t\t\t\tcontent: msg,\n\t\t\t\tcolor: 'green',\n\t\t\t\tzIndex:12000,\n\t\t\t\tconstructOnInit: true,\n\t\t\t\tstack: false\n\t\t\t};\n\n\t\t\tvar mobileDefaults = {\n\t\t\t\tposition: {\n\t\t\t\t\tx: 'center',\n\t\t\t\t\ty: 'top'\n\t\t\t\t},\n\t\t\t\tanimation: {\n\t\t\t\t\topen:'slide:top',\n\t\t\t\t\tclose:'slide:left'\n\t\t\t\t},\n\t\t\t\tautoClose: 2000,\n\t\t\t\toffset: {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 55\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar desktopDefaults = {\n\t\t\t\tposition: {},\n\t\t\t\tattributes: {\n\t\t\t\t\tx: 'left',\n\t\t\t\t\ty: 'bottom'\n\t\t\t\t},\n\t\t\t\tanimation: {\n\t\t\t\t\topen:'slide:bottom',\n\t\t\t\t\tclose:'slide:left'\n\t\t\t\t},\n\t\t\t\tautoClose: 3000,\n\t\t\t\toffset: {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\tvar defaults = mobileDefaults;\t\n\t\t\t} else {\n\t\t\t\tvar defaults = desktopDefaults;\n\t\t\t}\n\t\t\tdefaults = jQuery.extend( defaults, appDefaults );\n\n\t\t\tvar options = jQuery.extend( defaults, options );\n\t\t\t// console.log( options );\n\t\t\tthis.notices[ key ] = new jBox( 'Notice', options );\n\t\t},\n\n\t\tcloseNotice: function( key ) {\n\t\t\tif ( 'undefined' != typeof this.notices[ key ] ) {\n\t\t\t\tthis.notices[ key ].close();\n\t\t\t}\n\t\t},\n\n\t\topenNotice: function( key ) {\n\t\t\tif ( 'undefined' != typeof this.notices[ key ] ) {\n\t\t\t\tthis.notices[ key ].open();\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model for our field type\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/typeModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our field type models. \n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/typeCollection',['models/app/typeModel'], function( typeModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: typeModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Model that represents our type settings groups.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/settingGroupModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tdisplay: false\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection of our type settings groups.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/settingGroupCollection',['models/app/settingGroupModel'], function( settingGroupModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: settingGroupModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Model that represents our field type section on the add new field drawer.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/typeSectionModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tclasses: ''\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our field models.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/typeSectionCollection',['models/fields/typeSectionModel'], function( typeSectionModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: typeSectionModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Creates and stores a collection of field types. This includes all of the settings shown when editing a field.\n *\n * 1) Create our settings sections config\n * 2) Loops over our preloaded data and adds that to our field type collection\n *\n * Also responds to requests for data about field types\n *\n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/types',[\n\t'models/app/typeCollection',\n\t'models/app/settingCollection',\n\t'models/app/settingGroupCollection',\n\t'models/fields/typeSectionCollection'\n\t], function(\n\tfieldTypeCollection,\n\tsettingCollection,\n\tfieldTypeSettingGroupCollection,\n\tfieldTypeSectionCollection\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our field type collection\n\t\t\tthis.collection = new fieldTypeCollection();\n\t\t\t// Config for our settings sections\n\t\t\tthis.fieldTypeSections = new fieldTypeSectionCollection( fieldTypeSections );\n\n\t\t\t// Since we want to access the \"this\" context later, we assign it to that so it isn't overwritten\n\t\t\tvar that = this;\n\n\t\t\t// Loop through the field type data variable and add it to the field type collection array\n\t\t\t_.each( fieldTypeData, function ( type ) {\n\t\t\t\tvar settingGroups = new fieldTypeSettingGroupCollection();\n\t\t\t\t// Loop through the settings groups within this field type and create an object to add to the groups collection.\n\t\t\t\t_.each( type.settingGroups, function( group ) {\n\t\t\t\t\tvar groupTmp = {\n\t\t\t\t\t\tlabel: group.label,\n\t\t\t\t\t\tdisplay: group.display,\n\t\t\t\t\t\tsettings: new settingCollection( group.settings ),\n\t\t\t\t\t}\n\t\t\t\t\t// Add the tmp object to our setting groups collection\n\t\t\t\t\tsettingGroups.add( groupTmp );\n\t\t\t\t} );\n\n\t\t\t\t// Add our field type to the appropriate drawer section.\n\t\t\t\tif ( 'undefined' != typeof that.fieldTypeSections.get( type.section ) ) {\n\t\t\t\t\tthat.fieldTypeSections.get( type.section ).get( 'fieldTypes' ).push( type.id );\n\t\t\t\t}\n\n\t\t\t\t// Build an object for this type that we can add to our field type collection\n\t\t\t\tvar fieldType = {\n\t\t\t\t\tid: type.id,\n\t\t\t\t\tnicename: type.nicename,\n\t\t\t\t\talias: type.alias,\n\t\t\t\t\tparentType: type.parentType,\n\t\t\t\t\tsettingGroups: settingGroups,\n\t\t\t\t\tsettingDefaults: type.settingDefaults\n\t\t\t\t}\n\t\t\t\t// Add tmp object to our field type collection\n\t\t\t\tthat.collection.add( fieldType );\n\t\t\t} );\n\n\t\t\t// Respond to requests to get field type, collection, settings, and sections\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:type', this.getFieldType, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:typeCollection', this.getTypeCollection, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:typeSections', this.getTypeSections, this );\n\t\t\t// Listen to clicks on field types\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'click:fieldType', this.addStagedField );\n\t\t},\n\n\t\t/**\n\t\t * Return a field type by id\n\t\t *\n\t\t * @since  3.0\n\t\t * @param  string \t\t\tid \tfield type\n\t\t * @return backbone.model    \tfield type model\n\t\t */\n\t\tgetFieldType: function( id ) {\n        \treturn this.collection.get( id );\n        },\n\n        /**\n         * Return the entire field type collection\n         *\n         * @since  3.0\n         * @param  string \t\t\t\tid \t[description]\n         * @return backbone.collection    \tfield type collection\n         */\n\t\tgetTypeCollection: function( id ) {\n        \treturn this.collection;\n        },\n\n        /**\n         * Add a field type to our staging area when the field type button is clicked.\n         *\n         * @since 3.0\n         * @param Object e event\n         * @return void\n         */\n        addStagedField: function( e ) {\n        \tvar type = jQuery( e.target ).data( 'id' );\n        \tnfRadio.channel( 'fields' ).request( 'add:stagedField', type );\n        },\n\n        /**\n         * Return our field type settings sections\n         *\n         * @since  3.0\n         * @return backbone.collection field type settings sections\n         */\n        getTypeSections: function() {\n            return this.fieldTypeSections;\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Handles the logic for our field type draggables.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldTypeDrag',[], function( ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our field type draggables and run the appropriate function.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:type', this.startDrag );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:type', this.stopDrag );\n\t\t\t/*\n\t\t\t * Respond to requests for our helper clone.\n\t\t\t * This is used by other parts of the application to modify what the user is dragging in real-time.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'drawer-addField' ).reply( 'get:typeHelperClone', this.getCurrentDraggableHelperClone, this );\n\t\t},\n\n\t\t/**\n\t\t * When we start dragging:\n\t\t * get our drawer element\n\t\t * set its overflow property to visible !important -> forces the type drag element to be on at the top of the z-index.\n\t\t * get our main element\n\t\t * est its overflow propery to visible !important -> forces the type drag element to be on top of the z-index.\n\t\t * set our dragging helper clone\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  object context \tThis function is going to be called from a draggable. Context is the \"this\" reference to the draggable.\n\t\t * @param  object ui      \tObject sent by jQuery UI draggable.\n\t\t * @return void\n\t\t */\n\t\tstartDrag: function( context, ui ) {\n\t\t\tthis.drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tthis.mainEl = nfRadio.channel( 'app' ).request( 'get:mainEl' );\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\n\t\t\tthis.draggableHelperClone = jQuery( ui.helper ).clone();\n\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging, reset our overflow property to hidden !important.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  object context \tThis function is going to be called from a draggable. Context is the \"this\" reference to the draggable.\n\t\t * @param  object ui      \tObject sent by jQuery UI draggable.\n\t\t * @return {[type]}         [description]\n\t\t */\n\t\tstopDrag: function( context, ui ) {\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t},\n\n\t\tgetCurrentDraggableHelperClone: function() {\n\t\t\treturn this.draggableHelperClone;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles the dragging of our field staging area\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/stagingDrag',[], function( ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for the start and stop of our field staging dragging\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:fieldStaging', this.startDrag );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:fieldStaging', this.stopDrag );\n\t\t},\n\n\t\t/**\n\t\t * When the user starts dragging the staging area, we have to:\n\t\t * set the overflow property of the drawer to visible !important. If we don't, the button goes underneath the main section.\n\t\t * set the overflow proerty of the main to visible !important. If we don't, the dragged element goes underneath the drawer.\n\t\t * replace our helper with the stacked \"x fields\" template.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t context jQuery UI Draggable\n\t\t * @param  Object\t ui      jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstartDrag: function( context, ui ) {\n\t\t\tthis.drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tthis.mainEl = nfRadio.channel( 'app' ).request( 'get:mainEl' );\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\n\t\t\tvar stagedFields = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\t\t\tvar html = _.template( jQuery( '#nf-tmpl-staged-fields-drag' ).html(), { num: stagedFields.models.length } );\n\t\t\tjQuery( ui.helper ).html( html );\n\t\t\tjQuery( ui.helper ).prop( 'id', 'nf-staged-fields-drag' );\n\t\t\tjQuery( ui.item ).css( 'opacity', '0.7' );\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging the staging area, we have to set the overflow property to hidden !important\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t context jQuery UI Draggable\n\t\t * @param  Object\t ui      jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstopDrag: function( context, ui ) {\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles our saved fields type section.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/savedFieldsSection',['models/fields/typeSectionCollection'], function( fieldTypeSectionCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our collection for saved fields\n\t\t\tthis.collection = new fieldTypeSectionCollection( [\n\t\t\t\t{ \n\t\t\t\t\tid: 'saved',\n\t\t\t\t\tnicename: 'Saved Fields',\n\t\t\t\t\tclasses: 'nf-saved',\n\t\t\t\t\tfieldTypes: []\n\t\t\t\t}\n\t\t\t] );\n\t\t\t// Respond to requests for our saved fields collection.\n            nfRadio.channel( 'drawer' ).reply( 'get:savedFields', this.getSavedFields, this );\n\t\t},\n\n        getSavedFields: function() {\n            return this.collection;\n        }\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles most things related to our staging area:\n * 1) Creates a collection\n * 2) Listens for requests to CRUD items from the collection\n * 3) Adds our staged fields to the fields sortable when the drawer is closed\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/staging',['models/fields/stagingCollection'], function( stagingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our staged fields collection\n\t\t\tthis.collection = new stagingCollection();\n\t\t\t// Respond to requests related to our staging area.\n\t\t    nfRadio.channel( 'fields' ).reply( 'add:stagedField', this.addStagedField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'remove:stagedField', this.removeStagedField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:staging', this.getStagingCollection, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'sort:staging', this.sortStagedFields, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'clear:staging', this.clearStagedFields, this );\n\t\t\t// Listen to our remove staged field click event.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'click:removeStagedField', this.removeStagedField );\n\t\t\t// Listen to our event that fires just before a drawer is closed.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'before:closeDrawer', this.beforeCloseDrawer );\n\t\t},\n\n\t\tgetStagingCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\t/**\n\t\t * Add a field to our staging area\n\t\t * \n\t\t * @since 3.0\n\t\t * @param string type Type of field we're adding\n\t\t * @return tmpID\n\t\t */\n\t\taddStagedField: function( type, silent ) {\n\t\t\tvar silent = silent || false;\n\t\t\t// Get our type model from the string.\n\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\t\t\t// Our tmp ID is a string with the time appended to make it unique.\n\t\t\tvar tmpID = 'nf-staged-field-' + jQuery.now();\n\t\t\t// Object that will be added to our staging collection.\n\t\t\tvar data = {\n\t\t\t\tid: tmpID,\n\t\t\t\t// i.e. firstname, textbox, etc.\n\t\t\t\tslug: fieldType.get( 'id' ),\n\t\t\t\t// i.e. First Name, Textbox, etc.\n\t\t\t\tnicename: fieldType.get( 'nicename' )\n\t\t\t}\n\t\t\t// \n\t\t\tvar model = this.collection.add( data );\n\n\t\t\tif( ! silent ) nfRadio.channel( 'fields').trigger( 'add:stagedField', model );\n\n\t\t\treturn tmpID;\n\t\t},\n\n\t\t/**\n\t\t * Remove a field from staging\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \t\t\te     \tEvent\n\t\t * @param  Backbone.model \tmodel \tstaged field model to remove\n\t\t * @return void\n\t\t */\n\t\tremoveStagedField: function( e, model ) {\n\t\t\tthis.collection.remove( model );\n\t\t},\n\n\t\t/**\n\t\t * Adds our staged fields to the main fields sortable before the drawer is closed.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tbeforeCloseDrawer: function() {\n\t\t\tif ( 0 != this.collection.models.length ) { // Make sure that we have models\n\t\t\t\t// Get our field collection.\n\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\n\t\t\t\tvar fields = [];\n\t\t\t\t// Loop through our staging collection\n\t\t\t\t_.each( this.collection.models, function( model ) {\n\t\t\t\t\t// Get a tmp ID for our new field.\n\t\t\t\t\tvar tmpID = nfRadio.channel( 'fields' ).request( 'get:tmpID' );\n\t\t\t\t\t// Create an object that can be added as a model.\n\t\t\t\t\tvar tmpField = { id: tmpID, label: model.get( 'nicename' ), type: model.get( 'slug' ) };\n\t\t\t\t\t// Add our new field.\n\t\t\t\t\tvar newModel = nfRadio.channel( 'fields' ).request( 'add',  tmpField, false );\n\t\t\t\t\t// Add our field addition to our change log.\n\t\t\t\t\tvar label = {\n\t\t\t\t\t\tobject: 'Field',\n\t\t\t\t\t\tlabel: newModel.get( 'label' ),\n\t\t\t\t\t\tchange: 'Added',\n\t\t\t\t\t\tdashicon: 'plus-alt'\n\t\t\t\t\t};\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\tcollection: fieldCollection\n\t\t\t\t\t}\n\t\t\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addObject', newModel, null, label, data );\n\t\t\t\n\t\t\t\t} );\n\t\t\t\t// Trigger a reset on our field collection so that our view re-renders\n\t\t\t\tfieldCollection.trigger( 'reset', fieldCollection );\n\t\t\t\t// Empty the staging collection\n\t\t\t\tthis.collection.reset();\n\t\t\t}\n\t\t\t// Sort our fields.\n\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields', null, null, false );\n\t\t},\n\n\t\t/**\n\t\t * Sort our staging area by the 'order' attribute.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tsortStagedFields: function() {\n\t\t\t// Get our staged fields sortable.\n\t\t\tvar sortableEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\t// Get the current order using jQuery sortable. Will be an array of IDs: [tmp-blah, tmp-blah]\n\t\t\tvar order = jQuery( sortableEl ).sortable( 'toArray' );\n\t\t\t// Loop through our models\n\t\t\t_.each( this.collection.models, function( field ) {\n\t\t\t\t// Search our order array for this field.\n\t\t\t\tvar search = field.get( 'id' );\n\t\t\t\tvar pos = order.indexOf( search );\n\t\t\t\t// Update our staged field model with the new order.\n\t\t\t\tfield.set( 'order', pos );\n\t\t\t} );\n\t\t\t// Sort our staging collection.\n\t\t\tthis.collection.sort();\n\t\t},\n\n\t\tclearStagedFields: function() {\n\t\t\tthis.collection.reset();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles actions related to our staged fields sortable.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/stagingSortable',['models/fields/stagingCollection'], function( stagingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our field type draggables\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:type', this.addActiveClass );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:type', this.removeActiveClass );\n\t\t\t// Listen to our sortable events\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'receive:stagedFields', this.receiveStagedFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'over:stagedFields', this.overStagedFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'out:stagedFields', this.outStagedFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'start:stagedFields', this.startStagedFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stop:stagedFields', this.stopStagedFields );\n\t\t},\n\n\t\t/**\n\t\t * Change our dropped field type helper so that it matches the other items in our sortable.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI item\n\t\t * @return void\n\t\t */\n\t\treceiveStagedFields: function( ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t\tvar type = jQuery( ui.item ).data( 'id' );\n\t\t\t\tvar tmpID = nfRadio.channel( 'fields' ).request( 'add:stagedField', type );\n\t\t\t\tjQuery( ui.helper ).prop( 'id', tmpID );\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t\tjQuery( ui.helper ).remove();\n\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'drop:fieldType', type );\t\t\t\t\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Add an active class to our sortable when a field type item is dragged\n\t\t * \n\t\t * @since 3.0\n\t\t */\n\t\taddActiveClass: function() {\n\t\t\tvar stagedFieldsEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\tjQuery( stagedFieldsEl ).addClass( 'nf-droppable-active' );\n\t\t},\n\n\t\t/**\n\t\t * Remove the active class from our sortable when the field type item is dropped.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tremoveActiveClass: function() {\n\t\t\tvar stagedFieldsEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\tjQuery( stagedFieldsEl ).removeClass( 'nf-droppable-active' );\n\t\t},\n\n\t\t/**\n\t\t * When the field type item is dragged over our sortable, we change the helper to match the sortable items.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te  event\n\t\t * @param  Object \tui jQuery UI Element\n\t\t * @return void\n\t\t */\n\t\toverStagedFields: function( e, ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t\tvar type = jQuery( ui.item ).data( 'id' );\n\t\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\t\t\t\tvar nicename = fieldType.get( 'nicename' );\n\t\t\t\tthis.currentHelper = ui.helper \n\t\t\t\tjQuery( ui.helper ).html( nicename + '<span class=\"dashicons dashicons-dismiss\"></span>' );\n\t\t\t\tjQuery( ui.helper ).removeClass( 'nf-one-third' ).addClass( 'nf-item-dock' ).css( { 'opacity': '0.8', 'width': '', 'height': '' } );\n\t\t\t\tvar sortableEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).addClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t},\n\n\t\t/**\n\t\t * When a field type item is moved away from our sortable, we change the helper to its previous appearance\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\toutStagedFields: function( ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t\tvar helperClone = nfRadio.channel( 'drawer-addField' ).request( 'get:typeHelperClone' );\t\n\t\t\t\tjQuery( this.currentHelper ).html( jQuery( helperClone ).html() );\n\t\t\t\tjQuery( this.currentHelper ).removeClass( 'nf-item-dock' ).addClass( 'nf-one-third' );\n\t\t\t\tvar sortableEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).removeClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t},\n\n\t\t/**\n\t\t * When a user starts to drag a sortable item, we need to set a few properties on the item and the helper.\n\t\t * These keep the original item in place while dragging and changes the opacity of the helper.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t ui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstartStagedFields: function( ui ) {\n\t\t\tjQuery( ui.item ).show();\n\t\t\tjQuery( ui.item ).css( { 'display': 'inline', 'opacity': '0.7' } );\n\t\t\tjQuery( ui.helper ).css( 'opacity', '0.5' );\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging a sortable item, remove our opacity setting and remove the helper item.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t ui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstopStagedFields: function( ui ) {\n\t\t\tjQuery( ui.item ).css( 'opacity', '' );\n\t\t\tjQuery( ui.helper ).remove();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Filters our field type collection.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/filterTypes',['models/fields/typeSectionCollection'], function( fieldTypeSectionCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our change filter event.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'change:filter', this.filterFieldTypes );\n\t\t},\n\n\t\t/**\n\t\t * Filter our field types in the add new field drawer\n\t\t * \n\t\t * Takes a search string and finds any field types that match either the name or alias.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string\t search \tstring being searched for\n\t\t * @param  object \t e      \tKeyup event\n\t\t * @return void\n\t\t */\n\t\tfilterFieldTypes: function( search, e ) {\n\t\t\t// Make sure that we aren't dealing with an empty string.\n\t\t\tif ( '' != jQuery.trim( search ) ) {\n        \t\tvar filtered = [];\n        \t\t/**\n        \t\t * Call the function that actually filters our collection,\n        \t\t * and then loop through our collection, adding each model to our filtered array.\n        \t\t */\n        \t\t_.each( this.filterCollection( search ), function( model ) {\n        \t\t\tfiltered.push( model.get( 'id' ) );\n        \t\t} );\n\n        \t\t// Create a new Field Type Section collection with the filtered array.\n        \t\tvar filteredSectionCollection = new fieldTypeSectionCollection( [\n\t\t\t\t{ \n\t\t\t\t\tid: 'filtered',\n\t\t\t\t\tnicename: 'Filtered Fields',\n\t\t\t\t\tfieldTypes: filtered\n\t\t\t\t}\n\t\t\t\t] );\n\n        \t\t// Request that our field types filter be applied, passing the collection we created above.\n        \t\tnfRadio.channel( 'drawer' ).trigger( 'filter:fieldTypes', filteredSectionCollection );\n        \t\t// If we've pressed the 'enter' key, add the field to staging and clear the filter.\n        \t\tif ( e.addObject ) {\n        \t\t\tif ( 0 < filtered.length ) {\n        \t\t\t\tnfRadio.channel( 'fields' ).request( 'add:stagedField', filtered[0] );\n        \t\t\t\tnfRadio.channel( 'drawer' ).request( 'clear:filter' );\n        \t\t\t}\n        \t\t}\n        \t} else {\n        \t\t// Clear our filter if the search text is empty.\n        \t\tnfRadio.channel( 'drawer' ).trigger( 'clear:filter' );\n        \t}\n        },\n\n        /**\n         * Search our field type collection for the search string.\n         * \n         * @since  3.0\n         * @param  string\t search \tstring being searched for\n         * @return backbone.collection\n         */\n        filterCollection: function( search ) {\n        \tsearch = search.toLowerCase();\n        \t// Get our list of field types\n        \tvar collection = nfRadio.channel( 'fields' ).request( 'get:typeCollection' );\n        \t/*\n        \t * Backbone collections have a 'filter' method that loops through every model,\n        \t * waiting for you to return true or false. If you return true, the model is kept.\n        \t * If you return false, it's removed from the filtered result.\n        \t */\n\t\t\tvar filtered = collection.filter( function( model ) {\n\t\t\t\tvar found = false;\n\t\t\t\t\n\t\t\t\t// If we match either the ID or nicename, return true.\n\t\t\t\tif ( model.get( 'id' ).toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t} else if ( model.get( 'nicename' ).toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * TODO: Hashtag searching. Doesn't really do anything atm.\n\t\t\t\t */\n\t\t\t\tif ( model.get( 'tags' ) && 0 == search.indexOf( '#' ) ) {\n\t\t\t\t\t_.each( model.get( 'tags' ), function( tag ) {\n\t\t\t\t\t\tif ( search.replace( '#', '' ).length > 1 ) {\n\t\t\t\t\t\t\tif ( tag.toLowerCase().indexOf( search.replace( '#', '' ) ) != -1 ) {\n\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// If we match any of the aliases, return true.\n\t\t\t\tif ( model.get( 'alias' ) ) {\n\t\t\t\t\t_.each( model.get( 'alias' ), function( alias ) {\n\t\t\t\t\t\tif ( alias.toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\treturn found;\n\t\t\t} );\n\t\t\t// Return our filtered collection.\n\t\t\treturn filtered;\n        }\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles all the actions/functions related to our main field sortable.\n * All of the actual logic for our sortable is held here; the view just calls it using nfRadio.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/sortable',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// When our field type buttons are dragged, we need to add or remove the active (blue) class.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:type', this.addActiveClass );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:type', this.removeActiveClass );\n\t\t\t// When our field staging is dragged, we need to add or remove the active (blue) class.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:fieldStaging', this.addActiveClass );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:fieldStaging', this.removeActiveClass );\n\t\t\t/*\n\t\t\t * Handles all the events fired by our sortable:\n\t\t\t * receive - dropped from type button or staging\n\t\t\t * over - dragging within or over the sortable\n\t\t\t * out - leaving the sortable\n\t\t\t * stop - stopped sorting/dragging\n\t\t\t * start - started sorting/dragging\n\t\t\t * update - stopped sorting/dragging and order has changed\n\t\t\t */\n\t\t\tnfRadio.channel( 'app' ).reply( 'receive:fieldsSortable', this.receiveFieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'over:fieldsSortable', this.overfieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'out:fieldsSortable', this.outFieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'stop:fieldsSortable', this.stopFieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'start:fieldsSortable', this.startFieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:fieldsSortable', this.updateFieldsSortable, this );\n\t\t},\n\n\t\t/**\n\t\t * Add the active class to our sortable so that its border is blue.\n\t\t * \n\t\t * @since 3.0\n\t\t * @return void\n\t\t */\n\t\taddActiveClass: function() {\n\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\tjQuery( sortableEl ).addClass( 'nf-droppable-active' );\t\n\t\t},\n\n\t\t/**\n\t\t * Remove the active class from our sortable\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tremoveActiveClass: function() {\n\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\tjQuery( sortableEl ).removeClass( 'nf-droppable-active' );\n\t\t},\n\n\t\t/**\n\t\t * Fires when we drop a field type button or staging onto our sortable\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\treceiveFieldsSortable: function( ui ) {\n\t\t\t/*\n\t\t\t * We have to do different things if we're dealing with a field type button or staging area.\n\t\t\t */ \n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) { // Field Type Button\n\t\t\t\t// Get our type string\n\t\t\t\tvar type = jQuery( ui.item ).data( 'id' );\n\t\t\t\t// Add a field (returns the tmp ID )\n\t\t\t\tvar tmpID = this.addField( type, false );\n\t\t\t\t/*\n\t\t\t\t * Update our helper id to the tmpID.\n\t\t\t\t * We do this so that when we sort, we have the proper ID.\n\t\t\t\t */ \n\t\t\t\tjQuery( ui.helper ).prop( 'id', tmpID );\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields' );\n\t\t\t\t// Remove the helper. Gets rid of a weird type artifact.\n\t\t\t\tjQuery( ui.helper ).remove();\n\t\t\t\t// Trigger a drop field type event.\n\t\t\t\tnfRadio.channel( 'fields' ).trigger( 'drop:fieldType', type, tmpID );\n\t\t\t} else if ( jQuery( ui.item ).hasClass( 'nf-stage' ) ) { // Staging\n\t\t\t\t// Later, we want to reference 'this' context, so we define it here.\n\t\t\t\tvar that = this;\n\t\t\t\t// Make sure that our staged fields are sorted properly.\t\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t\t// Grab our staged fields.\n\t\t\t\tvar stagedFields = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\t\t\t\t// Get our current field order.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\t\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) { // Sortable isn't empty\n\t\t\t\t\t// If we're dealing with a sortable that isn't empty, get the order.\n\t\t\t\t\tvar order = jQuery( sortableEl ).sortable( 'toArray' );\n\t\t\t\t} else { // Sortable is empty\n\t\t\t\t\t// Sortable is empty, all we care about is our staged field draggable.\n\t\t\t\t\tvar order = ['nf-staged-fields-drag'];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Get the index of our droped element.\n\t\t\t\tvar insertedAt = order.indexOf( 'nf-staged-fields-drag' );\n\n\t\t\t\t// Loop through each staged fields model and insert a field.\n\t\t\t\tvar tmpIDs = [];\n\t\t\t\t_.each( stagedFields.models, function( field, index ) {\n\t\t\t\t\t// Add our field.\n\t\t\t\t\tvar tmpID = that.addField( field.get( 'slug' ) );\n\t\t\t\t\t// Add this newly created field to our order array.\n\t\t\t\t\torder.splice( insertedAt + index, 0, tmpID );\n\t\t\t\t} );\n\n\t\t\t\t// Remove our dropped element from our order array.\n\t\t\t\tvar insertedAt = order.indexOf( 'nf-staged-fields-drag' );\n\t\t\t\torder.splice( insertedAt, 1 );\n\t\t\t\t// Sort our fields\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields', order );\n\t\t\t\t// Clear our staging\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'clear:staging' );\n\t\t\t\t// Remove our helper. Fixes a weird artifact.\n\t\t\t\tjQuery( ui.helper ).remove();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Add a field.\n\t\t * Builds the object necessary to add a field to the field model collection.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string \ttype   field type\n\t\t * @param  boolean \tsilent add silently\n\t\t * @return string \ttmpID\n\t\t */\n\t\taddField: function( type, silent ) {\n\t\t\t// Default to false\n\t\t\tsilent = silent || false;\n\t\t\t// Get our field type model\n\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\t\t\t// Get our tmp ID\n\t\t\tvar tmpID = nfRadio.channel( 'fields' ).request( 'get:tmpID' );\n\t\t\t// Add our field\n\t\t\tvar newModel = nfRadio.channel( 'fields' ).request( 'add',  { id: tmpID, label: fieldType.get( 'nicename' ), type: fieldType.get( 'id' ) }, silent );\n\t\t\t// Add our field addition to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: 'Field',\n\t\t\t\tlabel: newModel.get( 'label' ),\n\t\t\t\tchange: 'Added',\n\t\t\t\tdashicon: 'plus-alt'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: nfRadio.channel( 'fields' ).request( 'get:collection' )\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addObject', newModel, null, label, data );\n\t\t\t\n\t\t\treturn tmpID;\n\t\t},\n\n\t\t/**\n\t\t * When the user drags a field type or staging over our sortable, we need to modify the helper.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\toverfieldsSortable: function( ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) { // Field Type\n\t\t\t\t// String type\n\t\t\t\tvar type = jQuery( ui.helper ).data( 'id' );\n\t\t\t\t// Get our field type model.\n\t\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\t\t\t\t// Get our field type nicename.\n\t\t\t\tvar label = fieldType.get( 'nicename' );\n\t\t\t\t// Get our sortable element.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\t// Get our fieldwidth.\n\t\t\t\tvar fieldWidth = jQuery( sortableEl ).width();\n\t\t\t\t// Set our currentHelper to an object var so that we can access it later.\n\t\t\t\tthis.currentHelper = ui.helper;\n\t\t\t\t// Update our helper label.\n\t\t\t\tjQuery( ui.helper ).html( label );\n\t\t\t\t// Remove the field type draggable classes and add sortable classes.\n\t\t\t\tjQuery( ui.helper ).removeClass( 'nf-one-third' ).addClass( 'nf-field-wrap' ).css( { 'width': fieldWidth, 'height': '50px' } );\t\t\t\t\t\t\n\t\t\t\t// Add our hover class if our sortable has been initialized.\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).addClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t} else if ( jQuery( ui.item ).hasClass( 'nf-stage' ) ) { // Staging\n\t\t\t\t// Get our sortable, and if it's initialized add our hover class.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).addClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When the user moves a draggable outside of the sortable, we need to change the helper.\n\t\t * This returns the item to its pre-over state.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\toutFieldsSortable: function( ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) { // Field Type\n\t\t\t\t/*\n\t\t\t\t * Get our helper clone.\n\t\t\t\t * This will let us access the previous label and classes of our helper.\n\t\t\t\t */ \n\t\t\t\tvar helperClone = nfRadio.channel( 'drawer-addField' ).request( 'get:typeHelperClone' );\n\t\t\t\t// Set our helper label, remove our sortable class, and add the type class back to the type draggable.\n\t\t\t\tjQuery( this.currentHelper ).html( jQuery( helperClone ).html() );\n\t\t\t\tjQuery( this.currentHelper ).removeClass( 'nf-field-wrap' ).addClass( 'nf-one-third' ).css( { 'width': '', 'height': '' } );\n\t\t\t\t// Get our sortable and if it has been intialized, remove the droppable hover class.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).removeClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t} else if ( jQuery( ui.item ).hasClass( 'nf-stage' ) ) { // Staging\n\t\t\t\t// If we've initialized our sortable, remove the droppable hover class.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).removeClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging in the sortable:\n\t\t * remove our opacity setting\n\t\t * remove our ui helper\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstopFieldsSortable: function( ui ) {\n\t\t\tjQuery( ui.item ).css( 'opacity', '' )\n\t\t\tjQuery( ui.helper ).remove();\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'sortable:stop', ui );\n\t\t},\n\n\t\t/**\n\t\t * When we start dragging in the sortable:\n\t\t * add an opacity setting of 0.5\n\t\t * show our item (jQuery hides the original item by default)\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstartFieldsSortable: function( ui ) {\n\t\t\t// If we aren't dragging an item in from types or staging, update our change log.\n\t\t\tif( ! jQuery( ui.item ).hasClass( 'nf-field-type-button' ) && ! jQuery( ui.item ).hasClass( 'nf-stage' ) ) { \n\t\t\t\tjQuery( ui.item ).css( 'opacity', '0.5' ).show();\n\t\t\t}\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'sortable:start', ui );\n\t\t},\n\n\t\t/**\n\t\t * Sort our fields when we change the order.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tupdateFieldsSortable: function( ui ) {\n\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields' );\n\n\t\t\t// If we aren't dragging an item in from types or staging, update our change log.\n\t\t\tif( ! jQuery( ui.item ).hasClass( 'nf-field-type-button' ) && ! jQuery( ui.item ).hasClass( 'nf-stage' ) ) { \n\n\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\tvar dragFieldID = jQuery( ui.item ).prop( 'id' ).replace( 'field-', '' );\n\t\t\t\tvar dragModel = fieldCollection.get( dragFieldID );\n\n\t\t\t\t// Add our change event to the change tracker.\n\t\t\t\tvar data = { fields: [] };\n\t\t\t\t_.each( fieldCollection.models, function( field ) {\n\t\t\t\t\tvar oldPos = field._previousAttributes.order;\n\t\t\t\t\tvar newPos = field.get( 'order' );\n\t\t\t\t\t\n\t\t\t\t\tdata.fields.push( {\n\t\t\t\t\t\tmodel: field,\n\t\t\t\t\t\tattr: 'order',\n\t\t\t\t\t\tbefore: oldPos,\n\t\t\t\t\t\tafter: newPos\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t\tvar label = {\n\t\t\t\t\tobject: 'Field',\n\t\t\t\t\tlabel: dragModel.get( 'label' ),\n\t\t\t\t\tchange: 'Re-ordered from ' + dragModel._previousAttributes.order + ' to ' + dragModel.get( 'order' ),\n\t\t\t\t\tdashicon: 'sort'\n\t\t\t\t};\n\n\t\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'sortFields', dragModel, null, label, data );\n\t\t\t}\n\n\t\t\t\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model that represents our form fields.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/fieldModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tobjectType: 'Field',\n\t\t\tobjectDomain: 'fields',\n\t\t\teditActive: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Listen for model attribute changes\n\t\t\tthis.on( 'change', this.changeSetting, this );\n\t\t\t\n\t\t\t// Get our parent field type.\n\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', this.get( 'type' ) );\n\t\t\tvar parentType = fieldType.get( 'parentType' );\n\n\t\t\t// Loop through our field type \"settingDefaults\" and add any default settings.\n\t\t\tvar that = this;\n\t\t\t_.each( fieldType.get( 'settingDefaults' ), function( val, key ) {\n\t\t\t\tif ( 'undefined' == typeof that.get( key ) ) {\n\t\t\t\t\tthat.set( key, val, { silent: true } );\n\t\t\t\t}\n\t\t\t} );\n\t\t\t\n\t\t\t/*\n\t\t\t * Trigger an init event on three channels:\n\t\t\t * \n\t\t\t * fields\n\t\t\t * fields-parentType\n\t\t\t * field-type\n\t\t\t *\n\t\t\t * This lets specific field types modify model attributes before anything uses them.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'fields' ).trigger( 'init:fieldModel', this );\n\t\t\tnfRadio.channel( 'fields-' + parentType ).trigger( 'init:fieldModel', this );\n\t\t\tnfRadio.channel( 'fields-' + this.get( 'type' ) ).trigger( 'init:fieldModel', this );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'update:fieldKey', this.updateFieldKey );\n\t\t},\n\n\t\t/**\n\t\t * Fires an event on the fieldSetting-{name} channel saying we've updated a setting.\n\t\t * When we change the model attributes, fire an event saying we've changed something.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tchangeSetting: function( model ) {\n\t\t\tnfRadio.channel( 'fieldSetting-' + _.keys( model.changedAttributes() )[0] ).trigger( 'update:setting', this ) ;\n\t\t\tnfRadio.channel( 'app' ).trigger( 'update:setting', this );\n\t\t},\n\n\t\tupdateFieldKey: function( keyModel, settingModel ) {\n\t\t\tnfRadio.channel( 'app' ).request( 'replace:fieldKey', this, keyModel, settingModel );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our field models. \n * This is the actual field data created by the user.\n *\n * We listen to the add and remove events so that we can push the new id to either the new fields or removed fields property.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/fieldCollection',['models/fields/fieldModel'], function( fieldModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: fieldModel,\n\t\tcomparator: 'order',\n\t\ttmpNum: 1,\n\n\t\tinitialize: function() {\n\t\t\tthis.on( 'add', this.addField, this );\n\t\t\tthis.on( 'remove', this.removeField, this );\n\t\t\tthis.newIDs = [];\n\t\t},\n\n\t\t/**\n\t\t * When we add a field, push the id onto our new fields property.\n\t\t * This lets us tell the server that this is a new field to be added rather than a field to be updated.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param void\n\t\t */\n\t\taddField: function( model ) {\n\t\t\tthis.newIDs.push( model.get( 'id' ) );\n\t\t},\n\n\t\t/**\n\t\t * When we remove a field, push the id onto our removed fields property.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param void\n\t\t */\n\t\tremoveField: function( model ) {\n\t\t\tthis.removedIDs[ model.get( 'id' ) ] = model.get( 'id' );\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Handles interactions with our field collection.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/data',['models/fields/fieldCollection', 'models/fields/fieldModel'], function( fieldCollection, fieldModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Load our field collection from our localized form data\n\t\t\tthis.collection = new fieldCollection( preloadedFormData.fields );\n\t\t\t// Set our removedIDs to an empty object. This will be populated when a field is removed so that we can add it to our 'deleted_fields' object.\n\t\t\tthis.collection.removedIDs = {};\n\n\t\t\t// Respond to requests for data about fields and to update/change/delete fields from our collection.\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:collection', this.getFieldCollection, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:field', this.getField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:tmpID', this.getTmpFieldID, this );\n\n\t\t\tnfRadio.channel( 'fields' ).reply( 'add', this.addField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'delete', this.deleteField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'sort:fields', this.sortFields, this );\n\t\t},\n\n\t\tgetFieldCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tgetField: function( id ) {\n\t\t\treturn this.collection.get( id );\n\t\t},\n\n\t\t/**\n\t\t * Add a field to our collection. If silent is passed as true, no events will trigger.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param Object \tdata \tfield data to insert\n\t\t * @param bool \t\tsilent \tprevent events from firing as a result of adding\t \t\n\t\t */\n\t\taddField: function( data, silent ) {\n\t\t\tsilent = silent || false;\n\t\t\tif ( false === data instanceof Backbone.Model ) {\n\t\t\t\tvar model = new fieldModel( data );\n\t\t\t} else {\n\t\t\t\tvar model = data;\n\t\t\t}\t\t\t\n\n\t\t\tthis.collection.add( model, { silent: silent } );\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'add:field', model );\n\n\t\t\treturn model;\n\t\t},\n\n\t\t/**\n\t\t * Update a field setting by ID\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  int \t\tid    field id\n\t\t * @param  string \tname  setting name\n\t\t * @param  mixed \tvalue setting value\n\t\t * @return void\n\t\t */\n\t\tupdateFieldSetting: function( id, name, value ) {\n\t\t\tvar fieldModel = this.collection.get( id );\n\t\t\tfieldModel.set( name, value );\n\t\t},\n\n\t\t/**\n\t\t * Get our fields sortable EL\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Array \torder optional order array like: [field-1, field-4, field-2]\n\t\t * @return void\n\t\t */\n\t\tsortFields: function( order, ui, updateDB ) {\n\t\t\tif ( null == updateDB ) {\n\t\t\t\tupdateDB = true;\n\t\t\t}\n\t\t\t// Get our sortable element\n\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) { // Make sure that sortable is enabled\n\t\t\t\t// JS ternerary for setting our order\n\t\t\t\tvar order = order || jQuery( sortableEl ).sortable( 'toArray' );\n\n\t\t\t\t// Loop through all of our fields and update their order value\n\t\t\t\t_.each( this.collection.models, function( field ) {\n\t\t\t\t\t// Get our current position.\n\t\t\t\t\tvar oldPos = field.get( 'order' );\n\t\t\t\t\tvar id = field.get( 'id' );\n\t\t\t\t\tif ( jQuery.isNumeric( id ) ) {\n\t\t\t\t\t\tvar search = 'field-' + id;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar search = id;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Get the index of our field inside our order array\n\t\t\t\t\tvar newPos = order.indexOf( search ) + 1;\n\t\t\t\t\tfield.set( 'order', newPos );\n\t\t\t\t} );\n\t\t\t\tthis.collection.sort();\n\n\t\t\t\tif ( updateDB ) {\n\t\t\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\t\t\t// Update our preview\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Delete a field from our collection.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tmodel \tfield model to be deleted\n\t\t * @return void\n\t\t */\n\t\tdeleteField: function( model ) {\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'delete:field', model );\n\t\t\tthis.collection.remove( model );\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t},\n\n\t\t/**\n\t\t * Return a new tmp id for our fields.\n\t\t * Gets the field collection length, adds 1, then returns that prepended with 'tmp-'.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return string\n\t\t */\n\t\tgetTmpFieldID: function() {\n\t\t\tvar tmpNum = this.collection.tmpNum;\n\t\t\tthis.collection.tmpNum++;\n\t\t\treturn 'tmp-' + tmpNum;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model for our repeater option.\n * \n * @package Ninja App builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/optionRepeaterModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\terrors: {}\t\t\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// When we add errors to the option row, run a function.\n\t\t\tthis.on( 'change:errors', this.changeErrors, this );\n\t\t},\n\n\t\t/**\n\t\t * When we change the errors on our model, check to see if we should add or remove \n\t\t * the error from the setting that this option is a part of.\n\t\t *\n\t\t * Adding an error to the setting model simply disables the drawer and other\n\t\t * navigation. As long as we have one option with an error, it should be set to true.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tchangeErrors: function() {\n\t\t\t/*\n\t\t\t * The errors attribute will be an object, so if we don't have any keys, it's empty.\n\t\t\t * If we have an empty object, check to see if we can remove the error from our setting model.\n\t\t\t */\n\t\t\tif ( 0 == _.size( this.get( 'errors' ) ) ) {\n\t\t\t\t/*\n\t\t\t\t * Loop through our collection to see if we have any other errors.\n\t\t\t\t */\n\t\t\t\tvar errorsFound = false;\n\t\t\t\t_.each( this.collection.models, function( opt ) {\n\t\t\t\t\tif ( 0 != _.size( opt.get( 'errors' ) ) ) {\n\t\t\t\t\t\terrorsFound = true;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tif ( ! errorsFound ) {\n\t\t\t\t\tthis.collection.settingModel.set( 'error', false );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/*\n\t\t\t\t * We have errors, so make sure that the setting model has an error set.\n\t\t\t\t */\n\t\t\t\tthis.collection.settingModel.set( 'error', true );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Model that represents our list options.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/optionRepeaterCollection',['models/app/optionRepeaterModel'], function( listOptionModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: listOptionModel,\n\t\tcomparator: 'order',\n\n\t\tinitialize: function( models, options ) {\n\t\t\t// Listen to the 'sort' event\n\t\t\tthis.on( 'sort', this.changeCollection, this );\n\t\t\t// Listen to the 'add' event\n\t\t\tthis.on( 'add', this.addOption, this );\n\t\t\tthis.settingModel = options.settingModel;\n\t\t},\n\n\t\tchangeCollection: function() {\n\t\t\t// Trigger a 'sort:options' event so that our field model can update\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'sort:options', this );\n\t\t},\n\n\t\taddOption: function( model, collection ) {\n\t\t\tif ( ! model.get( 'order' ) ) {\n\t\t\t\t// console.log( collection.length );\n\t\t\t\t// model.set( 'order', this.length );\n\t\t\t}\n\t\t}\n\t} );\n\treturn collection;\n} );\n","define( 'views/app/drawer/optionRepeaterError',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\tclassName: 'nf-error',\n\t\ttemplate: '#nf-tmpl-edit-setting-option-repeater-error'\n\t});\n\n\treturn view;\n} );\n","define( 'views/app/drawer/optionRepeaterOption',['views/app/drawer/optionRepeaterError'], function( ErrorView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\tclassName: 'nf-table-row',\n\t\ttemplate: '#nf-tmpl-edit-setting-option-repeater-default-row',\n\t\tid: function() {\n\t\t\treturn this.model.cid;\n\t\t},\n\n\t\tregions: {\n\t\t\terror: '.nf-option-error'\n\t\t},\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.settingModel = data.settingModel;\n\t\t\tthis.dataModel = data.dataModel;\n\t\t\tthis.collection = data.collection;\n\t\t\tthis.columns = data.columns;\n\t\t\tthis.model.on( 'change:errors', this.renderErrors, this );\n\n\t\t\tif ( 'undefined' != typeof this.settingModel.get( 'tmpl_row' ) ) {\n\t\t\t\tthis.template = '#' + this.settingModel.get( 'tmpl_row' );\n\t\t\t}\n\n\t\t\tthis.hasErrors = false;\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:errors', this.renderErrors );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\t/*\n\t\t\t * Send out a radio message.\n\t\t\t */\n\t\t\tnfRadio.channel( 'setting-' + this.settingModel.get( 'name' ) + '-option' ).trigger( 'render:setting', this.model, this.dataModel, this );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tif ( this.model.get( 'new' ) ) {\n\t\t\t\tjQuery( this.el ).find( 'input:first' ).focus();\n\t\t\t\tthis.model.set( 'new', false );\n\t\t\t}\n\t\t},\n\n\t\tevents: {\n\t\t\t'change .setting': 'changeOption',\n\t\t\t'click .nf-delete': 'deleteOption',\n\t\t\t'keyup': 'keyupOption'\n\t\t},\n\n\t\tchangeOption: function( e ) {\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'change:option', e, this.model, this.dataModel, this.settingModel );\n\t\t},\n\n\t\tdeleteOption: function( e ) {\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'click:deleteOption', this.model, this.collection, this.dataModel );\n\t\t},\n\n\t\tkeyupOption: function( e ) {\n\t\t\tthis.maybeAddOption( e );\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'keyup:option', e, this.model, this.dataModel, this.settingModel )\n\t\t},\n\n\t\tmaybeAddOption: function( e ) {\n\t\t\tif ( 13 == e.keyCode ) {\n\t\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'click:addOption', this.collection, this.dataModel );\n\t\t\t}\n\t\t},\n\n\t\trenderErrors: function() {\n\t\t\t/*\n\t\t\t * We don't want to redraw the entire row, which would remove focus from the eq textarea,\n\t\t\t * so we add and remove error classes manually.\n\t\t\t */\n\t\t\tif ( 0 == Object.keys( this.model.get( 'errors' ) ) && this.hasErrors ) {\n\t\t\t\tthis.error.empty();\n\t\t\t\tjQuery( this.el ).removeClass( 'nf-error' );\n\t\t\t} else {\n\t\t\t\tthis.hasErrors = true;\n\t\t\t\tthis.error.show( new ErrorView( { model: this.model } ) );\n\t\t\t\tjQuery( this.el ).addClass( 'nf-error' );\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t\t\treturn {\n\t\t\t\tgetColumns: function() {\n\t\t\t\t\treturn that.columns;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n\n","define( 'views/app/drawer/optionRepeaterEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'tr',\n\t\ttemplate: '#nf-tmpl-edit-setting-option-repeater-empty'\n\t});\n\n\treturn view;\n} );\n","define( 'views/app/drawer/optionRepeaterComposite',['views/app/drawer/optionRepeaterOption', 'views/app/drawer/optionRepeaterEmpty', 'models/app/optionRepeaterCollection'], function( listOptionView, listEmptyView, listOptionCollection ) {\n\tvar view = Marionette.CompositeView.extend( {\n\t\ttemplate: '#nf-tmpl-edit-setting-wrap',\n\t\tchildView: listOptionView,\n\t\temptyView: listEmptyView,\n\t\treorderOnSort: false,\n\n\t\tinitialize: function( data ) {\n\n\t\t\t/*\n\t\t\t * Our options are stored in our database as objects, not collections.\n\t\t\t * Before we attempt to render them, we need to convert them to a collection if they aren't already one.\n\t\t\t */ \n\t\t\tvar optionCollection = data.dataModel.get( this.model.get( 'name' ) );\n\n\t\t\tif ( false == optionCollection instanceof Backbone.Collection ) {\n\t\t\t\toptionCollection = new listOptionCollection( [], { settingModel: this.model } );\n\t\t\t\toptionCollection.add( data.dataModel.get( this.model.get( 'name' ) ) );\n\t\t\t\tdata.dataModel.set( this.model.get( 'name' ), optionCollection, { silent: true } );\n\t\t\t}\n\n\t\t\tthis.collection = optionCollection;\n\t\t\tthis.dataModel = data.dataModel;\n\t\t\tthis.childViewOptions = { settingModel: this.model, collection: this.collection, dataModel: data.dataModel, columns: this.model.get( 'columns' ) };\n\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor ( var name in deps ) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.on( 'change:' + name, this.render, this );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor (var name in deps) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.off( 'change:' + name, this.render );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t\n\t\t\tvar that = this;\n\t\t\tjQuery( this.el ).find( '.nf-list-options-tbody' ).sortable( {\n\t\t\t\thandle: '.handle',\n\t\t\t\thelper: 'clone',\n\t\t\t\tplaceholder: 'nf-list-options-sortable-placeholder',\n\t\t\t\tforcePlaceholderSize: true,\n\t\t\t\topacity: 0.95,\n\t\t\t\ttolerance: 'pointer',\n\n\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'option-repeater' ).request( 'start:optionSortable', ui );\n\t\t\t\t},\n\n\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'option-repeater' ).request( 'stop:optionSortable', ui );\n\t\t\t\t},\n\n\t\t\t\tupdate: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'option-repeater' ).request( 'update:optionSortable', ui, this, that );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tnfRadio.channel( 'mergeTags' ).request( 'init', this );\n\n\t\t\t/*\n\t\t\t * Send out a radio message.\n\t\t\t */\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'render:setting', this.model, this.dataModel, this );\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t\t\tvar that = this;\n\t    \treturn {\n\t    \t\trenderHeaders: function() {\n\t    \t\t\tvar columns = '<div>&nbsp;</div>';\n\t    \t\t\t_.each( this.columns, function( col ) {\n\t    \t\t\t\tcolumns += '<div>' + col.header + '</div>';\n\t    \t\t\t} );\n\t    \t\t\tcolumns += '<div>&nbsp;</div>';\n\t\t\t\t\treturn columns;\n\t\t\t\t},\n\n\t    \t\trenderSetting: function() {\n\t\t\t\t\treturn _.template( jQuery( '#nf-tmpl-edit-setting-' + this.type ).html(), this );\n\t\t\t\t},\n\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = '';\n\t\t\t\t\tif ( 'undefined' != typeof this.width ) {\n\t\t\t\t\t\tclasses += this.width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclasses += ' one-half';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.error ) {\n\t\t\t\t\t\tclasses += ' nf-error';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\trenderVisible: function() {\n\t\t\t\t\tif ( this.deps ) {\n\t\t\t\t\t\tfor (var name in this.deps) {\n\t\t\t\t\t\t    if ( this.deps.hasOwnProperty( name ) ) {\n\t\t\t\t\t\t        if ( that.dataModel.get( name ) !== this.deps[ name ] ) {\n\t\t\t\t\t\t        \treturn 'style=\"display:none;\"';\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t    \t\t\treturn '';\n\t    \t\t},\n\n\t\t\t\trenderError: function() {\n\t\t\t\t\tif ( this.error ) {\n\t\t\t\t\t\treturn this.error;\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\n\t\t\t\trenderFieldsetClasses: function() {\n\t\t\t\t\treturn that.model.get( 'name' );\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( '.nf-list-options-tbody' ).append( childView.el );\n\t\t\tnfRadio.channel( 'mergeTags' ).request( 'init', this );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-add-new': 'clickAddOption'\n\t\t},\n\n\t\tclickAddOption: function( e ) {\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'click:addOption', this.collection, this.dataModel );\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","/**\n * Handles tasks associated with our option-repeater.\n * \n * Return our repeater child view.\n *\n * Also listens for changes to the options settings.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/optionRepeater',['models/app/optionRepeaterModel', 'models/app/optionRepeaterCollection', 'views/app/drawer/optionRepeaterComposite'], function( listOptionModel, listOptionCollection, listCompositeView ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests for the childView for list type fields.\n\t\t\tnfRadio.channel( 'option-repeater' ).reply( 'get:settingChildView', this.getSettingChildView, this );\n\t\t\t\n\t\t\t// Listen for changes to our list options.\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater' ), 'change:option', this.changeOption );\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater' ), 'click:addOption', this.addOption );\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater' ), 'click:deleteOption', this.deleteOption );\n\n\t\t\t// Respond to requests related to our list options sortable.\n\t\t\tnfRadio.channel( 'option-repeater' ).reply( 'update:optionSortable', this.updateOptionSortable, this );\n\t\t\tnfRadio.channel( 'option-repeater' ).reply( 'stop:optionSortable', this.stopOptionSortable, this );\n\t\t\tnfRadio.channel( 'option-repeater' ).reply( 'start:optionSortable', this.startOptionSortable, this );\n\t\t},\n\n\t\t/**\n\t\t * Update an option value in our model.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te          event\n\t\t * @param  backbone.model \tmodel      option model\n\t\t * @param  backbone.model \tdataModel\n\t\t * @return void\n\t\t */\n\t\tchangeOption: function( e, model, dataModel, settingModel ) {\n\t\t\tvar name = jQuery( e.target ).data( 'id' );\n\t\t\tif ( 'selected' == name ) {\n\t\t\t\tif ( jQuery( e.target ).attr( 'checked' ) ) {\n\t\t\t\t\tvar value = 1;\n\t\t\t\t} else {\n\t\t\t\t\tvar value = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar value = jQuery( e.target ).val();\n\t\t\t}\n\t\t\t\n\t\t\tvar before = model.get( name );\n\n\t\t\tmodel.set( name, value );\n\t\t\t// Triger an update on our dataModel\n\t\t\tthis.triggerDataModel( model, dataModel );\n\n\t\t\tvar after = value;\n\t\t\t\n\t\t\tvar changes = {\n\t\t\t\tattr: name,\n\t\t\t\tbefore: before,\n\t\t\t\tafter: after\n\t\t\t}\n\n\t\t\tvar label = {\n\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\tchange: 'Option ' + model.get( 'label' ) + ' ' + name + ' changed from ' + before + ' to ' + after\n\t\t\t};\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'changeSetting', model, changes, label );\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'update:option', model, dataModel, settingModel );\n\t\t},\n\n\t\t/**\n\t\t * Add an option to our list\n\t\t * \n\t\t * @since 3.0\n\t\t * @param backbone.collection \tcollection \tlist option collection\n\t\t * @param backbone.model \t\tdataModel\n\t\t * @return void\n\t\t */\n\t\taddOption: function( collection, dataModel ) {\n\t\t\tvar modelData = {\n\t\t\t\torder: collection.length,\n\t\t\t\tnew: true\n\t\t\t};\n\t\t\t_.each( collection.settingModel.get( 'columns' ), function( col, key ) {\n\t\t\t\tmodelData[ key ] = col.default;\n\t\t\t} );\n\t\t\tvar model = new listOptionModel( modelData );\n\t\t\tcollection.add( model );\n\n\t\t\t// Add our field addition to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\tchange: 'Option Added',\n\t\t\t\tdashicon: 'plus-alt'\n\t\t\t};\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addListOption', model, null, label );\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'add:option', model );\n\t\t\tthis.triggerDataModel( model, dataModel );\n\t\t},\n\n\t\t/**\n\t\t * Delete an option from our list\n\t\t * \n\t\t * @since  3.0\n\t\t * @param backbone.model \t\tmodel       list option model\n\t\t * @param backbone.collection \tcollection \tlist option collection\n\t\t * @param backbone.model \t\tdataModel\n\t\t * @return void\n\t\t */\n\t\tdeleteOption: function( model, collection, dataModel ) {\n\t\t\tvar newModel = nfRadio.channel( 'app' ).request( 'clone:modelDeep', model );\n\n\t\t\t// Add our field deletion to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\tchange: 'Option ' + newModel.get( 'label' ) + ' Removed',\n\t\t\t\tdashicon: 'dismiss'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: collection\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'removeListOption', newModel, null, label, data );\n\t\t\t\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\tvar results = changeCollection.where( { model: model } );\n\n\t\t\t_.each( results, function( changeModel ) {\n\t\t\t\tif ( 'object' == typeof changeModel.get( 'data' ) ) {\n\t\t\t\t\t_.each( changeModel.get( 'data' ), function( dataModel ) {\n\t\t\t\t\t\tif ( dataModel.model == dataModel ) {\n\t\t\t\t\t\t\tdataModel.model = newModel;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\tchangeModel.set( 'model', newModel );\n\t\t\t\tchangeModel.set( 'disabled', true );\n\t\t\t} );\n\n\t\t\tcollection.remove( model );\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'remove:option', model );\n\t\t\tthis.triggerDataModel( model, dataModel );\n\t\t},\n\n\t\t/**\n\t\t * Creates an arbitrary value on our collection, then clones and updates that collection.\n\t\t * This forces a change event to be fired on the dataModel where the list option collection data is stored.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param backbone.collection \tcollection \tlist option collection\n\t\t * @param backbone.model \t\tdataModel\n\t\t * @return void\n\t\t */\n\t\ttriggerDataModel: function( model, dataModel ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'update:setting', model );\t\n\t\t},\n\n\t\t/**\n\t\t * Return our list composite view to the setting collection view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tmodel \tsettings model\n\t\t * @return void\n\t\t */\n\t\tgetSettingChildView: function( model ) {\n\t\t\treturn listCompositeView;\n\t\t},\n\n\t\t/**\n\t\t * When we sort our list options, change the order in our option model and trigger a change.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t \t\tsortable \tjQuery UI element\n\t\t * @param  backbone.model \tsetting  \tSetting model\n\t\t * @return void\n\t\t */\n\t\tupdateOptionSortable: function( ui, sortable, setting ) {\n\t\t\t\n\t\t\tvar newOrder = jQuery( sortable ).sortable( 'toArray' );\n\t\t\tvar dragModel = setting.collection.get( { cid: jQuery( ui.item ).prop( 'id' ) } );\n\t\t\tvar data = {\n\t\t\t\tcollection: setting.collection,\n\t\t\t\tobjModels: []\n\t\t\t};\n\n\t\t\t_.each( newOrder, function( cid, index ) {\n\t\t\t\tvar optionModel = setting.collection.get( { cid: cid } );\n\t\t\t\tvar oldPos = optionModel.get( 'order' );\n\t\t\t\toptionModel.set( 'order', index );\n\t\t\t\tvar newPos = index;\n\n\t\t\t\tdata.objModels.push( {\n\t\t\t\t\tmodel: optionModel,\n\t\t\t\t\tattr: 'order',\n\t\t\t\t\tbefore: oldPos,\n\t\t\t\t\tafter: newPos\n\t\t\t\t} );\n\t\t\t} );\n\t\t\t\n\t\t\tsetting.collection.sort( { silent: true } );\n\t\t\t\n\t\t\tvar label = {\n\t\t\t\tobject: setting.dataModel.get( 'objectType' ),\n\t\t\t\tlabel: setting.dataModel.get( 'label' ),\n\t\t\t\tchange: 'Option ' + dragModel.get( 'label' ) + ' re-ordered from ' + dragModel._previousAttributes.order + ' to ' + dragModel.get( 'order' ),\n\t\t\t\tdashicon: 'sort'\n\t\t\t};\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'sortListOptions', dragModel, null, label, data );\n\t\t\tthis.triggerDataModel( dragModel, setting.dataModel );\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'sort:option', dragModel, setting );\n\t\t},\n\n\t\t/**\n\t\t * When we stop sorting our list options, reset our item opacity.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object ui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstopOptionSortable: function( ui ) {\n\t\t\tjQuery( ui.item ).css( 'opacity', '' );\n\t\t},\n\n\t\t/**\n\t\t * When we start sorting our list options, remove containing divs and set our item opacity to 0.5\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Objects ui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstartOptionSortable: function( ui ) {\n\t\t\tjQuery( ui.placeholder ).find( 'div' ).remove();\n\t\t\tjQuery( ui.item ).css( 'opacity', '0.5' ).show();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles adding and removing the active class from a field currently being edited.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - Edit Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/editActive',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests to remove the active class from all our fields.\n\t\t\tnfRadio.channel( 'fields' ).reply( 'clear:editActive', this.clearEditActive, this );\n\t\t\t// Listen for the closing drawer so that we can remove all of our active classes.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-editSettings' ), 'before:closeDrawer', this.clearEditActive );\n\t\t},\n\n\t\t/**\n\t\t * Loops through our fields collection and sets editActive to false.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n        clearEditActive: function() {\n            var fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n            _.each( fieldCollection.models, function( field ) {\n\t\t\t\tfield.set( 'editActive', false );\n            } );\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Fetches settings models so that we can get setting information\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldSettings',['models/app/settingCollection'], function( settingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.collection = new settingCollection( fieldSettings, { objectType: 'fields' } );\n\n\t\t\t// Responds to requests for settings models.\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:settingModel', this.getSettingModel, this );\n\t\t},\n\n\t\tgetSettingModel: function( name ) {\n\t\t\treturn this.collection.findWhere( { name: name } );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel to add the individual Credit Card Fields.\n *\n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldCreditCard',[], function() {\n    var controller = Marionette.Object.extend( {\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'fields' ), 'drop:fieldType', this.dropCreditCardField );\n            this.listenTo( nfRadio.channel( 'fields' ), 'add:stagedField', this.stageCreditCardField );\n        },\n\n        dropCreditCardField: function( type, tmpID ) {\n\n            if( 'creditcard' == type ) {\n\n                var model = nfRadio.channel( 'fields').request( 'get:field', tmpID );\n\n                var order = model.get( 'order' );\n\n                nfRadio.channel( 'fields' ).request( 'delete', model );\n\n                _.each( [ 'creditcardfullname', 'creditcardnumber', 'creditcardcvc', 'creditcardexpiration', 'creditcardzip'], function( type ) {\n\n                    var fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\n                    var newField = {\n                        id: nfRadio.channel( 'fields' ).request( 'get:tmpID' ),\n                        type: type,\n                        label: fieldType.get( 'nicename' ),\n                        order: order\n                    };\n\n                    nfRadio.channel('fields').request('add', newField );\n                });\n            }\n\n        },\n\n        stageCreditCardField: function( model ) {\n\n            if( 'creditcard' == model.get( 'slug' ) ) {\n\n                nfRadio.channel( 'fields' ).request( 'remove:stagedField', '', model );\n\n                _.each( [ 'creditcardfullname', 'creditcardnumber', 'creditcardcvc', 'creditcardexpiration', 'creditcardzip'], function( type ) {\n                    nfRadio.channel('fields').request('add:stagedField', type );\n                });\n            }\n        }\n\n    });\n\n    return controller;\n} );\n","/**\n * Listens to our app channel to add the individual Credit Card Fields.\n *\n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldPassword',[], function() {\n    var controller = Marionette.Object.extend( {\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'fields' ), 'drop:fieldType', this.dropField );\n            this.listenTo( nfRadio.channel( 'fields' ), 'add:stagedField', this.stageField );\n        },\n\n        dropField: function( type, tmpID ) {\n\n            if( 'password' == type ) {\n\n                var model = nfRadio.channel( 'fields').request( 'get:field', tmpID );\n\n                var order = model.get( 'order' );\n\n                nfRadio.channel( 'fields' ).request( 'delete', model );\n\n                _.each( [ 'password', 'passwordconfirm' ], function( type ) {\n\n                    var fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\n                    var newField = {\n                        id: nfRadio.channel( 'fields' ).request( 'get:tmpID' ),\n                        type: type,\n                        label: fieldType.get( 'nicename' ),\n                        order: order\n                    };\n\n                    nfRadio.channel('fields').request('add', newField );\n                });\n            }\n\n        },\n\n        stageField: function( model ) {\n\n            var field_slug = model.get( 'slug' );\n\n            if( 'password' == field_slug ) {\n\n                nfRadio.channel( 'fields' ).request( 'remove:stagedField', '', model );\n\n                _.each( [ 'password', 'passwordconfirm' ], function( type ) {\n\n                    var silent = ( type == field_slug );\n                    nfRadio.channel('fields').request('add:stagedField', type, silent );\n                });\n            }\n        }\n\n    });\n\n    return controller;\n} );\n","/**\n * Listens to our app channel for settings views being rendered.\n *\n * If we're rendering a product_assignment setting, add our products to the data model.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldQuantity',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for messages that are fired before a setting view is rendered.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'before:renderSetting', this.beforeRenderSetting );\n\t\t},\n\n\t\tbeforeRenderSetting: function( settingModel, dataModel, view ) {\n\t\t\tif ( 'product_assignment' == settingModel.get( 'name' ) ) {\n\t\t\t\tvar productFields = this.getProductFields( settingModel );\n\t\t\t\tsettingModel.set( 'options', productFields );\n\t\t\t}\n\t\t},\n\n\t\tgetProductFields: function( settingModel ) {\n\t\t\tvar productFields = [ settingModel.get( 'select_product' ) ];\n\t\t\t// Update our dataModel with all of our product fields.\n\t\t\tvar fields = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t_.each( fields.models, function( field ) {\n\t\t\t\tif ( 'product' == field.get( 'type' ) ) {\n\t\t\t\t\tproductFields.push( { label: field.get( 'label' ), value: field.get( 'id' ) } );\n\t\t\t\t}\n\t\t\t} );\n\t\t\treturn productFields;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel for settings views being rendered.\n *\n * If we're rendering a product_assignment setting, add our products to the data model.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldShipping',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-shipping_options' ), 'render:setting', this.addMask );\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-shipping_options-option' ), 'render:setting', this.addMask );\n\t\t},\n\n\t\taddMask: function( settingModel, dataModel, view ) {\n\t\t\tjQuery( view.el ).find( '[data-id=\"value\"]' ).each( function() {\n\t\t\t\tjQuery( this ).autoNumeric({\n\t\t\t\t\taSign: '$', // TODO: Use form setting\n\t\t\t\t\taSep: thousandsSeparator,\n\t\t\t\t\taDec: decimalPoint\n\t\t\t\t});\n\t\t\t} );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * When we add a new field, update its key.\n *\n * When we change the key, update any refs to the key.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/key',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// When we add a field, update its key.\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'add:field', this.newFieldKey );\n\n\t\t\t// When we edit a label, update our key.\n\t\t\tthis.listenTo( nfRadio.channel( 'fieldSetting-label' ), 'update:setting', this.updateLabel );\n\n\t\t\t// When we edit a key, check for places that key might be used.\n\t\t\tthis.listenTo( nfRadio.channel( 'fieldSetting-key' ), 'update:setting', this.updateKey );\n\n\t\t\t// When we type inside the admin key field, we need to save our manual_key setting.\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-key' ), 'keyup:setting', this.keyUp );\n\t\t},\n\n\t\t/**\n\t\t * Add a key to our new field model.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param backbone.model model new field model\n\t\t * @return void\n\t\t */\n\t\tnewFieldKey: function( model ) {\n\t\t\tvar key = this.keyExists( model.get( 'type' ) );\n\t\t\tmodel.set( 'key', key );\n\t\t\tmodel.set( 'manual_key', false );\t\n\t\t},\n\n\t\tupdateLabel: function( model ) {\n\n\t\t\t/*\n\t\t\t * If we haven't entered a key manually, update our key when our label changes.\n\t\t\t */\n\t\t\tif ( ! model.get( 'manual_key' ) && 0 != jQuery.trim( model.get( 'label' ) ).length ) {\n\t\t\t\t/*\n\t\t\t\t * When we're editing settings, we expect the edits to fire one at a time.\n\t\t\t\t * Since we're calling this in the middle of our label update, anything that inquires about what has changed after we set our key will see both label and key.\n\t\t\t\t * We need to remove the label from our model.changed property so that all that has changed is the key.\n\t\t\t\t * \n\t\t\t\t */\n\t\t\t\tdelete model.changed.label;\n\t\t\t\tvar key = this.keyExists( model.get( 'label' ) );\n\t\t\t\tmodel.set( 'key', key );\t\t\t\t\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When a field key is updated, find any merge tags using the key and update them.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model model field model\n\t\t * @return void\n\t\t */\n\t\tupdateKey: function( dataModel ) {\n\t\t\tvar key = dataModel.get( 'key' );\n\t\t\tthis.settingModel = nfRadio.channel( 'fields' ).request( 'get:settingModel', 'key' );\n\t\t\tthis.setError( key, dataModel );\n\t\t},\n\n\t\tkeyUp: function( e, settingModel, dataModel ) {\n\t\t\tdataModel.set( 'manual_key', true );\n\t\t\tthis.settingModel = settingModel;\n\t\t\tvar key = jQuery( e.target ).val();\n\t\t\tthis.setError( key, dataModel );\n\t\t},\n\n\t\tsetError: function( key, dataModel ) {\n\t\t\tvar error = false;\n\t\t\tif ( '' == jQuery.trim( key ) ) {\n\t\t\t\terror = 'Field keys can\\'t be empty. Please enter a key.';\n\t\t\t} else if ( key != this.keyExists( key, dataModel ) ) {\n\t\t\t\terror = 'Field keys must be unique. Please enter another key.'\n\t\t\t}\n\n\t\t\tif ( error ) {\n\t\t\t\tthis.settingModel.set( 'error', error );\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'update:fieldKey', dataModel );\n\t\t\t\tthis.settingModel.set( 'error', false );\n\t\t\t}\n\t\t},\n\n\t\tkeyExists: function( key, dataModel ) {\n\t\t\tkey = jQuery.slugify( key, { separator: '_' } );\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tvar x = 1;\n\t\t\tvar testKey = key;\n\t\t\t_.each( fieldCollection.models, function( field ) {\n\t\t\t\tif ( dataModel != field && testKey == field.get( 'key' ) ) {\n\t\t\t\t\ttestKey = key + '_' + x;\n\t\t\t\t\tx++;\n\t\t\t\t}\n\t\t\t} );\n\t\t\tkey = testKey;\n\n\t\t\treturn key;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Creates notices for our fields domain.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/notices',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'add:stagedField', this.addStagedField );\n\t\t},\n\n\t\taddStagedField: function( model ) {\n\t\t\tnfRadio.channel( 'notices' ).request( 'add', 'addStagedField', model.get( 'nicename' ) + ' added to staging' );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles mobile-specific JS for our fields domain.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/mobile',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for the start of our sorting.\n\t\t\t// this.listenTo( nfRadio.channel( 'app' ), 'render:fieldsSortable', this.initWiggle );\n\t\t\t// Listen for when we start sorting.\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'sortable:start', this.startWiggle );\n\t\t\t// Listen for when we stop sorting.\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'sortable:stop', this.stopWiggle );\n\t\t},\n\n\t\tinitWiggle: function( view ) {\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\tjQuery( view.el ).find( '.nf-field-wrap' ).on( 'taphold', function() {\n\t\t\t\t\tjQuery( this ).ClassyWiggle( 'start', { degrees: ['.65', '1', '.65', '0', '-.65', '-1', '-.65', '0'], delay: 50 } );\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\tstartWiggle: function( ui ) {\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\tjQuery( ui.item ).removeClass( 'ui-sortable-helper' ).ClassyWiggle( 'stop' );\n\t\t\t\tjQuery( ui.helper ).css( 'opacity', '0.75' ).ClassyWiggle( 'start', { degrees: ['.5', '1', '.5', '0', '-.5', '-1', '-.5', '0'] } );\n\t\t\t}\n\t\t},\n\n\t\tstopWiggle: function( ui ) {\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\tjQuery( ui.helper ).ClassyWiggle( 'stop' );\n\t\t\t\tjQuery( ui.item ).removeClass( 'ui-sortable-helper drag-selected' );\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Creates and stores a collection of action types. This includes all of the settings shown when editing a field.\n *\n * Loops over our preloaded data and adds that to our action type collection\n *\n * Also responds to requests for data about action types\n *\n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/types',[\n\t'models/app/typeCollection',\n\t'models/app/settingCollection',\n\t'models/app/settingGroupCollection',\n\t], function(\n\ttypeCollection,\n\tsettingCollection,\n\tsettingGroupCollection\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our field type collection\n\t\t\tthis.installedActions = new typeCollection();\n\t\t\tthis.installedActions.slug = 'installed';\n\t\t\tthis.installedActions.nicename = 'Installed';\n\t\t\tthis.availableActions = new typeCollection();\n\t\t\tthis.availableActions.slug = 'available';\n\t\t\tthis.availableActions.nicename = 'Available';\n\n\t\t\tvar that = this;\n\t\t\t_.each( actionTypeData, function( type ) {\n\t\t\t\tvar settingGroups = new settingGroupCollection();\n\t\t\t\t// Loop through the settings groups within this field type and create an object to add to the groups collection.\n\t\t\t\t_.each( type.settingGroups, function( group ) {\n\t\t\t\t\tvar groupTmp = {\n\t\t\t\t\t\tlabel: group.label,\n\t\t\t\t\t\tdisplay: group.display,\n\t\t\t\t\t\tsettings: new settingCollection( group.settings ),\n\t\t\t\t\t}\n\t\t\t\t\t// Add the tmp object to our setting groups collection\n\t\t\t\t\tsettingGroups.add( groupTmp );\n\t\t\t\t} );\n\n\t\t\t\t// Build an object for this type that we can add to our field type collection\n\t\t\t\tvar actionType = {\n\t\t\t\t\tid: type.id,\n\t\t\t\t\tnicename: type.nicename,\n\t\t\t\t\talias: type.alias,\n\t\t\t\t\tsettingGroups: settingGroups,\n\t\t\t\t\tsettingDefaults: type.settingDefaults,\n\t\t\t\t\timage: type.image,\n\t\t\t\t\tlink: type.link,\n\t\t\t\t\tsection: type.section\n\t\t\t\t}\n\n\t\t\t\t// Add tmp object to the appropriate collection (either installed or available)\n\t\t\t\tthat[ type.section + 'Actions' ].add( actionType );\n\t\t\t} );\n\n\t\t\t// Respond to requests to get field type, collection, settings, and sections\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:type', this.getType, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:installedActions', this.getInstalledActions, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:availableActions', this.getAvailableActions, this );\n\t\t},\n\n\t\t/**\n\t\t * Return a field type by id\n\t\t *\n\t\t * @since  3.0\n\t\t * @param  string \t\t\tid \tfield type\n\t\t * @return backbone.model    \tfield type model\n\t\t */\n\t\tgetType: function( id ) {\n\t\t\t// Search our installed actions first\n\t\t\tvar type = this.installedActions.get( id );\n\t\t\tif ( ! type ) {\n\t\t\t\ttype = this.availableActions.get( id );\n\t\t\t}\n        \treturn type;\n        },\n\n        /**\n         * Return the installed action type collection\n         *\n         * @since  3.0\n         * @return backbone.collection    \tfield type collection\n         */\n\t\tgetInstalledActions: function() {\n        \treturn this.installedActions;\n        },\n\n        /**\n         * Return the available action type collection\n         *\n         * @since  3.0\n         * @return backbone.collection    \tfield type collection\n         */\n\t\tgetAvailableActions: function() {\n        \treturn this.availableActions;\n        },\n\n        /**\n         * Add a field type to our staging area when the field type button is clicked.\n         *\n         * @since 3.0\n         * @param Object e event\n         * @return void\n         */\n        addStagedField: function( e ) {\n        \tvar type = jQuery( e.target ).data( 'id' );\n        \tnfRadio.channel( 'fields' ).request( 'add:stagedField', type );\n        },\n\n        /**\n         * Return our field type settings sections\n         *\n         * @since  3.0\n         * @return backbone.collection field type settings sections\n         */\n        getTypeSections: function() {\n            return this.fieldTypeSections;\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Model that represents our form action.\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/actions/actionModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tobjectType: 'Action',\n\t\t\tobjectDomain: 'actions',\n\t\t\teditActive: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Listen for model attribute changes\n\t\t\tthis.on( 'change', this.changeSetting, this );\n\n\t\t\t// Get our parent field type.\n\t\t\tvar actionType = nfRadio.channel( 'actions' ).request( 'get:type', this.get( 'type' ) );\n\n\t\t\t// Loop through our action type \"settingDefaults\" and add any default settings.\n\t\t\tvar that = this;\n\t\t\t_.each( actionType.get( 'settingDefaults' ), function( val, key ) {\n\t\t\t\tif ( ! that.get( key ) ) {\n\t\t\t\t\tthat.set( key, val, { silent: true } );\n\t\t\t\t}\n\t\t\t} );\n\t\t\t\n\t\t\t/*\n\t\t\t * Trigger an init event on three channels:\n\t\t\t * \n\t\t\t * actions\n\t\t\t * action-type\n\t\t\t *\n\t\t\t * This lets specific field types modify model attributes before anything uses them.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'actions' ).trigger( 'init:fieldModel', this );\n\t\t\tnfRadio.channel( 'actions-' + this.get( 'type' ) ).trigger( 'init:fieldModel', this );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'actions' ), 'update:fieldKey', this.updateFieldKey );\n\t\t},\n\n\t\t/**\n\t\t * When we change the model attributes, fire an event saying we've changed something.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tchangeSetting: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'update:setting', this );\n\t\t},\n\n\t\tupdateFieldKey: function( keyModel, settingModel ) {\n\t\t\tnfRadio.channel( 'app' ).request( 'replace:fieldKey', this, keyModel, settingModel );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our action models. \n * This is the actual action data created by the user.\n *\n * We listen to the add and remove events so that we can push the new id to either the new action or removed action property.\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/actions/actionCollection',['models/actions/actionModel'], function( actionModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: actionModel,\n\t\tcomparator: 'order',\n\t\ttmpNum: 1,\n\n\t\tinitialize: function() {\n\t\t\tthis.on( 'add', this.addAction, this );\n\t\t\tthis.on( 'remove', this.removeAction, this );\n\t\t\tthis.newIDs = [];\n\t\t},\n\n\t\t/**\n\t\t * When we add a field, push the id onto our new action property.\n\t\t * This lets us tell the server that this is a new field to be added rather than a field to be updated.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param void\n\t\t */\n\t\taddAction: function( model ) {\n\t\t\tthis.newIDs.push( model.get( 'id' ) );\n\t\t},\n\n\t\t/**\n\t\t * When we remove a field, push the id onto our removed action property.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param void\n\t\t */\n\t\tremoveAction: function( model ) {\n\t\t\tthis.removedIDs[ model.get( 'id' ) ] = model.get( 'id' );\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Handles interactions with our actions collection.\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/data',['models/actions/actionCollection', 'models/actions/actionModel'], function( actionCollection, actionModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Load our action collection from our localized form data\n\t\t\tthis.collection = new actionCollection( preloadedFormData.actions );\n\t\t\tthis.collection.tmpNum = 1;\n\n\t\t\tif ( 0 != this.collection.models.length ) {\n\t\t\t\tvar that = this;\n\t\t\t\t_.each( this.collection.models, function( action ) {\n\t\t\t\t\tif ( ! jQuery.isNumeric( action.get( 'id' ) ) ) {\n\t\t\t\t\t\tthat.collection.tmpNum++;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\t// Set our removedIDs to an empty object. This will be populated when a action is removed so that we can add it to our 'deleted_actions' object.\n\t\t\tthis.collection.removedIDs = {};\n\n\t\t\t// Respond to requests for data about actions and to update/change/delete actions from our collection.\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:collection', this.getCollection, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:action', this.getAction, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:tmpID', this.getTmpID, this );\n\n\t\t\tnfRadio.channel( 'actions' ).reply( 'add', this.addAction, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'delete', this.deleteAction, this );\n\t\t},\n\n\t\tgetCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tgetAction: function( id ) {\n\t\t\treturn this.collection.get( id );\n\t\t},\n\n\t\t/**\n\t\t * Add a action to our collection. If silent is passed as true, no events will trigger.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param Object \tdata \taction data to insert\n\t\t * @param bool \t\tsilent \tprevent events from firing as a result of adding\t \t\n\t\t */\n\t\taddAction: function( data, silent ) {\n\t\t\tsilent = silent || false;\n\n\t\t\tif ( false === data instanceof Backbone.Model ) {\n\t\t\t\tvar model = new actionModel( data );\n\t\t\t} else {\n\t\t\t\tvar model = data;\n\t\t\t}\n\n\t\t\tthis.collection.add( model, { silent: silent } );\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\n\t\t\treturn model;\n\t\t},\n\n\t\t/**\n\t\t * Delete a action from our collection.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tmodel \taction model to be deleted\n\t\t * @return void\n\t\t */\n\t\tdeleteAction: function( model ) {\n\t\t\tthis.collection.remove( model );\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t},\n\n\n\t\t/**\n\t\t * Return a new tmp id for our actions.\n\t\t * Gets the action collection length, adds 1, then returns that prepended with 'tmp-'.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return string\n\t\t */\n\t\tgetTmpID: function() {\n\t\t\tvar tmpNum = this.collection.tmpNum;\n\t\t\tthis.collection.tmpNum++;\n\t\t\treturn 'tmp-' + tmpNum;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Fetches settings models so that we can get setting information\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/actionSettings',['models/app/settingCollection'], function( settingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.collection = new settingCollection( actionSettings, { objectType: 'actions' } );\n\n\t\t\t// Responds to requests for settings models.\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:settingModel', this.getSettingModel, this );\n\t\t},\n\n\t\tgetSettingModel: function( name ) {\n\t\t\treturn this.collection.findWhere( { name: name } );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles adding and removing the active class from a action currently being edited.\n * \n * @package Ninja Forms builder\n * @subpackage Actions - Edit Action Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/editActive',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests to remove the active class from all our actions.\n\t\t\tnfRadio.channel( 'actions' ).reply( 'clear:editActive', this.clearEditActive, this );\n\t\t\t// Listen for the closing drawer so that we can remove all of our active classes.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-editSettings' ), 'before:closeDrawer', this.clearEditActive );\n\t\t},\n\n\t\t/**\n\t\t * Loops through our actions collection and sets editActive to false.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n        clearEditActive: function() {\n            var actionCollection = nfRadio.channel( 'actions' ).request( 'get:collection' );\n            _.each( actionCollection.models, function( action ) {\n\t\t\t\taction.set( 'editActive', false );\n            } );\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Handles clicks and dragging for our action types.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/addActionTypes',['models/actions/actionCollection', 'models/actions/actionModel'], function( actionCollection, actionModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'actions' ), 'click:addAction', this.addAction );\n\n\t\t\tnfRadio.channel( 'actions' ).reply( 'add:actionType', this.addAction, this );\n\t\t},\n\n\t\t/**\n\t\t * Add an action to our collection. If silent is passed as true, no events will trigger.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param Object \tdata \taction data to insert\n\t\t * @param bool \t\tsilent \tprevent events from firing as a result of adding\t \t\n\t\t */\n\t\taddAction: function( type ) {\n\t\t\tvar data = {\n\t\t\t\tid: nfRadio.channel( 'actions' ).request( 'get:tmpID' ),\n\t\t\t\ttype: type.get( 'id' ),\n\t\t\t\tlabel: type.get( 'nicename' )\n\t\t\t}\n\t\t\tvar newModel = nfRadio.channel( 'actions' ).request( 'add', data );\n\t\t\tvar label = {\n\t\t\t\tobject: 'Action',\n\t\t\t\tlabel: newModel.get( 'label' ),\n\t\t\t\tchange: 'Added',\n\t\t\t\tdashicon: 'plus-alt'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: nfRadio.channel( 'actions' ).request( 'get:collection' )\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addObject', newModel, null, label, data );\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:edit', {}, newModel );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles the logic for our action type draggables.\n * \n * @package Ninja Forms builder\n * @subpackage Actions - New Action Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/typeDrag',[], function( ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our action type draggables and run the appropriate function.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addAction' ), 'startDrag:type', this.startDrag );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addAction' ), 'stopDrag:type', this.stopDrag );\n\t\t\t/*\n\t\t\t * Respond to requests for our helper clone.\n\t\t\t * This is used by other parts of the application to modify what the user is dragging in real-time.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'drawer-addAction' ).reply( 'get:typeHelperClone', this.getCurrentDraggableHelperClone, this );\n\t\t},\n\n\t\t/**\n\t\t * When we start dragging:\n\t\t * get our drawer element\n\t\t * set its overflow property to visible !important -> forces the type drag element to be on at the top of the z-index.\n\t\t * get our main element\n\t\t * est its overflow propery to visible !important -> forces the type drag element to be on top of the z-index.\n\t\t * set our dragging helper clone\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  object context \tThis function is going to be called from a draggable. Context is the \"this\" reference to the draggable.\n\t\t * @param  object ui      \tObject sent by jQuery UI draggable.\n\t\t * @return void\n\t\t */\n\t\tstartDrag: function( context, ui ) {\n\t\t\tthis.drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tthis.mainEl = nfRadio.channel( 'app' ).request( 'get:mainEl' );\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\n\t\t\tthis.draggableHelperClone = jQuery( ui.helper ).clone();\n\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging, reset our overflow property to hidden !important.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  object context \tThis function is going to be called from a draggable. Context is the \"this\" reference to the draggable.\n\t\t * @param  object ui      \tObject sent by jQuery UI draggable.\n\t\t * @return {[type]}         [description]\n\t\t */\n\t\tstopDrag: function( context, ui ) {\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t},\n\n\t\tgetCurrentDraggableHelperClone: function() {\n\t\t\treturn this.draggableHelperClone;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles the logic for our action type droppable.\n * \n * @package Ninja Forms builder\n * @subpackage Actions - New Action Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/droppable',[], function( ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Respond to requests for our helper clone.\n\t\t\t * This is used by other parts of the application to modify what the user is dragging in real-time.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'app' ).reply( 'drop:actionType', this.dropActionType, this );\n\t\t},\n\n\t\tdropActionType: function( e, ui ) {\n\t\t\tvar type_slug = jQuery( ui.helper ).data( 'type' );\n\t\t\tvar type = nfRadio.channel( 'actions' ).request( 'get:type', type_slug );\n\t\t\tnfRadio.channel( 'actions' ).request( 'add:actionType', type );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model for our action type\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/actions/typeModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our action type models. \n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/actions/typeCollection',['models/actions/typeModel'], function( actionTypeModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: actionTypeModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Filters our action type collection.\n * \n * @package Ninja Forms builder\n * @subpackage Actions - New Action Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/filterTypes',['models/actions/typeCollection'], function( typeCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our change filter event.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addAction' ), 'change:filter', this.filterActionTypes );\n\t\t},\n\n\t\t/**\n\t\t * Filter our action types in the add new action drawer\n\t\t * \n\t\t * Takes a search string and finds any action types that match either the name or alias.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string\t search \tstring being searched for\n\t\t * @param  object \t e      \tKeyup event\n\t\t * @return void\n\t\t */\n\t\tfilterActionTypes: function( search, e ) {\n\n\t\t\t// Make sure that we aren't dealing with an empty string.\n\t\t\tif ( '' != jQuery.trim( search ) ) {\n\n        \t\tvar filteredInstalled = [];\n        \t\t/**\n        \t\t * Call the function that actually filters our collection,\n        \t\t * and then loop through our collection, adding each model to our filteredInstalled array.\n        \t\t */\n\t\t\t\tvar installedActions = nfRadio.channel( 'actions' ).request( 'get:installedActions' );\n        \t\t_.each( this.filterCollection( search, installedActions ), function( model ) {\n        \t\t\tfilteredInstalled.push( model );\n        \t\t} );\n\n        \t\tvar filteredAvailable = [];\n        \t\tvar availableActions = nfRadio.channel( 'actions' ).request( 'get:availableActions' );\n        \t\t_.each( this.filterCollection( search, availableActions ), function( model ) {\n        \t\t\tfilteredAvailable.push( model );\n        \t\t} );\n\n        \t\t// Create a new Action Type Section collection with the filtered array.\n        \t\tvar newInstalled = new typeCollection( filteredInstalled );\n        \t\tnewInstalled.slug = 'installed';\n        \t\tnewInstalled.nicename = 'Installed';\n\n        \t\tvar newAvailable = new typeCollection( filteredAvailable );\n        \t\tnewAvailable.slug = 'available';\n        \t\tnewAvailable.nicename = 'Available';\n\n        \t\t// Request that our action types filter be applied, passing the collection we created above.\n        \t\tnfRadio.channel( 'drawer' ).trigger( 'filter:actionTypes', newInstalled, newAvailable );\n        \t\t// If we've pressed the 'enter' key, add the action to staging and clear the filter.\n        \t\tif ( e.addObject ) {\n        \t\t\tif ( 0 < newInstalled.length ) {\n        \t\t\t\tnfRadio.channel( 'actions' ).request( 'add:actionType', newInstalled.models[0] );\n        \t\t\t\tnfRadio.channel( 'drawer' ).request( 'clear:filter' );\n        \t\t\t}\n        \t\t}\n        \t} else {\n        \t\t// Clear our filter if the search text is empty.\n        \t\tnfRadio.channel( 'drawer' ).trigger( 'clear:filter' );\n        \t}\n        },\n\n        /**\n         * Search our action type collection for the search string.\n         * \n         * @since  3.0\n         * @param  string\t search \tstring being searched for\n         * @return backbone.collection\n         */\n        filterCollection: function( search, collection ) {\n        \tsearch = search.toLowerCase();\n        \t/*\n        \t * Backbone collections have a 'filter' method that loops through every model,\n        \t * waiting for you to return true or false. If you return true, the model is kept.\n        \t * If you return false, it's removed from the filtered result.\n        \t */\n\t\t\tvar filtered = collection.filter( function( model ) {\n\t\t\t\tvar found = false;\n\t\t\t\t\n\t\t\t\t// If we match either the ID or nicename, return true.\n\t\t\t\tif ( model.get( 'id' ).toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t} else if ( model.get( 'nicename' ).toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * TODO: Hashtag searching. Doesn't really do anything atm.\n\t\t\t\t */\n\t\t\t\tif ( model.get( 'tags' ) && 0 == search.indexOf( '#' ) ) {\n\t\t\t\t\t_.each( model.get( 'tags' ), function( tag ) {\n\t\t\t\t\t\tif ( search.replace( '#', '' ).length > 1 ) {\n\t\t\t\t\t\t\tif ( tag.toLowerCase().indexOf( search.replace( '#', '' ) ) != -1 ) {\n\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// If we match any of the aliases, return true.\n\t\t\t\tif ( model.get( 'alias' ) ) {\n\t\t\t\t\t_.each( model.get( 'alias' ), function( alias ) {\n\t\t\t\t\t\tif ( alias.toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\treturn found;\n\t\t\t} );\n\n\t\t\t// Return our filtered collection.\n\t\t\treturn filtered;\n        }\n\t});\n\n\treturn controller;\n} );\n","/**\n * Creates and stores a collection of form setting types. This includes all of the settings shown when editing a field.\n *\n * Loops over our preloaded data and adds that to our form setting type collection\n *\n * Also responds to requests for data about form setting types\n *\n * @package Ninja Forms builder\n * @subpackage Advanced\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/advanced/types',[\n\t'models/app/typeCollection',\n\t'models/app/settingCollection',\n\t'models/app/settingGroupCollection',\n\t], function(\n\ttypeCollection,\n\tsettingCollection,\n\tsettingGroupCollection\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our field type collection\n\t\t\tthis.collection = new typeCollection();\n\n\t\t\tvar that = this;\n\t\t\t_.each( formSettingTypeData, function( type ) {\n\t\t\t\tvar settingGroups = new settingGroupCollection();\n\t\t\t\t// Loop through the settings groups within this field type and create an object to add to the groups collection.\n\t\t\t\t_.each( type.settingGroups, function( group ) {\n\t\t\t\t\tvar groupTmp = {\n\t\t\t\t\t\tlabel: group.label,\n\t\t\t\t\t\tdisplay: group.display,\n\t\t\t\t\t\tsettings: new settingCollection( group.settings ),\n\t\t\t\t\t}\n\t\t\t\t\t// Add the tmp object to our setting groups collection\n\t\t\t\t\tsettingGroups.add( groupTmp );\n\t\t\t\t} );\n\n\t\t\t\t// Build an object for this type that we can add to our field type collection\n\t\t\t\tvar settingType = {\n\t\t\t\t\tid: type.id,\n\t\t\t\t\tnicename: type.nicename,\n\t\t\t\t\talias: type.alias,\n\t\t\t\t\tsettingGroups: settingGroups,\n\t\t\t\t\tsettingDefaults: type.settingDefaults,\n\t\t\t\t\teditActive: false\n\t\t\t\t}\n\n\t\t\t\t// Add tmp object to the appropriate collection (either installed or available)\n\t\t\t\tthat.collection.add( settingType );\n\t\t\t} );\n\n\t\t\t// Respond to requests to get field type, collection, settings, and sections\n\t\t\tnfRadio.channel( 'settings' ).reply( 'get:type', this.getType, this );\n\t\t\tnfRadio.channel( 'settings' ).reply( 'get:typeCollection', this.getCollection, this );\n\t\t},\n\n\t\t/**\n\t\t * Return a field type by id\n\t\t *\n\t\t * @since  3.0\n\t\t * @param  string \t\t\tid \tfield type\n\t\t * @return backbone.model    \tfield type model\n\t\t */\n\t\tgetType: function( id ) {\n\t\t\treturn this.collection.get( id );\n        },\n\n        /**\n         * Return the installed action type collection\n         *\n         * @since  3.0\n         * @return backbone.collection    \tfield type collection\n         */\n\t\tgetCollection: function() {\n        \treturn this.collection;\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Model that represents our form settings.\n * \n * @package Ninja Forms builder\n * @subpackage Form Settings\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/advanced/settingsModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tobjectType: 'Form Setting',\n\t\t\teditActive: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Listen for model attribute changes\n\t\t\tthis.bind( 'change', this.changeSetting, this );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'settings' ), 'update:fieldKey', this.updateFieldKey );\n\t\t},\n\n\t\t/**\n\t\t * When we change the model attributes, fire an event saying we've changed something.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tchangeSetting: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'update:setting', this );\n\t\t},\n\n\t\tupdateFieldKey: function( keyModel, settingModel ) {\n\t\t\tnfRadio.channel( 'app' ).request( 'replace:fieldKey', this, keyModel, settingModel );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Handles interactions with our form settings collection.\n * \n * @package Ninja Forms builder\n * @subpackage Advanced\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/advanced/data',['models/advanced/settingsModel'], function( settingsModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Load our action collection from our localized form data\n\t\t\tthis.model = new settingsModel( preloadedFormData.settings );\n\t\t\tnfRadio.channel( 'settings' ).reply( 'get:settings', this.getSettings, this );\n\t\t},\n\n\t\tgetSettings: function() {\n\t\t\treturn this.model;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Fetches settings models so that we can get setting information\n * \n * @package Ninja Forms builder\n * @subpackage Advanced\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/advanced/formSettings',['models/app/settingCollection'], function( settingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.collection = new settingCollection( formSettings, { objectType: 'settings' } );\n\n\t\t\t// Responds to requests for settings models.\n\t\t\tnfRadio.channel( 'settings' ).reply( 'get:settingModel', this.getSettingModel, this );\n\t\t},\n\n\t\tgetSettingModel: function( name ) {\n\t\t\treturn this.collection.findWhere( { name: name } );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles adding and removing the active class from form settings currently being edited.\n * \n * @package Ninja Forms builder\n * @subpackage Advanced\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/advanced/editActive',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests to remove the active class from all our fields.\n\t\t\tnfRadio.channel( 'settings' ).reply( 'clear:editActive', this.clearEditActive, this );\n\t\t\t// Listen for the closing drawer so that we can remove all of our active classes.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-editSettings' ), 'before:closeDrawer', this.clearEditActive );\n\t\t},\n\n\t\t/**\n\t\t * Loops through our fields collection and sets editActive to false.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n        clearEditActive: function() {\n            var collection = nfRadio.channel( 'settings' ).request( 'get:typeCollection' );\n            _.each( collection.models, function( field ) {\n\t\t\t\tfield.set( 'editActive', false );\n            } );\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Listens for clicks on our form settings sections.\n * \n * @package Ninja Forms builder\n * @subpackage Advanced\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/advanced/clickEdit',['models/advanced/settingsModel'], function( settingsModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'settings' ), 'click:edit', this.clickEdit );\n\t\t},\n\n\t\tclickEdit: function( e, typeModel ) {\n\t\t\tvar model = nfRadio.channel( 'settings' ).request( 'get:settings' );\n\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'editSettings', { model: model, groupCollection: typeModel.get( 'settingGroups' ) } );\n\t\t\tvar preventClose = nfRadio.channel( 'drawer' ).request( 'get:preventClose' );\n\t\t\tif ( ! preventClose ) {\n\t\t\t\ttypeModel.set( 'editActive', true );\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Makes sure that calculations don't reference calculations with a lower order.\n *\n * For example, our first caclulation can't reference the second, but the second can reference the first.\n * \n * @package Ninja Forms builder\n * @subpackage Advanced\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/advanced/calculations',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * When someone types in the \"name\" or \"eq\" portion of our calculation, we need to make sure\n\t\t\t * that they haven't duplicated a name or made a bad EQ reference.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater' ), 'keyup:option', this.keyUp );\n\t\t\t/*\n\t\t\t * Same thing for when our calculation option is updated\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater' ), 'update:option', this.updateCalc );\n\t\t\t/*\n\t\t\t * When we sort our calcluations, we need to make sure that we don't get any bad EQ\n\t\t\t * references.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater' ), 'sort:option', this.sortCalc );\n\t\t},\n\n\t\tkeyUp: function( e, optionModel ) {\n\t\t\t// Get our current value\n\t\t\tvar value = jQuery( e.target ).val();\n\t\t\t// Check to see if we're editing a name or eq\n\t\t\tif( 'name' == jQuery( e.target ).data( 'id' ) ) { // We are editing the name field\n\t\t\t\t// Check to see if our name already exists.\n\t\t\t\tthis.checkName( value, optionModel );\n\t\t\t\tthis.checkEQ( optionModel.get( 'eq' ), optionModel );\n\t\t\t} else { // We're editing the eq\n\t\t\t\t// Check to see if there are any calcs referenced in our eq\n\t\t\t\tthis.checkEQ( value, optionModel );\n\t\t\t}\n\t\t},\n\n\t\tupdateCalc: function( optionModel ) {\n\t\t\tthis.checkName( optionModel.get( 'name' ), optionModel );\n\t\t\tthis.checkEQ( optionModel.get( 'eq' ), optionModel );\n\t\t},\n\n\t\tsortCalc: function( optionModel, setting ) {\n\t\t\tthis.checkAllCalcs( setting.collection );\n\t\t},\n\n\t\t/**\n\t\t * Check to see if a calc name exists.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string \t\t\tname        calc name to check\n\t\t * @param  backbone.model \toptionModel \n\t\t * @return void\n\t\t */\n\t\tcheckName: function( name, optionModel ) {\n\t\t\toptionModel.set( 'name', name );\n\t\t\t// Get our current errors, if any.\n\t\t\tvar errors = optionModel.get( 'errors' );\n\t\t\t// Search our calc collection for our name\n\t\t\tvar found = optionModel.collection.where( { name: name } );\n\n\t\t\t// If the name that was passed is the same as our current name, return false.\n\t\t\tif ( name == optionModel.get( 'name' ) ) {\n\t\t\t\tfound = [];\n\t\t\t}\n\n\t\t\t// If our name exists, add an errors to the option model\n\t\t\tif ( 0 != found.length ) {\n\t\t\t\terrors.nameExists = 'Calculation names must be unique. Please enter another name.';\n\t\t\t} else {\n\t\t\t\tdelete errors.nameExists;\n\t\t\t}\n\n\t\t\toptionModel.set( 'errors', errors );\n\t\t\toptionModel.trigger( 'change:errors', optionModel );\n\t\t},\n\n\t\t/**\n\t\t * Check to see if an eq contains a reference to a calc at a lower priority.\n\t\t *\n\t\t * @since  3.0\n\t\t * @param  string \t\t\teq          our equation\n\t\t * @param  backbone.model \toptionModel\n\t\t * @return void\n\t\t */\n\t\tcheckEQ: function( eq, optionModel ) {\n\t\t\t// Get any current errors on our optionModel\n\t\t\tvar errors = optionModel.get( 'errors' );\n\t\t\t/*\n\t\t\t * We're looking for two errors:\n\t\t\t * - Calculations that are below the current one can't be processed.\n\t\t\t * - Calculations can't refer to themselves.\n\t\t\t */ \n\t\t\tvar errorSelfRef = false;\n\t\t\tvar errorFutureCalc = false;\n\t\t\t// Regex that searches for {calc:key}\n\t\t\tvar calcs = eq.match( new RegExp( /{calc:(.*?)}/g ) );\n\t\t\t/*\n\t\t\t * Calcs will be an array like:\n\t\t\t * ['{calc:test}'], ['{calc:another}']\n\t\t\t * \n\t\t\t * If we have any calcs in the eq, loop through them and search for the errors.\n\t\t\t */\n\t\t\tif ( calcs ) {\n\t\t\t\tvar calculations = optionModel.collection;\n\t\t\t\t// Maps a function to each item in our calcs array.\n\t\t\t\tcalcs = calcs.map( function( calc ) {\n\t\t\t\t\t// calc will be {calc:name}\n\t\t\t\t\tvar name = calc.replace( '}', '' ).replace( '{calc:', '' );\n\t\t\t\t\t// Get our optionModel from our calculations collection.\n\t\t\t\t\tvar targetCalc = calculations.findWhere( { name: name } );\n\t\t\t\t\tif ( name == optionModel.get( 'name' ) ) {\n\t\t\t\t\t\t// If we already have a calc with this name, set an error.\n\t\t\t\t\t\terrors.selfRef = 'A calculation can\\'t reference itself!';\n\t\t\t\t\t\terrorSelfRef = true;\n\t\t\t\t\t} else if ( targetCalc && targetCalc.get( 'order' ) > optionModel.get( 'order' ) ) {\n\t\t\t\t\t\t// If the calc is after this one, set an error. \n\t\t\t\t\t\terrorFutureCalc = true;\n\t\t\t\t\t\terrors.futureCalc = 'Can\\'t reference a future calculation!';\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// If we didn't find any self ref errors, remove the key.\n\t\t\tif ( ! errorSelfRef ) {\n\t\t\t\tdelete errors.selfRef;\n\t\t\t}\n\n\t\t\t// If we didn't find any future calc errors, remove the key.\n\t\t\tif ( ! errorFutureCalc ) {\n\t\t\t\tdelete errors.futureCalc;\n\t\t\t}\n\n\t\t\t// Set errors and trigger our optionModel change.\n\t\t\toptionModel.set( 'errors', errors );\n\t\t\toptionModel.trigger( 'change:errors', optionModel );\n\n\t\t},\n\n\t\tcheckAllCalcs: function( collection ) {\n\t\t\tvar that = this;\n\t\t\tcollection.models.map( function( opt ) {\n\t\t\t\tthat.checkName( opt.get( 'name' ), opt );\n\t\t\t\tthat.checkEQ( opt.get( 'eq' ), opt );\n\t\t\t} );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Loads all of our controllers using Require JS.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine(\n\t'controllers/loadControllers',[\n\t\t/*\n\t\t * Application controllers\n\t\t */\n\t\t'controllers/app/drawer',\n\t\t'controllers/app/drawerConfig',\t\t\n\t\t'controllers/app/domainConfig',\n\t\t'controllers/app/data',\t\t\n\t\t'controllers/app/drawerToggleSettingGroup',\n\t\t'controllers/app/updateDB',\n\t\t'controllers/app/formData',\n\t\t'controllers/app/previewLink',\n\t\t'controllers/app/menuButtons',\n\t\t'controllers/app/trackChanges',\n\t\t'controllers/app/undoChanges',\n\t\t'controllers/app/publishResponse',\n\t\t'controllers/app/changeDomain',\n\t\t'controllers/app/pushstate',\n\t\t'controllers/app/hotkeys',\n\t\t'controllers/app/cleanState',\n\t\t'controllers/app/coreUndo',\n\t\t'controllers/app/cloneModelDeep',\n\t\t'controllers/app/getSettingChildView',\n\t\t'controllers/app/changeSettingDefault',\n\t\t'controllers/app/fieldset',\n\t\t'controllers/app/toggleSetting',\n\t\t'controllers/app/itemControls',\n\t\t'controllers/app/mergeTags',\n\t\t'controllers/app/itemSettingFill',\n\t\t'controllers/app/confirmPublish',\n\t\t'controllers/app/rte',\n\t\t'controllers/app/changeMenu',\n\t\t'controllers/app/mobile',\n\t\t'controllers/app/notices',\n\t\t/*\n\t\t * Fields domain controllers\n\t\t */\n\t\t'controllers/fields/types',\n\t\t'controllers/fields/fieldTypeDrag',\n\t\t'controllers/fields/stagingDrag',\n\t\t'controllers/fields/savedFieldsSection',\n\t\t'controllers/fields/staging',\n\t\t'controllers/fields/stagingSortable',\n\t\t'controllers/fields/filterTypes',\n\t\t'controllers/fields/sortable',\n\t\t'controllers/fields/data',\n\t\t'controllers/app/optionRepeater',\n\t\t'controllers/fields/editActive',\n\t\t'controllers/fields/fieldSettings',\n\t\t'controllers/fields/fieldCreditCard',\n\t\t'controllers/fields/fieldPassword',\n\t\t'controllers/fields/fieldQuantity',\n\t\t'controllers/fields/fieldShipping',\n\t\t'controllers/fields/key',\n\t\t'controllers/fields/notices',\n\t\t'controllers/fields/mobile',\n\n\t\t/*\n\t\t * TODO: Actions domain controllers\n\t\t */\n\t\t'controllers/actions/types',\n\t\t'controllers/actions/data',\n\t\t'controllers/actions/actionSettings',\n\t\t'controllers/actions/editActive',\n\t\t'controllers/actions/addActionTypes',\n\t\t'controllers/actions/typeDrag',\n\t\t'controllers/actions/droppable',\n\t\t'controllers/actions/filterTypes',\n\n\t\t/*\n\t\t * TODO: Settings domain controllers\n\t\t */\n\t\t'controllers/advanced/types',\n\t\t'controllers/advanced/data',\n\t\t'controllers/advanced/formSettings',\n\t\t'controllers/advanced/editActive',\n\t\t'controllers/advanced/clickEdit',\n\t\t'controllers/advanced/calculations'\n\t],\n\tfunction(\n\t\t/*\n\t\t * Application controllers\n\t\t */\n\t\tDrawer,\n\t\tDrawerConfig,\n\t\tDomainConfig,\n\t\tAppData,\n\t\tDrawerToggleSettingGroup,\n\t\tUpdateDB,\n\t\tFormData,\n\t\tPreviewLink,\n\t\tAppMenuButtons,\n\t\tAppTrackChanges,\n\t\tAppUndoChanges,\n\t\tAppPublishResponse,\n\t\tAppChangeDomain,\n\t\tPushstate,\n\t\tHotkeys,\n\t\tCleanState,\n\t\tCoreUndo,\n\t\tCloneModelDeep,\n\t\tDrawerSettingChildView,\n\t\tChangeSettingDefault,\n\t\tFieldset,\n\t\tToggleSetting,\n\t\tItemControls,\n\t\tMergeTags,\n\t\tItemSettingFill,\n\t\tConfirmPublish,\n\t\tRTE,\n\t\tChangeMenu,\n\t\tAppMobile,\n\t\tAppNotices,\n\t\t/*\n\t\t * Fields domain controllers\n\t\t */\n\t\tFieldTypes,\n\t\tFieldTypeDrag,\n\t\tFieldStagingDrag,\n\t\tSavedFields,\n\t\tStagedFieldsData,\n\t\tStagedFieldsSortable,\n\t\tDrawerFilterFieldTypes,\n\t\tMainContentFieldsSortable,\n\t\tFieldData,\n\t\tOptionRepeater,\n\t\tFieldsEditActive,\n\t\tFieldSettings,\n\t\tFieldCreditCard,\n\t\tFieldPassword,\n\t\tFieldQuantity,\n\t\tFieldShipping,\n\t\tFieldKey,\n\t\tNotices,\n\t\tFieldsMobile,\n\t\t/*\n\t\t * TODO: Actions domain controllers\n\t\t */\n\t\tActionTypes,\n\t\tActionData,\n\t\tActionSettings,\n\t\tActionEditActive,\n\t\tActionAddTypes,\n\t\tActionTypeDrag,\n\t\tActionDroppable,\n\t\tActionFilterTypes,\n\t\t/*\n\t\t * TODO: Settings domain controllers\n\t\t */\n\t\tSettingTypes,\n\t\tSettingData,\n\t\tFormSettings,\n\t\tSettingsEditActive,\n\t\tSettingsClickEdit,\n\t\tAdvancedCalculations\n\t\t\n\t) {\n\t\tvar controller = Marionette.Object.extend( {\n\t\t\tinitialize: function() {\n\t\t\t\t/*\n\t\t\t\t * Application controllers\n\t\t\t\t */\n\t\t\t\tnew Hotkeys();\n\t\t\t\tnew Drawer();\n\t\t\t\tnew DrawerConfig();\n\t\t\t\tnew DomainConfig();\n\t\t\t\tnew DrawerToggleSettingGroup();\n\t\t\t\tnew UpdateDB();\n\t\t\t\tnew PreviewLink();\n\t\t\t\tnew AppMenuButtons();\n\t\t\t\tnew AppTrackChanges();\n\t\t\t\tnew AppUndoChanges();\n\t\t\t\tnew AppPublishResponse();\n\t\t\t\tnew AppChangeDomain();\n\t\t\t\tnew CleanState();\n\t\t\t\tnew CoreUndo();\n\t\t\t\tnew CloneModelDeep();\n\t\t\t\tnew ItemControls();\n\t\t\t\tnew ConfirmPublish();\n\t\t\t\tnew RTE();\n\t\t\t\tnew ChangeMenu();\n\t\t\t\tnew AppMobile();\n\t\t\t\tnew AppNotices();\n\t\t\t\t// new Pushstate();\n\t\t\t\t/*\n\t\t\t\t * Fields domain controllers\n\t\t\t\t * \n\t\t\t\t * Field-specific controllers should be loaded before our field type controller.\n\t\t\t\t * This ensures that any 'init' hooks are properly registered.\n\t\t\t\t */\n\t\t\t\tnew Fieldset();\n\t\t\t\tnew OptionRepeater();\n\n\t\t\t\tnew FieldTypes();\n\t\t\t\tnew FieldTypeDrag();\n\t\t\t\tnew FieldStagingDrag();\n\t\t\t\tnew SavedFields();\n\t\t\t\tnew StagedFieldsData();\n\t\t\t\tnew StagedFieldsSortable();\n\t\t\t\tnew DrawerFilterFieldTypes();\n\t\t\t\tnew MainContentFieldsSortable();\n\t\t\t\tnew ChangeSettingDefault();\n\t\t\t\tnew ToggleSetting();\n\t\t\t\tnew DrawerSettingChildView();\n\t\t\t\tnew FieldsEditActive();\n\t\t\t\tnew FieldSettings();\n\t\t\t\tnew FieldCreditCard();\n\t\t\t\tnew FieldPassword;\n\t\t\t\tnew FieldQuantity();\n\t\t\t\tnew FieldShipping();\n\t\t\t\tnew FieldKey();\n\t\t\t\tnew Notices();\n\t\t\t\tnew FieldsMobile();\n\t\t\t\t/*\n\t\t\t\t * TODO: Actions domain controllers\n\t\t\t\t */\n\t\t\t\tnew ActionTypes();\n\t\t\t\tnew ActionData();\n\t\t\t\tnew ActionSettings();\n\t\t\t\tnew ActionEditActive();\n\t\t\t\tnew ActionAddTypes();\n\t\t\t\tnew ActionTypeDrag();\n\t\t\t\tnew ActionDroppable();\n\t\t\t\tnew ActionFilterTypes();\n\t\t\t\t/*\n\t\t\t\t * TODO: Settings domain controllers\n\t\t\t\t */\n\t\t\t\tnew SettingTypes();\n\t\t\t\tnew FormSettings();\n\t\t\t\tnew SettingData();\n\t\t\t\tnew SettingsEditActive();\n\t\t\t\tnew SettingsClickEdit();\n\t\t\t\tnew AdvancedCalculations();\n\t\t\t\t/*\n\t\t\t\t * Data controllers need to be set after every other controller has been setup, even if they aren't domain-specific.\n\t\t\t\t * AppData() was after FormData();\n\t\t\t\t */\n\t\t\t\tnew AppData();\n\t\t\t\tnew FieldData();\n\t\t\t\tnew FormData();\n\t\t\t\tnew MergeTags();\n\t\t\t\tnew ItemSettingFill();\n\t\t\t}\n\t\t});\n\n\t\treturn controller;\n} );\n\n","require.config( {\n\tbaseUrl: nfAdmin.requireBaseUrl + '/builder/'\n} );\n\nvar nfRadio = Backbone.Radio;\n\njQuery( document ).ready( function( $ ) {\n\trequire( ['views/app/builder', 'controllers/loadControllers'], function( BuilderView, LoadControllers ) {\n\n\t\tvar NinjaForms = Marionette.Application.extend( {\n\n\t\t\tinitialize: function( options ) {\n\t\t\t\t// Trigger an event before we load our controllers.\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'before:loadControllers', this );\n\t\t\t\t// Load our controllers.\n\t\t\t\tvar loadControllers = new LoadControllers();\n\t\t\t\t// Trigger an event after we load our controllers.\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'after:loadControllers', this );\n\t\t\t},\n\n\t\t\tonStart: function() {\n\t\t\t\tvar builderView = new BuilderView();\n\t\t\t\t// Trigger our after start event.\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'after:appStart', this );\n\t\t\t}\n\t\t} );\n\t\n\t\tvar ninjaForms = new NinjaForms();\n\t\tninjaForms.start();\n\t} );\n} );\ndefine(\"main\", function(){});\n\n"],"sourceRoot":"/source/"}