{"version":3,"sources":["../lib/almond.js","views/app/menuItem.js","views/app/menu.js","views/app/menuButtons.js","views/app/header.js","views/app/subHeader.js","views/app/formTitle.js","views/app/builderHeader.js","views/app/main.js","views/app/drawer/mobileMenu.js","views/app/drawer/headerDefault.js","views/app/drawer/contentEmpty.js","views/app/drawer.js","views/app/drawer/mergeTagItem.js","views/app/drawer/mergeTagsSection.js","views/app/drawer/mergeTagsContent.js","views/app/builder.js","controllers/app/drawer.js","models/app/drawerModel.js","models/app/drawerCollection.js","views/fields/drawer/stagedField.js","views/fields/drawer/stagingEmpty.js","views/fields/drawer/stagingCollection.js","models/fields/stagingModel.js","models/fields/stagingCollection.js","views/fields/drawer/typeSection.js","views/fields/drawer/typeSectionCollection.js","views/fields/drawer/addField.js","views/app/drawer/itemSettingCollection.js","views/app/drawer/itemSettingGroup.js","views/app/drawer/itemSettingGroupCollection.js","views/app/drawer/editSettings.js","views/actions/drawer/typeButton.js","views/actions/drawer/typeCollection.js","views/actions/drawer/addAction.js","views/settings/drawer/editFormSettings.js","views/app/drawer/contentViewChangesItem.js","views/app/drawer/contentViewChanges.js","views/app/drawer/headerViewChanges.js","controllers/app/drawerConfig.js","models/app/domainModel.js","models/app/domainCollection.js","views/fields/mainHeader.js","views/fields/subHeader.js","views/app/itemControls.js","views/fields/fieldItem.js","views/fields/mainContentEmpty.js","views/fields/mainContentFieldCollection.js","views/actions/mainHeader.js","views/actions/subHeader.js","views/actions/actionItem.js","views/actions/mainContentEmpty.js","views/actions/mainContent.js","views/settings/mainHeader.js","views/settings/subHeader.js","views/settings/settingItem.js","views/settings/mainContent.js","controllers/app/domainConfig.js","models/app/appModel.js","controllers/app/data.js","controllers/app/drawerToggleSettingGroup.js","controllers/app/updateDB.js","models/app/formModel.js","controllers/app/formData.js","controllers/app/previewLink.js","controllers/app/menuButtons.js","models/app/changeModel.js","models/app/changeCollection.js","controllers/app/trackChanges.js","controllers/app/undoChanges.js","controllers/app/publishResponse.js","controllers/app/changeDomain.js","controllers/app/pushstate.js","controllers/app/hotkeys.js","controllers/app/cleanState.js","controllers/app/coreUndo.js","controllers/app/cloneModelDeep.js","views/app/drawer/settingError.js","views/app/drawer/itemSetting.js","controllers/app/getSettingChildView.js","controllers/app/changeSettingDefault.js","views/app/drawer/typeSettingFieldset.js","models/app/settingModel.js","models/app/settingCollection.js","controllers/app/fieldset.js","controllers/app/toggleSetting.js","controllers/app/itemControls.js","models/app/mergeTagModel.js","models/app/mergeTagCollection.js","controllers/app/mergeTags.js","controllers/app/itemSettingFill.js","models/app/typeModel.js","models/app/typeCollection.js","models/app/settingGroupModel.js","models/app/settingGroupCollection.js","models/fields/typeSectionModel.js","models/fields/typeSectionCollection.js","controllers/fields/types.js","controllers/fields/fieldTypeDrag.js","controllers/fields/stagingDrag.js","controllers/fields/savedFieldsSection.js","controllers/fields/staging.js","controllers/fields/stagingSortable.js","controllers/fields/filterTypes.js","controllers/fields/sortable.js","models/fields/fieldModel.js","models/fields/fieldCollection.js","controllers/fields/data.js","models/fields/listOptionModel.js","models/fields/listOptionCollection.js","views/fields/drawer/typeSettingListOption.js","views/fields/drawer/typeSettingListEmpty.js","views/fields/drawer/typeSettingListComposite.js","controllers/fields/optionRepeater.js","controllers/fields/editActive.js","controllers/fields/fieldSettings.js","controllers/fields/fieldQuantity.js","controllers/fields/fieldShipping.js","controllers/fields/key.js","controllers/actions/types.js","models/actions/actionModel.js","models/actions/actionCollection.js","controllers/actions/data.js","controllers/actions/actionSettings.js","controllers/actions/editActive.js","controllers/actions/addActionTypes.js","controllers/actions/typeDrag.js","controllers/actions/droppable.js","models/actions/typeModel.js","models/actions/typeCollection.js","controllers/actions/filterTypes.js","controllers/settings/types.js","models/settings/settingsModel.js","controllers/settings/data.js","controllers/settings/formSettings.js","controllers/settings/editActive.js","controllers/settings/clickEdit.js","controllers/loadControllers.js","main.js"],"names":["requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","view","Marionette","ItemView","extend","tagName","template","initialize","this","listenTo","nfRadio","channel","render","model","on","onRender","$el","children","unwrap","setElement","events","click a","clickAppMenu","trigger","templateHelpers","renderDashicons","dashicons","renderClasses","classes","currentDomain","request","get","renderUrl","url","renderTarget","renderDisabled","disabled","appMenuItemView","CollectionView","childView","onShow","el","find","that","renderPublish","publishWidth","_","html","maybeDisabled","maybeRenderCancel","publishEL","outerWidth","click .publish","click .viewChanges","clickPublish","clickViewChanges","appMenuCollectionView","appMenuButtonsView","LayoutView","regions","menu","buttons","appDomainCollection","show","collection","renderTitle","formData","appHeaderView","appSubHeaderView","formTitleView","app","formTitle","appSub","changeSubHeader","formSettings","subHeaderView","header","content","reply","getMainEl","parent","perfectScrollbar","disableSelection","contentView","clearFilter","blurFilter","getEl","keyup .nf-filter","input .nf-filter","focus input","changeFilter","currentDrawer","target","maybeChangeFilter","keyCode","addObject","filterEl","trim","val","focus","blur","getFocus","drawerHeaderView","drawerEmptyView","loadContent","emptyContent","drawerID","data","drawer","headerView","click .nf-toggle-drawer","clickToggleDrawer","onBeforeDestroy","off","clickTag","active","mergeTagItemView","CompositeView","fieldCollection","updateFields","attachHtml","collectionView","append","set","mergeTagsSectionView","mainView","menuDrawerView","drawerView","mergeTagsContentView","menuDrawer","mergeTagsContent","mergeTags","getBuilderEl","click .nf-open-drawer","click .nf-change-domain","click .nf-close-drawer","openDrawer","closeDrawer","changeDomain","controller","clickOpenDrawer","toggleDrawerSize","getClosedDrawerPos","preventClose","enableClose","objPreventClose","filterFocused","maybePreventClose","builderEl","addClass","removeClass","rightClosed","drawerEl","css","right","checkCloseDrawerPos","setInterval","clearInterval","currentDomainID","checkOpenDrawerPos","focusFilter","toggleClass","closedPos","width","keys","key","defaultHeaderView","Backbone","Model","defaults","getHeaderView","drawerModel","Collection","click .dashicons-dismiss","removeStagedField","stagedFieldView","stagedFieldsEmptyView","emptyView","getStagedFieldsEl","sortable","placeholder","helper","tolerance","over","ui","out","receive","update","start","stop","draggable","opacity","connectToSortable","height","element","clone","left","top","stagingModel","comparator","bindAll","dragging","scroll","click .nf-item","keydown .nf-item","clickFieldType","maybeClickFieldType","renderFieldTypes","each","fieldTypes","type","nicename","savedField","isSavedField","fieldTypeSectionView","drawerStagingView","StagingCollection","fieldTypeSectionCollectionView","staging","primary","secondary","filterFieldTypes","removeFieldTypeFilter","savedCollection","primaryCollection","fieldTypeSectionCollection","secondaryCollection","stagingCollection","filteredSectionCollection","reset","childViewOptions","dataModel","getChildView","itemSettingCollectionView","settings","empty","click .toggle","clickToggleGroup","renderLabel","label","renderArrowDir","display","itemSettingGroupView","itemSettingGroupCollectionView","settingGroups","groupCollection","maybeRenderTitle","renderTypeNicename","domainID","clickAddAction","window","open","image","section","renderStyle","actionTypeButtonView","renderNicename","slug","actionTypeCollectionView","filteractionTypes","removeactionTypeFilter","installedActions","availableActions","filteredInstalled","filteredAvailable","click .undoSingle","undoSingle","viewChangesItem","className","click .undoChanges","clickUndoChanges","drawerCollection","addFieldView","editSettingsView","addActionView","editFormSettingsView","viewChangesView","viewChangesHeaderView","getContentView","getDrawerCollection","getDrawer","hotkeys","domainModel","models","hide","click .nf-edit-settings","click .nf-delete","click .nf-duplicate","clickEdit","clickDelete","clickDuplicateField","itemControlsView","itemControls","editActive","renderRequired","required","getFieldID","isNumeric","click","maybeClickEdit","hasClass","droppable","accept","hoverClass","item","drop","mainContentFieldView","mainContentFieldEmptyView","reorderOnSort","getSortableEl","containment","cancel","actionCollection","change input","changeToggle","settingModel","renderToggle","actionLabel","renderTooltip","help","renderMergeTags","use_merge_tags","actionView","activeClass","settingItem","fieldsMainHeaderView","fieldsSubHeaderView","fieldsMainContentFieldCollectionView","actionsMainHeaderView","actionsSubHeaderView","actionsMainContentView","settingsMainHeaderView","settingsSubHeaderView","settingsMainContentView","Esc","Ctrl+Shift+n","Ctrl+Shift+a","Ctrl+Shift+s","Alt+Ctrl+t","up","down","Shift+return","getMainHeaderView","getSubHeaderView","getMainContentView","Ctrl+Shift+f","nfAdmin","previewurl","getDomainCollection","getDomainModel","loading","changeStatus","appModel","clean","getData","getSetting","getCurrentDomain","getCurrentDrawer","updateCurrentDomain","updateCurrentDrawer","updateSetting","setting","currentDrawerID","toggleSettingGroup","errors","updateDB","action","jsAction","JSON","parse","stringify","removedIDs","fields","field","parent_id","deleted_fields","actions","deleted_actions","post","ajaxurl","form","security","ajaxNonce","response","exception","console","log","formModel","preloadedFormData","getFormData","disablePreview","enablePreview","changePreviewNicename","appDomains","preview","publish","viewChanges","changeCollection","parseInt","cid","ChangeModel","registerChange","getCollection","maybeResetCollection","changes","dashicon","changeModel","add","undoChanges","sort","change","undoAll","publishResponse","new_ids","newID","oldID","forms","history","replaceState","changeAppDomain","preventChange","enableChange","objPreventChange","maybePreventChange","changePushState","pushState","location","href","reExp","toString","newUrl","changeHotkeys","addNewField","addNewAction","changeDomainFields","changeDomainActions","changeDomainSettings","document","hotkey","msg","fieldsDomain","actionsDomain","settingsDomain","ignoreAttributes","setAppClean","attr","changedAttributes","changedAttr","after","undoChangeSetting","undoAddObject","undoRemoveObject","undoDuplicateObject","undoSortFields","undoAddListOption","undoRemoveListOption","undoSortListOptions","fieldModel","before","maybeRemoveChange","objectModel","newIDs","results","where","remove","objectCollection","objModels","optionModel","cloneModelDeep","attributes","options","copy","constructor","newModel","settingErrorView","error","renderError","onBeforeRender","next","jBox","maxWidth","theme","closeOnClick","title","position","x","y","closeOnEsc","maxHeight","onOpen","currentElement","onCloseComplete","mask","input","autoNumeric","aSep","thousandsSeparator","aDec","decimalPoint","aSign","format","renderVisible","renderSetting","renderLabelClasses","keyup","changeSetting","keyUpSetting","itemSettingView","getSettingChildView","settingChildView","object","maybePreventUI","objectType","updateKey","keyModel","fieldsetView","settingCollection","createSettingsCollection","settingTypeModel","clickDuplicate","tmpID","mergeTagModel","mergeTagCollection","tagSectionCollection","tagSection","tags","tag","getFieldKeyFormat","clickMergeTag","addFieldTags","deleteFieldTags","updateCurrentElement","getMergeTags","replaceFieldKey","tagModel","currentValue","currentPos","caret","newPos","substr","fieldID","openMergeTags","returnMergeTags","preventDefault","currentModel","upMergeTags","changeActiveTag","downMergeTags","dir","inc","currentIndex","nextModel","userInfo","system","updateOpen","newKey","oldTag","oldKey","_previousAttributes","settingName","oldVal","re","RegExp","newVal","beforeRenderSetting","typeModel","settingGroupModel","typeSectionModel","fieldTypeCollection","fieldTypeSettingGroupCollection","fieldTypeSections","fieldTypeData","group","groupTmp","fieldType","alias","parentType","settingDefaults","getFieldType","getTypeCollection","getTypeSections","addStagedField","startDrag","stopDrag","getCurrentDraggableHelperClone","context","mainEl","style","setProperty","draggableHelperClone","stagedFields","num","getSavedFields","getStagingCollection","sortStagedFields","clearStagedFields","beforeCloseDrawer","now","tmpField","sortableEl","order","search","pos","addActiveClass","removeActiveClass","receiveStagedFields","overStagedFields","outStagedFields","startStagedFields","stopStagedFields","stagedFieldsEl","currentHelper","helperClone","filtered","filterCollection","toLowerCase","filter","found","receiveFieldsSortable","overfieldsSortable","outFieldsSortable","stopFieldsSortable","startFieldsSortable","updateFieldsSortable","addField","insertedAt","silent","fieldWidth","dragFieldID","dragModel","oldPos","objectDomain","updateFieldKey","tmpNum","removeField","getFieldCollection","getField","getTmpFieldID","deleteField","sortFields","updateFieldSetting","listOptionModel","addOption","columns","changeOption","deleteOption","maybeAddOption","getColumns","listOptionView","listEmptyView","listOptionCollection","optionCollection","handle","forcePlaceholderSize","renderHeaders","click .nf-add-new","clickAddOption","listCompositeView","updateOptionSortable","stopOptionSortable","startOptionSortable","triggerDataModel","calc","selected","new","newOrder","clearEditActive","fieldSettings","getSettingModel","findWhere","register","productFields","getProductFields","addMask","newFieldKey","updateLabel","keyUp","keyExists","changed","setError","slugify","testKey","typeCollection","settingGroupCollection","actionTypeData","actionType","link","getType","getInstalledActions","getAvailableActions","bind","actionModel","addAction","removeAction","getAction","getTmpID","deleteAction","actionSettings","dropActionType","type_slug","actionTypeModel","filterActionTypes","newInstalled","newAvailable","formSettingTypeData","settingType","settingsModel","getSettings","Drawer","DrawerConfig","DomainConfig","AppData","DrawerToggleSettingGroup","UpdateDB","FormData","PreviewLink","AppMenuButtons","AppTrackChanges","AppUndoChanges","AppPublishResponse","AppChangeDomain","Pushstate","Hotkeys","CleanState","CoreUndo","CloneModelDeep","DrawerSettingChildView","ChangeSettingDefault","Fieldset","ToggleSetting","ItemControls","MergeTags","ItemSettingFill","FieldTypes","FieldTypeDrag","FieldStagingDrag","SavedFields","StagedFieldsData","StagedFieldsSortable","DrawerFilterFieldTypes","MainContentFieldsSortable","FieldData","OptionRepeater","FieldsEditActive","FieldSettings","FieldQuantity","FieldShipping","FieldKey","ActionTypes","ActionData","ActionSettings","ActionEditActive","ActionAddTypes","ActionTypeDrag","ActionDroppable","ActionFilterTypes","SettingTypes","SettingData","FormSettings","SettingsEditActive","SettingsClickEdit","baseUrl","requireBaseUrl","Radio","ready","$","BuilderView","LoadControllers","NinjaForms","Application","onStart","ninjaForms"],"mappings":"AAAA,CAAA,WAUA,GAAAA,GAAAC,EAAAC,GACA,SAAAC,GAUA,QAAAC,GAAAC,EAAAC,GACA,MAAAC,GAAAC,KAAAH,EAAAC,GAWA,QAAAG,GAAAC,EAAAC,GACA,GAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAAZ,GAAAA,EAAAa,MAAA,KACAC,EAAAC,EAAAD,IACAE,EAAAF,GAAAA,EAAA,QAGA,IAAAf,GAAA,MAAAA,EAAAkB,OAAA,GAIA,GAAAjB,EAAA,CAgBA,IAfAD,EAAAA,EAAAc,MAAA,KACAR,EAAAN,EAAAmB,OAAA,EAGAH,EAAAI,cAAAC,EAAAC,KAAAtB,EAAAM,MACAN,EAAAM,GAAAN,EAAAM,GAAAiB,QAAAF,EAAA,KAOArB,EAAAa,EAAAW,MAAA,EAAAX,EAAAM,OAAA,GAAAM,OAAAzB,GAGAU,EAAA,EAAAA,EAAAV,EAAAmB,OAAAT,GAAA,EAEA,GADAE,EAAAZ,EAAAU,GACA,MAAAE,EACAZ,EAAA0B,OAAAhB,EAAA,GACAA,GAAA,MACA,IAAA,OAAAE,EAAA,CACA,GAAA,IAAAF,IAAA,OAAAV,EAAA,IAAA,OAAAA,EAAA,IAOA,KACAU,GAAA,IACAV,EAAA0B,OAAAhB,EAAA,EAAA,GACAA,GAAA,GAMAV,EAAAA,EAAA2B,KAAA,SACA,KAAA3B,EAAA4B,QAAA,QAGA5B,EAAAA,EAAA6B,UAAA,GAKA,KAAAhB,GAAAI,IAAAF,EAAA,CAGA,IAFAb,EAAAF,EAAAc,MAAA,KAEAJ,EAAAR,EAAAiB,OAAAT,EAAA,EAAAA,GAAA,EAAA,CAGA,GAFAP,EAAAD,EAAAsB,MAAA,EAAAd,GAAAiB,KAAA,KAEAd,EAGA,IAAAF,EAAAE,EAAAM,OAAAR,EAAA,EAAAA,GAAA,EAKA,GAJAP,EAAAW,EAAAF,EAAAW,MAAA,EAAAb,GAAAgB,KAAA,MAIAvB,IACAA,EAAAA,EAAAD,IACA,CAEAE,EAAAD,EACAG,EAAAG,CACA,OAMA,GAAAL,EACA,OAMAG,GAAAS,GAAAA,EAAAd,KACAK,EAAAS,EAAAd,GACAM,EAAAC,IAIAL,GAAAG,IACAH,EAAAG,EACAD,EAAAE,GAGAJ,IACAH,EAAAwB,OAAA,EAAAnB,EAAAF,GACAL,EAAAE,EAAAyB,KAAA,MAIA,MAAA3B,GAGA,QAAA8B,GAAAC,EAAAC,GACA,MAAA,YAIA,GAAAC,GAAAC,EAAApC,KAAAqC,UAAA,EAQA,OAHA,gBAAAF,GAAA,IAAA,IAAAA,EAAAd,QACAc,EAAAG,KAAA,MAEAC,EAAAC,MAAA7C,EAAAwC,EAAAR,QAAAM,EAAAC,MAIA,QAAAO,GAAAR,GACA,MAAA,UAAA/B,GACA,MAAAD,GAAAC,EAAA+B,IAIA,QAAAS,GAAAC,GACA,MAAA,UAAAC,GACAC,EAAAF,GAAAC,GAIA,QAAAE,GAAA5C,GACA,GAAAN,EAAAmD,EAAA7C,GAAA,CACA,GAAAiC,GAAAY,EAAA7C,SACA6C,GAAA7C,GACA8C,EAAA9C,IAAA,EACA+C,EAAAT,MAAA7C,EAAAwC,GAGA,IAAAvC,EAAAiD,EAAA3C,KAAAN,EAAAoD,EAAA9C,GACA,KAAA,IAAAgD,OAAA,MAAAhD,EAEA,OAAA2C,GAAA3C,GAMA,QAAAiD,GAAAjD,GACA,GAAAkD,GACAC,EAAAnD,EAAAA,EAAA4B,QAAA,KAAA,EAKA,OAJAuB,GAAA,KACAD,EAAAlD,EAAA6B,UAAA,EAAAsB,GACAnD,EAAAA,EAAA6B,UAAAsB,EAAA,EAAAnD,EAAAmB,UAEA+B,EAAAlD,GA8CA,QAAAoD,GAAApD,GACA,MAAA,YACA,MAAAgB,IAAAA,EAAAA,QAAAA,EAAAA,OAAAhB,QA1OA,GAAA+C,GAAAV,EAAAgB,EAAAC,EACAX,KACAE,KACA7B,KACA8B,KACAjD,EAAA0D,OAAAC,UAAAC,eACAvB,KAAAV,MACAH,EAAA,OA2LAgC,GAAA,SAAArD,EAAA+B,GACA,GAAA2B,GACAC,EAAAV,EAAAjD,GACAkD,EAAAS,EAAA,EA2BA,OAzBA3D,GAAA2D,EAAA,GAEAT,IACAA,EAAAnD,EAAAmD,EAAAnB,GACA2B,EAAAd,EAAAM,IAIAA,EAEAlD,EADA0D,GAAAA,EAAA3D,UACA2D,EAAA3D,UAAAC,EAAAuC,EAAAR,IAEAhC,EAAAC,EAAA+B,IAGA/B,EAAAD,EAAAC,EAAA+B,GACA4B,EAAAV,EAAAjD,GACAkD,EAAAS,EAAA,GACA3D,EAAA2D,EAAA,GACAT,IACAQ,EAAAd,EAAAM,MAMAU,EAAAV,EAAAA,EAAA,IAAAlD,EAAAA,EACA6D,EAAA7D,EACA8D,GAAAZ,EACAa,EAAAL,IAUAJ,GACA/D,QAAA,SAAAS,GACA,MAAA8B,GAAA9B,IAEAgE,QAAA,SAAAhE,GACA,GAAAiE,GAAAtB,EAAA3C,EACA,OAAA,mBAAAiE,GACAA,EAEAtB,EAAA3C,OAGAkE,OAAA,SAAAlE,GACA,OACAmE,GAAAnE,EACAoE,IAAA,GACAJ,QAAArB,EAAA3C,GACAgB,OAAAoC,EAAApD,MAKA+C,EAAA,SAAA/C,EAAAqE,EAAAC,EAAAvC,GACA,GAAAwC,GAAA9B,EAAA+B,EAAAzD,EAAAL,EAGA+D,EAFAxC,KACAyC,QAAAJ,EAOA,IAHAvC,EAAAA,GAAA/B,EAGA,cAAA0E,GAAA,aAAAA,EAAA,CAKA,IADAL,GAAAA,EAAAlD,QAAAmD,EAAAnD,QAAA,UAAA,UAAA,UAAAkD,EACA3D,EAAA,EAAAA,EAAA2D,EAAAlD,OAAAT,GAAA,EAKA,GAJAK,EAAAsC,EAAAgB,EAAA3D,GAAAqB,GACAU,EAAA1B,EAAA6C,EAGA,YAAAnB,EACAR,EAAAvB,GAAA4C,EAAA/D,QAAAS,OACA,IAAA,YAAAyC,EAEAR,EAAAvB,GAAA4C,EAAAU,QAAAhE,GACAyE,GAAA,MACA,IAAA,WAAAhC,EAEA8B,EAAAtC,EAAAvB,GAAA4C,EAAAY,OAAAlE,OACA,IAAAN,EAAAiD,EAAAF,IACA/C,EAAAmD,EAAAJ,IACA/C,EAAAoD,EAAAL,GACAR,EAAAvB,GAAAkC,EAAAH,OACA,CAAA,IAAA1B,EAAAgD,EAIA,KAAA,IAAAf,OAAAhD,EAAA,YAAAyC,EAHA1B,GAAAgD,EAAAY,KAAA5D,EAAA8C,EAAA/B,EAAAC,GAAA,GAAAS,EAAAC,OACAR,EAAAvB,GAAAiC,EAAAF,GAMA+B,EAAAF,EAAAA,EAAAhC,MAAAK,EAAA3C,GAAAiC,GAAA2C,OAEA5E,IAIAuE,GAAAA,EAAAP,UAAAvE,GACA8E,EAAAP,UAAArB,EAAA3C,GACA2C,EAAA3C,GAAAuE,EAAAP,QACAQ,IAAA/E,GAAAgF,IAEA9B,EAAA3C,GAAAwE,QAGAxE,KAGA2C,EAAA3C,GAAAsE,IAIAhF,EAAAC,EAAA8C,EAAA,SAAAgC,EAAAC,EAAAvC,EAAAC,EAAA6C,GACA,GAAA,gBAAAR,GACA,MAAAf,GAAAe,GAEAf,EAAAe,GAAAC,GAMA1B,EAAAS,EAAAgB,EAAAC,GAAAV,EACA,KAAAS,EAAA3C,OAAA,CAMA,GAJAV,EAAAqD,EACArD,EAAAqD,MACAhC,EAAArB,EAAAqD,KAAArD,EAAAsD,WAEAA,EACA,MAGAA,GAAA5C,QAGA2C,EAAAC,EACAA,EAAAvC,EACAA,EAAA,MAEAsC,EAAA5E,EA6BA,MAxBA6E,GAAAA,GAAA,aAIA,kBAAAvC,KACAA,EAAAC,EACAA,EAAA6C,GAIA7C,EACAe,EAAAtD,EAAA4E,EAAAC,EAAAvC,GAQA+C,WAAA,WACA/B,EAAAtD,EAAA4E,EAAAC,EAAAvC,IACA,GAGAM,GAOAA,EAAArB,OAAA,SAAA+D,GACA,MAAA1C,GAAA0C,IAMAzF,EAAA0F,SAAArC,EAEAnD,EAAA,SAAAQ,EAAAqE,EAAAC,GACA,GAAA,gBAAAtE,GACA,KAAA,IAAAgD,OAAA,4DAIAqB,GAAA3C,SAIA4C,EAAAD,EACAA,MAGA3E,EAAAiD,EAAA3C,IAAAN,EAAAmD,EAAA7C,KACA6C,EAAA7C,IAAAA,EAAAqE,EAAAC,KAIA9E,EAAAyF,KACAC,QAAA,MAIA1F,EAAA,gBAAA,cCvaAA,EAAA,wBAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,yBAEAC,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,uBAAAH,KAAAI,QAEAJ,KAAAK,MAAAC,GAAA,SAAAN,KAAAI,OAAAJ,OASAO,SAAA,WACAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,MAIAI,QACAC,UAAA,gBAYAC,aAAA,SAAAvC,GACA2B,EAAAC,QAAA,OAAAY,QAAA,aAAAxC,EAAAyB,KAAAK,QASAW,gBAAA,WACA,OAOAC,gBAAA,WACA,MAAAjB,MAAAkB,UACA,0BAAAlB,KAAAkB,UAAA,YAEA,IASAC,cAAA,WACA,GAAAC,GAAApB,KAAAoB,QACAC,EAAAnB,EAAAC,QAAA,OAAAmB,QAAA,oBAIA,OAHAD,GAAAE,IAAA,OAAAvB,KAAAvB,KACA2C,GAAA,WAEAA,GAQAI,UAAA,WACA,MAAA,IAAAxB,KAAAyB,IACAzB,KAAAyB,IAEA,KASAC,aAAA,WACA,MAAA,IAAA1B,KAAAyB,IACA,SAEA,SAUAE,eAAA,WACA,MAAA3B,MAAA4B,SACA,WAEA,OAQA,OAAAnC,KC1HA3F,EAAA,kBAAA,sBAAA,SAAA+H,GACA,GAAApC,GAAAC,WAAAoC,eAAAlC,QACAC,QAAA,MACAkC,UAAAF,EAQAG,OAAA,WACAxC,OAAAQ,KAAAiC,IAAAC,KAAA,WAAAxB,WAIA,OAAAjB,KChBA3F,EAAA,2BAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,OACAC,SAAA,oCAEAC,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,eAAAH,KAAAI,OAAAJ,MACAA,KAAAC,SAAAC,EAAAC,QAAA,OAAA,iBAAAH,KAAAI,OAAAJ,OASAgB,gBAAA,WACA,GAAAmB,GAAAnC,IACA,QAQAoC,cAAA,WAMA,MALAD,GAAAE,aACArC,KAAAqC,aAAA,gBAAAF,EAAAE,aAAA,iBAEArC,KAAAqC,aAAA,GAEAnC,EAAAC,QAAA,OAAAmB,QAAA,cAAA,WACAgB,EAAAxC,SAAAN,OAAA,uCAAA+C,OAAAvC,MAEAsC,EAAAxC,SAAAN,OAAA,sCAAA+C,OAAAvC,OAUAwC,cAAA,WACA,MAAAtC,GAAAC,QAAA,OAAAmB,QAAA,cAAA,SACA,WAEA,IASAmB,kBAAA,WACA,MAAAvC,GAAAC,QAAA,OAAAmB,QAAA,cAAA,SAGA,GAFAgB,EAAAxC,SAAAN,OAAA,oCAAA+C,OAAAvC,SAQAgC,OAAA,WACA,GAAAU,GAAAlD,OAAAQ,KAAAiC,IAAAC,KAAA,WACAlC,MAAAqC,aAAA7C,OAAAkD,GAAAC,YAAA,IAOA/B,QACAgC,iBAAA,eACAC,qBAAA,oBAWAC,aAAA,SAAAvE,GACA2B,EAAAC,QAAA,OAAAY,QAAA,gBAAAxC,IAWAwE,iBAAA,SAAAxE,GACA2B,EAAAC,QAAA,OAAAY,QAAA,oBAAAxC,KAKA,OAAAkB,KC7GA3F,EAAA,oBAAA,iBAAA,yBAAA,SAAAkJ,EAAAC,GACA,GAAAxD,GAAAC,WAAAwD,WAAAtD,QACAC,QAAA,MACAC,SAAA,sBAEAqD,SAEAC,KAAA,eAEAC,QAAA,mBASArB,OAAA,WAEA,GAAAsB,GAAApD,EAAAC,QAAA,OAAAmB,QAAA,uBAEAtB,MAAAoD,KAAAG,KAAA,GAAAP,IAAAQ,WAAAF,KACAtD,KAAAqD,QAAAE,KAAA,GAAAN,MAIA,OAAAxD,KC3BA3F,EAAA,yBAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,uBAGA,OAAAL,KCNA3F,EAAA,yBAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,6BAEAC,WAAA,WAEAC,KAAAK,MAAAC,GAAA,eAAAN,KAAAI,OAAAJ,OASAO,SAAA,WACAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,MASAQ,gBAAA,WAEA,OACAyC,YAAA,WACA,GAAAC,GAAAxD,EAAAC,QAAA,OAAAmB,QAAA,eACA,OAAAoC,GAAAnC,IAAA,YAAAA,IAAA,aAOA,OAAA9B,KCpCA3F,EAAA,2BAAA,mBAAA,sBAAA,uBAAA,SAAA6J,EAAAC,EAAAC,GAEA,GAAApE,GAAAC,WAAAwD,WAAAtD,QACAC,QAAA,MACAC,SAAA,kBAEAqD,SACAW,IAAA,iBACAC,UAAA,qBACAC,OAAA,sBAGAjE,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,uBAAAH,KAAAiE,kBAGAjC,OAAA,WACAhC,KAAA8D,IAAAP,KAAA,GAAAI,GAEA,IAAAD,GAAAxD,EAAAC,QAAA,OAAAmB,QAAA,gBACA4C,EAAAR,EAAAnC,IAAA,WACAvB,MAAA+D,UAAAR,KAAA,GAAAM,IAAAxD,MAAA6D,KAEAlE,KAAAiE,mBAGAA,gBAAA,WACA,GAAA5C,GAAAnB,EAAAC,QAAA,OAAAmB,QAAA,qBACA6C,EAAA9C,EAAAE,IAAA,oBAAAnH,KAAAiH,EACArB,MAAAgE,OAAAT,KAAAY,KAIA,OAAA1E,KAEA3F,EAAA,oBAAA,WC7CA,GAAA2F,GAAAC,WAAAwD,WAAAtD,QACAC,QAAA,MACAC,SAAA,gBAEAqD,SACAiB,OAAA,kBACAC,QAAA,oBAGAtE,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,uBAAAH,KAAAI,QACAF,EAAAC,QAAA,OAAAmE,MAAA,aAAAtE,KAAAuE,UAAAvE,OAKAgC,OAAA,WACAxC,OAAAQ,KAAAiC,IAAAuC,SAAAC,mBACAvE,EAAAC,QAAA,QAAAY,QAAA,aACAvB,OAAAQ,KAAAiC,IAAAuC,SAAAE,oBAGAnE,SAAA,WACA,GAAAc,GAAAnB,EAAAC,QAAA,OAAAmB,QAAA,qBAGAqD,EAAAtD,EAAAE,IAAA,sBAAAnH,KAAAiH,EACArB,MAAAqE,QAAAd,KAAAoB,GAEAzE,EAAAC,QAAA,QAAAY,QAAA,gBAGAwD,UAAA,WACA,MAAA/E,QAAAQ,KAAAiC,IAAAuC,WAKA,OAAA/E,KChCA3F,EAAA,iCAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,wBAGA,OAAAL,KCJA3F,EAAA,oCAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,iCAQAS,SAAA,WAEAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,KAEAN,EAAAC,QAAA,UAAAmE,MAAA,eAAAtE,KAAA4E,YAAA5E,MACAE,EAAAC,QAAA,UAAAmE,MAAA,cAAAtE,KAAA6E,WAAA7E,MACAE,EAAAC,QAAA,UAAAmE,MAAA,eAAAtE,KAAA8E,MAAA9E,OAGAY,QACAmE,mBAAA,oBACAC,mBAAA,eACAC,cAAA,YAWAC,aAAA,SAAA3G,GACA,GAAA4G,GAAAjF,EAAAC,QAAA,OAAAmB,QAAA,oBACApB,GAAAC,QAAA,UAAAgF,EAAA5D,IAAA,OAAAR,QAAA,gBAAAxC,EAAA6G,OAAApI,MAAAuB,IAUA8G,kBAAA,SAAA9G,GACA,IAAAA,EAAA+G,UACA/G,EAAAgH,WAAA,EACAvF,KAAAkF,aAAA3G,KAYAqG,YAAA,WACA,GAAAY,GAAAhG,OAAAQ,KAAAiC,IAAAC,KAAA,aACA,KAAA1C,OAAAiG,KAAAD,EAAAE,SACAF,EAAAE,IAAA,IACAF,EAAAzE,QAAA,SACAyE,EAAAG,UAUAd,WAAA,WACArF,OAAAQ,KAAAiC,IAAAC,KAAA,cAAA0D,QASAd,MAAA,WACA,MAAAtF,QAAAQ,KAAAiC,IAAAC,KAAA,eAGA2D,SAAA,WACA3F,EAAAC,QAAA,UAAAY,QAAA,oBAIA,OAAAtB,KClGA3F,EAAA,mCAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,iCAGA,OAAAL,KCPA3F,EAAA,oBAAA,iCAAA,iCAAA,SAAAgM,EAAAC,GAEA,GAAAtG,GAAAC,WAAAwD,WAAAtD,QACAE,SAAA,kBAEAqD,SACAiB,OAAA,oBACAC,QAAA,sBAGAtE,WAAA,WACAG,EAAAC,QAAA,OAAAmE,MAAA,eAAAtE,KAAA8E,MAAA9E,MACAE,EAAAC,QAAA,UAAAmE,MAAA,qBAAAtE,KAAAgG,YAAAhG,MACAE,EAAAC,QAAA,UAAAmE,MAAA,sBAAAtE,KAAAiG,aAAAjG,OAGAgC,OAAA,WACAxC,OAAAQ,KAAAiC,IAAAuC,SAAAC,oBAIAuB,YAAA,SAAAE,EAAAC,GACA,GAAAC,GAAAlG,EAAAC,QAAA,OAAAmB,QAAA,aAAA4E,GACAvB,EAAAyB,EAAA7E,IAAA,kBAAAnH,KAAAgM,EAAAD,GACAE,EAAAD,EAAA7E,IAAA,iBAAAnH,KAAAgM,EAAAD,EAEAnG,MAAAoE,OAAAb,KAAA8C,GACArG,KAAAqE,QAAAd,KAAAoB,IAIAsB,aAAA,WACAjG,KAAAoE,OAAAb,KAAA,GAAAwC,IACA/F,KAAAqE,QAAAd,KAAA,GAAAwC,KAGAjB,MAAA,WACA,MAAAtF,QAAAQ,KAAAiC,IAAAuC,UAGA5D,QACA0F,0BAAA,qBAGAC,kBAAA,WACArG,EAAAC,QAAA,OAAAY,QAAA,4BAKA,OAAAtB,KClDA3F,EAAA,mCAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,KAEAC,SAAA,2BAEA0G,gBAAA,WACAxG,KAAAK,MAAAoG,IAAA,gBAAAzG,KAAAI,SAGAL,WAAA,WACAC,KAAAK,MAAAC,GAAA,gBAAAN,KAAAI,OAAAJ,OAGAY,QACAC,UAAA,YAGA6F,SAAA,SAAAnI,GACA2B,EAAAC,QAAA,aAAAY,QAAA,iBAAAxC,EAAAyB,KAAAK,QAGAW,gBAAA,WACA,OACAG,cAAA,WACA,MAAAnB,MAAA2G,OACA,SADA,WAQA,OAAAlH,KCjCA3F,EAAA,qCAAA,iCAAA,SAAA8M,GACA,GAAAnH,GAAAC,WAAAmH,cAAAjH,QACAC,QAAA,MACAkC,UAAA6E,EACA9G,SAAA,8BAEAC,WAAA,WACAC,KAAAwD,WAAAxD,KAAAK,MAAAkB,IAAA,QACAvB,KAAAK,MAAAC,GAAA,SAAAN,KAAAI,OAAAJ,MACA,UAAAA,KAAAK,MAAAkB,IAAA,OAMAiF,gBAAA,WACA,GAAA,UAAAxG,KAAAK,MAAAkB,IAAA,MAAA,CACA,GAAAuF,GAAA5G,EAAAC,QAAA,UAAAmB,QAAA,iBACAwF,GAAAL,IAAA,MAAAzG,KAAA+G,aAAA/G,QAIAgH,WAAA,SAAAC,EAAAlF,GACAvC,OAAAyH,EAAAhF,IAAAC,KAAA,eAAAgF,OAAAnF,EAAAE,KAGA8E,aAAA,WACA,GAAAD,GAAA5G,EAAAC,QAAA,UAAAmB,QAAA,iBACAtB,MAAAK,MAAA8G,IAAA,OAAAL,KAIA,OAAArH,KChCA3F,EAAA,qCAAA,qCAAA,SAAAsN,GACA,GAAA3H,GAAAC,WAAAoC,eAAAlC,QACAC,QAAA,MACAC,SAAA,8BACAiC,UAAAqF,GAGA,OAAA3H,KCDA3F,EAAA,qBAAA,0BAAA,iBAAA,8BAAA,mBAAA,qCAAA,SAAAuM,EAAAgB,EAAAC,EAAAC,EAAAC,GACA,GAAA/H,GAAAC,WAAAwD,WAAAtD,QACAE,SAAA,mBACAmC,GAAA,cAEAkB,SACAiB,OAAA,aACA/G,KAAA,WACAoK,WAAA,kBACArB,OAAA,aACAsB,iBAAA,uBAGA3H,WAAA,WAEAC,KAAAI,QACA,IAAAuH,GAAAzH,EAAAC,QAAA,aAAAmB,QAAA,gBACAtB,MAAA0H,iBAAAnE,KAAA,GAAAiE,IAAAhE,WAAAmE,KAEA3H,KAAAoE,OAAAb,KAAA,GAAA8C,IAEArG,KAAA3C,KAAAkG,KAAA,GAAA8D,IAGArH,KAAAoG,OAAA7C,KAAA,GAAAgE,IAEArH,EAAAC,QAAA,OAAAmE,MAAA,gBAAAtE,KAAA4H,aAAA5H,OAGA4H,aAAA,WACA,MAAA5H,MAAAiC,IAIArB,QACAiH,wBAAA,aACAC,0BAAA,eACAC,yBAAA,eAWAC,WAAA,SAAAzJ,GACA2B,EAAAC,QAAA,OAAAY,QAAA,mBAAAxC,IASA0J,YAAA,WACA/H,EAAAC,QAAA,OAAAY,QAAA,sBAUAmH,aAAA,SAAA3J,GACA2B,EAAAC,QAAA,OAAAY,QAAA,aAAAxC,KAKA,OAAAkB,KCjFA3F,EAAA,4BAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,mBAAAH,KAAAoI,iBACApI,KAAAC,SAAAC,EAAAC,QAAA,OAAA,oBAAAH,KAAAiI,aACAjI,KAAAC,SAAAC,EAAAC,QAAA,OAAA,yBAAAH,KAAAqI,kBAGAnI,EAAAC,QAAA,OAAAmE,MAAA,cAAAtE,KAAAgI,WAAAhI,MACAE,EAAAC,QAAA,OAAAmE,MAAA,eAAAtE,KAAAiI,YAAAjI,MAMAE,EAAAC,QAAA,UAAAmE,MAAA,qBAAAtE,KAAAsI,mBAAAtI,MAGAE,EAAAC,QAAA,UAAAmE,MAAA,gBAAAtE,KAAAuI,aAAAvI,MAEAE,EAAAC,QAAA,UAAAmE,MAAA,eAAAtE,KAAAwI,YAAAxI,MAMAA,KAAAyI,mBAMAzI,KAAAC,SAAAC,EAAAC,QAAA,UAAA,iBAAAH,KAAA0I,gBAQAT,YAAA,WAEA,GAAA9C,GAAAjF,EAAAC,QAAA,OAAAmB,QAAA,oBACA,KAAA6D,GAAAnF,KAAA2I,oBACA,OAAA,CAIAzI,GAAAC,QAAA,UAAAgF,EAAA5D,IAAA,OAAAR,QAAA,sBACAb,EAAAC,QAAA,UAAAY,QAAA,sBAGAb,EAAAC,QAAA,UAAAmB,QAAA,sBAGA,IAAAsH,GAAA1I,EAAAC,QAAA,OAAAmB,QAAA,gBACA9B,QAAAoJ,GAAAC,SAAA,oBAAAC,YAAA,mBAGA,IAAAC,GAAA/I,KAAAsI,qBAGAU,EAAA9I,EAAAC,QAAA,OAAAmB,QAAA,eACA9B,QAAAwJ,GAAAC,KAAAC,MAAAH,GAGA,IAAA5G,GAAAnC,IAUAA,MAAAmJ,oBAAAC,YAAA,WACAL,GAAAvJ,OAAAwJ,GAAAC,IAAA,WACAI,cAAAlH,EAAAgH,qBACAjJ,EAAAC,QAAA,OAAAmB,QAAA,wBAAA,GACApB,EAAAC,QAAA,UAAAY,QAAA,YAEA,MASAqH,gBAAA,SAAA7J,GACA,GAAA2H,GAAA1G,OAAAjB,EAAA6G,QAAAe,KAAA,WACAnG,MAAAgI,WAAA9B,IAWA8B,WAAA,SAAA9B,EAAAC,GACA,GAAAnG,KAAA2I,oBACA,OAAA,CAWA,IAPAxC,EAAAA,MAOA,mBAAAA,GAAA9F,MAAA,CACA,GAAAgB,GAAAnB,EAAAC,QAAA,OAAAmB,QAAA,qBACAgI,EAAAjI,EAAAE,IAAA,KACArB,GAAAC,QAAAmJ,GAAAhI,QAAA,oBACA6E,EAAA9F,MAAA8G,IAAA,cAAA,GAIAjH,EAAAC,QAAA,UAAAmB,QAAA,qBAAA4E,EAAAC,EAGA,IAAAyC,GAAA1I,EAAAC,QAAA,OAAAmB,QAAA,gBACA9B,QAAAoJ,GAAAC,SAAA,oBAAAC,YAAA,mBAGA,IAAAE,GAAA9I,EAAAC,QAAA,OAAAmB,QAAA,eACA9B,QAAAwJ,GAAAC,KAAAC,MAAA,OAGA,IAAA/G,GAAAnC,IAWAA,MAAAuJ,mBAAAH,YAAA,WACA,OAAA5J,OAAAwJ,GAAAC,IAAA,WACAI,cAAAlH,EAAAoH,oBACApH,EAAAqH,cACAtJ,EAAAC,QAAA,OAAAmB,QAAA,uBAAA4E,GACAhG,EAAAC,QAAA,UAAAY,QAAA,YAEA,MAQAsH,iBAAA,WAEA,GAAAW,GAAA9I,EAAAC,QAAA,OAAAmB,QAAA,eAEA9B,QAAAwJ,GAAAS,YAAA,qBAQAD,YAAA,WAEA,GAAAhE,GAAAtF,EAAAC,QAAA,UAAAmB,QAAA,eAEA9B,QAAAgG,GAAAG,SAaA2C,mBAAA,WACA,GAAAM,GAAA1I,EAAAC,QAAA,OAAAmB,QAAA,iBACAoI,EAAAlK,OAAAoJ,GAAAe,QAAA,GACA,OAAA,IAAAD,EAAA,MASAf,kBAAA,WACA,MAAA,IAAA9K,OAAA+L,KAAA5J,KAAAyI,iBAAAhN,QACA,GAEA,GAWA8M,aAAA,SAAAsB,GACA7J,KAAAyI,gBAAAoB,IAAA,GAUArB,YAAA,SAAAqB,SACA7J,MAAAyI,gBAAAoB,IASAnB,cAAA,WACAW,cAAArJ,KAAAuJ,sBAIA,OAAApB,KAEArO,EAAA,0BAAA,kCAAA,SAAAgQ,GC9PA,GAAAzJ,GAAA0J,SAAAC,MAAApK,QACAqK,UACAC,cAAA,SAAA/D,GACA,MAAA,IAAA2D,GAAA3D,MAKA,OAAA9F,KCDAvG,EAAA,+BAAA,0BAAA,SAAAqQ,GACA,GAAA3G,GAAAuG,SAAAK,WAAAxK,QACAS,MAAA8J,GAEA,OAAA3G,KAEA1J,EAAA,qCAAA,WCbA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,+BAEAS,SAAA,WACAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,MAGAI,QACAyJ,2BAAA,qBAGAC,kBAAA,SAAArI,GACA/B,EAAAC,QAAA,mBAAAY,QAAA,0BAAAkB,EAAAjC,KAAAK,SAIA,OAAAZ,KAGA3F,EAAA,sCAAA,WCtBA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,sCAEAS,SAAA,WACAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,OAIA,OAAAf,KAEA3F,EAAA,yCAAA,kCAAA,oCAAA,SAAAyQ,EAAAC,GCbA,GAAA/K,GAAAC,WAAAoC,eAAAlC,QACAC,QAAA,MACAkC,UAAAwI,EACAE,UAAAD,EAEAzK,WAAA,WACAG,EAAAC,QAAA,OAAAmE,MAAA,qBAAAtE,KAAA0K,kBAAA1K,OAGAgC,OAAA,WAEAhC,KAAAQ,IAAAhB,OAAAQ,KAAAiC,IAAAuC,SACAhF,OAAAQ,KAAAQ,KAAA0B,KAAA,cAAAxB,SACAV,KAAAW,WAAAX,KAAAQ,IAIAhB,QAAAQ,KAAAiC,IAAA0I,UACAC,YAAA,wCACAC,OAAA,QACAC,UAAA,UACAC,KAAA,SAAAxM,EAAAyM,GACA9K,EAAAC,QAAA,mBAAAY,QAAA,oBAAAxC,EAAAyM,IAGAC,IAAA,SAAA1M,EAAAyM,GACA9K,EAAAC,QAAA,mBAAAY,QAAA,mBAAAiK,IAGAE,QAAA,SAAA3M,EAAAyM,GACA9K,EAAAC,QAAA,mBAAAY,QAAA,uBAAAiK,IAGAG,OAAA,SAAA5M,EAAAyM,GACA9K,EAAAC,QAAA,UAAAmB,QAAA,iBAGA8J,MAAA,SAAA7M,EAAAyM,GACA9K,EAAAC,QAAA,mBAAAY,QAAA,qBAAAiK,IAIAK,KAAA,SAAA9M,EAAAyM,GACA9K,EAAAC,QAAA,mBAAAY,QAAA,oBAAAiK,MAIAxL,OAAAQ,KAAAiC,IAAAuC,SAAA8G,WACAC,QAAA,GACAC,kBAAA,sBAEAX,OAAA,SAAAtM,GACA,GAAAoL,GAAAnK,OAAAjB,EAAA6G,QAAAZ,SAAAmF,QACA8B,EAAAjM,OAAAjB,EAAA6G,QAAAZ,SAAAiH,SACAC,EAAAlM,OAAAjB,EAAA6G,QAAAZ,SAAAmH,QACAC,EAAAjC,EAAA,EACAkC,EAAAJ,EAAA,CAGA,OAFAjM,QAAAQ,MAAAsL,UAAA,SAAA,YAAAO,IAAAA,EAAAD,KAAAA,IAEAF,GAEAN,MAAA,SAAA7M,EAAAyM,GACA9K,EAAAC,QAAA,mBAAAY,QAAA,yBAAAf,KAAAgL,IAEAK,KAAA,SAAA9M,EAAAyM,GACA9K,EAAAC,QAAA,mBAAAY,QAAA,wBAAAf,KAAAgL,OAKAN,kBAAA,WACA,MAAAlL,QAAAQ,KAAAiC,MAKA,OAAAxC,KCrEA3F,EAAA,gCAAA,WACA,GAAAuG,GAAA0J,SAAAC,MAAApK,UAGA,OAAAS,KCJAvG,EAAA,mCAAA,8BAAA,SAAAgS,GACA,GAAAtI,GAAAuG,SAAAK,WAAAxK,QACAS,MAAAyL,EACAC,WAAA,SAEA,OAAAvI,KAEA1J,EAAA,qCAAA,WCdA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,qCAEAC,WAAA,WACAuC,EAAA0J,QAAAhM,KAAA,WAGAO,SAAA,WACAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,KAEAR,KAAAiM,UAAA,CACA,IAAA9J,GAAAnC,IACAR,QAAAQ,KAAAiC,IAAAC,KAAA,oBAAAoJ,WACAC,QAAA,GACAT,UAAA,YACAoB,QAAA,EACAV,kBAAA,2BAEAX,OAAA,SAAAtM,GACA,GAAAoL,GAAAnK,OAAAjB,EAAA6G,QAAAZ,SAAAmF,QACA8B,EAAAjM,OAAAjB,EAAA6G,QAAAZ,SAAAiH,SACAC,EAAAlM,OAAAjB,EAAA6G,QAAAZ,SAAAmH,QACAC,EAAAjC,EAAA,EACAkC,EAAAJ,EAAA,CAGA,OAFAjM,QAAAQ,MAAAsL,UAAA,SAAA,YAAAO,IAAAA,EAAAD,KAAAA,IAEAF,GAGAN,MAAA,SAAA7M,EAAAyM,GACA7I,EAAA8J,UAAA,EACA/L,EAAAC,QAAA,mBAAAY,QAAA,iBAAAf,KAAAgL,IAGAK,KAAA,SAAA9M,EAAAyM,GACA7I,EAAA8J,UAAA,EACA/L,EAAAC,QAAA,mBAAAY,QAAA,gBAAAf,KAAAgL,MAGAtG,mBAEAlF,OAAAQ,KAAAiC,IAAAC,KAAA,YAAAyD,MAAA,WACAnG,OAAAQ,MAAA6I,SAAA,YACAjD,KAAA,WACApG,OAAAQ,MAAA8I,YAAA,aAIAlI,QACAuL,iBAAA,iBACAC,mBAAA,uBAGAC,eAAA,SAAA9N,GACAyB,KAAAiM,UACA/L,EAAAC,QAAA,UAAAY,QAAA,kBAAAxC,IAIA+N,oBAAA,SAAA/N,GACA,IAAAA,EAAA+G,UACAtF,KAAAqM,eAAA9N,GACA2B,EAAAC,QAAA,UAAAmB,QAAA,kBAIAN,gBAAA,WACA,OACAuL,iBAAA,WACA,GAAAhK,GAAA,GACAJ,EAAAnC,IAMA,OALAsC,GAAAkK,KAAAxM,KAAAyM,WAAA,SAAAhO,GACA,GAAAiO,GAAAxM,EAAAC,QAAA,UAAAmB,QAAA,WAAA7C,GACAkO,EAAAD,EAAAnL,IAAA,WACAgB,IAAAD,EAAAxC,SAAAN,OAAA,qCAAA+C,QAAA9D,GAAAA,EAAAkO,SAAAA,EAAAD,KAAAA,EAAAE,WAAAzK,EAAA0K,iBAEAtK,GAGAsK,aAAA,WACA,MAAA7M,MAAA0M,KAAAnL,IAAA,cACA,WAEA,OAOA,OAAA9B,KAEA3F,EAAA,6CAAA,mCAAA,SAAAgT,GC/FA,GAAArN,GAAAC,WAAAoC,eAAAlC,QACAC,QAAA,MACAkC,UAAA+K,EAEA9K,OAAA,WACAxC,OAAAQ,KAAAiC,IAAAC,KAAA,gBAAAxB,WAIA,OAAAjB,KAEA3F,EAAA,gCAAA,wCAAA,kCAAA,6CAAA,SAAAiT,EAAAC,EAAAC,GCVA,GAAAxN,GAAAC,WAAAwD,WAAAtD,QACAE,SAAA,oCAEAqD,SACA+J,QAAA,mCACAC,QAAA,qBACAC,UAAA,wBAGArN,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,UAAA,oBAAAH,KAAAqN,kBACArN,KAAAC,SAAAC,EAAAC,QAAA,UAAA,eAAAH,KAAAsN,uBAEAtN,KAAAuN,gBAAArN,EAAAC,QAAA,UAAAmB,QAAA,mBACAtB,KAAAwN,kBAAAxN,KAAAuN,gBAEAvN,KAAAyN,2BAAAvN,EAAAC,QAAA,UAAAmB,QAAA,oBACAtB,KAAA0N,oBAAA1N,KAAAyN,4BAIAzL,OAAA,WACA,GAAA2L,GAAAzN,EAAAC,QAAA,UAAAmB,QAAA,cACAtB,MAAAkN,QAAA3J,KAAA,GAAAwJ,IAAAvJ,WAAAmK,KAEA3N,KAAAmN,QAAA5J,KAAA,GAAA0J,IAAAzJ,WAAAxD,KAAAwN,qBACAxN,KAAAoN,UAAA7J,KAAA,GAAA0J,IAAAzJ,WAAAxD,KAAA0N,wBAGA5I,MAAA,WACA,MAAAtF,QAAAQ,KAAAiC,IAAAuC,UAGA6I,iBAAA,SAAAO,GACA5N,KAAAmN,QAAAU,QACA7N,KAAAoN,UAAAS,QACA7N,KAAA4N,0BAAAA,EACA5N,KAAAmN,QAAA5J,KAAA,GAAA0J,IAAAzJ,WAAAxD,KAAA4N,8BAGAN,sBAAA,WACAtN,KAAAmN,QAAA5J,KAAA,GAAA0J,IAAAzJ,WAAAxD,KAAAuN,mBACAvN,KAAAoN,UAAA7J,KAAA,GAAA0J,IAAAzJ,WAAAxD,KAAAyN,gCAKA,OAAAhO,KAEA3F,EAAA,4CAAA,WClDA,GAAA2F,GAAAC,WAAAoC,eAAAlC,QACAC,QAAA,MAEAE,WAAA,SAAAoG,GACAnG,KAAA8N,kBAAAC,UAAA5H,EAAA4H,YAGAC,aAAA,SAAA3N,GACA,MAAAH,GAAAC,QAAA,OAAAmB,QAAA,uBAAAjB,KAKA,OAAAZ,KAEA3F,EAAA,qCAAA,0CAAA,SAAAmU,GCfA,GAAAxO,GAAAC,WAAAwD,WAAAtD,QACAC,QAAA,MACAC,SAAA,mDAEAqD,SACA+K,SAAA,sBAGAnO,WAAA,SAAAoG,GACAnG,KAAAK,MAAAC,GAAA,SAAAN,KAAAI,OAAAJ,MACAA,KAAA+N,UAAA5H,EAAA4H,WAGAvH,gBAAA,WACAxG,KAAAK,MAAAoG,IAAA,SAAAzG,KAAAI,SAGAG,SAAA,WACAP,KAAAK,MAAAkB,IAAA,WACAvB,KAAAkO,SAAA3K,KAAA,GAAA0K,IAAAzK,WAAAxD,KAAAK,MAAAkB,IAAA,YAAAwM,UAAA/N,KAAA+N,aAEA/N,KAAAkO,SAAAC,QAEAjO,EAAAC,QAAA,UAAAY,QAAA,sBAAAf,OAGAY,QACAwN,gBAAA,oBAGAC,iBAAA,SAAA9P,GACA2B,EAAAC,QAAA,UAAAY,QAAA,2BAAAxC,EAAAyB,KAAAK,QAGAW,gBAAA,WACA,OACAsN,YAAA,WACA,MAAA,IAAAtO,KAAAuO,MACAjM,EAAAxC,SAAAN,OAAA,oDAAA+C,OAAAvC,MAEA,IAIAwO,eAAA,WACA,MAAAxO,MAAAyO,QACA,OAEA,YAOA,OAAAhP,KAEA3F,EAAA,+CAAA,qCAAA,SAAA4U,GCzDA,GAAAjP,GAAAC,WAAAoC,eAAAlC,QACAC,QAAA,MACAkC,UAAA2M,EAEA3O,WAAA,SAAAoG,GACAnG,KAAA8N,kBAAAC,UAAA5H,EAAA4H,aAIA,OAAAtO,KAEA3F,EAAA,iCAAA,+CAAA,SAAA6U,GCXA,GAAAlP,GAAAC,WAAAwD,WAAAtD,QACAC,QAAA,MACAC,SAAA,wCAEAqD,SACAyL,cAAA,uBAGA7O,WAAA,SAAAoG,GACAnG,KAAA+N,UAAA5H,EAAA9F,MACAL,KAAA6O,gBAAA1I,EAAA0I,iBAGAtO,SAAA,WACAP,KAAA4O,cAAArL,KAAA,GAAAoL,IAAAnL,WAAAxD,KAAA6O,gBAAAd,UAAA/N,KAAA+N,cAGA/M,gBAAA,WACA,OACA8N,iBAAA,WACA,MAAA,mBAAA9O,MAAA0M,KACApK,EAAAxC,SAAAN,OAAA,+CAAA+C,OAAAvC,MAEA,IAIA+O,mBAAA,WACA,GAAA1N,GAAAnB,EAAAC,QAAA,OAAAmB,QAAA,qBACA0N,EAAA3N,EAAAE,IAAA,MACAmL,EAAAxM,EAAAC,QAAA6O,GAAA1N,QAAA,WAAAtB,KAAA0M,KACA,OAAAA,GAAAnL,IAAA,gBAMA,OAAA9B,KC5BA3F,EAAA,qCAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,qCAEAS,SAAA,WAOA,GANAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,KAEAhB,OAAAQ,KAAAiC,IAAAyC,mBAEA,aAAA1E,KAAAK,MAAAkB,IAAA,WAAA,CACA,GAAAY,GAAAnC,IACAR,QAAAQ,KAAAiC,IAAAqJ,WACAC,QAAA,GACAT,UAAA,YACAoB,QAAA,EACArB,OAAA,QAEAO,MAAA,SAAA7M,EAAAyM,GACA7I,EAAA8J,UAAA,EACA/L,EAAAC,QAAA,oBAAAY,QAAA,iBAAAf,KAAAgL,IAGAK,KAAA,SAAA9M,EAAAyM,GACA7I,EAAA8J,UAAA,EACA/L,EAAAC,QAAA,oBAAAY,QAAA,gBAAAf,KAAAgL,QAQApK,QACAuL,iBAAA,kBAGA8C,eAAA,SAAA1Q,GACAyB,KAAAiM,WACA,aAAAjM,KAAAK,MAAAkB,IAAA,WACArB,EAAAC,QAAA,WAAAY,QAAA,kBAAAf,KAAAK,OAEA6O,OAAAC,KAAAnP,KAAAK,MAAAkB,IAAA,QAAA,YAKAP,gBAAA,WACA,OACAG,cAAA,WACA,GAAAC,GAAA,SAQA,OAPA,IAAA5B,OAAAiG,KAAAzF,KAAAoP,SACAhO,GAAA,eAGA,aAAApB,KAAAqP,UACAjO,GAAA,mBAEAA,GAGAkO,YAAA,WACA,MAAA,IAAA9P,OAAAiG,KAAAzF,KAAAoP,OACA,gCAAApP,KAAAoP,MAAA,MAEA,OAOA,OAAA3P,KAEA3F,EAAA,uCAAA,mCAAA,SAAAyV,GCrFA,GAAA9P,GAAAC,WAAAmH,cAAAjH,QACAE,SAAA,sCACAiC,UAAAwN,EAEAvO,gBAAA,WACA,GAAAmB,GAAAnC,IACA,QACAwP,eAAA,WACA,MAAArN,GAAAqB,WAAAmJ,UAGAxL,cAAA,WACA,MAAAgB,GAAAqB,WAAAiM,QAKAzI,WAAA,SAAAC,EAAAlF,GACAvC,OAAAyH,EAAAhF,IAAAC,KAAA,iBAAAgF,OAAAnF,EAAAE,MAIA,OAAAxC,KCbA3F,EAAA,kCAAA,uCAAA,SAAA4V,GAEA,GAAAjQ,GAAAC,WAAAwD,WAAAtD,QACAE,SAAA,qCAEAqD,SACAgK,QAAA,qBACAC,UAAA,wBAGArN,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,UAAA,qBAAAH,KAAA2P,mBACA3P,KAAAC,SAAAC,EAAAC,QAAA,UAAA,eAAAH,KAAA4P,wBAEA5P,KAAA6P,iBAAA3P,EAAAC,QAAA,WAAAmB,QAAA,wBACAtB,KAAAwN,kBAAAxN,KAAA6P,iBAEA7P,KAAA8P,iBAAA5P,EAAAC,QAAA,WAAAmB,QAAA,wBACAtB,KAAA0N,oBAAA1N,KAAA8P,kBAGA9N,OAAA,WACAhC,KAAAmN,QAAA5J,KAAA,GAAAmM,IAAAlM,WAAAxD,KAAAwN,qBACAxN,KAAAoN,UAAA7J,KAAA,GAAAmM,IAAAlM,WAAAxD,KAAA0N,wBAGA5I,MAAA,WACA,MAAAtF,QAAAQ,KAAAiC,IAAAuC,UAGAmL,kBAAA,SAAAI,EAAAC,GACAhQ,KAAAmN,QAAAU,QACA7N,KAAAoN,UAAAS,QACA7N,KAAAmN,QAAA5J,KAAA,GAAAmM,IAAAlM,WAAAuM,KACA/P,KAAAoN,UAAA7J,KAAA,GAAAmM,IAAAlM,WAAAwM,MAIAJ,uBAAA,WACA5P,KAAAmN,QAAA5J,KAAA,GAAAmM,IAAAlM,WAAAxD,KAAA6P,oBACA7P,KAAAoN,UAAA7J,KAAA,GAAAmM,IAAAlM,WAAAxD,KAAA8P,sBAKA,OAAArQ,KAEA3F,EAAA,4CAAA,WCxDA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,8CAGA,OAAAL,KCEA3F,EAAA,6CAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,4CAEAC,WAAA,WACAC,KAAAK,MAAAC,GAAA,kBAAAN,KAAAI,OAAAJ,OAGAwG,gBAAA,WACAxG,KAAAK,MAAAoG,IAAA,kBAAAzG,KAAAI,SASAG,SAAA,WACAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,MAGAI,QACAqP,oBAAA,cAGAC,WAAA,SAAA3R,GACA2B,EAAAC,QAAA,UAAAY,QAAA,mBAAAf,KAAAK,SAIA,OAAAZ,KClCA3F,EAAA,uCAAA,2CAAA,SAAAqW,GACA,GAAA1Q,GAAAC,WAAAoC,eAAAlC,QACAC,QAAA,QACAuQ,UAAA,aACArO,UAAAoO,GAGA,OAAA1Q,KCPA3F,EAAA,wCAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,sCAEAc,QACAyP,qBAAA,oBAGAC,iBAAA,SAAA/R,GACA2B,EAAAC,QAAA,UAAAY,QAAA,uBAIA,OAAAtB,KCZA3F,EAAA,gCACA,8BACA,+BACA,gCACA,iCACA,yCACA,sCACA,sCACA,SACAyW,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,GAAA1I,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAwD,WAAA,GAAA+M,KAEA9R,GAAA,WAEAqS,eAAA,SAAA3K,GACA,MAAA,IAAAqK,GAAArK,MAIA1H,GAAA,YAEAqS,eAAA,SAAA3K,GACA,MAAA,IAAAuK,GAAAvK,MAIA1H,GAAA,eAEAqS,eAAA,SAAA3K,GACA,MAAA,IAAAsK,GAAAtK,MAIA1H,GAAA,mBAEAqS,eAAA,SAAA3K,GACA,MAAA,IAAAwK,GAAAxK,MAIA1H,GAAA,cAGAyL,cAAA,SAAA/D,GACA,MAAA,IAAA0K,GAAA1K,IAGA2K,eAAA,SAAA3K,GACA,MAAA,IAAAyK,GAAAzK,OAMAjG,EAAAC,QAAA,OAAAmE,MAAA,uBAAAtE,KAAA+Q,oBAAA/Q,MAEAE,EAAAC,QAAA,OAAAmE,MAAA,aAAAtE,KAAAgR,UAAAhR,OAGA+Q,oBAAA,WACA,MAAA/Q,MAAAwD,YAGAwN,UAAA,SAAAvS,GACA,MAAAuB,MAAAwD,WAAAjC,IAAA9C,KAKA,OAAA0J,KCjFArO,EAAA,4BAAA,WACA,GAAAuG,GAAA0J,SAAAC,MAAApK,QACAqK,UACA/I,UAAA,GACAE,QAAA,GACAuF,QAAA,EACAlF,IAAA,GACAwP,SAAA,EACArP,UAAA,IAIA,OAAAvB,KCZAvG,EAAA,+BAAA,0BAAA,SAAAoX,GACA,GAAA1N,GAAAuG,SAAAK,WAAAxK,QACAS,MAAA6Q,GAEA,OAAA1N,KAEA1J,EAAA,6BAAA,WCbA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,8BAEAC,WAAA,WACA,GAAA+G,GAAA5G,EAAAC,QAAA,UAAAmB,QAAA,iBACAtB,MAAAC,SAAA6G,EAAA,MAAA9G,KAAAI,QACAJ,KAAAC,SAAA6G,EAAA,SAAA9G,KAAAI,SAGAG,SAAA,WACA,GAAAuG,GAAA5G,EAAAC,QAAA,UAAAmB,QAAA,iBACA,IAAAwF,EAAAqK,OAAA1V,OACA+D,OAAAQ,KAAAiC,IAAAmP,OAEA5R,OAAAQ,KAAAiC,IAAAsB,SAKA,OAAA9D,KAEA3F,EAAA,4BAAA,WCtBA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,8BAGA,OAAAL,KCEA3F,EAAA,4BAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,yBAEAC,WAAA,aAWAQ,SAAA,WAKAP,KAAAqB,cAAAnB,EAAAC,QAAA,OAAAmB,QAAA,sBAGAV,QACAyQ,0BAAA,YACAC,mBAAA,cACAC,sBAAA,uBAGAC,UAAA,SAAAjT,GACA2B,EAAAC,QAAA,OAAAY,QAAA,aAAAxC,EAAAyB,KAAAK,QAGAoR,YAAA,SAAAlT,GACA2B,EAAAC,QAAA,OAAAY,QAAA,eAAAxC,EAAAyB,KAAAK,QAGAqR,oBAAA,SAAAnT,GACA2B,EAAAC,QAAA,OAAAY,QAAA,kBAAAxC,EAAAyB,KAAAK,SAKA,OAAAZ,KAEA3F,EAAA,0BAAA,0BAAA,SAAA6X,GCrDA,GAAAlS,GAAAC,WAAAwD,WAAAtD,QACAC,QAAA,MACAC,SAAA,8BAEAqD,SACAyO,aAAA,qBAGA7R,WAAA,WACAC,KAAAK,MAAAC,GAAA,oBAAAN,KAAAI,OAAAJ,MACAA,KAAAK,MAAAC,GAAA,eAAAN,KAAAI,OAAAJ,MACAA,KAAAK,MAAAC,GAAA,kBAAAN,KAAAI,OAAAJ,OAGAwG,gBAAA,WACAxG,KAAAK,MAAAoG,IAAA,oBAAAzG,KAAAI,QACAJ,KAAAK,MAAAoG,IAAA,eAAAzG,KAAAI,QACAJ,KAAAK,MAAAoG,IAAA,kBAAAzG,KAAAI,SAGAG,SAAA,WACAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,KAEAR,KAAA4R,aAAArO,KAAA,GAAAoO,IAAAtR,MAAAL,KAAAK,UAGAW,gBAAA,WACA,OACAG,cAAA,WACA,GAAAC,GAAA,eAIA,OAHApB,MAAA6R,aACAzQ,GAAA,WAEAA,GAEA0Q,eAAA,WACA,MAAA,IAAA9R,KAAA+R,SACA,kCAEA,IAGAC,WAAA,WACA,MAAAxS,QAAAyS,UAAAjS,KAAAvB,IACA,SAAAuB,KAAAvB,GAEAuB,KAAAvB,MAMAmC,QACAsR,MAAA,kBAGAC,eAAA,SAAA5T,GACAiB,OAAAjB,EAAA6G,QAAAZ,SAAA4N,SAAA,uBACAlS,EAAAC,QAAA,OAAAY,QAAA,aAAAxC,EAAAyB,KAAAK,SAMA,OAAAZ,KAEA3F,EAAA,mCAAA,WCpEA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,qCAEA0G,gBAAA,WACAhH,OAAAQ,KAAAiC,IAAAuC,SAAAsE,YAAA,6BAAAuJ,UAAA,YAGA9R,SAAA,WACAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,MAGAwB,OAAA,WACAxC,OAAAQ,KAAAiC,IAAAuC,SAAA4N,SAAA,gBACA5S,OAAAQ,KAAAiC,IAAAuC,SAAAmG,SAAA,WAEAnL,OAAAQ,KAAAiC,IAAAuC,SAAAqE,SAAA,6BACArJ,OAAAQ,KAAAiC,IAAAuC,SAAA6N,WACAC,OAAA,SAAAhH,GACA,MAAA9L,QAAA8L,GAAA8G,SAAA,aAAA5S,OAAA8L,GAAA8G,SAAA,yBACA,EADA,QAIAG,WAAA,qBACAzH,UAAA;A9C1BA,A8C2BAC,KAAA,SAAAxM,EAAAyM,GACAA,EAAAwH,KAAAxH,EAAAM,UACApL,EAAAC,QAAA,OAAAmB,QAAA,sBAAA0J,IAEAC,IAAA,SAAA1M,EAAAyM,GACAA,EAAAwH,KAAAxH,EAAAM,UACApL,EAAAC,QAAA,OAAAmB,QAAA,qBAAA0J,IAEAyH,KAAA,SAAAlU,EAAAyM,GACAA,EAAAwH,KAAAxH,EAAAM,UACApL,EAAAC,QAAA,OAAAmB,QAAA,yBAAA0J,EACA,IAAAlE,GAAA5G,EAAAC,QAAA,UAAAmB,QAAA,iBACAwF,GAAA/F,QAAA,QAAA+F,QAMA,OAAArH,KAEA3F,EAAA,2CAAA,yBAAA,iCAAA,SAAA4Y,EAAAC,GC/CA,GAAAlT,GAAAC,WAAAoC,eAAAlC,QACAC,QAAA,MACAkC,UAAA2Q,EACAjI,UAAAkI,EACAC,eAAA,EAEA7S,WAAA,WACAG,EAAAC,QAAA,UAAAmE,MAAA,iBAAAtE,KAAA6S,cAAA7S,OAGAO,SAAA,WACA,GAAAP,KAAAwD,WAAA2N,OAAA1V,OAAA,EAAA,CACA+D,OAAAQ,KAAAiC,IAAA4G,SAAA,2BAAAA,SAAA,qBAEArJ,QAAAQ,KAAAiC,IAAA0I,UACAmI,YAAA,WACAjI,OAAA,QACAkI,OAAA,oBACAnI,YAAA,iCACAW,QAAA,IACAT,UAAA,YAEAI,QAAA,SAAA3M,EAAAyM,GACA9K,EAAAC,QAAA,OAAAmB,QAAA,yBAAA0J,IAGAD,KAAA,SAAAxM,EAAAyM,GACA9K,EAAAC,QAAA,OAAAmB,QAAA,sBAAA0J,IAGAC,IAAA,SAAA1M,EAAAyM,GACA9K,EAAAC,QAAA,OAAAmB,QAAA,qBAAA0J,IAGAI,MAAA,SAAA7M,EAAAyM,GACA9K,EAAAC,QAAA,OAAAmB,QAAA,uBAAA0J,IAGAG,OAAA,SAAA5M,EAAAyM,GACA9K,EAAAC,QAAA,OAAAmB,QAAA,wBAAA0J,IAGAK,KAAA,SAAA9M,EAAAyM,GACA9K,EAAAC,QAAA,OAAAmB,QAAA,sBAAA0J,QAMA6H,cAAA,WACA,MAAA7S,MAAAiC,KAIA,OAAAxC,KC7CA3F,EAAA,8BAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,+BAEAC,WAAA,WACA,GAAAiT,GAAA9S,EAAAC,QAAA,WAAAmB,QAAA,iBACAtB,MAAAC,SAAA+S,EAAA,MAAAhT,KAAAI,QACAJ,KAAAC,SAAA+S,EAAA,SAAAhT,KAAAI,SAGAG,SAAA,WACA,GAAAyS,GAAA9S,EAAAC,QAAA,WAAAmB,QAAA,iBACA,IAAA0R,EAAA7B,OAAA1V,OACA+D,OAAAQ,KAAAiC,IAAAmP,OAEA5R,OAAAQ,KAAAiC,IAAAsB,SAKA,OAAA9D,KCrBA3F,EAAA,6BAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,+BAGA,OAAAL,KCNA3F,EAAA,4BAAA,0BAAA,SAAA6X,GACA,GAAAlS,GAAAC,WAAAwD,WAAAtD,QACAC,QAAA,KACAC,SAAA,uBAEAqD,SACAyO,aAAA,qBAGA7R,WAAA,WACAC,KAAAK,MAAAC,GAAA,SAAAN,KAAAI,OAAAJ,OAGAwG,gBAAA,WACAxG,KAAAK,MAAAoG,IAAA,SAAAzG,KAAAI,SAGAG,SAAA,WACAP,KAAAK,MAAAkB,IAAA,cACA/B,OAAAQ,KAAAiC,IAAA4G,SAAA,UAEArJ,OAAAQ,KAAAiC,IAAA6G,YAAA,UAGA,GAAA9I,KAAAK,MAAAkB,IAAA,UACA/B,OAAAQ,KAAAiC,IAAA4G,SAAA,eAEArJ,OAAAQ,KAAAiC,IAAA6G,YAAA,eAGA9I,KAAA4R,aAAArO,KAAA,GAAAoO,IAAAtR,MAAAL,KAAAK,UAGAO,QACAqS,eAAA,eACAf,MAAA,kBAGAC,eAAA,SAAA5T,GACA,MAAAiB,OAAAjB,EAAA6G,QAAAZ,SAAAtK,KAAA,YACAgG,EAAAC,QAAA,OAAAY,QAAA,aAAAxC,EAAAyB,KAAAK,QAIA6S,aAAA,SAAA3U,GACA,GAAA4U,GAAAjT,EAAAC,QAAA,WAAAmB,QAAA,mBAAA,SACApB,GAAAC,QAAA,OAAAmB,QAAA,iBAAA/C,EAAA4U,EAAAnT,KAAAK,OACAH,EAAAC,QAAA,OAAAmB,QAAA,cAGAN,gBAAA,WACA,OACAoS,aAAA,WACA,GAAAC,GAAArT,KAAAuO,KACAvO,MAAAuO,MAAA,GACAvO,KAAAhD,MAAAgD,KAAA2G,OACA3G,KAAA1F,KAAA0F,KAAAvB,GAAA,SACA,IAAA8D,GAAAD,EAAAxC,SAAAN,OAAA,gCAAA+C,OAAAvC,KAEA,OADAA,MAAAuO,MAAA8E,EACA9Q,GAGAwM,mBAAA,WACA,GAAArC,GAAAxM,EAAAC,QAAA,WAAAmB,QAAA,WAAAtB,KAAA0M,KACA,OAAAA,GAAAnL,IAAA,aAGA+R,cAAA,WACA,MAAAtT,MAAAuT,KACA,qHAAAvT,KAAAuT,KAAA,SAEA,IAIAC,gBAAA,WACA,MAAAxT,MAAAyT,eACA,iEAEA,OAOA,OAAAhU,KAEA3F,EAAA,oCAAA,WCjGA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,sCAEA0G,gBAAA,WACAhH,OAAAQ,KAAAiC,IAAAuC,SAAAA,SAAAsE,YAAA,qBAIAvI,SAAA,WACAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,MAGAwB,OAAA,WACAxC,OAAAQ,KAAAiC,IAAAuC,SAAAA,SAAAqE,SAAA,sBA+BA,OAAApJ,KCtCA3F,EAAA,6BAAA,2BAAA,kCAAA,SAAA4Z,EAAAjJ,GACA,GAAAhL,GAAAC,WAAAmH,cAAAjH,QACAE,SAAA,wBACAiC,UAAA2R,EACAjJ,UAAAA,EAEAlK,SAAA,WACAf,OAAAQ,KAAAiC,IAAAoQ,WACAC,OAAA,gBACAqB,YAAA,sBACApB,WAAA,qBACAE,KAAA,SAAAlU,EAAAyM,GACA9K,EAAAC,QAAA,OAAAmB,QAAA,kBAAA/C,EAAAyM,OAKAhE,WAAA,SAAAC,EAAAlF,GACAvC,OAAAyH,EAAAhF,IAAAC,KAAA,SAAAgF,OAAAnF,EAAAE,MAIA,OAAAxC,KAEA3F,EAAA,+BAAA,WCjCA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,iCAGA,OAAAL,KAEA3F,EAAA,8BAAA,WCPA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,gCAGA,OAAAL,KAEA3F,EAAA,gCAAA,WCPA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,6BAEA0G,gBAAA,WACAxG,KAAAK,MAAAoG,IAAA,oBAAAzG,KAAAI,SAGAL,WAAA,WACAC,KAAAK,MAAAC,GAAA,oBAAAN,KAAAI,OAAAJ,OAGAY,QACAsR,MAAA,aAGAV,UAAA,SAAAjT,GACA2B,EAAAC,QAAA,YAAAY,QAAA,aAAAxC,EAAAyB,KAAAK,QAGAW,gBAAA,WACA,OACAG,cAAA,WACA,GAAAC,GAAA,iBAIA,OAHApB,MAAA6R,aACAzQ,GAAA,WAEAA,MAMA,OAAA3B,KAEA3F,EAAA,8BAAA,8BAAA,SAAA8Z,GCnCA,GAAAnU,GAAAC,WAAAoC,eAAAlC,QACAmC,UAAA6R,GAIA,OAAAnU,KCYA3F,EAAA,gCAEA,8BAEA,0BACA,yBACA,0CAEA,2BACA,0BACA,4BAEA,4BACA,2BACA,8BAEA,SACAwJ,EACAuQ,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,GAAAlM,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAwD,WAAA,GAAAF,KAEA7E,GAAA,SACAkO,SAAA,cACAsE,SACAqD,IAAA,eACAC,eAAA,eACAC,eAAA,uBACAC,eAAA,wBACAC,aAAA,iBACAC,GAAA,eACAC,KAAA,iBACAC,eAAA,oBAGAC,kBAAA,WACA,MAAA,IAAAjB,IAGAkB,iBAAA,WACA,MAAA,IAAAjB,IAGAkB,mBAAA,SAAAxR,GACA,GAAAA,GAAAtD,EAAAC,QAAA,UAAAmB,QAAA,iBACA,OAAA,IAAAyS,IAAAvQ,WAAAA,OAIA/E,GAAA,UACAkO,SAAA,mBACAsE,SACAqD,IAAA,eACAC,eAAA,gBACAU,eAAA,sBACAR,eAAA,wBACAC,aAAA,iBACAC,GAAA,eACAC,KAAA,iBACAC,eAAA,oBAGAC,kBAAA,WACA,MAAA,IAAAd,IAGAe,iBAAA,WACA,MAAA,IAAAd,IAGAe,mBAAA,WACA,GAAAxR,GAAAtD,EAAAC,QAAA,WAAAmB,QAAA,iBACA,OAAA,IAAA4S,IAAA1Q,WAAAA,OAIA/E,GAAA,WACAkO,SAAA,WACAsE,SACAqD,IAAA,eACAW,eAAA,sBACAT,eAAA,uBACAE,aAAA,iBACAC,GAAA,eACAC,KAAA,iBACAC,eAAA,oBAGAC,kBAAA,WACA,MAAA,IAAAX,IAGAY,iBAAA,WACA,MAAA,IAAAX,IAGAY,mBAAA,WACA,GAAAxR,GAAAtD,EAAAC,QAAA,YAAAmB,QAAA,qBACA,OAAA,IAAA+S,IAAA7Q,WAAAA,OAIA/E,GAAA,UACAkO,SAAA,eACAvL,QAAA,UACAF,UAAA,uBACAO,IAAAyT,QAAAC,cAOAjV,EAAAC,QAAA,OAAAmE,MAAA,uBAAAtE,KAAAoV,oBAAApV,MACAE,EAAAC,QAAA,OAAAmE,MAAA,kBAAAtE,KAAAqV,eAAArV,OAGAoV,oBAAA,WACA,MAAApV,MAAAwD,YAGA6R,eAAA,SAAA5W,GACA,MAAAuB,MAAAwD,WAAAjC,IAAA9C,KAKA,OAAA0J,KCnJArO,EAAA,yBAAA,WACA,GAAAuG,GAAA0J,SAAAC,MAAApK,QACAqK,UACAqL,SAAA,GAGAvV,WAAA,WAEAC,KAAAM,GAAA,eAAAN,KAAAuV,aAAAvV,OAGAuV,aAAA,WAEArV,EAAAC,QAAA,OAAAY,QAAA,eAAAf,KAAAuB,IAAA,YAIA,OAAAlB,KChBAvG,EAAA,wBAAA,uBAAA,SAAA0b,GACA,GAAArN,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEA,GAAAuD,GAAApD,EAAAC,QAAA,OAAAmB,QAAA,uBAEAtB,MAAAK,MAAA,GAAAmV,IACArQ,eAAA,EACA9D,cAAAiC,EAAA/B,IAAA,UACAkU,OAAA,IAMAvV,EAAAC,QAAA,OAAAmE,MAAA,WAAAtE,KAAA0V,QAAA1V,MACAE,EAAAC,QAAA,OAAAmE,MAAA,cAAAtE,KAAA2V,WAAA3V,MACAE,EAAAC,QAAA,OAAAmE,MAAA,oBAAAtE,KAAA4V,iBAAA5V,MACAE,EAAAC,QAAA,OAAAmE,MAAA,oBAAAtE,KAAA6V,iBAAA7V,MAKAE,EAAAC,QAAA,OAAAmE,MAAA,uBAAAtE,KAAA8V,oBAAA9V,MACAE,EAAAC,QAAA,OAAAmE,MAAA,uBAAAtE,KAAA+V,oBAAA/V,MACAE,EAAAC,QAAA,OAAAmE,MAAA,iBAAAtE,KAAAgW,cAAAhW,OAIA8V,oBAAA,SAAAzV,GACAL,KAAAgW,cAAA,gBAAA3V,IAGA2V,cAAA,SAAAC,EAAAjZ,GAEA,MADAgD,MAAAK,MAAA8G,IAAA8O,EAAAjZ,IACA,GAGA2Y,WAAA,SAAAM,GACA,MAAAjW,MAAAK,MAAAkB,IAAA0U,IAGAP,QAAA,WACA,MAAA1V,MAAAK,OAGAuV,iBAAA,WACA,MAAA5V,MAAAK,MAAAkB,IAAA,kBAGAwU,oBAAA,SAAA7P,GAEA,MADAlG,MAAAgW,cAAA,gBAAA9P,IACA,GAGA2P,iBAAA,WACA,GAAAK,GAAAlW,KAAAK,MAAAkB,IAAA,gBACA,OAAArB,GAAAC,QAAA,OAAAmB,QAAA,aAAA4U,KAMA,OAAA/N,KCjEArO,EAAA,8CAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,UAAA,2BAAAH,KAAAmW,qBAWAA,mBAAA,SAAA5X,EAAA8B,GACA,GAAAA,EAAAkB,IAAA,WAAA,CAIA,GAAA6U,IAAA,CACA9T,GAAAkK,KAAAnM,EAAAkB,IAAA,YAAA4P,OAAA,SAAA8E,GACAA,EAAA1U,IAAA,WACA6U,GAAA,KAGAA,GACA/V,EAAA8G,IAAA,WAAA,OAGA9G,GAAA8G,IAAA,WAAA,KAKA,OAAAgB,KCnCArO,EAAA,8BAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,UAAA,SAAAH,KAAAqW,UAEAnW,EAAAC,QAAA,OAAAmE,MAAA,YAAAtE,KAAAqW,SAAArW,OAWAqW,SAAA,SAAAC,GAEA,GAAApW,EAAAC,QAAA,OAAAmB,QAAA,cAAA,SACA,OAAA,CAOA,IAHAgV,EAAAA,GAAA,UAGA,WAAAA,EACA,GAAAC,GAAA,wBACA,IAAA,WAAAD,EACA,GAAAC,GAAA,cAIA,IAAA7S,GAAAxD,EAAAC,QAAA,OAAAmB,QAAA,gBAGA6E,EAAAqQ,KAAAC,MAAAD,KAAAE,UAAAhT,IAOAiT,EAAAjT,EAAAnC,IAAA,UAAAoV,UAcArU,GAAAkK,KAAArG,EAAAyQ,OAAA,SAAAC,GACA,GAAApY,GAAAoY,EAAApY,SAEAoY,GAAApY,SACAoY,GAAAC,SACA,IAAA5I,KAEA,KAAA,GAAAhU,KAAA2c,GACAA,EAAA9Y,eAAA7D,KAEAgU,EAAAhU,GAAA2c,EAAA3c,SAEA2c,GAAA3c,GAIA2c,GAAA3I,SAAAA,EACA2I,EAAApY,GAAAA,IAIA0H,EAAA4Q,eAAAJ,CAOA,IAAAA,GAAAjT,EAAAnC,IAAA,WAAAoV,UAcArU,GAAAkK,KAAArG,EAAA6Q,QAAA,SAAAV,GACA,GAAA7X,GAAA6X,EAAA7X,SAEA6X,GAAA7X,SACA6X,GAAAQ,SACA,IAAA5I,KAEA,KAAA,GAAAhU,KAAAoc,GACAA,EAAAvY,eAAA7D,KAEAgU,EAAAhU,GAAAoc,EAAApc,SAEAoc,GAAApc,GAIAoc,GAAApI,SAAAA,EACAoI,EAAA7X,GAAAA,IAIA0H,EAAA8Q,gBAAAN,EAGAxQ,EAAAqQ,KAAAE,UAAAvQ,GAEAjG,EAAAC,QAAA,OAAAY,QAAA,kBAAAoF,GAEA,WAAAmQ,IACApW,EAAAC,QAAA,OAAAmB,QAAA,iBAAA,WAAA,GACApB,EAAAC,QAAA,OAAAY,QAAA,mBAGAvB,OAAA0X,KAAAC,SAAAb,OAAAC,EAAAa,KAAAjR,EAAAkR,SAAAnC,QAAAoC,WAAA,SAAAC,GACA,IACAA,EAAAf,KAAAC,MAAAc,GACAA,EAAAjB,OAAAA,EAEApW,EAAAC,QAAA,OAAAY,QAAA,oBAAAwW,GACA,MAAAC,GACAC,QAAAC,IAAA,yBACAD,QAAAC,IAAAH,QAQA,OAAApP,KCrJArO,EAAA,0BAAA,WACA,GAAAuG,GAAA0J,SAAAC,MAAApK,UAIA,OAAAS,KCJAvG,EAAA,4BAAA,wBAAA,SAAA6d,GACA,GAAAxP,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAK,MAAA,GAAAsX,GAEA3X,KAAAK,MAAA8G,IAAA,KAAAyQ,kBAAAnZ,IAEAuB,KAAAK,MAAA8G,IAAA,SAAAjH,EAAAC,QAAA,UAAAmB,QAAA,mBAEAtB,KAAAK,MAAA8G,IAAA,UAAAjH,EAAAC,QAAA,WAAAmB,QAAA,mBAEAtB,KAAAK,MAAA8G,IAAA,WAAAjH,EAAAC,QAAA,YAAAmB,QAAA,iBAEApB,EAAAC,QAAA,OAAAmE,MAAA,eAAAtE,KAAA6X,YAAA7X,OASA6X,YAAA,WACA,MAAA7X,MAAAK,QAKA,OAAA8H,KC9BArO,EAAA,iCAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,qBAAAH,KAAA8X,eAAA9X,MACAA,KAAAC,SAAAC,EAAAC,QAAA,OAAA,uBAAAH,KAAA+X,cAAA/X,MACAA,KAAAC,SAAAC,EAAAC,QAAA,OAAA,eAAAH,KAAAgY,sBAAAhY,OASA8X,eAAA,WAEA,GAAAG,GAAA/X,EAAAC,QAAA,OAAAmB,QAAA,wBACA4W,EAAAD,EAAA1W,IAAA,UAEA2W,GAAA/Q,IAAA,YAAA,IAUA6Q,sBAAA,SAAAvC,GAEA,GAAAwC,GAAA/X,EAAAC,QAAA,OAAAmB,QAAA,wBACA4W,EAAAD,EAAA1W,IAAA,UAGA,IAAAkU,EAGA,GAAA9I,GAAA,mBAFA,IAAAA,GAAA,iBAKAuL,GAAA/Q,IAAA,WAAAwF,IAUAoL,cAAA,WAEA,GAAAE,GAAA/X,EAAAC,QAAA,OAAAmB,QAAA,wBACA4W,EAAAD,EAAA1W,IAAA,UAEA2W,GAAA/Q,IAAA,YAAA,KAKA,OAAAgB,KC5DArO,EAAA,iCAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,gBAAAH,KAAAmY,SACAnY,KAAAC,SAAAC,EAAAC,QAAA,OAAA,oBAAAH,KAAAoY,cAGAD,QAAA,WACAjY,EAAAC,QAAA,OAAAmB,QAAA,YAAA,YAGA8W,YAAA,WACA,GAAAC,GAAAnY,EAAAC,QAAA,WAAAmB,QAAA,uBACApB,GAAAC,QAAA,OAAAmB,QAAA,cAAA,eAAAkC,WAAA6U,MAKA,OAAAlQ,KCpBArO,EAAA,4BAAA,WACA,GAAAuG,GAAA0J,SAAAC,MAAApK,QACAqK,UACArI,UAAA,IAIA,OAAAvB,KCPAvG,EAAA,+BAAA,0BAAA,SAAAoX,GACA,GAAA1N,GAAAuG,SAAAK,WAAAxK,QACAS,MAAA6Q,EACAnF,WAAA,SAAA1L,GACA,GAAA5B,GAAA6Z,SAAAjY,EAAAkY,IAAA1c,QAAA,IAAA,IACA,QAAA4C,IAGA,OAAA+E,KCRA1J,EAAA,gCAAA,8BAAA,0BAAA,SAAAue,EAAAG,GACA,GAAArQ,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WACAC,KAAAwD,WAAA,GAAA6U,GAEAnY,EAAAC,QAAA,WAAAmE,MAAA,kBAAAtE,KAAAyY,eAAAzY,MAEAE,EAAAC,QAAA,WAAAmE,MAAA,uBAAAtE,KAAA0Y,cAAA1Y,MAEAA,KAAAC,SAAAC,EAAAC,QAAA,OAAA,eAAAH,KAAA2Y,uBAGAF,eAAA,SAAAnC,EAAAjW,EAAAuY,EAAArK,EAAApI,GACA,GAAAA,GAAA,mBAAAA,GAAAA,IACA,oBAAAoI,GAAAsK,WACAtK,EAAAsK,SAAA,gBAEA,IAAAC,GAAA,GAAAN,IACAlC,OAAAA,EACAjW,MAAAA,EACAuY,QAAAA,EACArK,MAAAA,EACApI,KAAAA,GAGA,OADAnG,MAAAwD,WAAAuV,IAAAD,GACAA,GAGAJ,cAAA,WACA,MAAA1Y,MAAAwD,YAGAmV,qBAAA,SAAAlD,GACAA,GACAzV,KAAAwD,WAAAqK,UAMA,OAAA1F,KAEArO,EAAA,iCAAA,WCjDA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,UAAA,oBAAAH,KAAAgZ,YAAAhZ,MACAA,KAAAC,SAAAC,EAAAC,QAAA,UAAA,mBAAAH,KAAAkQ,WAAAlQ,OAGAgZ,YAAA,WACA,GAAAX,GAAAnY,EAAAC,QAAA,WAAAmB,QAAA,uBACA+W,GAAAY,MACA,IAAA9W,GAAAnC,IACAsC,GAAAkK,KAAA6L,EAAAlH,OAAA,SAAA+H,GACA/W,EAAA+N,WAAAgJ,GAAA,KAEAb,EAAAxK,QAEA3N,EAAAC,QAAA,OAAAmB,QAAA,aACApB,EAAAC,QAAA,OAAAmB,QAAA,iBAAA,SAAA,GACApB,EAAAC,QAAA,OAAAmB,QAAA,iBAGA4O,WAAA,SAAAgJ,EAAAC,GACAjZ,EAAAC,QAAA,WAAAmB,QAAA,QAAA4X,EAAA3X,IAAA,UAAA2X,EAAAC,KAKA,OAAAhR,KCnBArO,EAAA,qCAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,oBAAAH,KAAAoZ,kBAGAA,gBAAA,SAAA7B,GAEA,MAAA,YAAAA,EAAAjB,QACA,GAIA,mBAAAiB,GAAApR,KAAAkT,UAGA,mBAAA9B,GAAApR,KAAAkT,QAAAzC,QACAtU,EAAAkK,KAAA+K,EAAApR,KAAAkT,QAAAzC,OAAA,SAAA0C,EAAAC,GACA,GAAA1C,GAAA3W,EAAAC,QAAA,UAAAmB,QAAA,YAAAiY,EACA1C,IACAA,EAAA1P,IAAA,KAAAmS,KAMA,mBAAA/B,GAAApR,KAAAkT,QAAArC,SACA1U,EAAAkK,KAAA+K,EAAApR,KAAAkT,QAAArC,QAAA,SAAAsC,EAAAC,GACA,GAAAjD,GAAApW,EAAAC,QAAA,WAAAmB,QAAA,aAAAiY,EACAjD,IACAA,EAAAnP,IAAA,KAAAmS,KAMA,mBAAA/B,GAAApR,KAAAkT,QAAAG,OACAlX,EAAAkK,KAAA+K,EAAApR,KAAAkT,QAAAG,MAAA,SAAAF,EAAAC,GACAE,QAAAC,aAAA,GAAA,GAAA,sCAAAJ,MAKApZ,EAAAC,QAAA,OAAAmB,QAAA,iBAAA,WAAA,GACApB,EAAAC,QAAA,OAAAY,QAAA,sBAGAb,GAAAC,QAAA,OAAAmB,QAAA,iBAAA,SAAA,MAKA,OAAA6G,KCnDArO,EAAA,kCAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,aAAAH,KAAA2Z,iBAEAzZ,EAAAC,QAAA,OAAAmE,MAAA,uBAAAtE,KAAA2Z,gBAAA3Z,MAGAE,EAAAC,QAAA,OAAAmE,MAAA,uBAAAtE,KAAA4Z,cAAA5Z,MAEAE,EAAAC,QAAA,OAAAmE,MAAA,sBAAAtE,KAAA6Z,aAAA7Z,MAMAA,KAAA8Z,qBAGAH,gBAAA,SAAApb,EAAA8B,GAIA,GAAAL,KAAA+Z,qBACA,OAAA,CAOA,IAAA,mBAAA1Z,GACA,GAAA2O,GAAAxP,OAAAjB,EAAA6G,QAAAe,KAAA,UACA9F,EAAAH,EAAAC,QAAA,OAAAmB,QAAA,kBAAA0N,EAGA9O,GAAAC,QAAA,OAAAmB,QAAA,sBACApB,EAAAC,QAAA,OAAAmB,QAAA,gBAMA,GAAAjB,EAAAkB,IAAA,OAAA9F,SACAyE,EAAAC,QAAA,OAAAmB,QAAA,uBAAAjB,GACAH,EAAAC,QAAA,OAAAY,QAAA,uBAAAV,KAUA0Z,mBAAA,WACA,MAAA,IAAAlc,OAAA+L,KAAA5J,KAAA8Z,kBAAAre,QACA,GAEA,GAWAme,cAAA,SAAA/P,GACA7J,KAAA8Z,iBAAAjQ,IAAA,GAUAgQ,aAAA,SAAAhQ,SACA7J,MAAA8Z,iBAAAjQ,KAKA,OAAA1B,KC1FArO,EAAA,+BAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,uBAAAH,KAAAga,kBAGAA,gBAAA,WACA,GAAA3Y,GAAAnB,EAAAC,QAAA,OAAAmB,QAAA,oBACAmY,SAAAQ,UAAA,KAAA,KAAA/K,OAAAgL,SAAAC,KAAA,WAAA9Y,EAAAE,IAAA,MACA,IAAA6Y,GAAA,cACA3Y,EAAAyN,OAAAgL,SAAAG,WACAC,EAAA7Y,EAAA5F,QAAAue,EAAA,GACA3C,SAAAC,IAAA4C,KAKA,OAAAnS,KCbArO,EAAA,6BAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,QAAA,cAAAH,KAAAua,eACAva,KAAAC,SAAAC,EAAAC,QAAA,UAAA,SAAAH,KAAAua,eACAva,KAAAC,SAAAC,EAAAC,QAAA,UAAA,sBAAAH,KAAAua,eAGAva,KAAAC,SAAAC,EAAAC,QAAA,WAAA,eAAAH,KAAAwa,aACAxa,KAAAC,SAAAC,EAAAC,QAAA,WAAA,gBAAAH,KAAAya,cAEAza,KAAAC,SAAAC,EAAAC,QAAA,WAAA,sBAAAH,KAAA0a,oBACA1a,KAAAC,SAAAC,EAAAC,QAAA,WAAA,uBAAAH,KAAA2a,qBACA3a,KAAAC,SAAAC,EAAAC,QAAA,WAAA,wBAAAH,KAAA4a,sBACA5a,KAAAC,SAAAC,EAAAC,QAAA,WAAA,eAAAH,KAAAiI,cAGAsS,cAAA,WACA,GAAAlZ,GAAAnB,EAAAC,QAAA,OAAAmB,QAAA,oBACA9B,QAAAqb,UAAApU,IAAA,oBACAjH,OAAA,SAAAiH,IAAA,oBACApF,EAAAE,IAAA,YACA/B,OAAAgN,KAAAnL,EAAAE,IAAA,WAAA,SAAAuZ,EAAAC,GACAvb,OAAAqb,UAAAva,GAAA,0BAAA,KAAAwa,EAAA,SAAAvc,GACA2B,EAAAC,QAAA,WAAAY,QAAAga,EAAAxc,KAEAiB,OAAA,SAAAc,GAAA,0BAAA,KAAAwa,EAAA,SAAAvc,GACA2B,EAAAC,QAAA,WAAAY,QAAAga,EAAAxc,KAEAiB,OAAA,YAAAc,GAAA,0BAAA,KAAAwa,EAAA,SAAAvc,GACA2B,EAAAC,QAAA,WAAAY,QAAAga,EAAAxc,QAMAic,YAAA,WACA,YAAAta,EAAAC,QAAA,OAAAmB,QAAA,qBACApB,EAAAC,QAAA,OAAAmB,QAAA,cAAA,YAEApB,EAAAC,QAAA,OAAAmB,QAAA,iBAKAmZ,aAAA,WACA,aAAAva,EAAAC,QAAA,OAAAmB,QAAA,qBACApB,EAAAC,QAAA,OAAAmB,QAAA,cAAA,aAEApB,EAAAC,QAAA,OAAAmB,QAAA,iBAIAoZ,mBAAA,WACA,GAAApX,GAAApD,EAAAC,QAAA,OAAAmB,QAAA,wBACA0Z,EAAA1X,EAAA/B,IAAA,SACArB,GAAAC,QAAA,OAAAmB,QAAA,0BAAA0Z,IAGAL,oBAAA,WACA,GAAArX,GAAApD,EAAAC,QAAA,OAAAmB,QAAA,wBACA2Z,EAAA3X,EAAA/B,IAAA,UACArB,GAAAC,QAAA,OAAAmB,QAAA,0BAAA2Z,IAGAL,qBAAA,WACA,GAAAtX,GAAApD,EAAAC,QAAA,OAAAmB,QAAA,wBACA4Z,EAAA5X,EAAA/B,IAAA,WACArB,GAAAC,QAAA,OAAAmB,QAAA,0BAAA4Z,IAGAjT,YAAA,WACA/H,EAAAC,QAAA,OAAAmB,QAAA,kBAKA,OAAA6G,KClFArO,EAAA,gCAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAKAC,KAAAmb,kBACA,cAGAnb,KAAAC,SAAAC,EAAAC,QAAA,OAAA,iBAAAH,KAAAob,cAGAA,YAAA,SAAA/a,GACA,IAAA,GAAAgb,KAAAhb,GAAAib,oBACA,GAAAC,GAAAF,EACAG,EAAAnb,EAAAib,oBAAAD,EAGAnb,GAAAC,QAAA,QAAAE,EAAAkB,IAAA,SAAAD,QAAA,oBAAAtB,KAAAmb,mBAAAnb,KAAAmb,gBAEA,OAAA,IAAAnb,KAAAmb,iBAAAjf,QAAAmf,IACA,MAEAnb,GAAAC,QAAA,OAAAmB,QAAA,iBAAA,SAAA,KAKA,OAAA6G,KC9BArO,EAAA,8BAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WACAG,EAAAC,QAAA,WAAAmE,MAAA,qBAAAtE,KAAAyb,kBAAAzb,MACAE,EAAAC,QAAA,WAAAmE,MAAA,iBAAAtE,KAAA0b,cAAA1b,MACAE,EAAAC,QAAA,WAAAmE,MAAA,oBAAAtE,KAAA2b,iBAAA3b,MACAE,EAAAC,QAAA,WAAAmE,MAAA,uBAAAtE,KAAA4b,oBAAA5b,MAEAE,EAAAC,QAAA,WAAAmE,MAAA,kBAAAtE,KAAA6b,eAAA7b,MACAE,EAAAC,QAAA,WAAAmE,MAAA,qBAAAtE,KAAA8b,kBAAA9b,MACAE,EAAAC,QAAA,WAAAmE,MAAA,wBAAAtE,KAAA+b,qBAAA/b,MACAE,EAAAC,QAAA,WAAAmE,MAAA,uBAAAtE,KAAAgc,oBAAAhc,OAWAyb,kBAAA,SAAAvC,EAAAC,GACA,GAAA8C,GAAA/C,EAAA3X,IAAA,SACAqX,EAAAM,EAAA3X,IAAA,WACA8Z,EAAAzC,EAAAyC,KACAa,EAAAtD,EAAAsD,MACAD,GAAA9U,IAAAkU,EAAAa,GACAlc,KAAAmc,kBAAAjD,EAAAC,IAYAuC,cAAA,SAAAxC,EAAAC,GACA,GAAAiD,GAAAlD,EAAA3X,IAAA,SACAiC,EAAA0V,EAAA3X,IAAA,QAAAiC,UAIA,UAFAA,GAAA6Y,OAAAD,EAAA7a,IAAA,QAEA4X,EAAA,CACA,GAAAd,GAAAnY,EAAAC,QAAA,WAAAmB,QAAA,wBACAgb,EAAAjE,EAAAkE,OAAAlc,MAAA+b,GAEA9Z,GAAAkK,KAAA8P,EAAA,SAAAjc,GACAA,IAAA6Y,GACAb,EAAAmE,OAAAnc,KAKAmD,EAAAgZ,OAAAJ,GACApc,KAAAmc,kBAAAjD,EAAAC,IAYAyC,oBAAA,SAAA1C,EAAAC,GACA,GAAAiD,GAAAlD,EAAA3X,IAAA,SACAkb,EAAAvD,EAAA3X,IAAA,QAAAiC,UAEA,KAAA2V,EAAA,CACA,GAAAd,GAAAnY,EAAAC,QAAA,WAAAmB,QAAA,wBACAgb,EAAAjE,EAAAkE,OAAAlc,MAAA+b,GAEA9Z,GAAAkK,KAAA8P,EAAA,SAAAjc,GACAA,IAAA6Y,GACAb,EAAAmE,OAAAnc,KAKAoc,EAAAD,OAAAJ,GACApc,KAAAmc,kBAAAjD,EAAAC,IAWAwC,iBAAA,SAAAzC,EAAAC,GACA,GAAApL,GAAAmL,EAAA3X,IAAA,SACAiC,EAAA0V,EAAA3X,IAAA,QAAAiC,UAMA,IAJAtD,EAAAC,QAAA4N,EAAAxM,IAAA,iBAAAD,QAAA,MAAAyM,SAEAvK,GAAAmT,WAAA5I,EAAAxM,IAAA,QAEA4X,EAAA,CACA,GAAAd,GAAAnY,EAAAC,QAAA,WAAAmB,QAAA,wBACAgb,EAAAjE,EAAAkE,OAAAlc,MAAA0N,GAEAzL,GAAAkK,KAAA8P,EAAA,SAAAjc,GACAA,IAAA6Y,GACA7Y,EAAA8G,IAAA,YAAA,KAMA3D,EAAAzC,QAAA,QAAAyC,GAEAxD,KAAAmc,kBAAAjD,EAAAC,IAWA0C,eAAA,SAAA3C,EAAAC,GACA,GAAAhT,GAAA+S,EAAA3X,IAAA,QACAqV,EAAAzQ,EAAAyQ,OAEA9P,EAAA5G,EAAAC,QAAA,UAAAmB,QAAA,iBACAgB,GAAAkK,KAAAoK,EAAA,SAAAkC,GACA,GAAAoD,GAAApD,EAAAoD,OACAD,EAAAnD,EAAAzY,KACA4b,GAAA9U,IAAA,QAAA+U,GACAzE,QAAAC,IAAA,OAAAuE,EAAA1a,IAAA,SAAA,OAAA2a,KAEAzE,QAAAC,IAAA5Q,EAAAyV,OAAAhO,MAAA,UACAkJ,QAAAC,IAAA5Q,EAAAyV,OAAAhO,MAAA,WAGAzH,EAAAmS,OACAjZ,KAAAmc,kBAAAjD,EAAAC,IAGA2C,kBAAA,SAAA5C,EAAAC,GACA,GAAA9Y,GAAA6Y,EAAA3X,IAAA,QAEA,KAAA4X,EAAA,CACA,GAAAd,GAAAnY,EAAAC,QAAA,WAAAmB,QAAA,wBACAgb,EAAAjE,EAAAkE,OAAAlc,MAAAA,GAEAiC,GAAAkK,KAAA8P,EAAA,SAAAxD,GACAA,IAAAI,GACAb,EAAAmE,OAAA1D,KAKAzY,EAAAmD,WAAAgZ,OAAAnc,GACAL,KAAAmc,kBAAAjD,EAAAC,IAGA4C,qBAAA,SAAA7C,EAAAC,GACA,GAAA9Y,GAAA6Y,EAAA3X,IAAA,SACAiC,EAAA0V,EAAA3X,IAAA,QAAAiC,UAGA,IAFAA,EAAAuV,IAAA1Y,IAEA8Y,EAAA,CACA,GAAAd,GAAAnY,EAAAC,QAAA,WAAAmB,QAAA,wBACAgb,EAAAjE,EAAAkE,OAAAlc,MAAAA,GAEAiC,GAAAkK,KAAA8P,EAAA,SAAAjc,GACAA,IAAA6Y,GACA7Y,EAAA8G,IAAA,YAAA,KAKAnH,KAAAmc,kBAAAjD,EAAAC,IAGA6C,oBAAA,SAAA9C,EAAAC,GACA,GAAAhT,GAAA+S,EAAA3X,IAAA,QACAiC,EAAA2C,EAAA3C,WAEAkZ,EAAAvW,EAAAuW,SAEApa,GAAAkK,KAAAkQ,EAAA,SAAA5D,GACA,GAAAoD,GAAApD,EAAAoD,OACAS,EAAA7D,EAAAzY,KACAsc,GAAAxV,IAAA,QAAA+U,KAIA1Y,EAAAyV,OACAjZ,KAAAmc,kBAAAjD,EAAAC,IAWAgD,kBAAA,SAAAjD,EAAAC,GACA,GAAAA,GAAA,mBAAAA,GAAAA,GAAA,CACA,KAAAA,EAAA,CAEAjZ,EAAAC,QAAA,OAAAmB,QAAA,YACA,IAAA+W,GAAAnY,EAAAC,QAAA,WAAAmB,QAAA,uBACA+W,GAAAmE,OAAAtD,GACA,GAAAb,EAAA5c,SACAyE,EAAAC,QAAA,OAAAmB,QAAA,iBAAA,SAAA,GACApB,EAAAC,QAAA,OAAAmB,QAAA,oBAOA,OAAA6G,KCnOArO,EAAA,oCAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WACAG,EAAAC,QAAA,OAAAmE,MAAA,kBAAAtE,KAAA4c,eAAA5c,OAGA4c,eAAA,SAAAvc,GAEA,GAAAxE,KAEAyG,GAAAkK,KAAAnM,EAAAwc,WAAA,SAAAnX,EAAAmE,GAEA,GAAAnE,YAAAqE,UAAAK,WAAA,CAEA,GAAA+G,GAAAzL,EAAArK,IAAA,SAAAgF,GAAA,MAAAA,GAAAsL,UACAmR,EAAAxa,EAAAqJ,MAAAjG,EAAAoX,SACAC,EAAA,GAAArX,GAAAsX,YAAA7L,EAAA2L,EACAjhB,GAAAgO,GAAAkT,MACArX,aAAAqE,UAAAC,QACAnO,EAAAgO,GAAAnE,EAAAiG,UAKA,IAAAsR,GAAA5c,EAAAsL,OAMA,OAJArJ,GAAAkK,KAAA3Q,EAAA,SAAA6J,EAAAmE,GACAoT,EAAA9V,IAAA0C,EAAAnE,KAGAuX,IAIA,OAAA9U,KClCArO,EAAA,mCAAA,WACA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAC,SAAA,+BAGA,OAAAL,KAEA3F,EAAA,gCAAA,oCAAA,iCAAA,SAAA0N,EAAA0V,GCfA,GAAAzd,GAAAC,WAAAwD,WAAAtD,QACAC,QAAA,MACAC,SAAA,6BAEAqD,SACAga,MAAA,qBAGApd,WAAA,SAAAoG,GACAnG,KAAA+N,UAAA5H,EAAA4H,UACA/N,KAAA+N,UAAAzN,GAAA,UAAAN,KAAAK,MAAAkB,IAAA,QAAAvB,KAAAI,OAAAJ,MACAA,KAAAK,MAAAC,GAAA,eAAAN,KAAAod,YAAApd,KAEA,IAAArB,GAAAqB,KAAAK,MAAAkB,IAAA,OACA,IAAA5C,EACA,IAAA,GAAArE,KAAAqE,GACAA,EAAAZ,eAAAzD,IACA0F,KAAA+N,UAAAzN,GAAA,UAAAhG,EAAA0F,KAAAI,OAAAJ,OAMAwG,gBAAA,WACAxG,KAAA+N,UAAAtH,IAAA,UAAAzG,KAAAK,MAAAkB,IAAA,QAAAvB,KAAAI,QACAJ,KAAAK,MAAAoG,IAAA,eAAAzG,KAAAod,YAEA,IAAAze,GAAAqB,KAAAK,MAAAkB,IAAA,OACA,IAAA5C,EACA,IAAA,GAAArE,KAAAqE,GACAA,EAAAZ,eAAAzD,IACA0F,KAAA+N,UAAAtH,IAAA,UAAAnM,EAAA0F,KAAAI,SAMAid,eAAA,WACAnd,EAAAC,QAAA,OAAAY,QAAA,uBAAAf,KAAAK,MAAAL,KAAA+N,YAGAxN,SAAA,WACAP,KAAAwH,sBAAA,CACA,IAAArF,GAAAnC,IAEAR,QAAAQ,KAAAiC,IAAAC,KAAA,YAAAsK,KAAA,WACA,GAAAnI,GAAA7E,OAAAQ,MAAAsd,KAAA,gBACA9d,QAAAQ,MAAAud,KAAA,WACAlZ,QAAAA,EACAmZ,SAAA,IACAC,MAAA,gBACA1c,QAAA,QACA2c,cAAA,MAIAle,OAAAQ,KAAAiC,IAAAC,KAAA,eAAAsK,KAAA,WACAhN,OAAAQ,MAAAud,KAAA,WACAI,MAAA,mBACAtZ,QAAA7E,OAAA,uBACAuB,QAAA,QACA6c,UACAC,EAAA,SACAC,EAAA,UAEAJ,aAAA,OACAK,YAAA,EACAN,MAAA,gBACAO,UAAA,IACAC,OAAA,WACA,GAAAC,GAAA1e,OAAA2C,EAAAF,IAAAC,KAAA,WACAhC,GAAAC,QAAA,aAAAmB,QAAA,wBAAA4c,GACAhe,EAAAC,QAAA,aAAAmB,QAAA,eAAA,GACApB,EAAAC,QAAA,UAAAmB,QAAA,gBAAA,eAEA6c,gBAAA,WACAje,EAAAC,QAAA,aAAAmB,QAAA,eAAA,GACApB,EAAAC,QAAA,UAAAmB,QAAA,eAAA,kBAQA,IAAA8c,GAAApe,KAAAK,MAAAkB,IAAA,OAEA,IAAA,mBAAA6c,GAAA,CAEA,GAAAC,GAAA7e,OAAAQ,KAAAQ,KAAA0B,KAAA,QAEA,QAAAkc,EAAA1R,MACA,IAAA,UACA2R,EAAAC,aACAC,KAAAC,mBACAC,KAAAC,cAEA,MACA,KAAA,WACAL,EAAAC,aACAK,MAAA,IACAJ,KAAAC,mBACAC,KAAAC,cAEA,MACA,KAAA,SACAN,EAAAQ,QAAAP,EAAAD,KAAAA,EAAAQ,OACA,MACA,SAEAnH,QAAAC,IAAA,yBAAA0G,EAAA1R,KAAA,wBAIA1M,KAAAod,cAKAld,EAAAC,QAAA,WAAAH,KAAAK,MAAAkB,IAAA,SAAAR,QAAA,iBAAAf,KAAAK,MAAAL,KAAA+N,UAAA/N,OAGAod,YAAA,WACApd,KAAAK,MAAAkB,IAAA,UACA/B,OAAAQ,KAAAiC,IAAAC,KAAA,eAAA2G,SAAA,YACA7I,KAAAmd,MAAA5Z,KAAA,GAAA2Z,IAAA7c,MAAAL,KAAAK,WAEAb,OAAAQ,KAAAiC,IAAAC,KAAA,eAAA4G,YAAA,YACA9I,KAAAmd,MAAAhP,UAIAnN,gBAAA,WACA,GAAAmB,GAAAnC,IACA,QAEA6e,cAAA,WACA,GAAA7e,KAAArB,KACA,IAAA,GAAArE,KAAA0F,MAAArB,KACA,GAAAqB,KAAArB,KAAAZ,eAAAzD,IACA6H,EAAA4L,UAAAxM,IAAAjH,IAAA0F,KAAArB,KAAArE,GACA,MAAA,uBAKA,OAAA,IAGAwkB,cAAA,WAOA,MANA,mBAAA3c,GAAA4L,UAAAxM,IAAAvB,KAAA1F,MACA0F,KAAAhD,MAAAmF,EAAA4L,UAAAxM,IAAAvB,KAAA1F,MAEA0F,KAAAhD,MAAA,GAGAsF,EAAAxC,SAAAN,OAAA,yBAAAQ,KAAA0M,MAAAnK,OAAAvC,OAGA+e,mBAAA,WACA,MAAA,kBAGA5d,cAAA,WACA,GAAAC,GAAA,aAWA,OATAA,IADA,mBAAApB,MAAA2J,MACA,MAAA3J,KAAA2J,MAEA,eAGA3J,KAAAmd,QACA/b,GAAA,aAGAA,GAGAkS,cAAA,WACA,MAAAtT,MAAAuT,KACA,qHAAAvT,KAAAuT,KAAA,SAEA,IAIAC,gBAAA,WACA,MAAAxT,MAAAyT,eACA,iEAEA,MAMA7S,QACAsY,OAAA,gBACA8F,MAAA,gBAGAC,cAAA,SAAA1gB,GACA2B,EAAAC,QAAA,OAAAY,QAAA,iBAAAxC,EAAAyB,KAAAK,MAAAL,KAAA+N,YAGAmR,aAAA,SAAA3gB,GACA2B,EAAAC,QAAA,OAAAY,QAAA,gBAAAxC,EAAAyB,KAAAK,MAAAL,KAAA+N,WACA7N,EAAAC,QAAA,WAAAH,KAAAK,MAAAkB,IAAA,SAAAR,QAAA,gBAAAxC,EAAAyB,KAAAK,MAAAL,KAAA+N,aAIA,OAAAtO,KCzMA3F,EAAA,uCAAA,gCAAA,SAAAqlB,GACA,GAAAhX,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAG,EAAAC,QAAA,OAAAmE,MAAA,uBAAAtE,KAAAof,oBAAApf,OAUAof,oBAAA,SAAA/e,GAEA,GAAAqM,GAAArM,EAAAkB,IAAA,QAEA8d,EAAAnf,EAAAC,QAAAuM,GAAApL,QAAA,uBAAAjB,IAAA8e,CAEA,OAAAE,KAKA,OAAAlX,KC5BArO,EAAA,0CAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAG,EAAAC,QAAA,OAAAmE,MAAA,iBAAAtE,KAAAif,cAAAjf,MAGAA,KAAAC,SAAAC,EAAAC,QAAA,OAAA,iBAAAH,KAAAif,cAAAjf,OAYAif,cAAA,SAAA1gB,EAAA4U,EAAApF,GACA,GAAAzT,GAAA6Y,EAAA5R,IAAA,QACA2a,EAAAnO,EAAAxM,IAAAjH,GAEA0C,EAAAkD,EAAAC,QAAAgT,EAAA5R,IAAA,SAAAD,QAAA,uBAAA/C,EAAAwP,EAAAzT,EAAA6Y,EAEA,oBAAAnW,KACAA,EAAAwC,OAAAjB,EAAA6G,QAAAM,OAGAqI,EAAA5G,IAAA7M,EAAA0C,EAEA,IAAAwe,GAAAxe,EAEA4b,GACAyC,KAAA/gB,EACA4hB,OAAAA,EACAV,MAAAA,GAGAna,EAAAnB,EAAAC,QAAA,OAAAmB,QAAA,oBACAD,GAAAE,IAAA,KAMA,WAAA4R,EAAA5R,IAAA,UAEA2a,EADA,GAAAA,EACA,KAEA,MAIAV,EADA,GAAAA,EACA,KAEA,MAIA,IAAAjN,IACA+Q,OAAAvR,EAAAxM,IAAA,cACAgN,MAAAR,EAAAxM,IAAA,SACA2X,OAAA,WAAA/F,EAAA5R,IAAA,SAAA,SAAA2a,EAAA,OAAAV,EAGAtb,GAAAC,QAAA,WAAAmB,QAAA,kBAAA,gBAAAyM,EAAA6K,EAAArK,KAKA,OAAApG,KAEArO,EAAA,wCAAA,gCAAA,SAAAqlB,GChFA,GAAA1f,GAAAC,WAAAmH,cAAAjH,QACAE,SAAA,6BACAiC,UAAAod,EAEApf,WAAA,SAAAoG,GACAnG,KAAAwD,WAAAxD,KAAAK,MAAAkB,IAAA,YACAvB,KAAA8N,kBAAAC,UAAA5H,EAAA4H,WACA/N,KAAA+N,UAAA5H,EAAA4H,SAEA,IAAApP,GAAAqB,KAAAK,MAAAkB,IAAA,OACA,IAAA5C,EACA,IAAA,GAAArE,KAAAqE,GACAA,EAAAZ,eAAAzD,IACA0F,KAAA+N,UAAAzN,GAAA,UAAAhG,EAAA0F,KAAAI,OAAAJ,OAMAwG,gBAAA,WACA,GAAA7H,GAAAqB,KAAAK,MAAAkB,IAAA,OACA,IAAA5C,EACA,IAAA,GAAArE,KAAAqE,GACAA,EAAAZ,eAAAzD,IACA0F,KAAA+N,UAAAtH,IAAA,UAAAnM,EAAA0F,KAAAI,SAMAG,SAAA,aAUAS,gBAAA,WACA,GAAAmB,GAAAnC,IACA,QACA6e,cAAA,WACA,GAAA7e,KAAArB,KACA,IAAA,GAAArE,KAAA0F,MAAArB,KACA,GAAAqB,KAAArB,KAAAZ,eAAAzD,IACA6H,EAAA4L,UAAAxM,IAAAjH,KAAA0F,KAAArB,KAAArE,GACA,MAAA,uBAKA,OAAA,IAEAwkB,cAAA,WACA,MAAAxc,GAAAxC,SAAAN,OAAA,yBAAAQ,KAAA0M,MAAAnK,OAAAvC,OAGAmB,cAAA,WACA,GAAAC,GAAA,EAWA,OATAA,IADA,mBAAApB,MAAA2J,MACA3J,KAAA2J,MAEA,YAGA3J,KAAAmd,QACA/b,GAAA,aAGAA,GAGAgc,YAAA,WACA,MAAApd,MAAAmd,MACAnd,KAAAmd,MAEA,MAKAnW,WAAA,SAAAC,EAAAlF,GACAvC,OAAAyH,EAAAhF,IAAAC,KAAA,0BAAAgF,OAAAnF,EAAAE,MAKA,OAAAxC,KC5EA3F,EAAA,6BAAA,WACA,GAAAuG,GAAA0J,SAAAC,MAAApK,QACAqK,UACAiE,UAAA,GAGAnO,WAAA,WAEAG,EAAAC,QAAA,OAAAY,QAAA,oBAAAf,MACAE,EAAAC,QAAAH,KAAAuB,IAAA,SAAAR,QAAA,oBAAAf,MAEAA,KAAAM,GAAA,eAAAN,KAAAuf,eAAAvf,MAMAA,KAAAuB,IAAA,mBAAA,mBAAAvB,MAAAwD,WAAAsZ,QAAA0C,YACAxf,KAAAC,SAAAC,EAAAC,QAAA,OAAA,kBAAAH,KAAAyf,YAaAA,UAAA,SAAAC,GACAxf,EAAAC,QAAAH,KAAAwD,WAAAsZ,QAAA0C,YAAAze,QAAA,kBAAA2e,EAAA1f,OAGAuf,eAAA,WACAvf,KAAAuB,IAAA,UACArB,EAAAC,QAAA,UAAAmB,QAAA,gBAAA,0BACApB,EAAAC,QAAA,OAAAmB,QAAA,uBAAA,4BAEApB,EAAAC,QAAA,UAAAmB,QAAA,eAAA,0BACApB,EAAAC,QAAA,OAAAmB,QAAA,sBAAA,6BAKA,OAAAjB,KCpDAvG,EAAA,gCAAA,2BAAA,SAAAqZ,GACA,GAAA3P,GAAAuG,SAAAK,WAAAxK,QACAS,MAAA8S,EAEApT,WAAA,SAAAoR,EAAA2L,GACA9c,KAAA8c,QAAAA,QAGA,OAAAtZ,KCRA1J,EAAA,4BAAA,uCAAA,gCAAA,SAAA6lB,EAAAC,GACA,GAAAzX,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WACAG,EAAAC,QAAA,YAAAmE,MAAA,uBAAAtE,KAAAof,oBAAApf,MAEAA,KAAAC,SAAAC,EAAAC,QAAA,YAAA,oBAAAH,KAAA6f,2BAGAT,oBAAA,SAAA/e,GACA,MAAAsf,IAUAE,yBAAA,SAAAxf,GACAA,EAAA8G,IAAA,WAAA,GAAAyY,GAAAvf,EAAAkB,IAAA,gBAKA,OAAA4G,KCvBArO,EAAA,mCAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAG,EAAAC,QAAA,UAAAmE,MAAA,uBAAAtE,KAAAgW,cAAAhW,OAaAgW,cAAA,SAAAzX,EAAA0d,EAAA3hB,EAAAwlB,GACA,GAAAtgB,OAAAjB,EAAA6G,QAAAiW,KAAA,WACA,GAAAre,GAAA,MAEA,IAAAA,GAAA,CAGA,OAAAA,KAKA,OAAAmL,KC/BArO,EAAA,kCAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,aAAAH,KAAAwR,WACAxR,KAAAC,SAAAC,EAAAC,QAAA,OAAA,eAAAH,KAAAyR,aACAzR,KAAAC,SAAAC,EAAAC,QAAA,OAAA,kBAAAH,KAAA+f,iBAaAvO,UAAA,SAAAjT,EAAA8B,GACA,GAAAgB,GAAAnB,EAAAC,QAAA,OAAAmB,QAAA,qBACAgI,EAAAjI,EAAAE,IAAA,MACAmL,EAAAxM,EAAAC,QAAAmJ,GAAAhI,QAAA,WAAAjB,EAAAkB,IAAA,QACArB,GAAAC,QAAA,OAAAmB,QAAA,cAAA,gBAAAjB,MAAAA,EAAAwO,gBAAAnC,EAAAnL,IAAA,oBAWAkQ,YAAA,SAAAlT,EAAAwP,GACA,GAAAkP,GAAA/c,EAAAC,QAAA,OAAAmB,QAAA,kBAAAyM,GAGAQ,GACA+Q,OAAAvR,EAAAxM,IAAA,cACAgN,MAAAR,EAAAxM,IAAA,SACA2X,OAAA,UACAL,SAAA,WAGA1S,GACA3C,WAAAuK,EAAAvK,YAGA6U,EAAAnY,EAAAC,QAAA,WAAAmB,QAAA,wBACAgb,EAAAjE,EAAAkE,OAAAlc,MAAA0N,GAEAzL,GAAAkK,KAAA8P,EAAA,SAAAxD,GACA,GAAA3S,GAAA2S,EAAAvX,IAAA;AtF3DA,AsF4DA,mBAAA4E,GAAAyQ,QACAtU,EAAAkK,KAAArG,EAAAyQ,OAAA,SAAAC,EAAApZ,GACAoZ,EAAAxW,OAAA0N,IACA5H,EAAAyQ,OAAAnZ,GAAA4C,MAAA4c,KAIAnE,EAAA3R,IAAA,OAAAhB,GACA2S,EAAA3R,IAAA,QAAA8V,GACAnE,EAAA3R,IAAA,YAAA,KAGAjH,EAAAC,QAAA,WAAAmB,QAAA,kBAAA,eAAA2b,EAAA,KAAA1O,EAAApI,EAEA,IAAA9E,GAAAnB,EAAAC,QAAA,OAAAmB,QAAA,qBACAgI,EAAAjI,EAAAE,IAAA,KACArB,GAAAC,QAAAmJ,GAAAhI,QAAA,SAAAyM,IAWAgS,eAAA,SAAAxhB,EAAA8B,GACA,GAAA4c,GAAA/c,EAAAC,QAAA,OAAAmB,QAAA,kBAAAjB,GACAgB,EAAAnB,EAAAC,QAAA,OAAAmB,QAAA,qBACAgI,EAAAjI,EAAAE,IAAA,KAGA0b,GAAA9V,IAAA,QAAA8V,EAAA1b,IAAA,SAAA,QAEA,IAAAye,GAAA9f,EAAAC,QAAAmJ,GAAAhI,QAAA,YACA2b,GAAA9V,IAAA,KAAA6Y,GAEA9f,EAAAC,QAAAmJ,GAAAhI,QAAA,MAAA2b,EAEA,IAAA1O,IACA+Q,OAAAjf,EAAAkB,IAAA,cACAgN,MAAAlO,EAAAkB,IAAA,SACA2X,OAAA,aACAL,SAAA,cAGA1S,GACA3C,WAAAtD,EAAAC,QAAAmJ,GAAAhI,QAAA,kBAGApB,GAAAC,QAAA,WAAAmB,QAAA,kBAAA,kBAAA2b,EAAA,KAAA1O,EAAApI,GAGAjG,EAAAC,QAAA,OAAAmB,QAAA,eAKA,OAAA6G,KCjHArO,EAAA,8BAAA,WACA,GAAAuG,GAAA0J,SAAAC,MAAApK,QACAqK,UACAtD,QAAA,IAIA,OAAAtG,KCPAvG,EAAA,iCAAA,4BAAA,SAAAmmB,GACA,GAAAzc,GAAAuG,SAAAK,WAAAxK,QACAS,MAAA4f,GAEA,OAAAzc,KCFA1J,EAAA,6BACA,iCACA,SACAomB,GAEA,GAAA/X,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WACAC,KAAAmgB,qBAAA,GAAAD,EACA,IAAA/d,GAAAnC,IACAsC,GAAAkK,KAAA7E,UAAA,SAAAyY,GACA,GAAAA,EAAAC,KACA,GAAAA,GAAA,GAAAH,GAAAE,EAAAC,UAEA,IAAAA,GAAA,EAGAle,GAAAge,qBAAApH,KACAta,GAAA2hB,EAAA3hB,GACA8P,MAAA6R,EAAA7R,MACA8R,KAAAA,KAIA,IAAAA,GAAA,GAAAH,GAEApZ,EAAA5G,EAAAC,QAAA,UAAAmB,QAAA,iBACAgB,GAAAkK,KAAA1F,EAAAqK,OAAA,SAAA0F,GAEA,WAAAA,EAAAtV,IAAA,SACA8e,EAAAtH,KACAta,GAAAoY,EAAAtV,IAAA,MACAgN,MAAAsI,EAAAtV,IAAA,SACA+e,IAAAne,EAAAoe,kBAAA1J,EAAAtV,IAAA,YAKAvB,KAAAmgB,qBAAA5e,IAAA,UAAA4F,IAAA,OAAAkZ,GAEArgB,KAAAke,kBACAle,KAAAmP,MAAA,EAEAnP,KAAAC,SAAAC,EAAAC,QAAA,aAAA,iBAAAH,KAAAwgB,eACAxgB,KAAAC,SAAAC,EAAAC,QAAA,UAAA,YAAAH,KAAAygB,cACAzgB,KAAAC,SAAAC,EAAAC,QAAA,UAAA,eAAAH,KAAA0gB,iBAEAxgB,EAAAC,QAAA,aAAAmE,MAAA,wBAAAtE,KAAA2gB,qBAAA3gB,MAGAE,EAAAC,QAAA,aAAAmE,MAAA,gBAAAtE,KAAA4gB,aAAA5gB,MAGAA,KAAAC,SAAAC,EAAAC,QAAA,oBAAA,iBAAAH,KAAAyf,WAGAvf,EAAAC,QAAA,OAAAmE,MAAA,mBAAAtE,KAAA6gB,gBAAA7gB,MAGAE,EAAAC,QAAA,OAAAmE,MAAA,qBAAAtE,KAAAugB,kBAAAvgB,OAcAwgB,cAAA,SAAAjiB,EAAAuiB,GACA,GAAAC,GAAAvhB,OAAAQ,KAAAke,gBAAAxY,MACAsb,EAAAxhB,OAAAQ,KAAAke,gBAAA+C,QACAC,EAAAF,EAAAF,EAAAvf,IAAA,OAAA9F,MACAslB,GAAAA,EAAAI,OAAA,EAAAH,GAAAF,EAAAvf,IAAA,OAAAwf,EAAAI,OAAAH,GACAxhB,OAAAQ,KAAAke,gBAAAxY,IAAAqb,GAAAE,MAAAC,GAAAngB,QAAA,WAGA0f,aAAA,SAAAxE,GAEA,WAAAA,EAAA1a,IAAA,SACAvB,KAAAmgB,qBAAA5e,IAAA,UAAAA,IAAA,QAAAwX,KACAta,GAAAwd,EAAA1a,IAAA,MACAgN,MAAA0N,EAAA1a,IAAA,SACA+e,IAAAtgB,KAAAugB,kBAAAtE,EAAA1a,IAAA,WAKAmf,gBAAA,SAAAzE,GACA,GAAAmF,GAAAnF,EAAA1a,IAAA,MACAuf,EAAA9gB,KAAAmgB,qBAAA5e,IAAA,UAAAA,IAAA,QAAAA,IAAA6f,EACAphB,MAAAmgB,qBAAA5e,IAAA,UAAAA,IAAA,QAAAib,OAAAsE,IAGAO,cAAA,SAAA9iB,IACA,YAAAiB,OAAAjB,EAAA6G,QAAA,GAAAvF,SAAA,SAAAL,OAAAjB,EAAA6G,QAAA,GAAAvF,UACAL,OAAAjB,EAAA6G,QAAAZ,SAAAtC,KAAA,eAAAgQ,SAIAoP,gBAAA,SAAA/iB,GACA,GAAAyB,KAAAmP,KAAA,CACA5Q,EAAAgjB,gBACA,IAAAC,GAAAxhB,KAAA4W,OAAA2F,OAAA5V,QAAA,IAAA,EACA6a,IACAxhB,KAAAwgB,cAAAjiB,EAAAijB,KAKAC,YAAA,SAAAljB,GACAyB,KAAAmP,OACA5Q,EAAAgjB,iBACAvhB,KAAA0hB,gBAAA,QAIAC,cAAA,SAAApjB,GACAyB,KAAAmP,OACA5Q,EAAAgjB,iBACAvhB,KAAA0hB,gBAAA,UAIAA,gBAAA,SAAAE,GACA,GAAA,QAAAA,EACA,GAAAC,GAAA,MAEA,IAAAA,GAAA,EAGA,IAAA,EAAA7hB,KAAA4W,OAAA2F,OAAA5V,QAAA,IAAAlL,OAAA,CACA,GAAA+lB,GAAAxhB,KAAA4W,OAAA2F,OAAA5V,QAAA,IAAA,GACAmb,EAAA9hB,KAAA4W,OAAA1a,QAAAslB,EACAA,GAAAra,IAAA,UAAA,EAEA,IAAA4a,GAAA/hB,KAAA4W,OAAAzF,OAAA2Q,EAAAD,EACAE,IACAA,EAAA5a,IAAA,UAAA,OAKA,GAAAnH,KAAA4W,OAAA2F,OAAA5V,QAAA,IACA8Q,QAAAC,IAAA,UACA,EAAA1X,KAAAgiB,SAAAzF,OAAA5V,QAAA,IACA8Q,QAAAC,IAAA,YAGA,EAAA1X,KAAA4W,OAAAzF,OAAA1V,OAEAuE,KAAA4W,OAAAzF,OAAA,GAAAhK,IAAA,UAAA,GAGAnH,KAAAiiB,OAAA9Q,OAAA,GAAAhK,IAAA,UAAA,IAKAwZ,qBAAA,SAAAjV,GACA1L,KAAAke,eAAAxS,GAGAkV,aAAA,WACA,MAAA5gB,MAAAmgB,sBAGA+B,WAAA,SAAA/S,GACAnP,KAAAmP,KAAAA,EACA7M,EAAAkK,KAAAxM,KAAAmgB,qBAAA5e,IAAA,UAAA4P,OAAA,SAAA9Q,GACAA,EAAA8G,IAAA,UAAA,MAIAsY,UAAA,SAAAxD,GACA,GAAAkG,GAAAlG,EAAA1a,IAAA,OACA6gB,EAAApiB,KAAAmgB,qBAAA5e,IAAA,UAAAA,IAAA,QAAAA,IAAA0a,EAAA1a,IAAA,MACA,oBAAA6gB,IACAA,EAAAjb,IAAA,MAAAnH,KAAAugB,kBAAA4B,KAKA5B,kBAAA,SAAA1W,GACA,MAAA,UAAAA,EAAA,KAGAgX,gBAAA,SAAA9S,EAAA2R,EAAAvM,GACA,GAAAkP,GAAAriB,KAAAugB,kBAAAb,EAAA4C,oBAAA,KACAH,EAAAniB,KAAAugB,kBAAAb,EAAAne,IAAA,QACAghB,EAAApP,EAAA5R,IAAA,QACAihB,EAAAzU,EAAAxM,IAAAghB,EACA,IAAAC,EAAA,CACA,GAAAC,GAAA,GAAAC,QAAAL,EAAA,IACAM,QAAAH,EAAA3mB,QAAA4mB,EAAAN,GACApU,EAAA5G,IAAAob,EAAAI,WAMA,OAAAxa,KC5MArO,EAAA,qCAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,uBAAAH,KAAA4iB,sBAGAA,oBAAA,SAAAzP,EAAApF,GACA,UAAAoF,EAAA5R,IAAA,UAOA,OAAA4G,KCjBArO,EAAA,0BAAA,WACA,GAAAuG,GAAA0J,SAAAC,MAAApK,UAIA,OAAAS,KCLAvG,EAAA,6BAAA,wBAAA,SAAA+oB,GACA,GAAArf,GAAAuG,SAAAK,WAAAxK,QACAS,MAAAwiB,GAEA,OAAArf,KCJA1J,EAAA,kCAAA,WACA,GAAAuG,GAAA0J,SAAAC,MAAApK,QACAqK,UACAwE,SAAA,IAIA,OAAApO,KCPAvG,EAAA,qCAAA,gCAAA,SAAAgpB,GACA,GAAAtf,GAAAuG,SAAAK,WAAAxK,QACAS,MAAAyiB,GAEA,OAAAtf,KCJA1J,EAAA,oCAAA,WACA,GAAAuG,GAAA0J,SAAAC,MAAApK,QACAqK,UACA7I,QAAA,KAIA,OAAAf,KCPAvG,EAAA,uCAAA,kCAAA,SAAAipB,GACA,GAAAvf,GAAAuG,SAAAK,WAAAxK,QACAS,MAAA0iB,GAEA,OAAAvf,KCCA1J,EAAA,4BACA,4BACA,+BACA,oCACA,uCACA,SACAkpB,EACApD,EACAqD,EACAxV,GAEA,GAAAtF,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAwD,WAAA,GAAAwf,GAEAhjB,KAAAkjB,kBAAA,GAAAzV,GAAAyV,kBAGA,IAAA/gB,GAAAnC,IAGAsC,GAAAkK,KAAA2W,cAAA,SAAAzW,GACA,GAAAkC,GAAA,GAAAqU,EAEA3gB,GAAAkK,KAAAE,EAAAkC,cAAA,SAAAwU,GACA,GAAAC,IACA9U,MAAA6U,EAAA7U,MACAE,QAAA2U,EAAA3U,QACAP,SAAA,GAAA0R,GAAAwD,EAAAlV,UAGAU,GAAAmK,IAAAsK,KAIA,mBAAAlhB,GAAA+gB,kBAAA3hB,IAAAmL,EAAA2C,UACAlN,EAAA+gB,kBAAA3hB,IAAAmL,EAAA2C,SAAA9N,IAAA,cAAA7E,KAAAgQ,EAAAjO,GAIA,IAAA6kB,IACA7kB,GAAAiO,EAAAjO,GACAkO,SAAAD,EAAAC,SACA4W,MAAA7W,EAAA6W,MACAC,WAAA9W,EAAA8W,WACA5U,cAAAA,EACA6U,gBAAA/W,EAAA+W,gBAGAthB,GAAAqB,WAAAuV,IAAAuK,KAIApjB,EAAAC,QAAA,UAAAmE,MAAA,WAAAtE,KAAA0jB,aAAA1jB,MACAE,EAAAC,QAAA,UAAAmE,MAAA,qBAAAtE,KAAA2jB,kBAAA3jB,MACAE,EAAAC,QAAA,UAAAmE,MAAA,mBAAAtE,KAAA4jB,gBAAA5jB,MAEAA,KAAAC,SAAAC,EAAAC,QAAA,UAAA,kBAAAH,KAAA6jB,iBAUAH,aAAA,SAAAjlB,GACA,MAAAuB,MAAAwD,WAAAjC,IAAA9C,IAUAklB,kBAAA,SAAAllB,GACA,MAAAuB,MAAAwD,YAUAqgB,eAAA,SAAAtlB,GACA,GAAAmO,GAAAlN,OAAAjB,EAAA6G,QAAAe,KAAA,KACAjG,GAAAC,QAAA,UAAAmB,QAAA,kBAAAoL,IASAkX,gBAAA,WACA,MAAA5jB,MAAAkjB,oBAIA,OAAA/a,KC/GArO,EAAA,sCAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,iBAAAH,KAAA8jB,WACA9jB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,gBAAAH,KAAA+jB,UAKA7jB,EAAAC,QAAA,mBAAAmE,MAAA,sBAAAtE,KAAAgkB,+BAAAhkB,OAgBA8jB,UAAA,SAAAG,EAAAjZ,GACAhL,KAAAgJ,SAAA9I,EAAAC,QAAA,OAAAmB,QAAA,gBACAtB,KAAAkkB,OAAAhkB,EAAAC,QAAA,OAAAmB,QAAA,cACA9B,OAAAQ,KAAAgJ,UAAA,GAAAmb,MAAAC,YAAA,WAAA,UAAA,aACA5kB,OAAAQ,KAAAkkB,QAAA,GAAAC,MAAAC,YAAA,WAAA,UAAA,aAEApkB,KAAAqkB,qBAAA7kB,OAAAwL,EAAAH,QAAAc,SAYAoY,SAAA,SAAAE,EAAAjZ,GACAxL,OAAAQ,KAAAgJ,UAAA,GAAAmb,MAAAC,YAAA,WAAA,SAAA,aACA5kB,OAAAQ,KAAAkkB,QAAA,GAAAC,MAAAC,YAAA,WAAA,SAAA,cAGAJ,+BAAA,WACA,MAAAhkB,MAAAqkB,uBAIA,OAAAlc,KCtDArO,EAAA,oCAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,yBAAAH,KAAA8jB,WACA9jB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,wBAAAH,KAAA+jB,WAcAD,UAAA,SAAAG,EAAAjZ,GACAhL,KAAAgJ,SAAA9I,EAAAC,QAAA,OAAAmB,QAAA,gBACAtB,KAAAkkB,OAAAhkB,EAAAC,QAAA,OAAAmB,QAAA,cACA9B,OAAAQ,KAAAgJ,UAAA,GAAAmb,MAAAC,YAAA,WAAA,UAAA,aACA5kB,OAAAQ,KAAAkkB,QAAA,GAAAC,MAAAC,YAAA,WAAA,UAAA,YAEA,IAAAE,GAAApkB,EAAAC,QAAA,UAAAmB,QAAA,eACAiB,EAAAD,EAAAxC,SAAAN,OAAA,+BAAA+C,QAAAgiB,IAAAD,EAAAnT,OAAA1V,QACA+D,QAAAwL,EAAAH,QAAAtI,KAAAA,GACA/C,OAAAwL,EAAAH,QAAA3Q,KAAA,KAAA,yBACAsF,OAAAwL,EAAAwH,MAAAvJ,IAAA,UAAA,QAWA8a,SAAA,SAAAE,EAAAjZ,GACAxL,OAAAQ,KAAAgJ,UAAA,GAAAmb,MAAAC,YAAA,WAAA,SAAA,aACA5kB,OAAAQ,KAAAkkB,QAAA,GAAAC,MAAAC,YAAA,WAAA,SAAA,eAIA,OAAAjc,KC9CArO,EAAA,yCAAA,uCAAA,SAAA2T,GACA,GAAAtF,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAwD,WAAA,GAAAiK,KAEAhP,GAAA,QACAkO,SAAA,eACAvL,QAAA,WACAqL,iBAIAvM,EAAAC,QAAA,UAAAmE,MAAA,kBAAAtE,KAAAwkB,eAAAxkB,OAGAwkB,eAAA,WACA,MAAAxkB,MAAAwD,aAIA,OAAA2E,KClBArO,EAAA,8BAAA,mCAAA,SAAA6T,GACA,GAAAxF,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAwD,WAAA,GAAAmK,GAEAzN,EAAAC,QAAA,UAAAmE,MAAA,kBAAAtE,KAAA6jB,eAAA7jB,MACAE,EAAAC,QAAA,UAAAmE,MAAA,qBAAAtE,KAAAsK,kBAAAtK,MACAE,EAAAC,QAAA,UAAAmE,MAAA,cAAAtE,KAAAykB,qBAAAzkB,MACAE,EAAAC,QAAA,UAAAmE,MAAA,eAAAtE,KAAA0kB,iBAAA1kB,MACAE,EAAAC,QAAA,UAAAmE,MAAA,gBAAAtE,KAAA2kB,kBAAA3kB,MAEAA,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,0BAAAH,KAAAsK,mBAEAtK,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,qBAAAH,KAAA4kB,oBAGAH,qBAAA,WACA,MAAAzkB,MAAAwD,YAUAqgB,eAAA,SAAAnX,GAEA,GAAA4W,GAAApjB,EAAAC,QAAA,UAAAmB,QAAA,WAAAoL,GAEAsT,EAAA,mBAAAxgB,OAAAqlB,MAEA1e,GACA1H,GAAAuhB,EAEAvQ,KAAA6T,EAAA/hB,IAAA,MAEAoL,SAAA2W,EAAA/hB,IAAA,YAIA,OADAvB,MAAAwD,WAAAuV,IAAA5S,GACA6Z,GAWA1V,kBAAA,SAAA/L,EAAA8B,GACAL,KAAAwD,WAAAgZ,OAAAnc,IASAukB,kBAAA,WACA,GAAA,GAAA5kB,KAAAwD,WAAA2N,OAAA1V,OAAA,CAEA,GAAAqL,GAAA5G,EAAAC,QAAA,UAAAmB,QAAA,iBAIAgB,GAAAkK,KAAAxM,KAAAwD,WAAA2N,OAAA,SAAA9Q,GAEA,GAAA2f,GAAA9f,EAAAC,QAAA,UAAAmB,QAAA,aAEAwjB,GAAArmB,GAAAuhB,EAAAzR,MAAAlO,EAAAkB,IAAA,YAAAmL,KAAArM,EAAAkB,IAAA,SAEA0b,EAAA/c,EAAAC,QAAA,UAAAmB,QAAA,MAAAwjB,GAAA,GAEAvW,GACA+Q,OAAA,QACA/Q,MAAA0O,EAAA1b,IAAA,SACA2X,OAAA,QACAL,SAAA,YAEA1S,GACA3C,WAAAsD,EAEA5G,GAAAC,QAAA,WAAAmB,QAAA,kBAAA,YAAA2b,EAAA,KAAA1O,EAAApI,KAIAW,EAAA/F,QAAA,QAAA+F,GAEA9G,KAAAwD,WAAAqK,QAGA3N,EAAAC,QAAA,UAAAmB,QAAA,gBASAojB,iBAAA,WAEA,GAAAK,GAAA7kB,EAAAC,QAAA,OAAAmB,QAAA,sBAEA0jB,EAAAxlB,OAAAulB,GAAApa,SAAA,UAEArI,GAAAkK,KAAAxM,KAAAwD,WAAA2N,OAAA,SAAA0F,GAEA,GAAAoO,GAAApO,EAAAtV,IAAA,MACA2jB,EAAAF,EAAA9oB,QAAA+oB,EAEApO,GAAA1P,IAAA,QAAA+d,KAGAllB,KAAAwD,WAAAyV,QAGA0L,kBAAA,WACA3kB,KAAAwD,WAAAqK,UAKA,OAAA1F,KCpIArO,EAAA,sCAAA,mCAAA,SAAA6T,GACA,GAAAxF,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,iBAAAH,KAAAmlB,gBACAnlB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,gBAAAH,KAAAolB,mBAEAplB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,uBAAAH,KAAAqlB,qBACArlB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,oBAAAH,KAAAslB,kBACAtlB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,mBAAAH,KAAAulB,iBACAvlB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,qBAAAH,KAAAwlB,mBACAxlB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,oBAAAH,KAAAylB,mBAUAJ,oBAAA,SAAAra,GACA,GAAAxL,OAAAwL,EAAAwH,MAAAJ,SAAA,wBAAA,CACA,GAAA1F,GAAAlN,OAAAwL,EAAAwH,MAAArM,KAAA,MACA6Z,EAAA9f,EAAAC,QAAA,UAAAmB,QAAA,kBAAAoL,EACAlN,QAAAwL,EAAAH,QAAA3Q,KAAA,KAAA8lB,GACA9f,EAAAC,QAAA,UAAAmB,QAAA,gBACA9B,OAAAwL,EAAAH,QAAA2R,SACAtc,EAAAC,QAAA,mBAAAY,QAAA,iBAAA2L,KASAyY,eAAA,WACA,GAAAO,GAAAxlB,EAAAC,QAAA,OAAAmB,QAAA,qBACA9B,QAAAkmB,GAAA7c,SAAA,wBASAuc,kBAAA,WACA,GAAAM,GAAAxlB,EAAAC,QAAA,OAAAmB,QAAA,qBACA9B,QAAAkmB,GAAA5c,YAAA,wBAWAwc,iBAAA,SAAA/mB,EAAAyM,GACA,GAAAxL,OAAAwL,EAAAwH,MAAAJ,SAAA,wBAAA,CACA,GAAA1F,GAAAlN,OAAAwL,EAAAwH,MAAArM,KAAA,MACAmd,EAAApjB,EAAAC,QAAA,UAAAmB,QAAA,WAAAoL,GACAC,EAAA2W,EAAA/hB,IAAA,WACAvB,MAAA2lB,cAAA3a,EAAAH,OACArL,OAAAwL,EAAAH,QAAAtI,KAAAoK,EAAA,qDACAnN,OAAAwL,EAAAH,QAAA/B,YAAA,gBAAAD,SAAA,gBAAAI,KAAAsC,QAAA,MAAA5B,MAAA,GAAA8B,OAAA,IACA,IAAAsZ,GAAA7kB,EAAAC,QAAA,OAAAmB,QAAA,qBACA9B,QAAAulB,GAAA3S,SAAA,gBACA5S,OAAAulB,GAAAlc,SAAA,wBAaA0c,gBAAA,SAAAva,GACA,GAAAxL,OAAAwL,EAAAwH,MAAAJ,SAAA,wBAAA,CACA,GAAAwT,GAAA1lB,EAAAC,QAAA,mBAAAmB,QAAA,sBACA9B,QAAAQ,KAAA2lB,eAAApjB,KAAA/C,OAAAomB,GAAArjB,QACA/C,OAAAQ,KAAA2lB,eAAA7c,YAAA,gBAAAD,SAAA,eACA,IAAAkc,GAAA7kB,EAAAC,QAAA,OAAAmB,QAAA,qBACA9B,QAAAulB,GAAA3S,SAAA,gBACA5S,OAAAulB,GAAAjc,YAAA,wBAaA0c,kBAAA,SAAAxa,GACAxL,OAAAwL,EAAAwH,MAAAjP,OACA/D,OAAAwL,EAAAwH,MAAAvJ,KAAAwF,QAAA,SAAAlD,QAAA,QACA/L,OAAAwL,EAAAH,QAAA5B,IAAA,UAAA,QAUAwc,iBAAA,SAAAza,GACAxL,OAAAwL,EAAAwH,MAAAvJ,IAAA,UAAA,IACAzJ,OAAAwL,EAAAH,QAAA2R,WAKA,OAAArU,KC5HArO,EAAA,kCAAA,uCAAA,SAAA2T,GACA,GAAAtF,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,gBAAAH,KAAAqN,mBAaAA,iBAAA,SAAA4X,EAAA1mB,GAEA,GAAA,IAAAiB,OAAAiG,KAAAwf,GAAA,CACA,GAAAY,KAKAvjB,GAAAkK,KAAAxM,KAAA8lB,iBAAAb,GAAA,SAAA5kB,GACAwlB,EAAAnpB,KAAA2D,EAAAkB,IAAA,QAIA,IAAAqM,GAAA,GAAAH,KAEAhP,GAAA,WACAkO,SAAA,kBACAF,WAAAoZ,IAKA3lB,GAAAC,QAAA,UAAAY,QAAA,oBAAA6M,GAEArP,EAAAgH,WACA,EAAAsgB,EAAApqB,SACAyE,EAAAC,QAAA,UAAAmB,QAAA,kBAAAukB,EAAA,IACA3lB,EAAAC,QAAA,UAAAmB,QAAA,qBAKApB,GAAAC,QAAA,UAAAY,QAAA,iBAWA+kB,iBAAA,SAAAb,GACAA,EAAAA,EAAAc,aAEA,IAAAviB,GAAAtD,EAAAC,QAAA,UAAAmB,QAAA,sBAMAukB,EAAAriB,EAAAwiB,OAAA,SAAA3lB,GACA,GAAA4lB,IAAA,CA+BA,OA5BA,IAAA5lB,EAAAkB,IAAA,MAAAwkB,cAAA7pB,QAAA+oB,GACAgB,GAAA,EACA,IAAA5lB,EAAAkB,IAAA,YAAAwkB,cAAA7pB,QAAA+oB,KACAgB,GAAA,GAMA5lB,EAAAkB,IAAA,SAAA,GAAA0jB,EAAA/oB,QAAA,MACAoG,EAAAkK,KAAAnM,EAAAkB,IAAA,QAAA,SAAA+e,GACA2E,EAAAppB,QAAA,IAAA,IAAAJ,OAAA,GACA,IAAA6kB,EAAAyF,cAAA7pB,QAAA+oB,EAAAppB,QAAA,IAAA,OACAoqB,GAAA,KAOA5lB,EAAAkB,IAAA,UACAe,EAAAkK,KAAAnM,EAAAkB,IAAA,SAAA,SAAAgiB,GACA,IAAAA,EAAAwC,cAAA7pB,QAAA+oB,KACAgB,GAAA,KAKAA,GAGA,OAAAJ,KAIA,OAAA1d,KC3GArO,EAAA,iCAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,iBAAAH,KAAAmlB,gBACAnlB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,gBAAAH,KAAAolB,mBAEAplB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,yBAAAH,KAAAmlB,gBACAnlB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,wBAAAH,KAAAolB,mBAUAllB,EAAAC,QAAA,OAAAmE,MAAA,yBAAAtE,KAAAkmB,sBAAAlmB,MACAE,EAAAC,QAAA,OAAAmE,MAAA,sBAAAtE,KAAAmmB,mBAAAnmB,MACAE,EAAAC,QAAA,OAAAmE,MAAA,qBAAAtE,KAAAomB,kBAAApmB,MACAE,EAAAC,QAAA,OAAAmE,MAAA,sBAAAtE,KAAAqmB,mBAAArmB,MACAE,EAAAC,QAAA,OAAAmE,MAAA,uBAAAtE,KAAAsmB,oBAAAtmB,MACAE,EAAAC,QAAA,OAAAmE,MAAA,wBAAAtE,KAAAumB,qBAAAvmB,OASAmlB,eAAA,WACA,GAAAJ,GAAA7kB,EAAAC,QAAA,UAAAmB,QAAA,iBACA9B,QAAAulB,GAAAlc,SAAA,wBASAuc,kBAAA,WACA,GAAAL,GAAA7kB,EAAAC,QAAA,UAAAmB,QAAA,iBACA9B,QAAAulB,GAAAjc,YAAA,wBAUAod,sBAAA,SAAAlb,GAIA,GAAAxL,OAAAwL,EAAAwH,MAAAJ,SAAA,wBAAA,CAEA,GAAA1F,GAAAlN,OAAAwL,EAAAwH,MAAArM,KAAA,MAEA6Z,EAAAhgB,KAAAwmB,SAAA9Z,GAAA,EAKAlN,QAAAwL,EAAAH,QAAA3Q,KAAA,KAAA8lB,GACA9f,EAAAC,QAAA,UAAAmB,QAAA,eAEA9B,OAAAwL,EAAAH,QAAA2R,SAEAtc,EAAAC,QAAA,UAAAY,QAAA,iBAAA2L,OACA,IAAAlN,OAAAwL,EAAAwH,MAAAJ,SAAA,YAAA,CAEA,GAAAjQ,GAAAnC,IAEAE,GAAAC,QAAA,UAAAmB,QAAA,eAEA,IAAAgjB,GAAApkB,EAAAC,QAAA,UAAAmB,QAAA,eAEAyjB,EAAA7kB,EAAAC,QAAA,UAAAmB,QAAA,iBAEA,IAAA9B,OAAAulB,GAAA3S,SAAA,eAEA,GAAA4S,GAAAxlB,OAAAulB,GAAApa,SAAA,eAGA,IAAAqa,IAAA,wBAIA,IAAAyB,GAAAzB,EAAA9oB,QAAA,wBAIAoG,GAAAkK,KAAA8X,EAAAnT,OAAA,SAAA0F,EAAApZ,GAEA,GAAAuiB,GAAA7d,EAAAqkB,SAAA3P,EAAAtV,IAAA,QAEAyjB,GAAAhpB,OAAAyqB,EAAAhpB,EAAA,EAAAuiB,IAIA,IAAAyG,GAAAzB,EAAA9oB,QAAA,wBACA8oB,GAAAhpB,OAAAyqB,EAAA,GAEAvmB,EAAAC,QAAA,UAAAmB,QAAA,cAAA0jB,GAEA9kB,EAAAC,QAAA,UAAAmB,QAAA,iBAEA9B,OAAAwL,EAAAH,QAAA2R,WAaAgK,SAAA,SAAA9Z,EAAAga,GAEAA,EAAAA,IAAA,CAEA,IAAApD,GAAApjB,EAAAC,QAAA,UAAAmB,QAAA,WAAAoL,GAEAsT,EAAA9f,EAAAC,QAAA,UAAAmB,QAAA,aAEA2b,EAAA/c,EAAAC,QAAA,UAAAmB,QAAA,OAAA7C,GAAAuhB,EAAAzR,MAAA+U,EAAA/hB,IAAA,YAAAmL,KAAA4W,EAAA/hB,IAAA,OAAAmlB,GAEAnY,GACA+Q,OAAA,QACA/Q,MAAA0O,EAAA1b,IAAA,SACA2X,OAAA,QACAL,SAAA,YAGA1S,GACA3C,WAAAtD,EAAAC,QAAA,UAAAmB,QAAA,kBAKA,OAFApB,GAAAC,QAAA,WAAAmB,QAAA,kBAAA,YAAA2b,EAAA,KAAA1O,EAAApI,GAEA6Z,GAUAmG,mBAAA,SAAAnb,GACA,GAAAxL,OAAAwL,EAAAwH,MAAAJ,SAAA,wBAAA,CAEA,GAAA1F,GAAAlN,OAAAwL,EAAAH,QAAA1E,KAAA,MAEAmd,EAAApjB,EAAAC,QAAA,UAAAmB,QAAA,WAAAoL,GAEA6B,EAAA+U,EAAA/hB,IAAA,YAEAwjB,EAAA7kB,EAAAC,QAAA,UAAAmB,QAAA,kBAEAqlB,EAAAnnB,OAAAulB,GAAApb,OAEA3J,MAAA2lB,cAAA3a,EAAAH,OAEArL,OAAAwL,EAAAH,QAAAtI,KAAAgM,GAEA/O,OAAAwL,EAAAH,QAAA/B,YAAA,gBAAAD,SAAA,iBAAAI,KAAAU,MAAAgd,EAAAlb,OAAA,SAEAjM,OAAAulB,GAAA3S,SAAA,gBACA5S,OAAAulB,GAAAlc,SAAA,0BAEA,IAAArJ,OAAAwL,EAAAwH,MAAAJ,SAAA,YAAA,CAEA,GAAA2S,GAAA7kB,EAAAC,QAAA,UAAAmB,QAAA,iBACA9B,QAAAulB,GAAA3S,SAAA,gBACA5S,OAAAulB,GAAAlc,SAAA,wBAaAud,kBAAA,SAAApb,GACA,GAAAxL,OAAAwL,EAAAwH,MAAAJ,SAAA,wBAAA,CAKA,GAAAwT,GAAA1lB,EAAAC,QAAA,mBAAAmB,QAAA,sBAEA9B,QAAAQ,KAAA2lB,eAAApjB,KAAA/C,OAAAomB,GAAArjB,QACA/C,OAAAQ,KAAA2lB,eAAA7c,YAAA,iBAAAD,SAAA,gBAAAI,KAAAU,MAAA,GAAA8B,OAAA,IAEA,IAAAsZ,GAAA7kB,EAAAC,QAAA,UAAAmB,QAAA,iBACA9B,QAAAulB,GAAA3S,SAAA,gBACA5S,OAAAulB,GAAAjc,YAAA,0BAEA,IAAAtJ,OAAAwL,EAAAwH,MAAAJ,SAAA,YAAA,CAEA,GAAA2S,GAAA7kB,EAAAC,QAAA,UAAAmB,QAAA,iBACA9B,QAAAulB,GAAA3S,SAAA,gBACA5S,OAAAulB,GAAAjc,YAAA,wBAcAud,mBAAA,SAAArb,GACAxL,OAAAwL,EAAAwH,MAAAvJ,IAAA,UAAA,IACAzJ,OAAAwL,EAAAH,QAAA2R,UAYA8J,oBAAA,SAAAtb,GAEAxL,OAAAwL,EAAAwH,MAAAJ,SAAA,yBAAA5S,OAAAwL,EAAAwH,MAAAJ,SAAA,aACA5S,OAAAwL,EAAAwH,MAAAvJ,IAAA,UAAA,OAAA1F,QAWAgjB,qBAAA,SAAAvb,GAIA,GAHA9K,EAAAC,QAAA,UAAAmB,QAAA,gBAGA9B,OAAAwL,EAAAwH,MAAAJ,SAAA,0BAAA5S,OAAAwL,EAAAwH,MAAAJ,SAAA,YAAA,CAEA,GAAAtL,GAAA5G,EAAAC,QAAA,UAAAmB,QAAA,kBACAslB,EAAApnB,OAAAwL,EAAAwH,MAAAtY,KAAA,MAAA2B,QAAA,SAAA,IACAgrB,EAAA/f,EAAAvF,IAAAqlB,GAGAzgB,GAAAyQ,UACAtU,GAAAkK,KAAA1F,EAAAqK,OAAA,SAAA0F,GACA,GAAAiQ,GAAAjQ,EAAAyL,oBAAA0C,MACA9D,EAAArK,EAAAtV,IAAA,QAEA4E,GAAAyQ,OAAAla,MACA2D,MAAAwW,EACAwE,KAAA,QACAa,OAAA4K,EACAtL,MAAA0F,KAKA,IAAA3S,IACA+Q,OAAA,QACA/Q,MAAAsY,EAAAtlB,IAAA,SACA2X,OAAA,mBAAA2N,EAAAvE,oBAAA0C,MAAA,OAAA6B,EAAAtlB,IAAA,SACAsX,SAAA,OAGA3Y,GAAAC,QAAA,WAAAmB,QAAA,kBAAA,aAAAulB,EAAA,KAAAtY,EAAApI,MAOA,OAAAgC,KC1SArO,EAAA,8BAAA,WACA,GAAAuG,GAAA0J,SAAAC,MAAApK,QACAqK,UACAuV,WAAA,QACAuH,aAAA,SACAlV,YAAA,GAGA9R,WAAA,WAEAC,KAAAM,GAAA,SAAAN,KAAAif,cAAAjf,KAGA,IAAAsjB,GAAApjB,EAAAC,QAAA,UAAAmB,QAAA,WAAAtB,KAAAuB,IAAA,SACAiiB,EAAAF,EAAA/hB,IAAA,cAGAY,EAAAnC,IACAsC,GAAAkK,KAAA8W,EAAA/hB,IAAA,mBAAA,SAAAmE,EAAAmE,GACA,mBAAA1H,GAAAZ,IAAAsI,IACA1H,EAAAgF,IAAA0C,EAAAnE,KAaAxF,EAAAC,QAAA,UAAAY,QAAA,kBAAAf,MACAE,EAAAC,QAAA,UAAAqjB,GAAAziB,QAAA,kBAAAf,MACAE,EAAAC,QAAA,UAAAH,KAAAuB,IAAA,SAAAR,QAAA,kBAAAf,MAEAA,KAAAC,SAAAC,EAAAC,QAAA,UAAA,kBAAAH,KAAAgnB,iBAUA/H,cAAA,SAAA5e,GACAH,EAAAC,QAAA,gBAAAmC,EAAAsH,KAAAvJ,EAAAib,qBAAA,IAAAva,QAAA,iBAAAf,MACAE,EAAAC,QAAA,OAAAY,QAAA,iBAAAf,OAGAgnB,eAAA,SAAAtH,EAAAvM,GACAjT,EAAAC,QAAA,OAAAmB,QAAA,mBAAAtB,KAAA0f,EAAAvM,KAIA,OAAA9S,KCtDAvG,EAAA,iCAAA,4BAAA,SAAAmiB,GACA,GAAAzY,GAAAuG,SAAAK,WAAAxK,QACAS,MAAA4b,EACAlQ,WAAA,QACAkb,OAAA,EAEAlnB,WAAA,WACAC,KAAAM,GAAA,MAAAN,KAAAwmB,SAAAxmB,MACAA,KAAAM,GAAA,SAAAN,KAAAknB,YAAAlnB,MACAA,KAAAqc,WAUAmK,SAAA,SAAAnmB,GACAL,KAAAqc,OAAA3f,KAAA2D,EAAAkB,IAAA,QASA2lB,YAAA,SAAA7mB,GACAL,KAAA2W,WAAAtW,EAAAkB,IAAA,OAAAlB,EAAAkB,IAAA,QAGA,OAAAiC,KCpCA1J,EAAA,2BAAA,gCAAA,4BAAA,SAAAgN,EAAAmV,GACA,GAAA9T,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAwD,WAAA,GAAAsD,GAAA8Q,kBAAAhB,QAEA5W,KAAAwD,WAAAmT,cAGAzW,EAAAC,QAAA,UAAAmE,MAAA,iBAAAtE,KAAAmnB,mBAAAnnB,MACAE,EAAAC,QAAA,UAAAmE,MAAA,YAAAtE,KAAAonB,SAAApnB,MACAE,EAAAC,QAAA,UAAAmE,MAAA,YAAAtE,KAAAqnB,cAAArnB,MAEAE,EAAAC,QAAA,UAAAmE,MAAA,MAAAtE,KAAAwmB,SAAAxmB,MACAE,EAAAC,QAAA,UAAAmE,MAAA,SAAAtE,KAAAsnB,YAAAtnB,MACAE,EAAAC,QAAA,UAAAmE,MAAA,cAAAtE,KAAAunB,WAAAvnB,OAGAmnB,mBAAA,WACA,MAAAnnB,MAAAwD,YAGA4jB,SAAA,SAAA3oB,GACA,MAAAuB,MAAAwD,WAAAjC,IAAA9C,IAUA+nB,SAAA,SAAArgB,EAAAugB,GAEA,GADAA,EAAAA,IAAA,GACA,GAAAvgB,YAAA4D,UAAAC,MACA,GAAA3J,GAAA,GAAA4b,GAAA9V,OAEA,IAAA9F,GAAA8F,CASA,OANAnG,MAAAwD,WAAAuV,IAAA1Y,GAAAqmB,OAAAA,IAEAxmB,EAAAC,QAAA,OAAAmB,QAAA,iBAAA,SAAA,GAEApB,EAAAC,QAAA,UAAAY,QAAA,YAAAV,GAEAA,GAYAmnB,mBAAA,SAAA/oB,EAAAnE,EAAA0C,GACA,GAAAif,GAAAjc,KAAAwD,WAAAjC,IAAA9C,EACAwd,GAAA9U,IAAA7M,EAAA0C,IAUAuqB,WAAA,SAAAvC,EAAAha,GAEA,GAAA+Z,GAAA7kB,EAAAC,QAAA,UAAAmB,QAAA,iBACA,IAAA9B,OAAAulB,GAAA3S,SAAA,eAAA,CAEA,GAAA4S,GAAAA,GAAAxlB,OAAAulB,GAAApa,SAAA,UAEArI,GAAAkK,KAAAxM,KAAAwD,WAAA2N,OAAA,SAAA0F,GAEA,GACApY,IADAoY,EAAAtV,IAAA,SACAsV,EAAAtV,IAAA,MACA,IAAA/B,OAAAyS,UAAAxT,GACA,GAAAwmB,GAAA,SAAAxmB,MAEA,IAAAwmB,GAAAxmB,CAGA,IAAAyiB,GAAA8D,EAAA9oB,QAAA+oB,GAAA,CACApO,GAAA1P,IAAA,QAAA+Z,KAEAlhB,KAAAwD,WAAAyV,OAGA/Y,EAAAC,QAAA,OAAAmB,QAAA,iBAAA,SAAA,GAEApB,EAAAC,QAAA,OAAAmB,QAAA,eAWAgmB,YAAA,SAAAjnB,GACAH,EAAAC,QAAA,UAAAY,QAAA,eAAAV,GACAL,KAAAwD,WAAAgZ,OAAAnc,GAEAH,EAAAC,QAAA,OAAAmB,QAAA,iBAAA,SAAA,GACApB,EAAAC,QAAA,OAAAmB,QAAA,cAWA+lB,cAAA,WACA,GAAAJ,GAAAjnB,KAAAwD,WAAAyjB,MAEA,OADAjnB,MAAAwD,WAAAyjB,SACA,OAAAA,IAIA,OAAA9e,KClIArO,EAAA,mCAAA,WACA,GAAAuG,GAAA0J,SAAAC,MAAApK,UAIA,OAAAS,KCLAvG,EAAA,sCAAA,iCAAA,SAAA2tB,GACA,GAAAjkB,GAAAuG,SAAAK,WAAAxK,QACAS,MAAAonB,EACA1b,WAAA,QAEAhM,WAAA,WAEAC,KAAAM,GAAA,OAAAN,KAAAqY,iBAAArY,MAEAA,KAAAM,GAAA,MAAAN,KAAA0nB,UAAA1nB,OAGAqY,iBAAA,WAEAnY,EAAAC,QAAA,mBAAAY,QAAA,eAAAf,OAGA0nB,UAAA,SAAArnB,EAAAmD,IACAnD,EAAAkB,IAAA,WAMA,OAAAiC,KAEA1J,EAAA,+CAAA,WCjCA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,MACAuQ,UAAA,eACAtQ,SAAA,oCACArB,GAAA,WACA,MAAAuB,MAAAK,MAAAkY,KAGAxY,WAAA,SAAAoG,GACAnG,KAAAmT,aAAAhN,EAAAgN,aACAnT,KAAA+N,UAAA5H,EAAA4H,UACA/N,KAAAwD,WAAA2C,EAAA3C,WACAxD,KAAA2nB,QAAAxhB,EAAAwhB,SAGApnB,SAAA,WAIAL,EAAAC,QAAA,WAAAH,KAAAmT,aAAA5R,IAAA,QAAA,WAAAR,QAAA,iBAAAf,KAAAK,MAAAL,KAAA+N,UAAA/N,OAGAgC,OAAA,WACAhC,KAAAK,MAAAkB,IAAA,SACA/B,OAAAQ,KAAAiC,IAAAC,KAAA,eAAAyD,QACA3F,KAAAK,MAAA8G,IAAA,OAAA,KAIAvG,QACAqS,eAAA,eACA3B,mBAAA,eACA0N,MAAA,kBAGA4I,aAAA,SAAArpB,GACA2B,EAAAC,QAAA,mBAAAY,QAAA,gBAAAxC,EAAAyB,KAAAK,MAAAL,KAAA+N,YAGA8Z,aAAA,SAAAtpB,GACA2B,EAAAC,QAAA,mBAAAY,QAAA,qBAAAf,KAAAK,MAAAL,KAAAwD,WAAAxD,KAAA+N,YAGA+Z,eAAA,SAAAvpB,GACA,IAAAA,EAAA+G,SACApF,EAAAC,QAAA,mBAAAY,QAAA,kBAAAf,KAAAwD,WAAAxD,KAAA+N,YAIA/M,gBAAA,WACA,GAAAmB,GAAAnC,IACA,QACA+nB,WAAA,WACA,MAAA5lB,GAAAwlB,YAOA,OAAAloB,KAGA3F,EAAA,8CAAA,WC/DA,GAAA2F,GAAAC,WAAAC,SAAAC,QACAC,QAAA,KACAC,SAAA,oCAGA,OAAAL,KAEA3F,EAAA,gDAAA,4CAAA,2CAAA,sCAAA,SAAAkuB,EAAAC,EAAAC,GCPA,GAAAzoB,GAAAC,WAAAmH,cAAAjH,QACAE,SAAA,6BACAiC,UAAAimB,EACAvd,UAAAwd,EAEAloB,WAAA,SAAAoG,GAMA,GAAAgiB,GAAAhiB,EAAA4H,UAAAxM,IAAAvB,KAAAK,MAAAkB,IAAA,QAEA,IAAA4mB,YAAApe,UAAAK,aACA+d,EAAA,GAAAD,GACAC,EAAApP,IAAA5S,EAAA4H,UAAAxM,IAAAvB,KAAAK,MAAAkB,IAAA,UACA4E,EAAA4H,UAAA5G,IAAAnH,KAAAK,MAAAkB,IAAA,QAAA4mB,GAAAzB,QAAA,KAGA1mB,KAAAwD,WAAA2kB,EACAnoB,KAAA+N,UAAA5H,EAAA4H,UACA/N,KAAA8N,kBAAAqF,aAAAnT,KAAAK,MAAAmD,WAAAxD,KAAAwD,WAAAuK,UAAA5H,EAAA4H,UAAA4Z,QAAA3nB,KAAAK,MAAAkB,IAAA,WAEA,IAAA5C,GAAAqB,KAAAK,MAAAkB,IAAA,OACA,IAAA5C,EACA,IAAA,GAAArE,KAAAqE,GACAA,EAAAZ,eAAAzD,IACA0F,KAAA+N,UAAAzN,GAAA,UAAAhG,EAAA0F,KAAAI,OAAAJ,OAMAwG,gBAAA,WACA,GAAA7H,GAAAqB,KAAAK,MAAAkB,IAAA,OACA,IAAA5C,EACA,IAAA,GAAArE,KAAAqE,GACAA,EAAAZ,eAAAzD,IACA0F,KAAA+N,UAAAtH,IAAA,UAAAnM,EAAA0F,KAAAI,SAMAG,SAAA,WACAP,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,KAEAR,KAAAQ,IAAAR,KAAAQ,IAAAC,WACAT,KAAAQ,IAAAE,SACAV,KAAAW,WAAAX,KAAAQ,IAEA,IAAA2B,GAAAnC,IACAR,QAAAQ,KAAAiC,IAAAC,KAAA,0BAAAyI,UACAyd,OAAA,UACAvd,OAAA,QACAD,YAAA,uCACAyd,sBAAA,EACA9c,QAAA,IACAT,UAAA,UAEAM,MAAA,SAAA7M,EAAAyM,GACA9K,EAAAC,QAAA,mBAAAmB,QAAA,uBAAA0J,IAGAK,KAAA,SAAA9M,EAAAyM,GACA9K,EAAAC,QAAA,mBAAAmB,QAAA,sBAAA0J,IAGAG,OAAA,SAAA5M,EAAAyM,GACA9K,EAAAC,QAAA,mBAAAmB,QAAA,wBAAA0J,EAAAhL,KAAAmC,MAOAjC,EAAAC,QAAA,WAAAH,KAAAK,MAAAkB,IAAA,SAAAR,QAAA,iBAAAf,KAAAK,MAAAL,KAAA+N,UAAA/N,OAGAgB,gBAAA,WACA,GAAAmB,GAAAnC,IACA,QACAsoB,cAAA,WACA,GAAAX,GAAA,mBAcA,OAbA,IAAA3nB,KAAA2nB,QAAAzrB,QAAA,WACAyrB,GAAA,oBAEA,IAAA3nB,KAAA2nB,QAAAzrB,QAAA,WACAyrB,GAAA,oBAEA,IAAA3nB,KAAA2nB,QAAAzrB,QAAA,UACAyrB,GAAA,yBAEA,IAAA3nB,KAAA2nB,QAAAzrB,QAAA,cACAyrB,GAAA,4DAEAA,GAAA,qBAIA7I,cAAA,WACA,MAAAxc,GAAAxC,SAAAN,OAAA,yBAAAQ,KAAA0M,MAAAnK,OAAAvC,OAGAmB,cAAA,WACA,GAAAC,GAAA,EAWA,OATAA,IADA,mBAAApB,MAAA2J,MACA3J,KAAA2J,MAEA,YAGA3J,KAAAmd,QACA/b,GAAA,aAGAA,GAGAyd,cAAA,WACA,GAAA7e,KAAArB,KACA,IAAA,GAAArE,KAAA0F,MAAArB,KACA,GAAAqB,KAAArB,KAAAZ,eAAAzD,IACA6H,EAAA4L,UAAAxM,IAAAjH,KAAA0F,KAAArB,KAAArE,GACA,MAAA,uBAKA,OAAA,IAGA8iB,YAAA,WACA,MAAApd,MAAAmd,MACAnd,KAAAmd,MAEA,MAKAnW,WAAA,SAAAC,EAAAlF,GACAvC,OAAAyH,EAAAhF,IAAAC,KAAA,0BAAAgF,OAAAnF,EAAAE,KAGArB,QACA2nB,oBAAA,kBAGAC,eAAA,SAAAjqB,GACA2B,EAAAC,QAAA,mBAAAY,QAAA,kBAAAf,KAAAwD,WAAAxD,KAAA+N,aAKA,OAAAtO,KClJA3F,EAAA,qCAAA,gCAAA,qCAAA,gDAAA,SAAA2tB,EAAAS,EAAAO,GACA,GAAAtgB,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAG,EAAAC,QAAA,mBAAAmE,MAAA,uBAAAtE,KAAAof,oBAAApf,MAGAA,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,gBAAAH,KAAA4nB,cACA5nB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,kBAAAH,KAAA0nB,WACA1nB,KAAAC,SAAAC,EAAAC,QAAA,mBAAA,qBAAAH,KAAA6nB,cAGA3nB,EAAAC,QAAA,mBAAAmE,MAAA,wBAAAtE,KAAA0oB,qBAAA1oB,MACAE,EAAAC,QAAA,mBAAAmE,MAAA,sBAAAtE,KAAA2oB,mBAAA3oB,MACAE,EAAAC,QAAA,mBAAAmE,MAAA,uBAAAtE,KAAA4oB,oBAAA5oB,OAYA4nB,aAAA,SAAArpB,EAAA8B,EAAA0N,GACA,GAAAzT,GAAAkF,OAAAjB,EAAA6G,QAAAe,KAAA,KACA,IAAA,YAAA7L,EACA,GAAAkF,OAAAjB,EAAA6G,QAAAiW,KAAA,WACA,GAAAre,GAAA,MAEA,IAAAA,GAAA,MAGA,IAAAA,GAAAwC,OAAAjB,EAAA6G,QAAAM,KAGA,IAAAwW,GAAA7b,EAAAkB,IAAAjH,EAEA+F,GAAA8G,IAAA7M,EAAA0C,GAEAgD,KAAA6oB,iBAAAxoB,EAAA0N,EAEA,IAAAyN,GAAAxe,EAEA4b,GACAyC,KAAA/gB,EACA4hB,OAAAA,EACAV,MAAAA,GAGAjN,GACA+Q,OAAAvR,EAAAxM,IAAA,cACAgN,MAAAR,EAAAxM,IAAA,SACA2X,OAAA,UAAA7Y,EAAAkB,IAAA,SAAA,IAAAjH,EAAA,iBAAA4hB,EAAA,OAAAV,EAGAtb,GAAAC,QAAA,WAAAmB,QAAA,kBAAA,gBAAAjB,EAAAuY,EAAArK,IAWAmZ,UAAA,SAAAlkB,EAAAuK,GACA,GAAA1N,GAAA,GAAAonB,IAAAlZ,MAAA,GAAAvR,MAAA,GAAA8rB,KAAA,GAAAC,SAAA,EAAA/D,MAAAxhB,EAAA/H,OAAAutB,OAAA,GACAxlB,GAAAuV,IAAA1Y,EAGA,IAAAkO,IACA+Q,OAAAvR,EAAAxM,IAAA,cACAgN,MAAAR,EAAAxM,IAAA,SACA2X,OAAA,eACAL,SAAA,WAGA3Y,GAAAC,QAAA,WAAAmB,QAAA,kBAAA,gBAAAjB,EAAA,KAAAkO,GAEAvO,KAAA6oB,iBAAAxoB,EAAA0N,IAYA8Z,aAAA,SAAAxnB,EAAAmD,EAAAuK,GACA,GAAAkP,GAAA/c,EAAAC,QAAA,OAAAmB,QAAA,kBAAAjB,GAGAkO,GACA+Q,OAAAvR,EAAAxM,IAAA,cACAgN,MAAAR,EAAAxM,IAAA,SACA2X,OAAA,UAAA+D,EAAA1b,IAAA,SAAA,WACAsX,SAAA,WAGA1S,GACA3C,WAAAA,EAGAtD,GAAAC,QAAA,WAAAmB,QAAA,kBAAA,mBAAA2b,EAAA,KAAA1O,EAAApI,EAEA,IAAAkS,GAAAnY,EAAAC,QAAA,WAAAmB,QAAA,wBACAgb,EAAAjE,EAAAkE,OAAAlc,MAAAA,GAEAiC,GAAAkK,KAAA8P,EAAA,SAAAxD,GACA,gBAAAA,GAAAvX,IAAA,SACAe,EAAAkK,KAAAsM,EAAAvX,IAAA,QAAA,SAAAwM,GACAA,EAAA1N,OAAA0N,IACAA,EAAA1N,MAAA4c,KAIAnE,EAAA3R,IAAA,QAAA8V,GACAnE,EAAA3R,IAAA,YAAA,KAGA3D,EAAAgZ,OAAAnc,GACAL,KAAA6oB,iBAAAxoB,EAAA0N,IAYA8a,iBAAA,SAAAxoB,EAAA0N,GACA7N,EAAAC,QAAA,OAAAY,QAAA,iBAAAV,IAUA+e,oBAAA,SAAA/e,GACA,MAAAooB,IAWAC,qBAAA,SAAA1d,EAAAL,EAAAsL,GACA,GAAAgT,GAAAzpB,OAAAmL,GAAAA,SAAA,WACAkc,EAAA5Q,EAAAzS,WAAAjC,KAAAgX,IAAA/Y,OAAAwL,EAAAwH,MAAAtY,KAAA,QACAiM,GACA3C,WAAAyS,EAAAzS,WACAkZ,aAEApa,GAAAkK,KAAAyc,EAAA,SAAA1Q,EAAA9a,GACA,GAAAkf,GAAA1G,EAAAzS,WAAAjC,KAAAgX,IAAAA,IACAuO,EAAAnK,EAAApb,IAAA,QACAob,GAAAxV,IAAA,QAAA1J,EACA,IAAAyjB,GAAAzjB,CAEA0I,GAAAuW,UAAAhgB,MACA2D,MAAAsc,EACAtB,KAAA,QACAa,OAAA4K,EACAtL,MAAA0F,MAIAjL,EAAAzS,WAAAyV,MAEA,IAAA1K,IACA+Q,OAAArJ,EAAAlI,UAAAxM,IAAA,cACAgN,MAAA0H,EAAAlI,UAAAxM,IAAA,SACA2X,OAAA,UAAA2N,EAAAtlB,IAAA,SAAA,oBAAAslB,EAAAvE,oBAAA0C,MAAA,OAAA6B,EAAAtlB,IAAA,SACAsX,SAAA,OAGA3Y,GAAAC,QAAA,WAAAmB,QAAA,kBAAA,kBAAAulB,EAAA,KAAAtY,EAAApI,GAEAnG,KAAA6oB,iBAAAhC,EAAA5Q,EAAAlI,YAUA4a,mBAAA,SAAA3d,GACAxL,OAAAwL,EAAAwH,MAAAvJ,IAAA,UAAA,KAUA2f,oBAAA,SAAA5d,GACAxL,OAAAwL,EAAAJ,aAAA1I,KAAA,OAAAsa,SACAhd,OAAAwL,EAAAwH,MAAAvJ,IAAA,UAAA,OAAA1F,SAKA,OAAA4E,KCnOArO,EAAA,mCAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAG,EAAAC,QAAA,UAAAmE,MAAA,mBAAAtE,KAAAkpB,gBAAAlpB,MAEAA,KAAAC,SAAAC,EAAAC,QAAA,uBAAA,qBAAAH,KAAAkpB,kBASAA,gBAAA,WACA,GAAApiB,GAAA5G,EAAAC,QAAA,UAAAmB,QAAA,iBACAgB,GAAAkK,KAAA1F,EAAAqK,OAAA,SAAA0F,GACAA,EAAA1P,IAAA,cAAA,OAKA,OAAAgB,KCvBArO,EAAA,oCAAA,gCAAA,SAAA8lB,GACA,GAAAzX,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WACAC,KAAAwD,WAAA,GAAAoc,GAAAuJ,eAAA3J,WAAA,WAGAtf,EAAAC,QAAA,UAAAmE,MAAA,mBAAAtE,KAAAopB,gBAAAppB,OAGAopB,gBAAA,SAAA9uB,GACA,MAAA0F,MAAAwD,WAAA6lB,WAAA/uB,KAAAA,MAKA,OAAA6N,KCbArO,EAAA,sCAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAIAC,KAAAC,SAAAC,EAAAC,QAAA,OAAA,uBAAAH,KAAA4iB,sBAGA0G,SAAA,SAAAnW,KAMAyP,oBAAA,SAAAzP,EAAApF,EAAAtO,GACA,GAAA,sBAAA0T,EAAA5R,IAAA,QAAA,CACA,GAAAgoB,GAAAvpB,KAAAwpB,iBAAArW,EACAA,GAAAhM,IAAA,UAAAoiB,KAIAC,iBAAA,SAAArW,GACA,GAAAoW,IAAApW,EAAA5R,IAAA,mBAEAqV,EAAA1W,EAAAC,QAAA,UAAAmB,QAAA,iBAMA,OALAgB,GAAAkK,KAAAoK,EAAAzF,OAAA,SAAA0F,GACA,WAAAA,EAAAtV,IAAA,SACAgoB,EAAA7sB,MAAA6R,MAAAsI,EAAAtV,IAAA,SAAAvE,MAAA6Z,EAAAtV,IAAA,UAGAgoB,IAKA,OAAAphB,KCpCArO,EAAA,sCAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,4BAAA,iBAAAH,KAAAypB,SACAzpB,KAAAC,SAAAC,EAAAC,QAAA,mCAAA,iBAAAH,KAAAypB,UAGAA,QAAA,SAAAtW,EAAApF,EAAAtO,GACAD,OAAAC,EAAAwC,IAAAC,KAAA,qBAAAsK,KAAA,WACAhN,OAAAQ,MAAAse,aACAK,MAAA,IACAJ,KAAAC,mBACAC,KAAAC,mBAMA,OAAAvW,KClBArO,EAAA,4BAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,UAAA,YAAAH,KAAA0pB,aAGA1pB,KAAAC,SAAAC,EAAAC,QAAA,sBAAA,iBAAAH,KAAA2pB;AtHdA,AsHiBA3pB,KAAAC,SAAAC,EAAAC,QAAA,oBAAA,iBAAAH,KAAAyf,WAGAzf,KAAAC,SAAAC,EAAAC,QAAA,eAAA,gBAAAH,KAAA4pB,QAUAF,YAAA,SAAArpB,GACA,GAAAwJ,GAAA7J,KAAA6pB,UAAAxpB,EAAAkB,IAAA,QACAlB,GAAA8G,IAAA,MAAA0C,GACAxJ,EAAA8G,IAAA,cAAA,IAGAwiB,YAAA,SAAAtpB,GAKA,IAAAA,EAAAkB,IAAA,eAAA,GAAA/B,OAAAiG,KAAApF,EAAAkB,IAAA,UAAA9F,OAAA,OAOA4E,GAAAypB,QAAAvb,KACA,IAAA1E,GAAA7J,KAAA6pB,UAAAxpB,EAAAkB,IAAA,SACAlB,GAAA8G,IAAA,MAAA0C,KAWA4V,UAAA,SAAA1R,GACA,GAAAlE,GAAAkE,EAAAxM,IAAA,MACAvB,MAAAmT,aAAAjT,EAAAC,QAAA,UAAAmB,QAAA,mBAAA,OACAtB,KAAA+pB,SAAAlgB,EAAAkE,IAGA6b,MAAA,SAAArrB,EAAA4U,EAAApF,GACAA,EAAA5G,IAAA,cAAA,GACAnH,KAAAmT,aAAAA,CACA,IAAAtJ,GAAArK,OAAAjB,EAAA6G,QAAAM,KACA1F,MAAA+pB,SAAAlgB,EAAAkE,IAGAgc,SAAA,SAAAlgB,EAAAkE,GACA,GAAAoP,IAAA,CACA,KAAA3d,OAAAiG,KAAAoE,GACAsT,EAAA,iDACAtT,GAAA7J,KAAA6pB,UAAAhgB,EAAAkE,KACAoP,EAAA,wDAGAA,EACAnd,KAAAmT,aAAAhM,IAAA,QAAAgW,IAEAjd,EAAAC,QAAA,OAAAY,QAAA,kBAAAgN,GACA/N,KAAAmT,aAAAhM,IAAA,SAAA,KAIA0iB,UAAA,SAAAhgB,EAAAkE,GACAlE,EAAArK,OAAAwqB,QAAAngB,EACA,IAAA/C,GAAA5G,EAAAC,QAAA,UAAAmB,QAAA,kBACAuc,EAAA,EACAoM,EAAApgB,CASA,OARAvH,GAAAkK,KAAA1F,EAAAqK,OAAA,SAAA0F,GACA9I,GAAA8I,GAAAoT,GAAApT,EAAAtV,IAAA,SACA0oB,EAAApgB,EAAA,IAAAgU,EACAA,OAGAhU,EAAAogB,IAMA,OAAA9hB,KClGArO,EAAA,6BACA,4BACA,+BACA,qCACA,SACAowB,EACAtK,EACAuK,GAEA,GAAAhiB,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAA6P,iBAAA,GAAAqa,GACAlqB,KAAA6P,iBAAAJ,KAAA,YACAzP,KAAA6P,iBAAAlD,SAAA,YACA3M,KAAA8P,iBAAA,GAAAoa,GACAlqB,KAAA8P,iBAAAL,KAAA,YACAzP,KAAA8P,iBAAAnD,SAAA,WAEA,IAAAxK,GAAAnC,IACAsC,GAAAkK,KAAA4d,eAAA,SAAA1d,GACA,GAAAkC,GAAA,GAAAub,EAEA7nB,GAAAkK,KAAAE,EAAAkC,cAAA,SAAAwU,GACA,GAAAC,IACA9U,MAAA6U,EAAA7U,MACAE,QAAA2U,EAAA3U,QACAP,SAAA,GAAA0R,GAAAwD,EAAAlV,UAGAU,GAAAmK,IAAAsK,IAIA,IAAAgH,IACA5rB,GAAAiO,EAAAjO,GACAkO,SAAAD,EAAAC,SACA4W,MAAA7W,EAAA6W,MACA3U,cAAAA,EACA6U,gBAAA/W,EAAA+W,gBACArU,MAAA1C,EAAA0C,MACAkb,KAAA5d,EAAA4d,KACAjb,QAAA3C,EAAA2C,QAIAlN,GAAAuK,EAAA2C,QAAA,WAAA0J,IAAAsR,KAIAnqB,EAAAC,QAAA,WAAAmE,MAAA,WAAAtE,KAAAuqB,QAAAvqB,MACAE,EAAAC,QAAA,WAAAmE,MAAA,uBAAAtE,KAAAwqB,oBAAAxqB,MACAE,EAAAC,QAAA,WAAAmE,MAAA,uBAAAtE,KAAAyqB,oBAAAzqB,OAUAuqB,QAAA,SAAA9rB,GAEA,GAAAiO,GAAA1M,KAAA6P,iBAAAtO,IAAA9C,EAIA,OAHAiO,KACAA,EAAA1M,KAAA8P,iBAAAvO,IAAA9C,IAEAiO,GASA8d,oBAAA,WACA,MAAAxqB,MAAA6P,kBASA4a,oBAAA,WACA,MAAAzqB,MAAA8P,kBAUA+T,eAAA,SAAAtlB,GACA,GAAAmO,GAAAlN,OAAAjB,EAAA6G,QAAAe,KAAA,KACAjG,GAAAC,QAAA,UAAAmB,QAAA,kBAAAoL,IASAkX,gBAAA,WACA,MAAA5jB,MAAAkjB,oBAIA,OAAA/a,KCtHArO,EAAA,gCAAA,WACA,GAAAuG,GAAA0J,SAAAC,MAAApK,QACAqK,UACAuV,WAAA,SACAuH,aAAA,UACAlV,YAAA,GAGA9R,WAAA,WAEAC,KAAA0qB,KAAA,SAAA1qB,KAAAif,cAAAjf,KAGA,IAAAqqB,GAAAnqB,EAAAC,QAAA,WAAAmB,QAAA,WAAAtB,KAAAuB,IAAA,SAGAY,EAAAnC,IACAsC,GAAAkK,KAAA6d,EAAA9oB,IAAA,mBAAA,SAAAmE,EAAAmE,GACA1H,EAAAZ,IAAAsI,IACA1H,EAAAgF,IAAA0C,EAAAnE,KAYAxF,EAAAC,QAAA,WAAAY,QAAA,kBAAAf,MACAE,EAAAC,QAAA,WAAAH,KAAAuB,IAAA,SAAAR,QAAA,kBAAAf,MAEAA,KAAAC,SAAAC,EAAAC,QAAA,WAAA,kBAAAH,KAAAgnB,iBASA/H,cAAA,WACA/e,EAAAC,QAAA,OAAAY,QAAA,iBAAAf,OAGAgnB,eAAA,SAAAtH,EAAAvM,GACAjT,EAAAC,QAAA,OAAAmB,QAAA,mBAAAtB,KAAA0f,EAAAvM,KAIA,OAAA9S,KCjDAvG,EAAA,mCAAA,8BAAA,SAAA6wB,GACA,GAAAnnB,GAAAuG,SAAAK,WAAAxK,QACAS,MAAAsqB,EACA5e,WAAA,QACAkb,OAAA,EAEAlnB,WAAA,WACAC,KAAAM,GAAA,MAAAN,KAAA4qB,UAAA5qB,MACAA,KAAAM,GAAA,SAAAN,KAAA6qB,aAAA7qB,MACAA,KAAAqc,WAUAuO,UAAA,SAAAvqB,GACAL,KAAAqc,OAAA3f,KAAA2D,EAAAkB,IAAA,QASAspB,aAAA,SAAAxqB,GACAL,KAAA2W,WAAAtW,EAAAkB,IAAA,OAAAlB,EAAAkB,IAAA,QAGA,OAAAiC,KCpCA1J,EAAA,4BAAA,kCAAA,8BAAA,SAAAkZ,EAAA2X,GACA,GAAAxiB,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAwD,WAAA,GAAAwP,GAAA4E,kBAAAZ,SAEAhX,KAAAwD,WAAAmT,cAGAzW,EAAAC,QAAA,WAAAmE,MAAA,iBAAAtE,KAAA0Y,cAAA1Y,MACAE,EAAAC,QAAA,WAAAmE,MAAA,aAAAtE,KAAA8qB,UAAA9qB,MACAE,EAAAC,QAAA,WAAAmE,MAAA,YAAAtE,KAAA+qB,SAAA/qB,MAEAE,EAAAC,QAAA,WAAAmE,MAAA,MAAAtE,KAAA4qB,UAAA5qB,MACAE,EAAAC,QAAA,WAAAmE,MAAA,SAAAtE,KAAAgrB,aAAAhrB,OAGA0Y,cAAA,WACA,MAAA1Y,MAAAwD,YAGAsnB,UAAA,SAAArsB,GACA,MAAAuB,MAAAwD,WAAAjC,IAAA9C,IAUAmsB,UAAA,SAAAzkB,EAAAugB,GAEA,GADAA,EAAAA,IAAA,GACA,GAAAvgB,YAAA4D,UAAAC,MACA,GAAA3J,GAAA,GAAAsqB,GAAAxkB,OAEA,IAAA9F,GAAA8F,CAOA,OAJAnG,MAAAwD,WAAAuV,IAAA1Y,GAAAqmB,OAAAA,IAEAxmB,EAAAC,QAAA,OAAAmB,QAAA,iBAAA,SAAA,GAEAjB,GAUA2qB,aAAA,SAAA3qB,GACAL,KAAAwD,WAAAgZ,OAAAnc,GAEAH,EAAAC,QAAA,OAAAmB,QAAA,iBAAA,SAAA,GACApB,EAAAC,QAAA,OAAAmB,QAAA,cAYAypB,SAAA,WACA,GAAA9D,GAAAjnB,KAAAwD,WAAAyjB,MAEA,OADAjnB,MAAAwD,WAAAyjB,SACA,OAAAA,IAIA,OAAA9e,KC7EArO,EAAA,sCAAA,gCAAA,SAAA8lB,GACA,GAAAzX,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WACAC,KAAAwD,WAAA,GAAAoc,GAAAqL,gBAAAzL,WAAA,YAGAtf,EAAAC,QAAA,WAAAmE,MAAA,mBAAAtE,KAAAopB,gBAAAppB,OAGAopB,gBAAA,SAAA9uB,GACA,MAAA0F,MAAAwD,WAAA6lB,WAAA/uB,KAAAA,MAKA,OAAA6N,KCfArO,EAAA,oCAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAG,EAAAC,QAAA,WAAAmE,MAAA,mBAAAtE,KAAAkpB,gBAAAlpB,MAEAA,KAAAC,SAAAC,EAAAC,QAAA,uBAAA,qBAAAH,KAAAkpB,kBASAA,gBAAA,WACA,GAAAlW,GAAA9S,EAAAC,QAAA,WAAAmB,QAAA,iBACAgB,GAAAkK,KAAAwG,EAAA7B,OAAA,SAAAmF,GACAA,EAAAnP,IAAA,cAAA,OAKA,OAAAgB,KCvBArO,EAAA,sCAAA,kCAAA,8BAAA,SAAAkZ,EAAA2X,GACA,GAAAxiB,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,WAAA,kBAAAH,KAAA4qB,WAEA1qB,EAAAC,QAAA,WAAAmE,MAAA,iBAAAtE,KAAA4qB,UAAA5qB,OAUA4qB,UAAA,SAAAle,GACA,GAAAvG,IACA1H,GAAAyB,EAAAC,QAAA,WAAAmB,QAAA,aACAoL,KAAAA,EAAAnL,IAAA,MACAgN,MAAA7B,EAAAnL,IAAA,aAEA0b,EAAA/c,EAAAC,QAAA,WAAAmB,QAAA,MAAA6E,GACAoI,GACA+Q,OAAA,SACA/Q,MAAA0O,EAAA1b,IAAA,SACA2X,OAAA,QACAL,SAAA,YAGA1S,GACA3C,WAAAtD,EAAAC,QAAA,WAAAmB,QAAA,kBAGApB,GAAAC,QAAA,WAAAmB,QAAA,kBAAA,YAAA2b,EAAA,KAAA1O,EAAApI,GACAjG,EAAAC,QAAA,OAAAY,QAAA,gBAAAkc,KAIA,OAAA9U,KCtCArO,EAAA,kCAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,oBAAA,iBAAAH,KAAA8jB,WACA9jB,KAAAC,SAAAC,EAAAC,QAAA,oBAAA,gBAAAH,KAAA+jB,UAKA7jB,EAAAC,QAAA,oBAAAmE,MAAA,sBAAAtE,KAAAgkB,+BAAAhkB,OAgBA8jB,UAAA,SAAAG,EAAAjZ,GACAhL,KAAAgJ,SAAA9I,EAAAC,QAAA,OAAAmB,QAAA,gBACAtB,KAAAkkB,OAAAhkB,EAAAC,QAAA,OAAAmB,QAAA,cACA9B,OAAAQ,KAAAgJ,UAAA,GAAAmb,MAAAC,YAAA,WAAA,UAAA,aACA5kB,OAAAQ,KAAAkkB,QAAA,GAAAC,MAAAC,YAAA,WAAA,UAAA,aAEApkB,KAAAqkB,qBAAA7kB,OAAAwL,EAAAH,QAAAc,SAYAoY,SAAA,SAAAE,EAAAjZ,GACAxL,OAAAQ,KAAAgJ,UAAA,GAAAmb,MAAAC,YAAA,WAAA,SAAA,aACA5kB,OAAAQ,KAAAkkB,QAAA,GAAAC,MAAAC,YAAA,WAAA,SAAA,cAGAJ,+BAAA,WACA,MAAAhkB,MAAAqkB,uBAIA,OAAAlc,KCtDArO,EAAA,mCAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAKAG,EAAAC,QAAA,OAAAmE,MAAA,kBAAAtE,KAAAkrB,eAAAlrB,OAGAkrB,eAAA,SAAA3sB,EAAAyM,GACA,GAAAmgB,GAAA3rB,OAAAwL,EAAAH,QAAA1E,KAAA,QACAuG,EAAAxM,EAAAC,QAAA,WAAAmB,QAAA,WAAA6pB,EACAjrB,GAAAC,QAAA,WAAAmB,QAAA,iBAAAoL,KAIA,OAAAvE,KCjBArO,EAAA,8BAAA,WACA,GAAAuG,GAAA0J,SAAAC,MAAApK,UAIA,OAAAS,KCLAvG,EAAA,iCAAA,4BAAA,SAAAsxB,GACA,GAAA5nB,GAAAuG,SAAAK,WAAAxK,QACAS,MAAA+qB,GAEA,OAAA5nB,KCJA1J,EAAA,mCAAA,iCAAA,SAAAowB,GACA,GAAA/hB,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAC,SAAAC,EAAAC,QAAA,oBAAA,gBAAAH,KAAAqrB,oBAaAA,kBAAA,SAAApG,EAAA1mB,GAGA,GAAA,IAAAiB,OAAAiG,KAAAwf,GAAA,CAEA,GAAAlV,MAKAF,EAAA3P,EAAAC,QAAA,WAAAmB,QAAA,uBACAgB,GAAAkK,KAAAxM,KAAA8lB,iBAAAb,EAAApV,GAAA,SAAAxP,GACA0P,EAAArT,KAAA2D,IAGA,IAAA2P,MACAF,EAAA5P,EAAAC,QAAA,WAAAmB,QAAA,uBACAgB,GAAAkK,KAAAxM,KAAA8lB,iBAAAb,EAAAnV,GAAA,SAAAzP,GACA2P,EAAAtT,KAAA2D,IAIA,IAAAirB,GAAA,GAAApB,GAAAna,EACAub,GAAA7b,KAAA,YACA6b,EAAA3e,SAAA,WAEA,IAAA4e,GAAA,GAAArB,GAAAla,EACAub,GAAA9b,KAAA,YACA8b,EAAA5e,SAAA,YAGAzM,EAAAC,QAAA,UAAAY,QAAA,qBAAAuqB,EAAAC,GAEAhtB,EAAAgH,WACA,EAAA+lB,EAAA7vB,SACAyE,EAAAC,QAAA,WAAAmB,QAAA,iBAAAgqB,EAAAna,OAAA,IACAjR,EAAAC,QAAA,UAAAmB,QAAA,qBAKApB,GAAAC,QAAA,UAAAY,QAAA,iBAWA+kB,iBAAA,SAAAb,EAAAzhB,GACAyhB,EAAAA,EAAAc,aAMA,IAAAF,GAAAriB,EAAAwiB,OAAA,SAAA3lB,GACA,GAAA4lB,IAAA,CA+BA,OA5BA,IAAA5lB,EAAAkB,IAAA,MAAAwkB,cAAA7pB,QAAA+oB,GACAgB,GAAA,EACA,IAAA5lB,EAAAkB,IAAA,YAAAwkB,cAAA7pB,QAAA+oB,KACAgB,GAAA,GAMA5lB,EAAAkB,IAAA,SAAA,GAAA0jB,EAAA/oB,QAAA,MACAoG,EAAAkK,KAAAnM,EAAAkB,IAAA,QAAA,SAAA+e,GACA2E,EAAAppB,QAAA,IAAA,IAAAJ,OAAA,GACA,IAAA6kB,EAAAyF,cAAA7pB,QAAA+oB,EAAAppB,QAAA,IAAA,OACAoqB,GAAA,KAOA5lB,EAAAkB,IAAA,UACAe,EAAAkK,KAAAnM,EAAAkB,IAAA,SAAA,SAAAgiB,GACA,IAAAA,EAAAwC,cAAA7pB,QAAA+oB,KACAgB,GAAA,KAKAA,GAIA,OAAAJ,KAIA,OAAA1d,KChHArO,EAAA,8BACA,4BACA,+BACA,qCACA,SACAowB,EACAtK,EACAuK,GAEA,GAAAhiB,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAwD,WAAA,GAAA0mB,EAEA,IAAA/nB,GAAAnC,IACAsC,GAAAkK,KAAAgf,oBAAA,SAAA9e,GACA,GAAAkC,GAAA,GAAAub,EAEA7nB,GAAAkK,KAAAE,EAAAkC,cAAA,SAAAwU,GACA,GAAAC,IACA9U,MAAA6U,EAAA7U,MACAE,QAAA2U,EAAA3U,QACAP,SAAA,GAAA0R,GAAAwD,EAAAlV,UAGAU,GAAAmK,IAAAsK,IAIA,IAAAoI,IACAhtB,GAAAiO,EAAAjO,GACAkO,SAAAD,EAAAC,SACA4W,MAAA7W,EAAA6W,MACA3U,cAAAA,EACA6U,gBAAA/W,EAAA+W,gBACA5R,YAAA,EAIA1P,GAAAqB,WAAAuV,IAAA0S,KAIAvrB,EAAAC,QAAA,YAAAmE,MAAA,WAAAtE,KAAAuqB,QAAAvqB,MACAE,EAAAC,QAAA,YAAAmE,MAAA,qBAAAtE,KAAA0Y,cAAA1Y,OAUAuqB,QAAA,SAAA9rB,GACA,MAAAuB,MAAAwD,WAAAjC,IAAA9C,IASAia,cAAA,WACA,MAAA1Y,MAAAwD,aAIA,OAAA2E,KCzEArO,EAAA,mCAAA,WACA,GAAAuG,GAAA0J,SAAAC,MAAApK,QACAqK,UACAuV,WAAA,eACA3N,YAAA,GAGA9R,WAAA,WAEAC,KAAA0qB,KAAA,SAAA1qB,KAAAif,cAAAjf,MAEAA,KAAAC,SAAAC,EAAAC,QAAA,YAAA,kBAAAH,KAAAgnB,iBASA/H,cAAA,WACA/e,EAAAC,QAAA,OAAAY,QAAA,iBAAAf,OAGAgnB,eAAA,SAAAtH,EAAAvM,GACAjT,EAAAC,QAAA,OAAAmB,QAAA,mBAAAtB,KAAA0f,EAAAvM,KAIA,OAAA9S,KC7BAvG,EAAA,6BAAA,iCAAA,SAAA4xB,GACA,GAAAvjB,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAC,KAAAK,MAAA,GAAAqrB,GAAA9T,kBAAA1J,UACAhO,EAAAC,QAAA,YAAAmE,MAAA,eAAAtE,KAAA2rB,YAAA3rB,OAGA2rB,YAAA,WACA,MAAA3rB,MAAAK,QAIA,OAAA8H,KCbArO,EAAA,qCAAA,gCAAA,SAAA8lB,GACA,GAAAzX,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WACAC,KAAAwD,WAAA,GAAAoc,GAAA1b,cAAAsb,WAAA,aAGAtf,EAAAC,QAAA,YAAAmE,MAAA,mBAAAtE,KAAAopB,gBAAAppB,OAGAopB,gBAAA,SAAA9uB,GACA,MAAA0F,MAAAwD,WAAA6lB,WAAA/uB,KAAAA,MAKA,OAAA6N,KCfArO,EAAA,qCAAA,WACA,GAAAqO,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAEAG,EAAAC,QAAA,YAAAmE,MAAA,mBAAAtE,KAAAkpB,gBAAAlpB,MAEAA,KAAAC,SAAAC,EAAAC,QAAA,uBAAA,qBAAAH,KAAAkpB,kBASAA,gBAAA,WACA,GAAA1lB,GAAAtD,EAAAC,QAAA,YAAAmB,QAAA,qBACAgB,GAAAkK,KAAAhJ,EAAA2N,OAAA,SAAA0F,GACAA,EAAA1P,IAAA,cAAA,OAKA,OAAAgB,KCvBArO,EAAA,kCAAA,iCAAA,SAAA4xB,GACA,GAAAvjB,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,YAAA,aAAAH,KAAAwR,YAGAA,UAAA,SAAAjT,EAAAskB,GACA3iB,EAAAC,QAAA,YAAAmB,QAAA,oBACAuhB,EAAA1b,IAAA,cAAA,EAEA,IAAA9G,GAAAH,EAAAC,QAAA,YAAAmB,QAAA,eACApB,GAAAC,QAAA,OAAAmB,QAAA,cAAA,gBAAAjB,MAAAA,EAAAwO,gBAAAgU,EAAAthB,IAAA,qBAIA,OAAA4G,KCfArO,EACA,+BAIA,yBACA,+BACA,+BACA,uBACA,2CACA,2BACA,2BACA,8BACA,8BACA,+BACA,8BACA,kCACA,+BACA,4BACA,0BACA,6BACA,2BACA,iCACA,sCACA,uCACA,2BACA,gCACA,+BACA,4BACA,kCAIA,2BACA,mCACA,iCACA,wCACA,6BACA,qCACA,iCACA,8BACA,0BACA,oCACA,gCACA,mCACA,mCACA,mCACA,yBAKA,4BACA,2BACA,qCACA,iCACA,qCACA,+BACA,gCACA,kCAKA,6BACA,4BACA,oCACA,kCACA,kCAEA,SAIA8xB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIAC,EACAC,EACAC,EACAC,EACAC,GAGA,GAAA7mB,GAAAzI,WAAA7B,OAAA+B,QACAG,WAAA,WAIA,GAAA2sB,GACA,GAAAd,GACA,GAAAC,GACA,GAAAC,GACA,GAAAE,GACA,GAAAC,GACA,GAAAE,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAG,GACA,GAAAC,GACA,GAAAC,GACA,GAAAK,GAQA,GAAAF,GACA,GAAAc,GAEA,GAAAT,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAb,GACA,GAAAE,GACA,GAAAH,GACA,GAAAiB,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GAIA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GAIA,GAAAC,GACA,GAAAE,GACA,GAAAD,GACA,GAAAE,GACA,GAAAC,GAKA,GAAAjD,GACA,GAAA8B,GACA,GAAA3B,GACA,GAAAiB,GACA,GAAAC,KAIA,OAAAjlB,KAGAtO,EAAAyB,QClOA2zB,QAAA/Z,QAAAga,eAAA,aAGA,IAAAhvB,GAAA6J,SAAAolB,KAEA3vB,QAAAqb,UAAAuU,MAAA,SAAAC,GACAx1B,GAAA,oBAAA,+BAAA,SAAAy1B,EAAAC,GAEA,GAAAC,GAAA9vB,WAAA+vB,YAAA7vB,QAEAG,WAAA,SAAA+c,GAEA5c,EAAAC,QAAA,OAAAY,QAAA,yBAAAf,KAEA,IAAAuvB,EAEArvB,GAAAC,QAAA,OAAAY,QAAA,wBAAAf,OAGA0vB,QAAA,WACA,GAAAJ,EAUApvB,GAAAC,QAAA,OAAAY,QAAA,iBAAAf,SAKA2vB,EAAA,GAAAH,EACAG,GAAAvkB,YAGAtR,EAAA,OAAA;A1IpjbnIA,ADoIA;ACntHA,ADuHA;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA,ADgBA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA,ADkDA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA,AD0CA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA,ADgBA;ACfhBA,ADiBA;AChzCA,AD0CA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA,ADiBA;AChdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9EA,AD+EA;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA,ADYA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA,ADmDA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA,ADYA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA,ADwCA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA,ADyBA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA,ADQA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA,AD4CA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA,ADwBA;ACvrBA,ADsBA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA,ADQA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxDA,ADyDA;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA,ADkBA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA,ADkDA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA,ADQA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA,ADoCA;ACndA,ADeA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvEA,ADwEA;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA,ADiBA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA,ADkBA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA,AD6BA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9DA,AD+DA;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA,AD2BA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3FA,AD4FA;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxfA,ADgBA;ACftNA,ADuNA;ACtNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA,ADsCA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjjBA,ADkBA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA,ADyCA;ACxhBA,ADiBA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbvNA,ADwNA;ACvNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA,ADeA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA,ADiBA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA,ADiBA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbzHA,AD0HA;ACzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA,ADwDA;ACvrIA,ADsIA;ACrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtpTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA,ADmEA;ACldA,ADeA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA,ADgEA;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA,ADQA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/JA,ADglCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA,ADyBA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChgjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7DA,AD8DA;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7CA,AD8CA;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtFA,ADuFA;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA,ADkCA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA,ADgEA;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA,ADeA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA,ADuCA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA,ADyBA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA,ADkCA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA,ADyBA;ACxnOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"builder.js","sourcesContent":["/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"../lib/almond\", function(){});\n\n","/**\n * Renders an application menu item from a domain model.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/menuItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-app-menu-item',\n\n\t\tinitialize: function() {\n\t\t\t// Listen for domain changes and re-render when we detect one.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.render );\n\t\t\t// When we change the model (to disable it, for example), re-render.\n\t\t\tthis.model.on( 'change', this.render, this );\n\t\t},\n\n\t\t/**\n\t\t * When we render this view, remove the extra <div> tag created by backbone.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\t// Listen for clicks on our app menu.\n\t\tevents: {\n\t\t\t'click a': 'clickAppMenu'\n\t\t},\n\n\t\t/**\n\t\t * When we click on a menu item, fire a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * We pass this.model so that we know what item was clicked.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\te event\n\t\t * @return return\n\t\t */\n\t\tclickAppMenu: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:menu', e, this.model );\n\t\t},\n\n\t\t/**\n\t\t * These functions are available to templates, and help us to remove logic from template files.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\t/**\n\t\t\t\t * If we have any dashicons in our model, render them.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderDashicons: function() {\n\t\t\t\t\tif ( this.dashicons ) {\n\t\t\t\t\t\treturn '<span class=\"dashicons ' + this.dashicons + '\"></span>'\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * Render classes for our menu item, including active.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = this.classes;\n\t\t\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\t\t\tif ( currentDomain.get( 'id' ) == this.id ) {\n\t\t\t\t\t\tclasses += ' active';\n\t\t\t\t\t}\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * If our menu is a link (like preview), render its url.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderUrl: function() {\n\t\t\t\t\tif ( '' != this.url ) {\n\t\t\t\t\t\treturn this.url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '#';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * If our menu is a link (like preview), render its target.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderTarget: function() {\n\t\t\t\t\tif ( '' != this.url ) {\n\t\t\t\t\t\treturn '_blank';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '_self';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * If our menu item is disabled, output 'disabled'\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderDisabled: function() {\n\t\t\t\t\tif ( this.disabled ) {\n\t\t\t\t\t\treturn 'disabled';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Collection view that takes our app menu items and renders an individual view for each.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/menu',['views/app/menuItem'], function( appMenuItemView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: appMenuItemView,\n\n\t\t/**\n\t\t * When we show this view, get rid of the extra <div> tag added by backbone.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonShow: function() {\n\t\t\tjQuery( this.el ).find( 'li:last' ).unwrap();\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","/**\n * Renders the action buttons to the right of the app menu. i.e. Publish\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/menuButtons',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'span',\n\t\ttemplate: '#nf-tmpl-app-header-action-button',\n\n\t\tinitialize: function() {\n\t\t\t// Listen to changes on the app 'clean' state. When it changes, re-render.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:clean', this.render, this );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:loading', this.render, this );\n\t\t},\n\n\t\t/**\n\t\t * These functions are available to templates, and help us to remove logic from template files.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\ttemplateHelpers: function () {\n\t\t\tvar that = this;\n\t    \treturn {\n\n\t    \t\t/**\n\t    \t\t * Render our Publish button. If we're loading, render the loading version.\n\t    \t\t *\n\t    \t\t * @since  3.0\n\t    \t\t * @return string\n\t    \t\t */\n\t    \t\trenderPublish: function() {\n\t    \t\t\tif ( that.publishWidth ) {\n\t    \t\t\t\tthis.publishWidth = 'style=\"width:' + that.publishWidth + 'px !important\"';\n\t    \t\t\t} else {\n\t    \t\t\t\tthis.publishWidth = '';\n\t    \t\t\t}\n\t    \t\t\tif ( nfRadio.channel( 'app' ).request( 'get:setting', 'loading' ) ) {\n\t    \t\t\t\treturn _.template( jQuery( '#nf-tmpl-add-header-publish-loading' ).html(), this );\t    \t\t\t\t\n\t    \t\t\t} else {\n\t    \t\t\t\treturn _.template( jQuery( '#nf-tmpl-app-header-publish-button' ).html(), this );\n\t    \t\t\t}\n\t    \t\t},\n\n\t    \t\t/**\n\t    \t\t * If our app state is clean, disable publish.\n\t    \t\t * \n\t    \t\t * @since  3.0\n\t    \t\t * @return string\n\t    \t\t */\n\t    \t\tmaybeDisabled: function() {\n\t    \t\t\tif ( nfRadio.channel( 'app' ).request( 'get:setting', 'clean' ) ) {\n\t    \t\t\t\treturn 'disabled';\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t    \t\t},\n\n\t    \t\t/**\n\t    \t\t * If our app isn't clean, render our 'viewChanges' button.\n\t    \t\t * @since  version\n\t    \t\t * @return {[type]} [description]\n\t    \t\t */\n\t    \t\tmaybeRenderCancel: function() {\n\t    \t\t\tif ( ! nfRadio.channel( 'app' ).request( 'get:setting', 'clean' ) ) {\n\t    \t\t\t\treturn _.template( jQuery( '#nf-tmpl-app-header-view-changes' ).html(), this );\t    \t\t\t\t\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tvar publishEL = jQuery( this.el ).find( '.publish' );\n\t\t\tthis.publishWidth = jQuery( publishEL ).outerWidth( true );\n\t\t},\n\n\t\t/**\n\t\t * Listen for clicks on the Publish or view changes button.\n\t\t * @type {Object}\n\t\t */\n\t\tevents: {\n\t\t\t'click .publish': 'clickPublish',\n\t\t\t'click .viewChanges': 'clickViewChanges'\n\t\t},\n\n\t\t/**\n\t\t * When we click publish, trigger a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tclickPublish: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:publish', e );\n\t\t},\n\n\t\t/**\n\t\t * When we click view changes, trigger a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tclickViewChanges: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:viewChanges', e );\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Main application header. Includes links to all of our domains.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/header',['views/app/menu', 'views/app/menuButtons'], function( appMenuCollectionView, appMenuButtonsView ) {\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-app-header',\n\n\t\tregions: {\n\t\t\t// Menu is our main app menu.\n\t\t\tmenu: '.nf-app-menu',\n\t\t\t// Buttons represents the 'view changes' and 'Publish' buttons.\n\t\t\tbuttons: '.nf-app-buttons'\n\t\t},\n\n\t\t/**\n\t\t * Since this is a layout region, we need to fill the two areas: menu and buttons whenever we show this view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonShow: function() {\n\t\t\t// Get our domains\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\t// show the menu area using the appropriate view, passing our domain collection.\n\t\t\tthis.menu.show( new appMenuCollectionView( { collection: appDomainCollection } ) );\n\t\t\tthis.buttons.show( new appMenuButtonsView() );\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","/**\n * Renders our sub-header. i.e. add new field, add new action, etc.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/subHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-sub-header'\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders our form title.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/formTitle',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-header-form-title',\n\n\t\tinitialize: function() {\n\t\t\t// When we change the model (to disable it, for example), re-render.\n\t\t\tthis.model.on( 'change:title', this.render, this );\n\t\t},\n\n\t\t/**\n\t\t * When we render this view, remove the extra <div> tag created by backbone.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\t/**\n\t\t * These functions are available to templates, and help us to remove logic from template files.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t    \treturn {\n\t    \t\trenderTitle: function(){\n\t    \t\t\tvar formData = nfRadio.channel( 'app' ).request( 'get:formData' );\n\t    \t\t\treturn formData.get( 'settings' ).get( 'title' );\n\t\t\t\t},\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders our builder header.\n *\n * This is a layout view and handles two regions:\n * app - menu/buttons\n * subapp - title, add new field, etc.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/builderHeader',['views/app/header', 'views/app/subHeader', 'views/app/formTitle'], function( appHeaderView, appSubHeaderView, formTitleView ) {\n\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: \"div\",\n\t\ttemplate: \"#nf-tmpl-header\",\n\n\t\tregions: {\n\t\t\tapp: \"#nf-app-header\",\n\t\t\tformTitle: \"#nf-app-form-title\",\n\t\t\tappSub: \"#nf-app-sub-header\"\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.changeSubHeader );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tthis.app.show( new appHeaderView() );\n\n\t\t\tvar formData = nfRadio.channel( 'app' ).request( 'get:formData' );\n\t\t\tvar formSettings = formData.get( 'settings' );\n\t\t\tthis.formTitle.show( new formTitleView( { model: formSettings } ) );\n\n\t\t\tthis.changeSubHeader();\n\t\t},\n\n\t\tchangeSubHeader: function() {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar subHeaderView = currentDomain.get( 'getSubHeaderView' ).call( currentDomain );\n\t\t\tthis.appSub.show( subHeaderView );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/app/main',[], function() {\n\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main',\n\n\t\tregions: {\n\t\t\theader: '#nf-main-header',\n\t\t\tcontent: '#nf-main-content'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.render );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:mainEl', this.getMainEl, this );\n\t\t\t\n\t\t\t// this.listenTo( nfRadio.channel( 'app' ), 'cancel:changes', this.render );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tjQuery( this.el ).parent().perfectScrollbar();\n\t\t\tnfRadio.channel( 'main' ).trigger( 'show:main' );\n\t\t\tjQuery( this.el ).parent().disableSelection();\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\t// var headerView = currentDomain.get( 'getMainHeaderView' ).call( currentDomain );\n\t\t\t// this.header.show( headerView );\n\t\t\tvar contentView = currentDomain.get( 'getMainContentView' ).call( currentDomain );\n\t\t\tthis.content.show( contentView );\n\n\t\t\tnfRadio.channel( 'main' ).trigger( 'render:main' );\n\t\t},\n\n\t\tgetMainEl: function() {\n\t\t\treturn jQuery( this.el ).parent();\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Menu view used on smaller screens.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/mobileMenu',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-menu-drawer'\n\t});\n\n\treturn view;\n} );\n","/**\n * Default drawer header.\n *\n * Includes our filter/search and 'Done' button.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/headerDefault',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-header-default',\n\n\t\t/**\n\t\t * When we render, remove the extra div added by backbone and add listeners related to our filter.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\t// Remove extra wrapping div.\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t\t// Respond to requests related to our filter.\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'clear:filter', this.clearFilter, this );\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'blur:filter', this.blurFilter, this );\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'get:filterEl', this.getEl, this );\n\t\t},\n\n\t\tevents: {\n\t\t\t'keyup .nf-filter'\t: 'maybeChangeFilter',\n\t\t\t'input .nf-filter'\t: 'changeFilter',\n\t\t\t'focus input'\t\t: 'getFocus'\n\t\t},\n\n\t\t/**\n\t\t * When the filter text is changed, trigger an event on our current drawer.\n\t\t * This lets us keep the logic separate from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tchangeFilter: function( e ) {\n\t\t\tvar currentDrawer = nfRadio.channel( 'app' ).request( 'get:currentDrawer' );\n\t\t\tnfRadio.channel( 'drawer-' + currentDrawer.get( 'id' ) ).trigger( 'change:filter', e.target.value, e );\n\t\t},\n\n\t\t/**\n\t\t * The user pressed a key. If it's the enter key, then run the change filter function.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tmaybeChangeFilter: function( e ) {\n\t\t\tif ( 13 == e.keyCode ) {\n\t\t\t\te.addObject = true;\n\t\t\t\tthis.changeFilter( e );\t\t\t\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Clear our filter.\n\t\t *\n\t\t * This triggers 'input' on the field, which will trigger a change if necessary.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tclearFilter: function() {\n\t\t\tvar filterEl =  jQuery( this.el ).find( '.nf-filter' );\n\t\t\tif ( '' != jQuery.trim( filterEl.val() ) ) {\n\t\t\t\tfilterEl.val('');\n\t\t\t\tfilterEl.trigger( 'input' );\n\t\t\t\tfilterEl.focus();\t\t\t\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Fire the 'blur' event on our filter. Used to force a change event when the user tabs.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tblurFilter: function() {\n\t\t\tjQuery( this.el ).find( '.nf-filter' ).blur();\n\t\t},\n\n\t\t/**\n\t\t * Return our filter dom element.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\tgetEl: function() {\n\t\t\treturn jQuery( this.el ).find( '.nf-filter' );\n\t\t},\n\n\t\tgetFocus: function() {\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'filter:focused' );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Empty drawer content view.\n * Called before we close the drawer.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/contentEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-empty'\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders our drawer region\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer',['views/app/drawer/headerDefault', 'views/app/drawer/contentEmpty'], function( drawerHeaderView, drawerEmptyView ) {\n\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttemplate: '#nf-tmpl-drawer',\n\n\t\tregions: {\n\t\t\theader: '#nf-drawer-header',\n\t\t\tcontent: '#nf-drawer-content'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:drawerEl', this.getEl, this );\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'load:drawerContent', this.loadContent, this );\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'empty:drawerContent', this.emptyContent, this );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tjQuery( this.el ).parent().perfectScrollbar();\n\t\t    // jQuery( this.el ).parent().disableSelection();\n\t\t},\n\n\t\tloadContent: function( drawerID, data ) {\n\t\t\tvar drawer = nfRadio.channel( 'app' ).request( 'get:drawer', drawerID );\n\t\t\tvar contentView = drawer.get( 'getContentView' ).call( drawer, data );\n\t\t\tvar headerView = drawer.get( 'getHeaderView' ).call( drawer, data );\n\n\t\t\tthis.header.show( headerView );\n\t\t\tthis.content.show( contentView );\n\n\t\t},\n\n\t\temptyContent: function() {\n\t\t\tthis.header.show( new drawerEmptyView() );\n\t\t\tthis.content.show( new drawerEmptyView() );\n\t\t},\n\n\t\tgetEl: function() {\n\t\t\treturn jQuery( this.el ).parent();\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-toggle-drawer': 'clickToggleDrawer'\n\t\t},\n\n\t\tclickToggleDrawer: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:toggleDrawerSize' );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n\n","/**\n * Single item view used for merge tags.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/mergeTagItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'li',\n\n\t\ttemplate: '#nf-tmpl-merge-tags-item',\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:active', this.render );\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:active', this.render, this );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click a': 'clickTag'\n\t\t},\n\n\t\tclickTag: function( e ) {\n\t\t\tnfRadio.channel( 'mergeTags' ).trigger( 'click:mergeTag', e, this.model );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tif ( this.active ) {\n\t\t\t\t\t\treturn 'active';\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Merge tags popup section\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/mergeTagsSection',['views/app/drawer/mergeTagItem'], function( mergeTagItemView ) {\n\tvar view = Marionette.CompositeView.extend({\n\t\ttagName: 'div',\n\t\tchildView: mergeTagItemView,\n\t\ttemplate: '#nf-tmpl-merge-tags-section',\n\n\t\tinitialize: function() {\n\t\t\tthis.collection = this.model.get( 'tags' );\n\t\t\tthis.model.on( 'change', this.render, this );\n\t\t\tif ( 'fields' == this.model.get( 'id' ) ) {\n\t\t\t\t// var fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\t// fieldCollection.on( 'all', this.updateFields, this );\n\t\t\t}\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tif ( 'fields' == this.model.get( 'id' ) ) {\n\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\tfieldCollection.off( 'all', this.updateFields, this );\n\t\t\t}\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( '.merge-tags' ).append( childView.el );\n\t\t},\n\n\t\tupdateFields: function() {\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tthis.model.set( 'tags', fieldCollection );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Merge tags popup\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/mergeTagsContent',['views/app/drawer/mergeTagsSection'], function( mergeTagsSectionView ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-merge-tags-content',\n\t\tchildView: mergeTagsSectionView\n\t});\n\n\treturn view;\n} );\n","/**\n * Builder view.\n *\n * This layout view has regions that represent our application areas:\n * header\n * main\n * menuDrawer - Mobile side-menu\n * drawer\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/builder',['views/app/builderHeader', 'views/app/main', 'views/app/drawer/mobileMenu', 'views/app/drawer', 'views/app/drawer/mergeTagsContent'], function( headerView, mainView, menuDrawerView, drawerView, mergeTagsContentView ) {\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttemplate: \"#nf-tmpl-builder\",\n\t\tel: '#nf-builder',\n\n\t\tregions: {\n\t\t\theader: \"#nf-header\",\n\t\t\tmain: \"#nf-main\",\n\t\t\tmenuDrawer: \"#nf-menu-drawer\",\n\t\t\tdrawer: \"#nf-drawer\",\n\t\t\tmergeTagsContent: '.merge-tags-content'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Layout views aren't self-rendering.\n\t\t\tthis.render();\n\t\t\tvar mergeTags = nfRadio.channel( 'mergeTags' ).request( 'get:mergeTags' );\n\t\t\tthis.mergeTagsContent.show( new mergeTagsContentView( { collection: mergeTags } ) );\n\t\t\t// Show our header.\n\t\t\tthis.header.show( new headerView() );\n\t\t\t// Show our main content.\n\t\t\tthis.main.show( new mainView() );\n\t\t\t// this.menuDrawer.show( new menuDrawerView() );\n\t\t\t// Show our drawer.\n\t\t\tthis.drawer.show( new drawerView() );\n\t\t\t// Respond to requests asking for the builder dom element.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:builderEl', this.getBuilderEl, this );\n\t\t},\n\n\t\tgetBuilderEl: function() {\n\t\t\treturn this.el;\n\t\t},\n\n\t\t// Listen for clicks\n\t\tevents: {\n\t\t\t'click .nf-open-drawer': 'openDrawer',\n\t\t\t'click .nf-change-domain': 'changeDomain',\n\t\t\t'click .nf-close-drawer': 'closeDrawer'\n\t\t},\n\n\t\t/**\n\t\t * Someone clicked to open a drawer, so fire a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te \tevent\n\t\t * @return void\n\t\t */\n\t\topenDrawer: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:openDrawer', e );\n\t\t},\n\t\t/**\n\t\t * Someone clicked to close a drawer, so fire a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tcloseDrawer: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:closeDrawer' );\n\t\t},\n\t\t/**\n\t\t * Someone clicked to change the domain, so fire a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te \tevent\n\t\t * @return void\n\t\t */\n\t\tchangeDomain: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:menu', e );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","/**\n * Handles opening and closing our drawer. This is where we display settings for fields, actions, and settings.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/drawer',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our drawer-related click events.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:openDrawer', this.clickOpenDrawer );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:closeDrawer', this.closeDrawer );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:toggleDrawerSize', this.toggleDrawerSize );\n\n\t\t\t// Reply to direct requests to open or close the drawer.\n\t\t\tnfRadio.channel( 'app' ).reply( 'open:drawer', this.openDrawer, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'close:drawer', this.closeDrawer, this );\n\n\t\t\t/*\n\t\t\t * When we close the drawer, we have to figure out what the right position should be.\n\t\t\t * This listens to requests from other parts of our app asking what the closed right position is.\n\t\t\t */\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'get:closedRightPos', this.getClosedDrawerPos, this );\n\t\t\t\n\t\t\t// Reply to requests to prevent our drawer from closing\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'prevent:close', this.preventClose, this );\n\t\t\t// Reply to requests to enable drawer closing\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'enable:close', this.enableClose, this );\n\n\t\t\t/*\n\t\t\t * Object that holds our array of 'prevent close' values.\n\t\t\t * We use an array so that registered requests can unregister and not affect each other.\n\t\t\t */\n\t\t\tthis.objPreventClose = {};\n\n\t\t\t/*\n\t\t\t *  Listen to focus events on the filter and stop our interval when it happens.\n\t\t\t *  This is to fix a bug that can cause the filter to gain focus every few seconds.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'filter:focused', this.filterFocused );\n\t\t},\n\n\t\t/**\n\t\t * Handles closing our drawer\n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tcloseDrawer: function() {\n\t\t\t// Get our current domain.\n\t\t\tvar currentDrawer = nfRadio.channel( 'app' ).request( 'get:currentDrawer' );\n\t\t\tif ( ! currentDrawer || this.maybePreventClose() ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Triggers the before close drawer action on our current domain's drawer channel.\n\t\t\tnfRadio.channel( 'drawer-' + currentDrawer.get( 'id' ) ).trigger( 'before:closeDrawer' );\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'before:closeDrawer' );\n\t\t\t\n\t\t\t// Send a message to our drawer to empty its contents.\n\t\t\tnfRadio.channel( 'drawer' ).request( 'empty:drawerContent' );\n\n\t\t\t// To close our drawer, we have to add our closed class to the builder and remove the opened class.\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tjQuery( builderEl ).addClass( 'nf-drawer-closed' ).removeClass( 'nf-drawer-opened' );\n\n\t\t\t// Get the right position of our closed drawer. Should be container size in -px.\n\t\t\tvar rightClosed = this.getClosedDrawerPos();\n\n\t\t\t// Get our drawer element and give change the 'right' property to our closed position.\n\t\t\tvar drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tjQuery( drawerEl ).css( { 'right': rightClosed } );\n\t\t\t\t\t\n\t\t\t// In order to access properties in 'this' context in our interval below, we have to set it here.\t\n\t\t\tvar that = this;\n\n\t\t\t/*\n\t\t\t * Since jQuery can't bind to a CSS change, we poll every .15 seconds to see if we've closed the drawer.\n\t\t\t *\n\t\t\t * Once our drawer is closed, we:\n\t\t\t * clear our interval\n\t\t\t * request that the app change it's current drawer to false\n\t\t\t * trigger a drawer closed message\n\t\t\t */\n\t\t\tthis.checkCloseDrawerPos = setInterval( function() {\n\t        \tif ( rightClosed == jQuery( drawerEl ).css( 'right' ) ) {\n\t        \t\tclearInterval( that.checkCloseDrawerPos );\n\t\t    \t\tnfRadio.channel( 'app' ).request( 'update:currentDrawer', false );\n\t\t    \t\tnfRadio.channel( 'drawer' ).trigger( 'closed' );\n\t        \t}\n\t\t\t}, 150 );\n\t\t},\n\n\t\t/**\n\t\t * Click handler for our 'open drawer' event.\n\t\t * @since  3.0\n\t\t * @param  e jQuery event\n\t\t * @return void\n\t\t */\n\t\tclickOpenDrawer: function( e ) {\n\t\t\tvar drawerID = jQuery( e.target ).data( 'drawerid' );\n\t\t\tthis.openDrawer( drawerID );\n\t\t},\n\n\t\t/**\n\t\t * Open our drawer.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string drawerID \tID of the drawer we want to open.\n\t\t * @param  object data     \tOptional data that we want to pass to the drawer.\n\t\t * @return void\n\t\t */\n\t\topenDrawer: function( drawerID, data ) {\n\t\t\tif ( this.maybePreventClose() ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// If we haven't sent a data object, set the variable to an empty object.\n\t\t\tdata = data || {};\n\n\t\t\t/*\n\t\t\t * If we're dealing with something that has a model, set the proper active state.\n\t\t\t *\n\t\t\t * TODO: Make this more dynamic. I'm not sure that it fits in the drawer controller.\n\t\t\t */\n\t\t\tif ( 'undefined' != typeof data.model ) {\n\t\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\t\t\t\tnfRadio.channel( currentDomainID ).request( 'clear:editActive' );\n\t\t\t\tdata.model.set( 'editActive', true );\n\t\t\t}\n\n\t\t\t// Send out a message requesting our drawer view to load the content for our drawer ID.\n\t\t\tnfRadio.channel( 'drawer' ).request( 'load:drawerContent', drawerID, data );\n\n\t\t\t// To open our drawer, we have to add our opened class to our builder element and remove the closed class.\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tjQuery( builderEl ).addClass( 'nf-drawer-opened' ).removeClass( 'nf-drawer-closed' );\n\t\t\t\n\t\t\t// To open our drawer, we have to set the right position of our drawer to 0px.\n\t\t\tvar drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tjQuery( drawerEl ).css( { 'right': '0px' } );\n\t\t\t\n\t\t\t// In order to access properties in 'this' context in our interval below, we have to set it here.\t\n\t\t\tvar that = this;\n\n\t\t\t/*\n\t\t\t * Since jQuery can't bind to a CSS change, we poll every .15 seconds to see if we've opened the drawer.\n\t\t\t *\n\t\t\t * Once our drawer is opened, we:\n\t\t\t * clear our interval\n\t\t\t * focus our filter\n\t\t\t * request that the app update its current drawer to the one we opened\n\t\t\t * trigger a drawer opened message\n\t\t\t */\n\t\t\tthis.checkOpenDrawerPos = setInterval( function() {\n\t        \tif ( '0px' == jQuery( drawerEl ).css( 'right' ) ) {\n\t        \t\tclearInterval( that.checkOpenDrawerPos );\n\t        \t\tthat.focusFilter();\n\t\t    \t\tnfRadio.channel( 'app' ).request( 'update:currentDrawer', drawerID );\n\t\t    \t\tnfRadio.channel( 'drawer' ).trigger( 'opened' );\n\t        \t}\n\t\t\t}, 150 );\n\t\t},\n\n\t\t/**\n\t\t * Toggle the drawer from half to full screen and vise-versa\n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\ttoggleDrawerSize: function() {\n\t\t\t// Get our drawer element.\n\t\t\tvar drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\t// toggle our drawer size class.\n\t\t\tjQuery( drawerEl ).toggleClass( 'nf-drawer-expand' );\n\t\t},\n\n\t\t/**\n\t\t * Focus our filter\n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n        focusFilter: function() {\n        \t// Get our filter element\n        \tvar filterEl = nfRadio.channel( 'drawer' ).request( 'get:filterEl' );\n        \t// Focus\n        \tjQuery( filterEl ).focus();\n        },\n\n        /**\n         * Get the CSS right position (in px) of the closed drawer element.\n         * This is calculated by:\n         * getting the width of the builder element\n         * add 300 pixels\n         * make it negative\n         * \n         * @since  3.0\n         * @return void\n         */\n        getClosedDrawerPos: function() {\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tvar closedPos = jQuery( builderEl ).width() + 300;\n\t\t\treturn '-' + closedPos + 'px';\n        },\n\n        /**\n         * Check to see if anything has registered a prevent close key.\n         * \n         * @since  3.0\n         * @return boolean\n         */\n        maybePreventClose: function() {\n        \tif ( 0 == Object.keys( this.objPreventClose ).length ) {\n        \t\treturn false;\n        \t} else {\n        \t\treturn true;\n        \t}\n        },\n\n        /**\n         * Register a prevent close key.\n         * \n         * @since  3.0\n         * @param  string \tkey unique id for our 'prevent close' setting.\n         * @return void\n         */\n        preventClose: function( key ) {\n        \tthis.objPreventClose[ key ] = true;\n        },\n\n        /**\n         * Remove a previously registered prevent close key.\n         * \n         * @since  3.0\n         * @param  string \tkey unique id for our 'prevent close' setting.\n         * @return void\n         */\n        enableClose: function( key ) {\n        \tdelete this.objPreventClose[ key ];\n        },\n\n        /**\n         * When we focus our filter, make sure that our open drawer interval is cleared.\n         * \n         * @since  3.0\n         * @return void\n         */\n        filterFocused: function() {\n        \tclearInterval( this.checkOpenDrawerPos );\n        }\n\t});\n\n\treturn controller;\n} );\n","define( 'models/app/drawerModel',['views/app/drawer/headerDefault'], function( defaultHeaderView ) {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tgetHeaderView: function( data ) {\n\t\t\t\treturn new defaultHeaderView( data );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds all of our drawer models.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/drawerCollection',['models/app/drawerModel'], function( drawerModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: drawerModel\n\t} );\n\treturn collection;\n} );\n","define( 'views/fields/drawer/stagedField',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-staged-field',\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .dashicons-dismiss': 'removeStagedField'\n\t\t},\n\n\t\tremoveStagedField: function( el ) {\n\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'click:removeStagedField', el, this.model );\n\t\t}\n\t});\n\n\treturn view;\n} );\n\n","define( 'views/fields/drawer/stagingEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-staged-fields-empty',\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/drawer/stagingCollection',['views/fields/drawer/stagedField', 'views/fields/drawer/stagingEmpty'], function( stagedFieldView, stagedFieldsEmptyView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: stagedFieldView,\n\t\temptyView: stagedFieldsEmptyView,\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:stagedFieldsEl', this.getStagedFieldsEl, this );\n\t\t},\n\n\t\tonShow: function() {\n\n\t\t\tthis.$el = jQuery( this.el ).parent();\n\t\t\tjQuery( this.$el ).find( 'span:first' ).unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tvar that = this;\n\n\t\t\tjQuery( this.el ).sortable( {\n\t\t\t\tplaceholder: 'nf-staged-fields-sortable-placeholder',\n\t\t\t\thelper: 'clone',\n\t\t\t\ttolerance: 'pointer',\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'over:stagedFields', e, ui );\n\t\t\t\t},\n\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'out:stagedFields', ui );\n\t\t\t\t},\n\n\t\t\t\treceive: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'receive:stagedFields', ui );\n\t\t\t\t},\n\n\t\t\t\tupdate: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t\t},\n\n\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'start:stagedFields', ui );\n\n\t\t\t\t},\n\n\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'stop:stagedFields', ui );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tjQuery( this.el ).parent().draggable( {\n\t\t\t\topacity: 0.9,\n\t\t\t\tconnectToSortable: '.nf-fields-sortable',\n\n\t\t\t\thelper: function( e ) {\n\t\t\t\t\tvar width = jQuery( e.target ).parent().width();\n\t\t\t\t\tvar height = jQuery( e.target ).parent().height();\n\t\t\t\t\tvar element = jQuery( e.target ).parent().clone();\n\t\t\t\t\tvar left = width / 4;\n\t\t\t\t\tvar top = height / 2;\n\t\t\t\t\tjQuery( this ).draggable( 'option', 'cursorAt', { top: top, left: left } );\n\n\t\t\t\t\treturn element;\n\t\t\t\t},\n\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'startDrag:fieldStaging', this, ui );\n\t\t\t\t},\n\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'stopDrag:fieldStaging', this, ui );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tgetStagedFieldsEl: function() {\n\t\t\treturn jQuery( this.el );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","/**\n * Model for our staged field.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/stagingModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection of staged fields.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/stagingCollection',['models/fields/stagingModel'], function( stagingModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: stagingModel,\n\t\tcomparator: 'order'\n\t} );\n\treturn collection;\n} );\n","define( 'views/fields/drawer/typeSection',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-field-type-section',\n\t\t\n\t\tinitialize: function() {\n\t\t\t_.bindAll( this, 'render' );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tthis.dragging = false;\n\t\t\tvar that = this;\n\t\t\tjQuery( this.el ).find( 'div.nf-one-third' ).draggable( {\n\t\t\t\topacity: 0.9,\n\t\t\t\ttolerance: 'intersect',\n\t\t\t\tscroll: false,\n\t\t\t\tconnectToSortable: '.nf-field-type-droppable',\n\n\t\t\t\thelper: function( e ) {\n\t\t\t\t\tvar width = jQuery( e.target ).parent().width();\n\t\t\t\t\tvar height = jQuery( e.target ).parent().height();\n\t\t\t\t\tvar element = jQuery( e.target ).parent().clone();\n\t\t\t\t\tvar left = width / 4;\n\t\t\t\t\tvar top = height / 2;\n\t\t\t\t\tjQuery( this ).draggable( 'option', 'cursorAt', { top: top, left: left } );\n\n\t\t\t\t\treturn element;\n\t\t\t\t},\n\n\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\tthat.dragging = true;\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'startDrag:type', this, ui );\n\t\t\t\t},\n\n\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\tthat.dragging = false;\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'stopDrag:type', this, ui );\n\t\t\t\t}\n\n\t\t\t} ).disableSelection();\n\n\t\t\tjQuery( this.el ).find( '.nf-item' ).focus( function() {\n\t\t    \tjQuery( this ).addClass( 'active' );\n\t\t    } ).blur( function() {\n\t\t    \tjQuery( this ).removeClass( 'active' );\n\t\t    } );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-item': 'clickFieldType',\n\t\t\t'keydown .nf-item': 'maybeClickFieldType'\n\t\t},\n\n\t\tclickFieldType: function( e ) {\n\t\t\tif ( ! this.dragging ) {\n\t\t\t\tnfRadio.channel( 'drawer' ).trigger( 'click:fieldType', e );\n\t\t\t}\n\t\t},\n\n\t\tmaybeClickFieldType: function( e ) {\n\t\t\tif ( 13 == e.keyCode ) {\n\t\t\t\tthis.clickFieldType( e );\n\t\t\t\tnfRadio.channel( 'drawer' ).request( 'clear:filter' );\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderFieldTypes: function() {\n\t\t\t        var html = '';\n\t\t\t        var that = this;\n\t\t\t        _.each( this.fieldTypes, function( id ) {\n\t\t\t            var type = nfRadio.channel( 'fields' ).request( 'get:type', id );\n\t\t\t            var nicename = type.get( 'nicename' );\n\t\t\t            html += _.template( jQuery( '#nf-tmpl-drawer-field-type-button' ).html(), { id: id, nicename: nicename, type: type, savedField: that.isSavedField } );\n\t\t\t        } );\n\t\t\t        return html;\n\t\t\t\t},\n\n\t\t\t\tisSavedField: function() {\n\t\t\t\t\tif( this.type.get( 'savedField' ) ) {\n\t\t\t\t\t\treturn 'nf-saved';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/drawer/typeSectionCollection',['views/fields/drawer/typeSection'], function( fieldTypeSectionView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: fieldTypeSectionView,\n\n\t\tonShow: function() {\n\t\t\tjQuery( this.el ).find( '.nf-settings' ).unwrap();\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","define( 'views/fields/drawer/addField',['views/fields/drawer/stagingCollection', 'models/fields/stagingCollection', 'views/fields/drawer/typeSectionCollection'], function( drawerStagingView, StagingCollection, fieldTypeSectionCollectionView ) {\n\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttemplate: '#nf-tmpl-drawer-content-add-field',\n\n\t\tregions: {\n\t\t\tstaging: '#nf-drawer-staging .nf-reservoir',\n\t\t\tprimary: '#nf-drawer-primary',\n\t\t\tsecondary: '#nf-drawer-secondary'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'filter:fieldTypes', this.filterFieldTypes );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'clear:filter', this.removeFieldTypeFilter );\n\t\t\n\t\t\tthis.savedCollection = nfRadio.channel( 'drawer' ).request( 'get:savedFields' );\n\t\t\tthis.primaryCollection = this.savedCollection;\n\n\t\t\tthis.fieldTypeSectionCollection = nfRadio.channel( 'fields' ).request( 'get:typeSections' );\n\t\t\tthis.secondaryCollection = this.fieldTypeSectionCollection;\n\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tvar stagingCollection = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\t\t\tthis.staging.show( new drawerStagingView( { collection: stagingCollection } ) );\n\n\t\t\tthis.primary.show( new fieldTypeSectionCollectionView( { collection: this.primaryCollection } ) );\n\t\t\tthis.secondary.show( new fieldTypeSectionCollectionView( { collection: this.secondaryCollection } ) );\n\t\t},\n\n\t\tgetEl: function() {\n\t\t\treturn jQuery( this.el ).parent();\n\t\t},\n\n\t\tfilterFieldTypes: function( filteredSectionCollection ) {\n\t\t\tthis.primary.reset();\n\t\t\tthis.secondary.reset();\n\t\t\tthis.filteredSectionCollection = filteredSectionCollection;\n\t\t\tthis.primary.show( new fieldTypeSectionCollectionView( { collection: this.filteredSectionCollection } ) );\n\t\t},\n\n\t\tremoveFieldTypeFilter: function () {\n\t\t\tthis.primary.show( new fieldTypeSectionCollectionView( { collection: this.savedCollection } ) );\n\t\t\tthis.secondary.show( new fieldTypeSectionCollectionView( { collection: this.fieldTypeSectionCollection } ) );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","define( 'views/app/drawer/itemSettingCollection',[], function() {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.childViewOptions = { dataModel: data.dataModel };\n\t\t},\n\n\t\tgetChildView: function( model ) {\n\t\t\treturn nfRadio.channel( 'app' ).request( 'get:settingChildView', model );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","define( 'views/app/drawer/itemSettingGroup',['views/app/drawer/itemSettingCollection'], function( itemSettingCollectionView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-edit-field-setting-group',\n\t\t\n\t\tregions: {\n\t\t\tsettings: '.nf-field-settings'\n\t\t},\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.model.on( 'change', this.render, this );\n\t\t\tthis.dataModel = data.dataModel;\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change', this.render );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tif ( this.model.get( 'display' ) ) {\n\t\t\t\tthis.settings.show( new itemSettingCollectionView( { collection: this.model.get( 'settings' ), dataModel: this.dataModel } ) );\n\t\t\t} else {\n\t\t\t\tthis.settings.empty();\n\t\t\t}\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'render:settingGroup', this );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .toggle': 'clickToggleGroup'\n\t\t},\n\n\t\tclickToggleGroup: function( e ) {\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'click:toggleSettingGroup', e, this.model );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderLabel: function() {\n\t\t\t\t\tif ( '' != this.label ) {\n\t\t\t\t\t\treturn _.template( jQuery( '#nf-tmpl-drawer-content-edit-setting-group-label' ).html(), this );\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderArrowDir: function() {\n\t\t\t\t\tif ( this.display ) {\n\t\t\t\t\t\treturn 'down';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn 'right';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/app/drawer/itemSettingGroupCollection',['views/app/drawer/itemSettingGroup'], function( itemSettingGroupView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: itemSettingGroupView,\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.childViewOptions = { dataModel: data.dataModel };\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","define( 'views/app/drawer/editSettings',['views/app/drawer/itemSettingGroupCollection'], function( itemSettingGroupCollectionView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-edit-settings',\n\n\t\tregions: {\n\t\t\tsettingGroups: '.nf-settings-groups',\n\t\t},\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.dataModel = data.model;\n\t\t\tthis.groupCollection = data.groupCollection;\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.settingGroups.show( new itemSettingGroupCollectionView( { collection: this.groupCollection, dataModel: this.dataModel } ) );\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t    \treturn {\n\t    \t\tmaybeRenderTitle: function() {\n\t    \t\t\tif ( 'undefined' !== typeof this.type ) {\n\t    \t\t\t\treturn _.template( jQuery( '#nf-tmpl-drawer-content-edit-settings-title' ).html(), this );\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t    \t\t},\n\n\t    \t\trenderTypeNicename: function() {\n\t    \t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\t\t\tvar domainID = currentDomain.get( 'id' );\n\t    \t\t\tvar type = nfRadio.channel( domainID ).request( 'get:type', this.type );\n\t    \t\t\treturn type.get( 'nicename' );\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t});\n\n\treturn view;\n} );\n","/**\n * Button to add an action to the form.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/drawer/typeButton',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-action-type-button',\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t\t\n\t\t\tjQuery( this.el ).disableSelection();\n\t\t\t\n\t\t\tif ( 'installed' == this.model.get( 'section') ) {\n\t\t\t\tvar that = this;\n\t\t\t\tjQuery( this.el ).draggable( {\n\t\t\t\t\topacity: 0.9,\n\t\t\t\t\ttolerance: 'intersect',\n\t\t\t\t\tscroll: false,\n\t\t\t\t\thelper: 'clone',\n\n\t\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\t\tthat.dragging = true;\n\t\t\t\t\t\tnfRadio.channel( 'drawer-addAction' ).trigger( 'startDrag:type', this, ui );\n\t\t\t\t\t},\n\n\t\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\t\tthat.dragging = false;\n\t\t\t\t\t\tnfRadio.channel( 'drawer-addAction' ).trigger( 'stopDrag:type', this, ui );\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\t\t\t\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-item': 'clickAddAction'\n\t\t},\n\n\t\tclickAddAction: function( e ) {\n\t\t\tif ( ! this.dragging ) {\n\t\t\t\tif ( 'installed' == this.model.get( 'section' ) ) { // Is this an installed action?\n\t\t\t\t\tnfRadio.channel( 'actions' ).trigger( 'click:addAction', this.model );\n\t\t\t\t} else { // This isn't an installed action\n\t\t\t\t\twindow.open( this.model.get( 'link' ), '_blank' );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = 'nf-item';\n\t\t\t\t\tif ( '' != jQuery.trim( this.image ) ) {\n\t\t\t\t\t\tclasses += ' nf-has-img';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( 'installed' == this.section ) {\n\t\t\t\t\t\tclasses += ' nf-action-type';\n\t\t\t\t\t}\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\trenderStyle: function() {\n\t\t\t\t\tif ( '' != jQuery.trim( this.image ) ) {\n\t\t\t\t\t\treturn \"style=\\\"background-image: url(\" + this.image + \");\\\"\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/actions/drawer/typeCollection',['views/actions/drawer/typeButton'], function( actionTypeButtonView ) {\n\tvar view = Marionette.CompositeView.extend( {\n\t\ttemplate: '#nf-tmpl-drawer-action-type-section',\n\t\tchildView: actionTypeButtonView,\n\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t\t\treturn {\n\t\t\t\trenderNicename: function() {\n\t\t\t\t\treturn that.collection.nicename;\n\t\t\t\t},\n\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\treturn that.collection.slug;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( '.action-types' ).append( childView.el );\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","/**\n * Add action drawer.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/drawer/addAction',['views/actions/drawer/typeCollection'], function( actionTypeCollectionView ) {\n\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttemplate: '#nf-tmpl-drawer-content-add-action',\n\n\t\tregions: {\n\t\t\tprimary: '#nf-drawer-primary',\n\t\t\tsecondary: '#nf-drawer-secondary'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'filter:actionTypes', this.filteractionTypes );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'clear:filter', this.removeactionTypeFilter );\n\t\t\n\t\t\tthis.installedActions = nfRadio.channel( 'actions' ).request( 'get:installedActions' );\n\t\t\tthis.primaryCollection = this.installedActions;\n\n\t\t\tthis.availableActions = nfRadio.channel( 'actions' ).request( 'get:availableActions' );\n\t\t\tthis.secondaryCollection = this.availableActions;\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tthis.primary.show( new actionTypeCollectionView( { collection: this.primaryCollection } ) );\n\t\t\tthis.secondary.show( new actionTypeCollectionView( { collection: this.secondaryCollection } ) );\n\t\t},\n\n\t\tgetEl: function() {\n\t\t\treturn jQuery( this.el ).parent();\n\t\t},\n\n\t\tfilteractionTypes: function( filteredInstalled, filteredAvailable ) {\n\t\t\tthis.primary.reset();\n\t\t\tthis.secondary.reset();\n\t\t\tthis.primary.show( new actionTypeCollectionView( { collection: filteredInstalled } ) );\n\t\t\tthis.secondary.show( new actionTypeCollectionView( { collection: filteredAvailable } ) );\n\t\t\t\n\t\t},\n\n\t\tremoveactionTypeFilter: function () {\n\t\t\tthis.primary.show( new actionTypeCollectionView( { collection: this.installedActions } ) );\n\t\t\tthis.secondary.show( new actionTypeCollectionView( { collection: this.availableActions } ) );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","define( 'views/settings/drawer/editFormSettings',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-edit-form-settings'\n\t});\n\n\treturn view;\n} );\n","/**\n * Individual change item.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/contentViewChangesItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-view-changes-item',\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:disabled', this.render, this );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:disabled', this.render );\n\t\t},\n\n\t\t/**\n\t\t * When we render this element, remove the extra wrapping <div> that backbone creates.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .undoSingle': 'undoSingle'\n\t\t},\n\n\t\tundoSingle: function( e ) {\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'click:undoSingle', this.model );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Changes collection view.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/contentViewChanges',['views/app/drawer/contentViewChangesItem'], function( viewChangesItem ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'table',\n        className: 'nf-changes',\n\t\tchildView: viewChangesItem\n\t} );\n\n\treturn view;\n} );\n\n","/**\n * Handles clicks on the 'view changes' button in the header.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/headerViewChanges',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-header-view-changes',\n\n\t\tevents: {\n\t\t\t'click .undoChanges': 'clickUndoChanges'\n\t\t},\n\n\t\tclickUndoChanges: function( e ) {\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'click:undoChanges' );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Config file for our app drawers.\n *\n * this.collection represents all of our registered drawers.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/drawerConfig',[\n\t'models/app/drawerCollection',\n\t'views/fields/drawer/addField',\n\t'views/app/drawer/editSettings',\n\t'views/actions/drawer/addAction',\n\t'views/settings/drawer/editFormSettings',\n\t'views/app/drawer/contentViewChanges',\n\t'views/app/drawer/headerViewChanges'\n\t], function(\n\t\tdrawerCollection,\n\t\taddFieldView,\n\t\teditSettingsView,\n\t\taddActionView,\n\t\teditFormSettingsView,\n\t\tviewChangesView,\n\t\tviewChangesHeaderView\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\n\t\t\tthis.collection = new drawerCollection( [\n\t\t\t\t{\n\t\t\t\t\tid: 'addField',\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new addFieldView( data );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'addAction',\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new addActionView( data );\n\t\t\t\t\t}\n\t\t\t\t},\t\t\t\t\n\t\t\t\t{\n\t\t\t\t\tid: 'editSettings',\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new editSettingsView( data );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'editFormSettings',\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new editFormSettingsView( data );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'viewChanges',\n\n\t\t\t\t\t// getHeaderView() is defined by default, but we need to override it for the viewChanges drawer.\n\t\t\t\t\tgetHeaderView: function( data ) {\n\t\t\t\t\t\treturn new viewChangesHeaderView( data );\n\t\t\t\t\t},\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new viewChangesView( data );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t] );\n\n\t\t\t// Listen for requests for our drawer collection.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:drawerCollection', this.getDrawerCollection, this );\n\t\t\t// Listen for requests for specific drawer models.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:drawer', this.getDrawer, this );\n\t\t},\n\n\t\tgetDrawerCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tgetDrawer: function( id ) {\n\t\t\treturn this.collection.get( id );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model for our individual domains.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/domainModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tdashicons: '',\n\t\t\tclasses: '',\n\t\t\tactive: false,\n\t\t\turl: '',\n\t\t\thotkeys: false,\n\t\t\tdisabled: false\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Holds all of our domain models.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/domainCollection',['models/app/domainModel'], function( domainModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: domainModel\n\t} );\n\treturn collection;\n} );\n","define( 'views/fields/mainHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-header-fields',\n\n\t\tinitialize: function() {\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tthis.listenTo( fieldCollection, 'add', this.render );\n\t\t\tthis.listenTo( fieldCollection, 'remove', this.render );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tif ( fieldCollection.models.length == 0 ) {\n\t\t\t\tjQuery( this.el ).hide();\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).show();\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/subHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-sub-header-fields'\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders an application menu item from a domain model.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/itemControls',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-item-controls',\n\n\t\tinitialize: function() {\n\t\t\t// Listen for domain changes and re-render when we detect one.\n\t\t\t// this.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.render );\n\t\t},\n\n\t\t/**\n\t\t * When we render this view, remove the extra <div> tag created by backbone.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\t// this.$el = this.$el.children();\n\t\t\t// this.$el.unwrap();\n\t\t\t// this.setElement( this.$el );\n\t\t\t// \n\t\t\tthis.currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-edit-settings': 'clickEdit',\n\t\t\t'click .nf-delete': 'clickDelete',\n\t\t\t'click .nf-duplicate': 'clickDuplicateField'\n\t\t},\n\n\t\tclickEdit: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:edit', e, this.model );\n\t\t},\n\n\t\tclickDelete: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:delete', e, this.model );\n\t\t},\n\n\t\tclickDuplicateField: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:duplicate', e, this.model );\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/fieldItem',['views/app/itemControls'], function( itemControlsView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-content-field',\n\n\t\tregions: {\n\t\t\titemControls: '.nf-item-controls'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:editActive', this.render, this );\n\t\t\tthis.model.on( 'change:label', this.render, this );\n\t\t\tthis.model.on( 'change:required', this.render, this );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:editActive', this.render );\n\t\t\tthis.model.off( 'change:label', this.render );\n\t\t\tthis.model.off( 'change:required', this.render );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tthis.itemControls.show( new itemControlsView( { model: this.model } ) );\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t    \treturn {\n\t    \t\trenderClasses: function() {\n\t    \t\t\tvar classes = 'nf-field-wrap';\n\t    \t\t\tif ( this.editActive ) {\n\t    \t\t\t\tclasses += ' active';\n\t    \t\t\t}\n\t    \t\t\treturn classes;\n\t    \t\t},\n\t    \t\trenderRequired: function() {\n\t    \t\t\tif ( 1 == this.required ) {\n\t    \t\t\t\treturn '<span class=\"required\">*</span>';\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t    \t\t},\n\t    \t\tgetFieldID: function() {\n\t\t\t\t\tif ( jQuery.isNumeric( this.id ) ) {\n\t\t\t\t\t\treturn 'field-' + this.id;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this.id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\t\tevents: {\n\t\t\t'click': 'maybeClickEdit'\n\t\t},\n\n\t\tmaybeClickEdit: function( e ) {\n\t\t\tif ( jQuery( e.target ).parent().hasClass( 'nf-fields-sortable' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'click:edit', e, this.model );\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/mainContentEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-content-fields-empty',\n\n\t\tonBeforeDestroy: function() {\n\t\t\tjQuery( this.el ).parent().removeClass( 'nf-fields-empty-droppable' ).droppable( 'destroy' );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tif ( jQuery( this.el ).parent().hasClass( 'ui-sortable' ) ) {\n\t\t\t\tjQuery( this.el ).parent().sortable( 'destroy' );\n\t\t\t}\n\t\t\tjQuery( this.el ).parent().addClass( 'nf-fields-empty-droppable' );\n\t\t\tjQuery( this.el ).parent().droppable( {\n\t\t\t\taccept: function( draggable ) {\n\t\t\t\t\tif ( jQuery( draggable ).hasClass( 'nf-stage' ) || jQuery( draggable ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\thoverClass: 'nf-droppable-hover',\n\t\t\t\ttolerance: 'pointer',\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t\t},\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\t\t},\n\t\t\t\tdrop: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'receive:fieldsSortable', ui );\n\t\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\t\tfieldCollection.trigger( 'reset', fieldCollection );\n\t\t\t\t},\n\t\t\t} );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/mainContentFieldCollection',['views/fields/fieldItem', 'views/fields/mainContentEmpty'], function( mainContentFieldView, mainContentFieldEmptyView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: mainContentFieldView,\n\t\temptyView: mainContentFieldEmptyView,\n\t\treorderOnSort: true,\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:sortableEl', this.getSortableEl, this );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tif ( this.collection.models.length > 0 ) {\n\t\t\t\tjQuery( this.el ).addClass( 'nf-field-type-droppable' ).addClass( 'nf-fields-sortable' );\n\t\t\t\tvar that = this;\n\t\t\t\tjQuery( this.el ).sortable( {\n\t\t\t\t\tcontainment: '#nf-main',\n\t\t\t\t\thelper: 'clone',\n\t\t\t\t\tcancel: '.nf-item-controls',\n\t\t\t\t\tplaceholder: 'nf-fields-sortable-placeholder',\n\t\t\t\t\topacity: 0.95,\n\t\t\t\t\ttolerance: 'intersect',\n\n\t\t\t\t\treceive: function( e, ui ) {\n\t\t\t\t\t\tnfRadio.channel( 'app' ).request( 'receive:fieldsSortable', ui );\n\t\t\t\t\t},\n\n\t\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t\t\t},\n\n\t\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\t\t\t},\n\n\t\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\t\tnfRadio.channel( 'app' ).request( 'start:fieldsSortable', ui );\n\t\t\t\t\t},\n\n\t\t\t\t\tupdate: function( e, ui ) {\n\t\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:fieldsSortable', ui );\n\t\t\t\t\t},\n\n\t\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\t\tnfRadio.channel( 'app' ).request( 'stop:fieldsSortable', ui );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\tgetSortableEl: function() {\n\t\t\treturn this.el;\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","/**\n * Add main header.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/mainHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-header-actions',\n\n\t\tinitialize: function() {\n\t\t\tvar actionCollection = nfRadio.channel( 'actions' ).request( 'get:collection' );\n\t\t\tthis.listenTo( actionCollection, 'add', this.render );\n\t\t\tthis.listenTo( actionCollection, 'remove', this.render );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar actionCollection = nfRadio.channel( 'actions' ).request( 'get:collection' );\n\t\t\tif ( actionCollection.models.length == 0 ) {\n\t\t\t\tjQuery( this.el ).hide();\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).show();\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Actions subheader view.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/subHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-sub-header-actions'\n\t});\n\n\treturn view;\n} );\n","/**\n * Single action table row\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/actionItem',['views/app/itemControls'], function( itemControlsView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'tr',\n\t\ttemplate: '#nf-tmpl-action-item',\n\t\t\n\t\tregions: {\n\t\t\titemControls: '.nf-item-controls'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change', this.render, this );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change', this.render );\n\t\t},\n\t\t\n\t\tonRender: function() {\n\t\t\tif ( this.model.get( 'editActive' ) ) {\n\t\t\t\tjQuery( this.el ).addClass( 'active' );\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).removeClass( 'active' );\n\t\t\t}\n\n\t\t\tif ( 0 == this.model.get( 'active' ) ) {\n\t\t\t\tjQuery( this.el ).addClass( 'deactivated' );\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).removeClass( 'deactivated' );\n\t\t\t}\n\n\t\t\tthis.itemControls.show( new itemControlsView( { model: this.model } ) );\n\t\t},\n\n\t\tevents: {\n\t\t\t'change input': 'changeToggle',\n\t\t\t'click': 'maybeClickEdit'\n\t\t},\n\n\t\tmaybeClickEdit: function( e ) {\n\t\t\tif ( 'TR' == jQuery( e.target ).parent().prop( 'tagName' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'click:edit', e, this.model );\n\t\t\t}\n\t\t},\n\n\t\tchangeToggle: function( e ) {\n\t\t\tvar settingModel = nfRadio.channel( 'actions' ).request( 'get:settingModel', 'active' );\n\t\t\tnfRadio.channel( 'app' ).request( 'change:setting', e, settingModel, this.model );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderToggle: function() {\n\t\t\t\t\tvar actionLabel = this.label;\n\t\t\t\t\tthis.label = '';\n\t\t\t\t\tthis.value = this.active;\n\t\t\t\t\tthis.name = this.id + '-active';\n\t\t\t\t\tvar html = _.template( jQuery( '#nf-tmpl-edit-setting-toggle' ).html(), this );\n\t\t\t\t\tthis.label = actionLabel;\n\t\t\t\t\treturn html;\n\t\t\t\t},\n\n\t\t\t\trenderTypeNicename: function() {\n\t\t\t\t\tvar type = nfRadio.channel( 'actions' ).request( 'get:type', this.type );\n\t\t\t\t\treturn type.get( 'nicename' );\n\t\t\t\t},\n\n\t\t\t\trenderTooltip: function() {\n\t\t\t\t\tif ( this.help ) {\n\t\t\t\t\t\treturn '<a class=\"nf-help\" href=\"#\"><span class=\"dashicons dashicons-admin-comments\"></span></a><div class=\"nf-help-text\">' + this.help + '</div>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderMergeTags: function() {\n\t\t\t\t\tif ( this.use_merge_tags ) {\n\t\t\t\t\t\treturn '<span class=\"dashicons dashicons-list-view merge-tags\"></span>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/actions/mainContentEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-content-actions-empty',\n\n\t\tonBeforeDestroy: function() {\n\t\t\tjQuery( this.el ).parent().parent().removeClass( 'nf-actions-empty' );\n\t\t\t// jQuery( this.el ).parent().removeClass( 'nf-fields-empty-droppable' ).droppable( 'destroy' );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tjQuery( this.el ).parent().parent().addClass( 'nf-actions-empty' );\n\t\t\t// if ( jQuery( this.el ).parent().hasClass( 'ui-sortable' ) ) {\n\t\t\t// \tjQuery( this.el ).parent().sortable( 'destroy' );\n\t\t\t// }\n\t\t\t// jQuery( this.el ).parent().addClass( 'nf-fields-empty-droppable' );\n\t\t\t// jQuery( this.el ).parent().droppable( {\n\t\t\t// \taccept: function( draggable ) {\n\t\t\t// \t\tif ( jQuery( draggable ).hasClass( 'nf-stage' ) || jQuery( draggable ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t// \t\t\treturn true;\n\t\t\t// \t\t}\n\t\t\t// \t},\n\t\t\t// \thoverClass: 'nf-droppable-hover',\n\t\t\t// \ttolerance: 'pointer',\n\t\t\t// \tover: function( e, ui ) {\n\t\t\t// \t\tui.item = ui.draggable;\n\t\t\t// \t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t// \t},\n\t\t\t// \tout: function( e, ui ) {\n\t\t\t// \t\tui.item = ui.draggable;\n\t\t\t// \t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\t// \t},\n\t\t\t// \tdrop: function( e, ui ) {\n\t\t\t// \t\tui.item = ui.draggable;\n\t\t\t// \t\tnfRadio.channel( 'app' ).request( 'receive:fieldsSortable', ui );\n\t\t\t// \t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t// \t\tfieldCollection.trigger( 'reset', fieldCollection );\n\t\t\t// \t},\n\t\t\t// } );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Main content view for our actions.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/mainContent',['views/actions/actionItem', 'views/actions/mainContentEmpty'], function( actionView, emptyView ) {\n\tvar view = Marionette.CompositeView.extend({\n\t\ttemplate: '#nf-tmpl-action-table',\n\t\tchildView: actionView,\n\t\temptyView: emptyView,\n\n\t\tonRender: function() {\n\t\t\tjQuery( this.el ).droppable( {\n\t\t\t\taccept: '.nf-one-third',\n\t\t\t\tactiveClass: 'nf-droppable-active',\n\t\t\t\thoverClass: 'nf-droppable-hover',\n\t\t\t\tdrop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'drop:actionType', e, ui );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( 'tbody' ).append( childView.el );\n\t\t},\n\t});\n\n\treturn view;\n} );\n","define( 'views/settings/mainHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-header-settings'\n\t});\n\n\treturn view;\n} );\n","define( 'views/settings/subHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-sub-header-settings'\n\t});\n\n\treturn view;\n} );\n","define( 'views/settings/settingItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-form-setting-type',\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:editActive', this.render );\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:editActive', this.render, this );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click': 'clickEdit'\n\t\t},\n\n\t\tclickEdit: function( e ) {\n\t\t\tnfRadio.channel( 'settings' ).trigger( 'click:edit', e, this.model );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = 'nf-setting-wrap';\n\t    \t\t\tif ( this.editActive ) {\n\t    \t\t\t\tclasses += ' active';\n\t    \t\t\t}\n\t    \t\t\treturn classes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/settings/mainContent',['views/settings/settingItem'], function( settingItem ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\tchildView: settingItem\n\t\t\n\t});\n\n\treturn view;\n} );\n","/**\n * Config file for our app domains.\n * \n * this.collection represents all of our app domain (fields, actions, settings) information.\n *\n * This doesn't store the current domain, but rather all the data about each.\n * \n * This data includes:\n * hotkeys\n * header view\n * subheader view\n * content view\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/domainConfig',[\n\t// Require our domain collection\n\t'models/app/domainCollection',\n\t// Require our fields domain files\n\t'views/fields/mainHeader',\n\t'views/fields/subHeader',\n\t'views/fields/mainContentFieldCollection',\n\t// Require our actions domain files\n\t'views/actions/mainHeader', \n\t'views/actions/subHeader',\n\t'views/actions/mainContent',\n\t// Require our settings domain files\n\t'views/settings/mainHeader',\n\t'views/settings/subHeader',\n\t'views/settings/mainContent',\n\t], \n\tfunction( \n\t\tappDomainCollection,\n\t\tfieldsMainHeaderView,\n\t\tfieldsSubHeaderView,\n\t\tfieldsMainContentFieldCollectionView,\n\t\tactionsMainHeaderView,\n\t\tactionsSubHeaderView,\n\t\tactionsMainContentView,\n\t\tsettingsMainHeaderView,\n\t\tsettingsSubHeaderView,\n\t\tsettingsMainContentView\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Define our app domains\n\t\t\tthis.collection = new appDomainCollection( [\n\t\t\t\t{\n\t\t\t\t\tid: 'fields',\n\t\t\t\t\tnicename: 'Form Fields',\n\t\t\t\t\thotkeys: {\n\t\t\t\t\t\t'Esc'\t\t\t\t: 'close:drawer',\n\t\t\t\t\t\t'Ctrl+Shift+n'\t\t: 'add:newField',\n\t\t\t\t\t\t'Ctrl+Shift+a'\t\t: 'changeDomain:actions',\n\t\t\t\t\t\t'Ctrl+Shift+s'\t\t: 'changeDomain:settings',\n\t\t\t\t\t\t'Alt+Ctrl+t'\t\t: 'open:mergeTags',\n\t\t\t\t\t\t'up'\t\t\t\t: 'up:mergeTags',\n\t\t\t\t\t\t'down'\t\t\t\t: 'down:mergeTags',\n\t\t\t\t\t\t'Shift+return'\t\t: 'return:mergeTags'\n\t\t\t\t\t},\n\n\t\t\t\t\tgetMainHeaderView: function() {\n\t\t\t\t\t\treturn new fieldsMainHeaderView();\n\t\t\t\t\t},\n\n\t\t\t\t\tgetSubHeaderView: function() {\n\t\t\t\t\t\treturn new fieldsSubHeaderView();\n\t\t\t\t\t},\n\n\t\t\t\t\tgetMainContentView: function( collection ) {\n\t\t\t\t\t\tvar collection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\t\t\treturn new fieldsMainContentFieldCollectionView( { collection: collection } );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'actions',\n\t\t\t\t\tnicename: 'Emails & Actions',\n\t\t\t\t\thotkeys: {\n\t\t\t\t\t\t'Esc'\t\t\t\t: 'close:drawer',\n\t\t\t\t\t\t'Ctrl+Shift+n'\t\t: 'add:newAction',\n\t\t\t\t\t\t'Ctrl+Shift+f'\t\t: 'changeDomain:fields',\n\t\t\t\t\t\t'Ctrl+Shift+s'\t\t: 'changeDomain:settings',\n\t\t\t\t\t\t'Alt+Ctrl+t'\t\t: 'open:mergeTags',\n\t\t\t\t\t\t'up'\t\t\t\t: 'up:mergeTags',\n\t\t\t\t\t\t'down'\t\t\t\t: 'down:mergeTags',\n\t\t\t\t\t\t'Shift+return'\t\t: 'return:mergeTags'\n\t\t\t\t\t},\n\n\t\t\t\t\tgetMainHeaderView: function() {\n\t\t\t\t\t\treturn new actionsMainHeaderView();\n\t\t\t\t\t},\n\n\t\t\t\t\tgetSubHeaderView: function() {\n\t\t\t\t\t\treturn new actionsSubHeaderView();\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t\tgetMainContentView: function() {\n\t\t\t\t\t\tvar collection = nfRadio.channel( 'actions' ).request( 'get:collection' );\n\t\t\t\t\t\treturn new actionsMainContentView( { collection: collection } );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'settings',\n\t\t\t\t\tnicename: 'Advanced',\n\t\t\t\t\thotkeys: {\n\t\t\t\t\t\t'Esc'\t\t\t\t: 'close:drawer',\n\t\t\t\t\t\t'Ctrl+Shift+f'\t\t: 'changeDomain:fields',\n\t\t\t\t\t\t'Ctrl+Shift+a'\t\t: 'changeDomain:actions',\n\t\t\t\t\t\t'Alt+Ctrl+t'\t\t: 'open:mergeTags',\n\t\t\t\t\t\t'up'\t\t\t\t: 'up:mergeTags',\n\t\t\t\t\t\t'down'\t\t\t\t: 'down:mergeTags',\n\t\t\t\t\t\t'Shift+return'\t\t: 'return:mergeTags'\n\t\t\t\t\t},\n\n\t\t\t\t\tgetMainHeaderView: function() {\n\t\t\t\t\t\treturn new settingsMainHeaderView();\n\t\t\t\t\t},\n\n\t\t\t\t\tgetSubHeaderView: function() {\n\t\t\t\t\t\treturn new settingsSubHeaderView();\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t\tgetMainContentView: function() {\n\t\t\t\t\t\tvar collection = nfRadio.channel( 'settings' ).request( 'get:typeCollection' );\n\t\t\t\t\t\treturn new settingsMainContentView( { collection: collection } );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'preview',\n\t\t\t\t\tnicename: 'Preview Form',\n\t\t\t\t\tclasses: 'preview',\n\t\t\t\t\tdashicons: 'dashicons-visibility',\n\t\t\t\t\turl: nfAdmin.previewurl\n\t\t\t\t}\n\t\t\t] );\n\n\t\t\t/*\n\t\t\t * Respond to requests to get the app domain collection.\n\t\t\t */\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:domainCollection', this.getDomainCollection, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:domainModel', this.getDomainModel, this );\n\t\t},\n\n\t\tgetDomainCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tgetDomainModel: function( id ) {\n\t\t\treturn this.collection.get( id );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model for our app data.\n * Listens for changes to the 'clean' attribute and triggers a radio message when the state changes.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/appModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tloading: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Listen to changes to our 'clean' attribute.\n\t\t\tthis.on( 'change:clean', this.changeStatus, this );\n\t\t},\n\n\t\tchangeStatus: function() {\n\t\t\t// Send out a radio message when the 'clean' attribute changes.\n\t\t\tnfRadio.channel( 'app' ).trigger( 'change:clean', this.get( 'clean' ) );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Creates and stores a model that represents app-wide data. i.e. current domain, current drawer, clean, etc.\n *\n * clean is a boolean that represents whether or not changes have been made.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/data',['models/app/appModel'], function( appModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Get the collection that represents all the parts of our application.\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\t// Setup our initial model.\n\t\t\tthis.model = new appModel( {\n\t\t\t\tcurrentDrawer: false,\n\t\t\t\tcurrentDomain: appDomainCollection.get( 'fields' ),\n\t\t\t\tclean: true\n\t\t\t} );\n\n\t\t\t/*\n\t\t\t * Respond to app channel requests for information about the state of our app.\n\t\t\t */\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:data', this.getData, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:setting', this.getSetting, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:currentDomain', this.getCurrentDomain, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:currentDrawer', this.getCurrentDrawer, this );\n\n\t\t\t/*\n\t\t\t * Respond to app channel requests to update app settings.\n\t\t\t */\t\t\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:currentDomain', this.updateCurrentDomain, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:currentDrawer', this.updateCurrentDrawer, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:setting', this.updateSetting, this );\n\n\t\t},\n\n\t\tupdateCurrentDomain: function( model ) {\n\t\t\tthis.updateSetting( 'currentDomain', model );\n\t\t},\n\n\t\tupdateSetting: function( setting, value ) {\n\t\t\tthis.model.set( setting, value );\n\t\t\treturn true;\n\t\t},\n\n\t\tgetSetting: function( setting ) {\n\t\t\treturn this.model.get( setting );\n\t\t},\n\n\t\tgetData: function() {\n\t\t\treturn this.model;\n\t\t},\n\n\t\tgetCurrentDomain: function() {\n\t\t\treturn this.model.get( 'currentDomain' );\n\t\t},\n\n\t\tupdateCurrentDrawer: function( drawerID ) {\n\t\t\tthis.updateSetting( 'currentDrawer', drawerID );\n\t\t\treturn true;\n\t\t},\n\n\t\tgetCurrentDrawer: function() {\n\t\t\tvar currentDrawerID = this.model.get( 'currentDrawer' );\n\t\t\treturn nfRadio.channel( 'app' ).request( 'get:drawer', currentDrawerID );\n\t\t}\n\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens for click events to expand/collapse setting groups.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/drawerToggleSettingGroup',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for click events on our settings group.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'click:toggleSettingGroup', this.toggleSettingGroup );\n\t\t},\n\n\t\t/**\n\t\t * Set the 'display' attribute of our group model to true or false to toggle.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te     \tevent\n\t\t * @param  backbone.model \tmodel \tgroup setting model\n\t\t * @return void\n\t\t */\n\t\ttoggleSettingGroup: function( e, model ) {\n\t\t\tif ( model.get( 'display' ) ) {\n\t\t\t\t/*\n\t\t\t\t * Make sure that none of our settings have errors\n\t\t\t\t */\n\t\t\t\tvar errors = false;\n\t\t\t\t_.each( model.get( 'settings' ).models, function( setting ) {\n\t\t\t\t\tif ( setting.get( 'error' ) ) {\n\t\t\t\t\t\terrors = true;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tif ( ! errors ) {\n\t\t\t\t\tmodel.set( 'display', false );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmodel.set( 'display', true );\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Updates our database with our form data.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/updateDB',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for the closing of the drawer and update when it's closed.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'closed', this.updateDB );\n\t\t\t// Respond to requests to update the database.\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:db', this.updateDB, this );\n\t\t},\n\n\t\t/**\n\t\t * Update our database.\n\t\t * If action isn't specified, assume we're updating the preview.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string \taction preview or publish\n\t\t * @return void\n\t\t */\n\t\tupdateDB: function( action ) {\n\t\t\t// If our app is clean, dont' update.\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'get:setting', 'clean' ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Default action to preview.\n\t\t\taction = action || 'preview';\n\n\t\t\t// Setup our ajax actions based on the action we're performing\n\t\t\tif ( 'preview' == action ) {\n\t\t\t\tvar jsAction = 'nf_preview_update';\n\t\t\t} else if ( 'publish' == action ) {\n\t\t\t\tvar jsAction = 'nf_save_form';\n\t\t\t}\n\n\t\t\t// Get our form data\n\t\t\tvar formData = nfRadio.channel( 'app' ).request( 'get:formData' );\n\n\t\t\t// Turn our formData model into an object\n\t\t\tvar data = JSON.parse( JSON.stringify( formData ) );\n\n\t\t\t/**\n\t\t\t * Prepare fields for submission.\n\t\t\t */\n\t\t\t\n\t\t\t// Get the field IDs that we've deleted.\n\t\t\tvar removedIDs = formData.get( 'fields' ).removedIDs;\n\n\t\t\t/*\n\t\t\t * data.fields is an array of objects like:\n\t\t\t * field.label = blah\n\t\t\t * field.label_pos = blah\n\t\t\t * etc.\n\t\t\t *\n\t\t\t * And we need that format to be:\n\t\t\t * field.settings.label = blah\n\t\t\t * field.settings.label_pos = blah\n\t\t\t *\n\t\t\t * So, we loop through our fields and create a field.settings object.\n\t\t\t */\n\t\t\t_.each( data.fields, function( field ) {\n\t\t\t\tvar id = field.id;\n\t\t\t\t// We dont' want to update id or parent_id\n\t\t\t\tdelete field.id;\n\t\t\t\tdelete field.parent_id;\n\t\t\t\tvar settings = {};\n\t\t\t\t// Loop through all the attributes of our fields\n\t\t\t\tfor (var prop in field) {\n\t\t\t\t    if ( field.hasOwnProperty( prop ) ) {\n\t\t\t\t    \t// Set our settings.prop value.\n\t\t\t\t        settings[ prop ] = field[ prop ];\n\t\t\t\t        // Delete the property from the field.\n\t\t\t\t        delete field[ prop ];\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\t// Update our field object.\n\t\t\t\tfield.settings = settings;\n\t\t\t\tfield.id = id;\n\t\t\t} );\n\n\t\t\t// Set our deleted_fields object so that we can know which fields were removed.\n\t\t\tdata.deleted_fields = removedIDs;\n\n\t\t\t/**\n\t\t\t * Prepare actions for submission.\n\t\t\t */\n\t\t\t\n\t\t\t// Get the action IDs that we've deleted.\n\t\t\tvar removedIDs = formData.get( 'actions' ).removedIDs;\n\n\t\t\t/*\n\t\t\t * data.actions is an array of objects like:\n\t\t\t * action.label = blah\n\t\t\t * action.label_pos = blah\n\t\t\t * etc.\n\t\t\t *\n\t\t\t * And we need that format to be:\n\t\t\t * action.settings.label = blah\n\t\t\t * action.settings.label_pos = blah\n\t\t\t *\n\t\t\t * So, we loop through our actions and create a field.settings object.\n\t\t\t */\n\t\t\t_.each( data.actions, function( action ) {\n\t\t\t\tvar id = action.id;\n\t\t\t\t// We dont' want to update id or parent_id\n\t\t\t\tdelete action.id;\n\t\t\t\tdelete action.parent_id;\n\t\t\t\tvar settings = {};\n\t\t\t\t// Loop through all the attributes of our actions\n\t\t\t\tfor (var prop in action) {\n\t\t\t\t    if ( action.hasOwnProperty( prop ) ) {\n\t\t\t\t    \t// Set our settings.prop value.\n\t\t\t\t        settings[ prop ] = action[ prop ];\n\t\t\t\t        // Delete the property from the action.\n\t\t\t\t        delete action[ prop ];\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\t// Update our action object.\n\t\t\t\taction.settings = settings;\n\t\t\t\taction.id = id;\n\t\t\t} );\n\n\t\t\t// Set our deleted_actions object so that we can know which actions were removed.\n\t\t\tdata.deleted_actions = removedIDs;\n\n\t\t\t// Turn our object into a JSON string.\n\t\t\tdata = JSON.stringify( data );\n\t\t\t// Run anything that needs to happen before we update.\n\t\t\tnfRadio.channel( 'app' ).trigger( 'before:updateDB', data );\n\n\t\t\tif ( 'publish' == action ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'loading', true );\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'change:loading' );\t\t\t\t\n\t\t\t}\n\t\t\t// Update\n\t\t\tjQuery.post( ajaxurl, { action: jsAction, form: data, security: nfAdmin.ajaxNonce }, function( response ) {\n\t\t\t\ttry {\n\t\t\t\t\tresponse = JSON.parse( response );\n\t\t\t\t\tresponse.action = action;\n\t\t\t\t\t// Run anything that needs to happen after we update.\n\t\t\t\t\tnfRadio.channel( 'app' ).trigger( 'response:updateDB', response );\n\t\t\t\t} catch( exception ) {\n\t\t\t\t\tconsole.log( 'Something went wrong!' );\n\t\t\t\t\tconsole.log( response );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model that represents our form data.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/formModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Stores our form data and responds to requests for it.\n * Form data stores fields, actions, and settings.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/formData',['models/app/formModel'], function( formModel) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Instantiate Form Model\n\t\t\tthis.model = new formModel;\n\t\t\t// Set our form ID\n\t\t\tthis.model.set( 'id', preloadedFormData.id );\n\t\t\t// Set our field collection\n\t\t\tthis.model.set( 'fields', nfRadio.channel( 'fields' ).request( 'get:collection' ) );\n\t\t\t// Set our actions collection\n\t\t\tthis.model.set( 'actions', nfRadio.channel( 'actions' ).request( 'get:collection' ) );\n\t\t\t// Set our settings collection\n\t\t\tthis.model.set( 'settings', nfRadio.channel( 'settings' ).request( 'get:settings' ) );\n\t\t\t// Respond to requests for form data.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:formData', this.getFormData, this );\n\t\t},\n\n\t\t/**\n\t\t * Return form data model.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return backbone.model\n\t\t */\n\t\tgetFormData: function() {\n\t\t\treturn this.model;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles changing our preview link when we change the 'clean' state of our app.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/previewLink',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for events that would change our preview link\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'before:sendChanges', this.disablePreview, this );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'response:sendChanges', this.enablePreview, this );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:clean', this.changePreviewNicename, this );\n\t\t},\n\n\t\t/**\n\t\t * Disable our preview link before we send data to update our preview.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tdisablePreview: function() {\n\t\t\t// Get our preview domain\n\t\t\tvar appDomains = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar preview = appDomains.get( 'preview' );\n\t\t\t// Set disabled to true. This will trigger the preview link view to redraw.\n\t\t\tpreview.set( 'disabled', true );\n\t\t},\n\n\t\t/**\n\t\t * Change the preview link text from \"Preview Form\" to \"Preview Changes\" or vice-versa\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  boolean \tclean app data state\n\t\t * @return void\n\t\t */\n\t\tchangePreviewNicename: function( clean ) {\n\t\t\t// Get our preview domain\n\t\t\tvar appDomains = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar preview = appDomains.get( 'preview' );\n\n\t\t\t// If we have unsaved changes, set our text to 'changes' otherwise, set it to 'form'\n\t\t\tif ( ! clean ) {\n\t\t\t\tvar nicename = 'Preview Changes';\n\t\t\t} else {\n\t\t\t\tvar nicename = 'Preview Form';\n\t\t\t}\n\n\t\t\tpreview.set( 'nicename', nicename );\n\t\t},\n\n\t\t/**\n\t\t * Enable our preview button.\n\t\t * This is triggered when we get a response from our preview update.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tenablePreview: function() {\n\t\t\t// Get our preview domain\n\t\t\tvar appDomains = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar preview = appDomains.get( 'preview' );\n\t\t\t// Set disabled to false. This will trigger the preview link view to redraw.\n\t\t\tpreview.set( 'disabled', false );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel for requests to change the current domain.\n *\n * The app menu and the main submenu both contain clickable links that change the current domain.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/menuButtons',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:publish', this.publish );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:viewChanges', this.viewChanges );\n\t\t},\n\n\t\tpublish: function() {\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db', 'publish' );\n\t\t},\n\n\t\tviewChanges: function() {\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'viewChanges', { collection: changeCollection } );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model that represents our change data.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/changeModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tdisabled: false\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Holds all of our change models.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/changeCollection',['models/app/changeModel'], function( domainModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: domainModel,\n\t\tcomparator: function( model ) {\n\t\t\tvar id = parseInt( model.cid.replace( 'c', '' ) );\n\t\t\treturn -id;\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Track settings changes across our app.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/trackChanges',['models/app/changeCollection', 'models/app/changeModel'], function( changeCollection, ChangeModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.collection = new changeCollection();\n\t\t\t// Respond to any requests to add a change directly.\n\t\t\tnfRadio.channel( 'changes' ).reply( 'register:change', this.registerChange, this );\n\t\t\t// Respond to requests for the change collection\n\t\t\tnfRadio.channel( 'changes' ).reply( 'get:changeCollection', this.getCollection, this );\n\t\t\t// Listen for changes in our clean state. If it goes to clean, clear our collection.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:clean', this.maybeResetCollection );\n\t\t},\n\n\t\tregisterChange: function( action, model, changes, label, data ) {\n\t\t\tvar data = typeof data !== 'undefined' ? data : {};\n\t\t\tif ( 'undefined' == typeof label.dashicon ) {\n\t\t\t\tlabel.dashicon = 'admin-generic';\n\t\t\t}\n\t\t\tvar changeModel = new ChangeModel({\n\t\t\t\taction: action,\n\t\t\t\tmodel: model,\n\t\t\t\tchanges: changes,\n\t\t\t\tlabel: label,\n\t\t\t\tdata: data\t\t\n\t\t\t} );\n\t\t\tthis.collection.add( changeModel );\n\t\t\treturn changeModel;\n\t\t},\n\n\t\tgetCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tmaybeResetCollection: function( clean ) {\n\t\t\tif ( clean ) {\n\t\t\t\tthis.collection.reset();\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define( 'controllers/app/undoChanges',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'click:undoChanges', this.undoChanges, this );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'click:undoSingle', this.undoSingle, this );\n\t\t},\n\n\t\tundoChanges: function() {\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\tchangeCollection.sort();\n\t\t\tvar that = this;\n\t\t\t_.each( changeCollection.models, function( change ) {\n\t\t\t\tthat.undoSingle( change, true );\n\t\t\t} );\n\t\t\tchangeCollection.reset();\n\t\t\t// Update preview.\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\t\t\t\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', true );\n\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t},\n\n\t\tundoSingle: function( change, undoAll ) {\n\t\t\tnfRadio.channel( 'changes' ).request( 'undo:' + change.get( 'action' ), change, undoAll );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens for our update:db response and replaces tmp ids with new ids if we were performing the publish action.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/publishResponse',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our app channel for the updateDB response.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'response:updateDB', this.publishResponse );\n\t\t},\n\n\t\tpublishResponse: function( response ) {\n\t\t\t// If we aren't performing a publish action, bail.\n\t\t\tif ( 'publish' !== response.action ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\t// Check to see if we have any new ids. \n\t\t\tif ( 'undefined' != typeof response.data.new_ids ) {\n\n\t\t\t\t// If we have any new fields, update their models with the new id.\n\t\t\t\tif ( 'undefined' != typeof response.data.new_ids.fields ) {\n\t\t\t\t\t_.each( response.data.new_ids.fields, function( newID, oldID ) {\n\t\t\t\t\t\tvar field = nfRadio.channel( 'fields' ).request( 'get:field', oldID );\n\t\t\t\t\t\tif ( field ) {\n\t\t\t\t\t\t\tfield.set( 'id', newID );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// If we have any new actions, update their models with the new id.\n\t\t\t\tif ( 'undefined' != typeof response.data.new_ids.actions ) {\n\t\t\t\t\t_.each( response.data.new_ids.actions, function( newID, oldID ) {\n\t\t\t\t\t\tvar action = nfRadio.channel( 'actions' ).request( 'get:action', oldID );\n\t\t\t\t\t\tif ( action ) {\n\t\t\t\t\t\t\taction.set( 'id', newID );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// If we have any new actions, update their models with the new id.\n\t\t\t\tif ( 'undefined' != typeof response.data.new_ids.forms ) {\n\t\t\t\t\t_.each( response.data.new_ids.forms, function( newID, oldID ) {\n\t\t\t\t\t\thistory.replaceState( '', '', 'admin.php?page=ninja-forms&form_id=' + newID );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'loading', false );\n\t\t\tnfRadio.channel( 'app' ).trigger( 'change:loading' );\n\n\t\t\t// Mark our app as clean. This will disable the publish button and fire anything else that cares about the state.\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', true );\n\t\t}\n\t\t\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel for requests to change the current domain.\n *\n * The app menu and the main submenu both contain clickable links that change the current domain.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/changeDomain',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for both menu and submenu clicks.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:menu', this.changeAppDomain );\n\t\t\t// Reply to specific requests to change the domain\n\t\t\tnfRadio.channel( 'app' ).reply( 'change:currentDomain', this.changeAppDomain, this );\n\n\t\t\t// Reply to requests to prevent our drawer from closing\n\t\t\tnfRadio.channel( 'app' ).reply( 'prevent:changeDomain', this.preventChange, this );\n\t\t\t// Reply to requests to enable drawer closing\n\t\t\tnfRadio.channel( 'app' ).reply( 'enable:changeDomain', this.enableChange, this );\n\n\t\t\t/*\n\t\t\t * Object that holds our array of 'prevent change' values.\n\t\t\t * We use an array so that registered requests can unregister and not affect each other.\n\t\t\t */\n\t\t\tthis.objPreventChange = {};\n\t\t},\n\n\t\tchangeAppDomain: function( e, model ) {\n\t\t\t/*\n\t\t\t * If we have disabled movement between domains, return false.\n\t\t\t */\n\t\t\tif ( this.maybePreventChange() ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * If we are passed a model, use that model.\n\t\t\t * Otherwise, get the domain from the event target data.\n\t\t\t */ \n\t\t\tif ( 'undefined' == typeof model ) {\n\t\t\t\tvar domainID = jQuery( e.target ).data( 'domain' );\n\t\t\t\tvar model = nfRadio.channel( 'app' ).request( 'get:domainModel', domainID );\n\t\t\t}\n\t\t\t// If a drawer is open, close it.\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'get:currentDrawer' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t}\n\t\t\t/*\n\t\t\t * If we aren't dealing with an external url (such as preview), update our app data\n\t\t\t * and trigger a radio message saying we've changed the domain.\n\t\t\t */ \n\t\t\tif ( 0 == model.get( 'url' ).length ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:currentDomain', model );\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'change:currentDomain', model );\n\t\t\t}\n\t\t},\n\n\t\t/**\n         * Check to see if anything has registered a key to prevent changing the domain.\n         * \n         * @since  3.0\n         * @return boolean\n         */\n        maybePreventChange: function() {\n        \tif ( 0 == Object.keys( this.objPreventChange ).length ) {\n        \t\treturn false;\n        \t} else {\n        \t\treturn true;\n        \t}\n        },\n\n        /**\n         * Register a key to prevent changing the domain.\n         * \n         * @since  3.0\n         * @param  string \tkey unique id for our 'prevent change domain' setting.\n         * @return void\n         */\n        preventChange: function( key ) {\n        \tthis.objPreventChange[ key ] = true;\n        },\n\n        /**\n         * Remove a previously registered key that is preventing our domain from changing.\n         * \n         * @since  3.0\n         * @param  string \tkey unique id for our 'prevent change domain' setting.\n         * @return void\n         */\n        enableChange: function( key ) {\n        \tdelete this.objPreventChange[ key ];\n        },\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Modify the user's browser history when they click on a domain\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/pushstate',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.changePushState );\n\t\t},\n\n\t\tchangePushState: function() {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\thistory.pushState( null, null, window.location.href + '&domain=' + currentDomain.get( 'id' ) );\n\t\t\tvar reExp = /domain=\\\\d+/;\n\t\t\tvar url = window.location.toString();\n\t\t\tvar newUrl = url.replace( reExp, '' );\n\t\t\tconsole.log( newUrl );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles our hotkey execution. Needs to be cleaned up and made more programmatic.\n * \n * Our hotkeys are defined by the domain that we're currently viewing. In each domain's model, there is a hotkey object.\n * \n * Currently too much hotkey data is hard-coded here.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/hotkeys',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// When we change our domain, change the hotkeys to those within that object.\n\t\t\tthis.listenTo( nfRadio.channel( 'main' ), 'render:main', this.changeHotkeys );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'opened', this.changeHotkeys );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'render:settingGroup', this.changeHotkeys );\n\t\t\t// Currently, these are the functions that run when the new field or new action hotkey is pressed.\n\t\t\t// TODO: move these into a config module or into something more programmatic and scalable.\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'add:newField', this.addNewField );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'add:newAction', this.addNewAction );\n\t\t\t// Same as above, these functions need to be moved into a more modular/programmatic solution.\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'changeDomain:fields', this.changeDomainFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'changeDomain:actions', this.changeDomainActions );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'changeDomain:settings', this.changeDomainSettings );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'close:drawer', this.closeDrawer );\n\t\t},\n\n\t\tchangeHotkeys: function() {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tjQuery( document ).off( '.nfDomainHotkeys' );\n\t\t\tjQuery( 'input' ).off( '.nfDomainHotkeys' );\n\t\t\tif ( currentDomain.get( 'hotkeys' ) ) {\n\t\t\t\tjQuery.each( currentDomain.get( 'hotkeys' ), function( hotkey, msg ) {\n\t\t\t\t\tjQuery( document ).on( 'keydown.nfDomainHotkeys', null, hotkey, function( e ) {\n\t\t\t\t\t\tnfRadio.channel( 'hotkeys' ).trigger( msg, e );\n\t\t\t\t\t} );\n\t\t\t\t\tjQuery( 'input' ).on( 'keydown.nfDomainHotkeys', null, hotkey, function( e ) {\n\t\t\t\t\t\tnfRadio.channel( 'hotkeys' ).trigger( msg, e );\n\t\t\t\t\t} );\n\t\t\t\t\tjQuery( 'textarea' ).on( 'keydown.nfDomainHotkeys', null, hotkey, function( e ) {\n\t\t\t\t\t\tnfRadio.channel( 'hotkeys' ).trigger( msg, e );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\taddNewField: function() {\n\t\t\tif ( 'addField' != nfRadio.channel( 'app' ).request( 'get:currentDrawer' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'addField' );\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t}\n\t\t\t\n\t\t},\n\n\t\taddNewAction: function() {\n\t\t\tif ( 'addAction' != nfRadio.channel( 'app' ).request( 'get:currentDrawer' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'addAction' );\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t}\n\t\t},\n\n\t\tchangeDomainFields: function() {\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar fieldsDomain = appDomainCollection.get( 'fields' );\n\t\t\tnfRadio.channel( 'app' ).request( 'change:currentDomain', {}, fieldsDomain );\n\t\t},\n\n\t\tchangeDomainActions: function() {\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar actionsDomain = appDomainCollection.get( 'actions' );\n\t\t\tnfRadio.channel( 'app' ).request( 'change:currentDomain', {}, actionsDomain );\n\t\t},\n\n\t\tchangeDomainSettings: function() {\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar settingsDomain = appDomainCollection.get( 'settings' );\n\t\t\tnfRadio.channel( 'app' ).request( 'change:currentDomain', {}, settingsDomain );\n\t\t},\n\n\t\tcloseDrawer: function() {\n\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Change the clean state of our app when settings are changed.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/cleanState',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Set an array of field model attributes to ignore.\n\t\t\t * This list will be filtered just before we ignore anything.\n\t\t\t */ \n\t\t\tthis.ignoreAttributes = [\n\t\t\t\t'editActive'\n\t\t\t];\n\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'update:setting', this.setAppClean );\n\t\t},\n\n\t\tsetAppClean: function( model ) {\n\t\t\tfor( var attr in model.changedAttributes() ) {\n\t\t\t\tvar changedAttr = attr;\n\t\t\t\tvar after = model.changedAttributes()[ attr ];\n\t\t\t}\n\n\t\t\tvar ignoreAttributes = nfRadio.channel( 'undo-' + model.get( 'type' ) ).request( 'ignore:attributes', this.ignoreAttributes ) || this.ignoreAttributes;\n\t\t\t\n\t\t\tif ( -1 != this.ignoreAttributes.indexOf( attr ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * All of the core undo functions. Listens on the 'changes' channel for an undo request.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/coreUndo',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:changeSetting', this.undoChangeSetting, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:addObject', this.undoAddObject, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:removeObject', this.undoRemoveObject, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:duplicateObject', this.undoDuplicateObject, this );\n\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:sortFields', this.undoSortFields, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:addListOption', this.undoAddListOption, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:removeListOption', this.undoRemoveListOption, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:sortListOptions', this.undoSortListOptions, this );\n\t\t},\n\n\t\t/**\n\t\t * Undo settings that have been changed.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoChangeSetting: function( change, undoAll ) {\n\t\t\tvar fieldModel = change.get( 'model' );\n\t\t\tvar changes = change.get( 'changes' );\n\t\t\tvar attr = changes.attr;\n\t\t\tvar before = changes.before;\n\t\t\tfieldModel.set( attr, before );\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\t/**\n\t\t * Undo adding a field or an action.\n\t\t * Loops through our change collection and removes any change models based upon the one we're removing.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoAddObject: function( change, undoAll ) {\n\t\t\tvar objectModel = change.get( 'model' );\n\t\t\tvar collection = change.get( 'data' ).collection;\n\n\t\t\tdelete collection.newIDs[ objectModel.get( 'id' ) ];\n\t\t\t\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tvar results = changeCollection.where( { model: objectModel } );\n\n\t\t\t\t_.each( results, function( model ) {\n\t\t\t\t\tif ( model !== change ) {\n\t\t\t\t\t\tchangeCollection.remove( model );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tcollection.remove( objectModel );\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\t\t\n\n\t\t/**\n\t\t * Undo adding a field or an action.\n\t\t * Loops through our change collection and removes any change models based upon the one we're removing.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoDuplicateObject: function( change, undoAll ) {\n\t\t\tvar objectModel = change.get( 'model' );\n\t\t\tvar objectCollection = change.get( 'data' ).collection;\n\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tvar results = changeCollection.where( { model: objectModel } );\n\n\t\t\t\t_.each( results, function( model ) {\n\t\t\t\t\tif ( model !== change ) {\n\t\t\t\t\t\tchangeCollection.remove( model );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\n\t\t\tobjectCollection.remove( objectModel );\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\t/**\n\t\t * Undo removing a field or an action.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoRemoveObject: function( change, undoAll ) {\n\t\t\tvar dataModel = change.get( 'model' );\n\t\t\tvar collection = change.get( 'data' ).collection;\n\n\t\t\tnfRadio.channel( dataModel.get( 'objectDomain' ) ).request( 'add', dataModel );\n\n\t\t\tdelete collection.removedIDs[ dataModel.get( 'id' ) ];\n\t\t\t\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tvar results = changeCollection.where( { model: dataModel } );\n\n\t\t\t\t_.each( results, function( model ) {\n\t\t\t\t\tif ( model !== change ) {\n\t\t\t\t\t\tmodel.set( 'disabled', false );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\n\t\t\t// Trigger a reset on our field collection so that our view re-renders\n\t\t\tcollection.trigger( 'reset', collection );\n\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\t/**\n\t\t * Undo field sorting.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoSortFields: function( change, undoAll ) {\n\t\t\tvar data = change.get( 'data' );\n\t\t\tvar fields = data.fields;\n\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t_.each( fields, function( changeModel ) {\n\t\t\t\tvar before = changeModel.before;\n\t\t\t\tvar fieldModel = changeModel.model;\n\t\t\t\tfieldModel.set( 'order', before );\n\t\t\t\tconsole.log( 'set ' + fieldModel.get( 'label' ) + ' to ' + before );\n\t\t\t} );\n\t\t\tconsole.log( fieldCollection.where( { label: 'Name' } ) );\n\t\t\tconsole.log( fieldCollection.where( { label: 'Email' } ) );\n\n\n\t\t\tfieldCollection.sort();\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoAddListOption: function( change, undoAll ) {\n\t\t\tvar model = change.get( 'model' );\n\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tvar results = changeCollection.where( { model: model } );\n\n\t\t\t\t_.each( results, function( changeModel ) {\n\t\t\t\t\tif ( changeModel !== change ) {\n\t\t\t\t\t\tchangeCollection.remove( changeModel );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\n\t\t\tmodel.collection.remove( model );\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoRemoveListOption: function( change, undoAll ) {\n\t\t\tvar model = change.get( 'model' );\n\t\t\tvar collection = change.get( 'data' ).collection;\n\t\t\tcollection.add( model );\n\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tvar results = changeCollection.where( { model: model } );\n\n\t\t\t\t_.each( results, function( model ) {\n\t\t\t\t\tif ( model !== change ) {\n\t\t\t\t\t\tmodel.set( 'disabled', false );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoSortListOptions: function( change, undoAll ) {\n\t\t\tvar data = change.get( 'data' );\n\t\t\tvar collection = data.collection;\n\t\t\t\n\t\t\tvar objModels = data.objModels;\n\n\t\t\t_.each( objModels, function( changeModel ) {\n\t\t\t\tvar before = changeModel.before;\n\t\t\t\tvar optionModel = changeModel.model;\n\t\t\t\toptionModel.set( 'order', before );\n\t\t\t} );\t\t\t\t\n\n\n\t\t\tcollection.sort();\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\t/**\n\t\t * If our undo action was requested to 'remove' the change from the collection, remove it.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tremove \tshould we remove this item from our change collection\n\t\t * @return void\n\t\t */\n\t\tmaybeRemoveChange: function( change, undoAll ) {\t\t\t\n\t\t\tvar undoAll = typeof undoAll !== 'undefined' ? undoAll : false;\n\t\t\tif ( ! undoAll ) {\n\t\t\t\t// Update preview.\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\t\tchangeCollection.remove( change );\n\t\t\t\tif ( 0 == changeCollection.length ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', true );\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Returns a clone of a backbone model with all the attributes looped through so that collections contained within are propely cloned.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/cloneModelDeep',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'app' ).reply( 'clone:modelDeep', this.cloneModelDeep, this );\n\t\t},\n\n\t\tcloneModelDeep: function( model ) {\n\t\t\t// Temporary value used to store any new collections.\n\t\t\tvar replace = {};\n\t\t\t// Loop over every model attribute and if we find a collection, clone each model and instantiate a new collection.\n\t\t\t_.each( model.attributes, function( val, key ) {\n\t\t\t\t// console.log( val );\n\t\t\t\tif( val instanceof Backbone.Collection ) { // Is this a backbone collection?\n\t\t\t\t\t// Clone each model.\n\t\t\t\t\tvar models = val.map( function( model ) { return model.clone(); } );\n\t\t\t\t\tvar options = _.clone( val.options );\n\t\t\t\t\tvar copy = new val.constructor( models, options );\n\t\t\t\t\treplace[ key ] = copy;\n\t\t\t\t} else if ( val instanceof Backbone.Model ) { // Is this a backbone model?\n\t\t\t\t\treplace[ key ] = val.clone();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Clone our original model\n\t\t\tvar newModel = model.clone();\n\t\t\t// Overwrite any collections we created above.\n\t\t\t_.each( replace, function( val, key ) {\n\t\t\t\tnewModel.set( key, val );\n\t\t\t} );\n\n\t\t\treturn newModel;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Error view used for settings.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/settingError',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-edit-setting-error'\n\t});\n\n\treturn view;\n} );\n","define( 'views/app/drawer/itemSetting',['views/app/drawer/mergeTagsContent', 'views/app/drawer/settingError'], function( mergeTagsContentView, settingErrorView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-edit-setting-wrap',\n\n\t\tregions: {\n\t\t\terror: '.nf-setting-error'\n\t\t},\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.dataModel = data.dataModel;\n\t\t\tthis.dataModel.on( 'change:' + this.model.get( 'name' ), this.render, this );\n\t\t\tthis.model.on( 'change:error', this.renderError, this );\n\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor ( var name in deps ) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.on( 'change:' + name, this.render, this );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.dataModel.off( 'change:' + this.model.get( 'name' ), this.render );\n\t\t\tthis.model.off( 'change:error', this.renderError );\n\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor (var name in deps) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.off( 'change:' + name, this.render );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonBeforeRender: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'before:renderSetting', this.model, this.dataModel );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.mergeTagsContentView = false;\n\t\t\tvar that = this;\n\n\t\t\tjQuery( this.el ).find( '.nf-help' ).each(function() {\n\t\t\t\tvar content = jQuery(this).next('.nf-help-text');\n\t\t\t\tjQuery( this ).jBox( 'Tooltip', {\n\t\t\t\t\tcontent: content,\n\t\t\t\t\tmaxWidth: 200,\n\t\t\t\t\ttheme: 'TooltipBorder',\n\t\t\t\t\ttrigger: 'click',\n\t\t\t\t\tcloseOnClick: true\n\t\t\t\t})\n\t\t    });\n\n\t\t\tjQuery( this.el ).find( '.merge-tags' ).each(function() {\n\t\t\t\tjQuery( this ).jBox( 'Tooltip', {\n\t\t\t\t\ttitle: 'Insert Merge Tag',\n\t\t\t\t\tcontent: jQuery( '.merge-tags-content' ),\n\t\t\t\t\ttrigger: 'click',\n\t\t\t\t\tposition: {\n\t\t\t\t\t\tx: 'center',\n\t\t\t\t\t\ty: 'bottom'\n\t\t\t\t\t},\n\t\t\t\t\tcloseOnClick: 'body',\n\t\t\t\t\tcloseOnEsc: true,\n\t\t\t\t\ttheme: 'TooltipBorder',\n\t\t\t\t\tmaxHeight: 200,\n\t\t\t\t\tonOpen: function() {\n\t\t\t\t\t\tvar currentElement = jQuery( that.el ).find( '.setting' );\n\t\t\t\t\t\tnfRadio.channel( 'mergeTags' ).request( 'update:currentElement', currentElement );\n\t\t\t\t\t\tnfRadio.channel( 'mergeTags' ).request( 'update:open', true );\n\t\t\t\t\t\tnfRadio.channel( 'drawer' ).request( 'prevent:close', 'merge-tags' );\n\t\t\t\t\t},\n\t\t\t\t\tonCloseComplete: function() {\n\t\t\t\t\t\tnfRadio.channel( 'mergeTags' ).request( 'update:open', false );\n\t\t\t\t\t\tnfRadio.channel( 'drawer' ).request( 'enable:close', 'merge-tags' );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t    });\n\n\t\t\t/*\n\t\t\t * Apply Setting Field Masks\n\t\t\t */\n\t\t\tvar mask = this.model.get( 'mask' );\n\n\t\t\tif( typeof mask != \"undefined\" ){\n\n\t\t\t\tvar input = jQuery( this.$el ).find( 'input' );\n\n\t\t\t\tswitch( mask.type ){\n\t\t\t\t\tcase 'numeric':\n\t\t\t\t\t\tinput.autoNumeric({\n\t\t\t\t\t\t\taSep: thousandsSeparator,\n\t\t\t\t\t\t\taDec: decimalPoint\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'currency':\n\t\t\t\t\t\tinput.autoNumeric({\n\t\t\t\t\t\t\taSign: '$', // TODO: Use form setting\n\t\t\t\t\t\t\taSep: thousandsSeparator,\n\t\t\t\t\t\t\taDec: decimalPoint\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'custom':\n\t\t\t\t\t\tif( mask.format ) input.mask( mask.format )\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// TODO: Error Logging.\n\t\t\t\t\t\tconsole.log( 'Notice: Mask type of \"' + mask.type + '\" is not supported.' );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.renderError();\n\n\t\t\t/*\n\t\t\t * Send out a radio message.\n\t\t\t */\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'render:setting', this.model, this.dataModel, this );\n\t\t},\n\n\t\trenderError: function() {\n\t\t\tif ( this.model.get( 'error' ) ) {\n\t\t\t\tjQuery( this.el ).find( '.nf-setting' ).addClass( 'nf-error' );\n\t\t\t\tthis.error.show( new settingErrorView( { model: this.model } ) );\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).find( '.nf-setting' ).removeClass( 'nf-error' );\n\t\t\t\tthis.error.empty();\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t\t\tvar that = this;\n\t    \treturn {\n\n\t    \t\trenderVisible: function() {\n\t\t\t\t\tif ( this.deps ) {\n\t\t\t\t\t\tfor (var name in this.deps) {\n\t\t\t\t\t\t    if ( this.deps.hasOwnProperty( name ) ) {\n\t\t\t\t\t\t        if ( that.dataModel.get( name ) != this.deps[ name ] ) {\n\t\t\t\t\t\t        \treturn 'style=\"display:none;\"';\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t    \t\t\treturn '';\n\t    \t\t},\n\n\t    \t\trenderSetting: function(){\n\t    \t\t\tif ( 'undefined' != typeof that.dataModel.get( this.name ) ) {\n\t    \t\t\t\tthis.value = that.dataModel.get( this.name );\n\t    \t\t\t} else {\n\t    \t\t\t\tthis.value = '';\n\t    \t\t\t}\n\n\t\t\t\t\treturn _.template( jQuery( '#nf-tmpl-edit-setting-' + this.type ).html(), this );\n\t\t\t\t},\n\n\t\t\t\trenderLabelClasses: function() {\n\t\t\t\t\treturn 'has-merge-tags';\n\t\t\t\t},\n\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = 'nf-setting ';\n\t\t\t\t\tif ( 'undefined' != typeof this.width ) {\n\t\t\t\t\t\tclasses += 'nf-' + this.width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclasses += ' nf-one-half';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.error ) {\n\t\t\t\t\t\tclasses += ' nf-error';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\trenderTooltip: function() {\n\t\t\t\t\tif ( this.help ) {\n\t\t\t\t\t\treturn '<a class=\"nf-help\" href=\"#\"><span class=\"dashicons dashicons-admin-comments\"></span></a><div class=\"nf-help-text\">' + this.help + '</div>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderMergeTags: function() {\n\t\t\t\t\tif ( this.use_merge_tags ) {\n\t\t\t\t\t\treturn '<span class=\"dashicons dashicons-list-view merge-tags\"></span>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tevents: {\n\t\t\t'change': 'changeSetting',\n\t\t\t'keyup': 'keyUpSetting'\n\t\t},\n\n\t\tchangeSetting: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'change:setting', e, this.model, this.dataModel );\n\t\t},\n\n\t\tkeyUpSetting: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'keyup:setting', e, this.model, this.dataModel );\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'keyup:setting', e, this.model, this.dataModel );\n\t\t}\n\t});\n\n\treturn view;\n} );\n\n","/**\n * Returns the appropriate child view for our settings drawer.\n *\n * This enables settings types to register custom childviews for their settings.\n * The option-repeater setting for the list field is an example.\n * \n * @package Ninja Forms builder\n * @subpackage App - Edit Settings Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/getSettingChildView',['views/app/drawer/itemSetting'], function( itemSettingView ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests for field settings child views.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:settingChildView', this.getSettingChildView, this );\n\t\t},\n\n\t\t/**\n\t\t * Return the appropriate child setting view.\n\t\t *\n\t\t * @since  3.0\n\t\t * @param  backbone.model\tmodel \tField setting\n\t\t * @return backbone.view\n\t\t */\n\t\tgetSettingChildView: function( model ) {\n\t\t\t// Get our setting type.\n\t\t\tvar type = model.get( 'type' );\n\t\t\t// Request a setting childview from our setting type channel. (Setting type, not field type)\n\t\t\tvar settingChildView = nfRadio.channel( type ).request( 'get:settingChildView', model ) || itemSettingView;\n\t\t\t\n\t\t\treturn settingChildView\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Updates our model when the user changes a setting.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/changeSettingDefault',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests to update settings.\n\t\t\tnfRadio.channel( 'app' ).reply( 'change:setting', this.changeSetting, this );\n\n\t\t\t// Listen on our app channel for the change setting event. Fired by the setting view.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:setting', this.changeSetting, this );\n\t\t},\n\n\t\t/**\n\t\t * When we change our setting, update the model.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \t\t\te                event\n\t\t * @param  backbone.model \tsettingModel model that holds our field type settings info\n\t\t * @param  backbone.model \tdataModel       model that holds our field settings\n\t\t * @return void\n\t\t */\n\t\tchangeSetting: function( e, settingModel, dataModel ) {\n\t\t\tvar name = settingModel.get( 'name' );\n\t\t\tvar before = dataModel.get( name );\n\t\t\t// Sends out a request on the fields-type (fields-text, fields-checkbox, etc) channel to see if that field type needs to return a special value for saving.\n\t\t\tvar value = nfRadio.channel( settingModel.get( 'type' ) ).request( 'before:updateSetting', e, dataModel, name, settingModel );\n\t\t\t// If we didn't get a special field-type value, get the value from the event passed.\n\t\t\tif ( 'undefined' == typeof value ) {\n\t\t\t\tvalue = jQuery( e.target ).val();\n\t\t\t}\n\t\t\t// Update our field model with the new setting value.\n\t\t\tdataModel.set( name, value );\n\t\t\t// Register our setting change with our change tracker\n\t\t\tvar after = value;\n\t\t\t\n\t\t\tvar changes = {\n\t\t\t\tattr: name,\n\t\t\t\tbefore: before,\n\t\t\t\tafter: after\n\t\t\t}\n\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\n\t\t\t/*\n\t\t\t * TODO: Make this more dynamic.\n\t\t\t * Currently, this is a very specific work-around. It should be more generalized.\n\t\t\t */\n\t\t\tif ( 'toggle' == settingModel.get( 'type' ) ) {\n\t\t\t\tif ( 1 == before ) {\n\t\t\t\t\tbefore = 'On';\n\t\t\t\t} else {\n\t\t\t\t\tbefore = 'Off';\n\t\t\t\t}\n\n\t\t\t\tif ( 1 == after ) {\n\t\t\t\t\tafter = 'On';\n\t\t\t\t} else {\n\t\t\t\t\tafter = 'Off';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar label = {\n\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\tchange: 'Changed ' + settingModel.get( 'label' ) + ' from ' + before + ' to ' + after\n\t\t\t};\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'changeSetting', dataModel, changes, label );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define( 'views/app/drawer/typeSettingFieldset',['views/app/drawer/itemSetting'], function( itemSettingView ) {\n\tvar view = Marionette.CompositeView.extend( {\n\t\ttemplate: '#nf-tmpl-edit-setting-wrap',\n\t\tchildView: itemSettingView,\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.collection = this.model.get( 'settings' );\n\t\t\tthis.childViewOptions = { dataModel: data.dataModel };\n\t\t\tthis.dataModel = data.dataModel;\n\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor ( var name in deps ) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.on( 'change:' + name, this.render, this );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor (var name in deps) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.off( 'change:' + name, this.render );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonRender: function() {\n\t\t\t// this.$el = this.$el.children();\n\t\t\t// this.$el.unwrap();\n\t\t\t// this.setElement( this.$el );\n\n\t\t\t// this.$el = this.$el.children();\n\t\t\t// this.$el.unwrap();\n\t\t\t// this.setElement( this.$el );\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t\t\tvar that = this;\n\t    \treturn {\n\t    \t\trenderVisible: function() {\n\t\t\t\t\tif ( this.deps ) {\n\t\t\t\t\t\tfor (var name in this.deps) {\n\t\t\t\t\t\t    if ( this.deps.hasOwnProperty( name ) ) {\n\t\t\t\t\t\t        if ( that.dataModel.get( name ) !== this.deps[ name ] ) {\n\t\t\t\t\t\t        \treturn 'style=\"display:none;\"';\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t    \t\t\treturn '';\n\t    \t\t},\n\t    \t\trenderSetting: function(){\n\t\t\t\t\treturn _.template( jQuery( '#nf-tmpl-edit-setting-' + this.type ).html(), this );\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = '';\n\t\t\t\t\tif ( 'undefined' != typeof this.width ) {\n\t\t\t\t\t\tclasses += this.width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclasses += ' one-half';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.error ) {\n\t\t\t\t\t\tclasses += ' nf-error';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\trenderError: function() {\n\t\t\t\t\tif ( this.error ) {\n\t\t\t\t\t\treturn this.error;\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( '.nf-field-sub-settings' ).append( childView.el );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","/**\n * Model that represents our setting.\n *\n * When the model is created, we trigger the init event in two radio channels.\n *\n * This lets specific types of settings modify the model before anything uses it.\n *\n * Fieldset, for instance, uses this hook to instantiate its settings as a collection.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/settingModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tsettings: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Send out two messages saying that we've initialized a setting model.\n\t\t\tnfRadio.channel( 'app' ).trigger( 'init:settingModel', this );\n\t\t\tnfRadio.channel( this.get( 'type' ) ).trigger( 'init:settingModel', this );\n\n\t\t\tthis.on( 'change:error', this.maybePreventUI, this );\n\n\t\t\t/*\n\t\t\t * If we have an objectType set on our collection, then we're creating a model for the generic settings collection.\n\t\t\t * If we're using merge tags in this setting\n\t\t\t */\n\t\t\tif ( this.get( 'use_merge_tags' ) && 'undefined' != typeof this.collection.options.objectType ) {\n\t\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'update:fieldKey', this.updateKey );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When a field key is updated, send out a radio message requesting that this setting be checked for the old key.\n\t\t * We want to send the message on the objectType channel.\n\t\t * This means that if this setting is for fields, it will trigger on the fields channel, actions, etc.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Backbone.Model \tkeyModel data model representing the field for which the key just changed\n\t\t * @return void\n\t\t */\n\t\tupdateKey: function( keyModel ) {\n\t\t\tnfRadio.channel( this.collection.options.objectType ).trigger( 'update:fieldKey', keyModel, this );\n\t\t},\n\n\t\tmaybePreventUI: function() {\n\t\t\tif ( this.get( 'error' ) ) {\n\t\t\t\tnfRadio.channel( 'drawer' ).request( 'prevent:close', 'fieldSetting-key-error' );\n\t\t\t\tnfRadio.channel( 'app' ).request( 'prevent:changeDomain', 'fieldSetting-key-error' );\t\t\t\t\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'drawer' ).request( 'enable:close', 'fieldSetting-key-error' );\n\t\t\t\tnfRadio.channel( 'app' ).request( 'enable:changeDomain', 'fieldSetting-key-error' );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collections of settings for each field type.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/settingCollection',['models/app/settingModel'], function( settingModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: settingModel,\n\n\t\tinitialize: function( models, options ) {\n\t\t\tthis.options = options || {};\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Handles actions related to field settings that use a fieldset\n * \n * @package Ninja Forms builder\n * @subpackage Fields - Edit Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/fieldset',['views/app/drawer/typeSettingFieldset','models/app/settingCollection'], function( fieldsetView, settingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'fieldset' ).reply( 'get:settingChildView', this.getSettingChildView, this );\n\t\t\t// When a list type field is initialized, create an option collection.\n\t\t\tthis.listenTo( nfRadio.channel( 'fieldset' ), 'init:settingModel', this.createSettingsCollection );\n\t\t},\n\n\t\tgetSettingChildView: function( model ) {\n\t\t\treturn fieldsetView;\n\t\t},\n\n\t\t/**\n\t\t * Instantiate settings collection when a fieldset type is initialized.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tmodel \tfield model being initialized\n\t\t * @return void\n\t\t */\n\t\tcreateSettingsCollection: function( model ) {\n\t\t\tmodel.set( 'settings', new settingCollection( model.get( 'settings' ) ) );\n\t\t},\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles actions related to our toggle field.\n * When we change the toggle, the setting value will be 'on' or ''.\n * We need to change this to 1 or 0.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - Edit Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/toggleSetting',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests for field setting filtering.\n\t\t\tnfRadio.channel( 'toggle' ).reply( 'before:updateSetting', this.updateSetting, this );\n\t\t},\n\n\t\t/**\n\t\t * Return either 1 or 0, depending upon the toggle position.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \t\t\te                event\n\t\t * @param  backbone.model \tfieldModel       field model\n\t\t * @param  string \t\t\tname             setting name\n\t\t * @param  backbone.model \tsettingTypeModel field type model\n\t\t * @return int              1 or 0\n\t\t */\n\t\tupdateSetting: function( e, fieldModel, name, settingTypeModel ) {\n\t\t\tif ( jQuery( e.target ).attr( 'checked' ) ) {\n\t\t\t\tvar value = 1;\n\t\t\t} else {\n\t\t\t\tvar value = 0;\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens for clicks on our action item action buttons.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - Main Sortable\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/itemControls',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for clicks to edit, delete, duplicate actions.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:edit', this.clickEdit );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:delete', this.clickDelete );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:duplicate', this.clickDuplicate );\n\n\t\t\t// Listen for our drawer close and remove our active edit state\n\t\t},\n\n\t\t/**\n\t\t * Open a drawer with our action model for editing settings.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te     \tevent\n\t\t * @param  backbone.model \tmodel \taction model\n\t\t * @return void\n\t\t */\n\t\tclickEdit: function( e, model ) {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\t\t\tvar type = nfRadio.channel( currentDomainID ).request( 'get:type' , model.get( 'type' ) );\n\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'editSettings', { model: model, groupCollection: type.get( 'settingGroups' ) } );\n\t\t},\n\n\t\t/**\n\t\t * Delete a action model from our collection\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te     \tevent\n\t\t * @param  backbone.model \tmodel \taction model\n\t\t * @return void\n\t\t */\n\t\tclickDelete: function( e, dataModel ) {\n\t\t\tvar newModel = nfRadio.channel( 'app' ).request( 'clone:modelDeep', dataModel );\n\n\t\t\t// Add our action deletion to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\tchange: 'Removed',\n\t\t\t\tdashicon: 'dismiss'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: dataModel.collection\n\t\t\t};\n\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\tvar results = changeCollection.where( { model: dataModel } );\n\n\t\t\t_.each( results, function( changeModel ) {\n\t\t\t\tvar data = changeModel.get( 'data' );\n\t\t\t\tif ( 'undefined' != typeof data.fields ) {\n\t\t\t\t\t_.each( data.fields, function( field, index ) {\n\t\t\t\t\t\tif ( field.model == dataModel ) {\n\t\t\t\t\t\t\tdata.fields[ index ].model = newModel;\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\tchangeModel.set( 'data', data );\n\t\t\t\tchangeModel.set( 'model', newModel );\n\t\t\t\tchangeModel.set( 'disabled', true );\n\t\t\t} );\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'removeObject', newModel, null, label, data );\n\t\t\t\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\t\t\tnfRadio.channel( currentDomainID ).request( 'delete', dataModel );\n\t\t},\n\n\t\t/**\n\t\t * Duplicate a action within our collection, adding the word \"copy\" to the label.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te     \tevent\n\t\t * @param  backbone.model \tmodel \taction model\n\t\t * @return void\n\t\t */\n\t\tclickDuplicate: function( e, model ) {\n\t\t\tvar newModel = nfRadio.channel( 'app' ).request( 'clone:modelDeep', model );\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\n\t\t\t// Change our label.\n\t\t\tnewModel.set( 'label', newModel.get( 'label' ) + ' Copy' );\n\t\t\t// Update our ID to the new tmp id.\n\t\t\tvar tmpID = nfRadio.channel( currentDomainID ).request( 'get:tmpID' );\n\t\t\tnewModel.set( 'id', tmpID );\n\t\t\t// Add new model.\n\t\t\tnfRadio.channel( currentDomainID ).request( 'add', newModel );\n\t\t\t// Add our action addition to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: model.get( 'objectType' ),\n\t\t\t\tlabel: model.get( 'label' ),\n\t\t\t\tchange: 'Duplicated',\n\t\t\t\tdashicon: 'admin-page'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: nfRadio.channel( currentDomainID ).request( 'get:collection' )\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'duplicateObject', newModel, null, label, data );\n\t\t\t\n\t\t\t// Update preview.\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model that represents our merge tags.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/mergeTagModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tactive: false\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collections of merge tags.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/mergeTagCollection',['models/app/mergeTagModel'], function( mergeTagModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: mergeTagModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Config file for our merge tags.\n *\n * this.collection represents all of our registered merge tags.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/mergeTags',[\n\t'models/app/mergeTagCollection'\n\t], function(\n\tmergeTagCollection\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.tagSectionCollection = new mergeTagCollection();\n\t\t\tvar that = this;\n\t\t\t_.each( mergeTags, function( tagSection ) {\n\t\t\t\tif ( tagSection.tags ) {\n\t\t\t\t\tvar tags = new mergeTagCollection( tagSection.tags );\n\t\t\t\t} else {\n\t\t\t\t\tvar tags = '';\n\t\t\t\t}\n\n\t\t\t\tthat.tagSectionCollection.add( {\n\t\t\t\t\tid: tagSection.id,\n\t\t\t\t\tlabel: tagSection.label,\n\t\t\t\t\ttags: tags\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\tvar tags = new mergeTagCollection();\n\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t_.each( fieldCollection.models, function( field ) {\n\t\t\t\t// TODO: Make this dynamic\n\t\t\t\tif ( 'submit' !== field.get( 'type' ) ) {\n\t\t\t\t\ttags.add( {\n\t\t\t\t\t\tid: field.get( 'id' ),\n\t\t\t\t\t\tlabel: field.get( 'label' ),\n\t\t\t\t\t\ttag: that.getFieldKeyFormat( field.get( 'key' ) )\n\t\t\t\t\t} );\t\t\t\t\t\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.tagSectionCollection.get( 'fields' ).set( 'tags', tags );\n\n\t\t\tthis.currentElement = {};\n\t\t\tthis.open = false;\n\n\t\t\tthis.listenTo( nfRadio.channel( 'mergeTags' ), 'click:mergeTag', this.clickMergeTag );\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'add:field', this.addFieldTags );\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'delete:field', this.deleteFieldTags );\n\t\t\t\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'update:currentElement', this.updateCurrentElement, this );\n\n\t\t\t// Listen for requests for our mergeTag collection.\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'get:mergeTags', this.getMergeTags, this );\n\n\t\t\t// When we edit a key, check for places that key might be used.\n\t\t\tthis.listenTo( nfRadio.channel( 'fieldSetting-key' ), 'update:setting', this.updateKey );\n\n\t\t\t// Reply to requests to check a data model for a field key when one is updated.\n\t\t\tnfRadio.channel( 'app' ).reply( 'replace:fieldKey', this.replaceFieldKey, this );\n\n\t\t\t// Reply to requests to check a data model for a field key when one is updated.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:fieldKeyFormat', this.getFieldKeyFormat, this );\n\n\t\t\t/*\n\t\t\t * TODO: Hotkey support for adding tags.\n\t\t\t *\n\t\t\t\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'open:mergeTags', this.openMergeTags );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'up:mergeTags', this.upMergeTags );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'down:mergeTags', this.downMergeTags );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'return:mergeTags', this.returnMergeTags );\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'update:open', this.updateOpen, this );\n\t\t\t*/\n\t\t},\n\n\t\tclickMergeTag: function( e, tagModel ) {\n\t\t\tvar currentValue = jQuery( this.currentElement ).val();\n\t\t\tvar currentPos = jQuery( this.currentElement ).caret();\n\t\t\tvar newPos = currentPos + tagModel.get( 'tag' ).length;\n\t\t\tcurrentValue = currentValue.substr( 0, currentPos ) + tagModel.get( 'tag' ) + currentValue.substr( currentPos );\n\t\t\tjQuery( this.currentElement ).val( currentValue ).caret( newPos ).trigger( 'change' );\n\t\t},\n\n\t\taddFieldTags: function( fieldModel ) {\n\t\t\t// TODO: Make this dynamic\n\t\t\tif ( 'submit' !== fieldModel.get( 'type' ) ) {\n\t\t\t\tthis.tagSectionCollection.get( 'fields' ).get( 'tags' ).add( {\n\t\t\t\t\tid: fieldModel.get( 'id' ),\n\t\t\t\t\tlabel: fieldModel.get( 'label' ),\n\t\t\t\t\ttag: this.getFieldKeyFormat( fieldModel.get( 'key' ) )\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\tdeleteFieldTags: function( fieldModel ) {\n\t\t\tvar fieldID = fieldModel.get( 'id' );\n\t\t\tvar tagModel = this.tagSectionCollection.get( 'fields' ).get( 'tags' ).get( fieldID );\n\t\t\tthis.tagSectionCollection.get( 'fields' ).get( 'tags' ).remove( tagModel );\n\t\t},\n\n\t\topenMergeTags: function( e ) {\n\t\t\tif ( 'TEXTAREA' == jQuery( e.target )[0].tagName || 'INPUT' == jQuery( e.target )[0].tagName ) {\n\t\t\t\tjQuery( e.target ).parent().find( '.merge-tags' ).click();\n\t\t\t}\n\t\t},\n\n\t\treturnMergeTags: function( e ) {\n\t\t\tif ( this.open ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tvar currentModel = this.fields.where( { 'active': true } )[0];\n\t\t\t\tif ( currentModel ) {\n\t\t\t\t\tthis.clickMergeTag( e, currentModel );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tupMergeTags: function( e ) {\n\t\t\tif ( this.open ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.changeActiveTag( 'up' );\n\t\t\t}\n\t\t},\n\n\t\tdownMergeTags: function( e ) {\n\t\t\tif ( this.open ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.changeActiveTag( 'down' );\n\t\t\t}\n\t\t},\n\n\t\tchangeActiveTag: function( dir ) {\n\t\t\tif ( 'down' == dir ) {\n\t\t\t\tvar inc = 1;\n\t\t\t} else {\n\t\t\t\tvar inc = -1\n\t\t\t}\n\t\t\t// First, check to see if a field is currently active.\n\t\t\tif( 0 < this.fields.where( { 'active': true } ).length ) {\n\t\t\t\tvar currentModel = this.fields.where( { 'active': true } )[0];\n\t\t\t\tvar currentIndex = this.fields.indexOf( currentModel );\n\t\t\t\tcurrentModel.set( 'active', false );\n\n\t\t\t\tvar nextModel = this.fields.models[ currentIndex + inc ];\n\t\t\t\tif ( nextModel ) {\n\t\t\t\t\tnextModel.set( 'active', true );\n\t\t\t\t} else {\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if ( 0 < this.fields.where( { 'active': true } ) ) { // There aren't any active fields. Check for active system tags.\n\t\t\t\tconsole.log( 'system' );\n\t\t\t} else if ( 0 < this.userInfo.where( { 'active': true } ) ) { // No active user info LIs.\n\t\t\t\tconsole.log( 'userinfo' );\n\t\t\t} else { // No active LIs. We haven't made any active yet, or we've gotten to the bottom of the list.\n\t\t\t\t// Make sure that we have fields\n\t\t\t\tif ( 0 < this.fields.models.length ) {\n\t\t\t\t\t// Set our first field to active.\n\t\t\t\t\tthis.fields.models[0].set( 'active', true );\n\t\t\t\t} else {\n\t\t\t\t\t// Set our first system model to active.\n\t\t\t\t\tthis.system.models[0].set( 'active', true );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tupdateCurrentElement: function( element ) {\n\t\t\tthis.currentElement = element;\n\t\t},\n\n\t\tgetMergeTags: function() {\n\t\t\treturn this.tagSectionCollection;\n\t\t},\n\n\t\tupdateOpen: function( open ) {\n\t\t\tthis.open = open;\n\t\t\t_.each( this.tagSectionCollection.get( 'fields' ).models, function( model ) {\n\t\t\t\tmodel.set( 'active', false );\n\t\t\t} );\n\t\t},\n\n\t\tupdateKey: function( fieldModel ) {\n\t\t\tvar newKey = fieldModel.get( 'key' );\n\t\t\tvar oldTag = this.tagSectionCollection.get( 'fields' ).get( 'tags' ).get( fieldModel.get( 'id' ) );\n\t\t\tif ( 'undefined' != typeof oldTag ) {\n\t\t\t\toldTag.set( 'tag', this.getFieldKeyFormat( newKey ) );\t\t\t\t\n\t\t\t}\n\n\t\t},\n\n\t\tgetFieldKeyFormat: function( key ) {\n\t\t\treturn '{field:' + key + '}';\n\t\t},\n\n\t\treplaceFieldKey: function( dataModel, keyModel, settingModel ) {\n\t\t\tvar oldKey = this.getFieldKeyFormat( keyModel._previousAttributes[ 'key' ] );\n\t\t\tvar newKey = this.getFieldKeyFormat( keyModel.get( 'key' ) );\n\t\t\tvar settingName = settingModel.get( 'name' );\n\t\t\tvar oldVal = dataModel.get( settingName );\n\t\t\tif ( oldVal ) {\n\t\t\t\tvar re = new RegExp( oldKey, 'g' );\n\t\t\t\tnewVal = oldVal.replace( re, newKey );\n\t\t\t\tdataModel.set( settingName, newVal );\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel for settings views being rendered.\n *\n * If we're about to render a setting model that's a select and has 'fields' as the 'fill' setting, add all our field models to its options.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/itemSettingFill',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for messages that are fired before a setting view is rendered.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'before:renderSetting', this.beforeRenderSetting );\n\t\t},\n\n\t\tbeforeRenderSetting: function( settingModel, dataModel ) {\n\t\t\tif ( 'fields' == settingModel.get( 'fill' ) ) {\n\t\t\t\t\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model for our field type\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/typeModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our field type models. \n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/typeCollection',['models/app/typeModel'], function( typeModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: typeModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Model that represents our type settings groups.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/settingGroupModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tdisplay: false\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection of our type settings groups.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/settingGroupCollection',['models/app/settingGroupModel'], function( settingGroupModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: settingGroupModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Model that represents our field type section on the add new field drawer.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/typeSectionModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tclasses: ''\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our field models.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/typeSectionCollection',['models/fields/typeSectionModel'], function( typeSectionModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: typeSectionModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Creates and stores a collection of field types. This includes all of the settings shown when editing a field.\n *\n * 1) Create our settings sections config\n * 2) Loops over our preloaded data and adds that to our field type collection\n *\n * Also responds to requests for data about field types\n *\n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/types',[\n\t'models/app/typeCollection',\n\t'models/app/settingCollection',\n\t'models/app/settingGroupCollection',\n\t'models/fields/typeSectionCollection'\n\t], function(\n\tfieldTypeCollection,\n\tsettingCollection,\n\tfieldTypeSettingGroupCollection,\n\tfieldTypeSectionCollection\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our field type collection\n\t\t\tthis.collection = new fieldTypeCollection();\n\t\t\t// Config for our settings sections\n\t\t\tthis.fieldTypeSections = new fieldTypeSectionCollection( fieldTypeSections );\n\n\t\t\t// Since we want to access the \"this\" context later, we assign it to that so it isn't overwritten\n\t\t\tvar that = this;\n\n\t\t\t// Loop through the field type data variable and add it to the field type collection array\n\t\t\t_.each( fieldTypeData, function ( type ) {\n\t\t\t\tvar settingGroups = new fieldTypeSettingGroupCollection();\n\t\t\t\t// Loop through the settings groups within this field type and create an object to add to the groups collection.\n\t\t\t\t_.each( type.settingGroups, function( group ) {\n\t\t\t\t\tvar groupTmp = {\n\t\t\t\t\t\tlabel: group.label,\n\t\t\t\t\t\tdisplay: group.display,\n\t\t\t\t\t\tsettings: new settingCollection( group.settings ),\n\t\t\t\t\t}\n\t\t\t\t\t// Add the tmp object to our setting groups collection\n\t\t\t\t\tsettingGroups.add( groupTmp );\n\t\t\t\t} );\n\n\t\t\t\t// Add our field type to the appropriate drawer section.\n\t\t\t\tif ( 'undefined' != typeof that.fieldTypeSections.get( type.section ) ) {\n\t\t\t\t\tthat.fieldTypeSections.get( type.section ).get( 'fieldTypes' ).push( type.id );\n\t\t\t\t}\n\n\t\t\t\t// Build an object for this type that we can add to our field type collection\n\t\t\t\tvar fieldType = {\n\t\t\t\t\tid: type.id,\n\t\t\t\t\tnicename: type.nicename,\n\t\t\t\t\talias: type.alias,\n\t\t\t\t\tparentType: type.parentType,\n\t\t\t\t\tsettingGroups: settingGroups,\n\t\t\t\t\tsettingDefaults: type.settingDefaults\n\t\t\t\t}\n\t\t\t\t// Add tmp object to our field type collection\n\t\t\t\tthat.collection.add( fieldType );\n\t\t\t} );\n\n\t\t\t// Respond to requests to get field type, collection, settings, and sections\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:type', this.getFieldType, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:typeCollection', this.getTypeCollection, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:typeSections', this.getTypeSections, this );\n\t\t\t// Listen to clicks on field types\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'click:fieldType', this.addStagedField );\n\t\t},\n\n\t\t/**\n\t\t * Return a field type by id\n\t\t *\n\t\t * @since  3.0\n\t\t * @param  string \t\t\tid \tfield type\n\t\t * @return backbone.model    \tfield type model\n\t\t */\n\t\tgetFieldType: function( id ) {\n        \treturn this.collection.get( id );\n        },\n\n        /**\n         * Return the entire field type collection\n         *\n         * @since  3.0\n         * @param  string \t\t\t\tid \t[description]\n         * @return backbone.collection    \tfield type collection\n         */\n\t\tgetTypeCollection: function( id ) {\n        \treturn this.collection;\n        },\n\n        /**\n         * Add a field type to our staging area when the field type button is clicked.\n         *\n         * @since 3.0\n         * @param Object e event\n         * @return void\n         */\n        addStagedField: function( e ) {\n        \tvar type = jQuery( e.target ).data( 'id' );\n        \tnfRadio.channel( 'fields' ).request( 'add:stagedField', type );\n        },\n\n        /**\n         * Return our field type settings sections\n         *\n         * @since  3.0\n         * @return backbone.collection field type settings sections\n         */\n        getTypeSections: function() {\n            return this.fieldTypeSections;\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Handles the logic for our field type draggables.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldTypeDrag',[], function( ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our field type draggables and run the appropriate function.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:type', this.startDrag );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:type', this.stopDrag );\n\t\t\t/*\n\t\t\t * Respond to requests for our helper clone.\n\t\t\t * This is used by other parts of the application to modify what the user is dragging in real-time.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'drawer-addField' ).reply( 'get:typeHelperClone', this.getCurrentDraggableHelperClone, this );\n\t\t},\n\n\t\t/**\n\t\t * When we start dragging:\n\t\t * get our drawer element\n\t\t * set its overflow property to visible !important -> forces the type drag element to be on at the top of the z-index.\n\t\t * get our main element\n\t\t * est its overflow propery to visible !important -> forces the type drag element to be on top of the z-index.\n\t\t * set our dragging helper clone\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  object context \tThis function is going to be called from a draggable. Context is the \"this\" reference to the draggable.\n\t\t * @param  object ui      \tObject sent by jQuery UI draggable.\n\t\t * @return void\n\t\t */\n\t\tstartDrag: function( context, ui ) {\n\t\t\tthis.drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tthis.mainEl = nfRadio.channel( 'app' ).request( 'get:mainEl' );\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\n\t\t\tthis.draggableHelperClone = jQuery( ui.helper ).clone();\n\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging, reset our overflow property to hidden !important.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  object context \tThis function is going to be called from a draggable. Context is the \"this\" reference to the draggable.\n\t\t * @param  object ui      \tObject sent by jQuery UI draggable.\n\t\t * @return {[type]}         [description]\n\t\t */\n\t\tstopDrag: function( context, ui ) {\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t},\n\n\t\tgetCurrentDraggableHelperClone: function() {\n\t\t\treturn this.draggableHelperClone;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles the dragging of our field staging area\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/stagingDrag',[], function( ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for the start and stop of our field staging dragging\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:fieldStaging', this.startDrag );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:fieldStaging', this.stopDrag );\n\t\t},\n\n\t\t/**\n\t\t * When the user starts dragging the staging area, we have to:\n\t\t * set the overflow property of the drawer to visible !important. If we don't, the button goes underneath the main section.\n\t\t * set the overflow proerty of the main to visible !important. If we don't, the dragged element goes underneath the drawer.\n\t\t * replace our helper with the stacked \"x fields\" template.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t context jQuery UI Draggable\n\t\t * @param  Object\t ui      jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstartDrag: function( context, ui ) {\n\t\t\tthis.drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tthis.mainEl = nfRadio.channel( 'app' ).request( 'get:mainEl' );\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\n\t\t\tvar stagedFields = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\t\t\tvar html = _.template( jQuery( '#nf-tmpl-staged-fields-drag' ).html(), { num: stagedFields.models.length } );\n\t\t\tjQuery( ui.helper ).html( html );\n\t\t\tjQuery( ui.helper ).prop( 'id', 'nf-staged-fields-drag' );\n\t\t\tjQuery( ui.item ).css( 'opacity', '0.7' );\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging the staging area, we have to set the overflow property to hidden !important\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t context jQuery UI Draggable\n\t\t * @param  Object\t ui      jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstopDrag: function( context, ui ) {\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles our saved fields type section.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/savedFieldsSection',['models/fields/typeSectionCollection'], function( fieldTypeSectionCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our collection for saved fields\n\t\t\tthis.collection = new fieldTypeSectionCollection( [\n\t\t\t\t{ \n\t\t\t\t\tid: 'saved',\n\t\t\t\t\tnicename: 'Saved Fields',\n\t\t\t\t\tclasses: 'nf-saved',\n\t\t\t\t\tfieldTypes: []\n\t\t\t\t}\n\t\t\t] );\n\t\t\t// Respond to requests for our saved fields collection.\n            nfRadio.channel( 'drawer' ).reply( 'get:savedFields', this.getSavedFields, this );\n\t\t},\n\n        getSavedFields: function() {\n            return this.collection;\n        }\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles most things related to our staging area:\n * 1) Creates a collection\n * 2) Listens for requests to CRUD items from the collection\n * 3) Adds our staged fields to the fields sortable when the drawer is closed\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/staging',['models/fields/stagingCollection'], function( stagingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our staged fields collection\n\t\t\tthis.collection = new stagingCollection();\n\t\t\t// Respond to requests related to our staging area.\n\t\t    nfRadio.channel( 'fields' ).reply( 'add:stagedField', this.addStagedField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'remove:stagedField', this.removeStagedField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:staging', this.getStagingCollection, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'sort:staging', this.sortStagedFields, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'clear:staging', this.clearStagedFields, this );\n\t\t\t// Listen to our remove staged field click event.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'click:removeStagedField', this.removeStagedField );\n\t\t\t// Listen to our event that fires just before a drawer is closed.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'before:closeDrawer', this.beforeCloseDrawer );\n\t\t},\n\n\t\tgetStagingCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\t/**\n\t\t * Add a field to our staging area\n\t\t * \n\t\t * @since 3.0\n\t\t * @param string type Type of field we're adding\n\t\t * @return tmpID\n\t\t */\n\t\taddStagedField: function( type ) {\n\t\t\t// Get our type model from the string.\n\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\t\t\t// Our tmp ID is a string with the time appended to make it unique.\n\t\t\tvar tmpID = 'nf-staged-field-' + jQuery.now();\n\t\t\t// Object that will be added to our staging collection.\n\t\t\tvar data = {\n\t\t\t\tid: tmpID,\n\t\t\t\t// i.e. firstname, textbox, etc.\n\t\t\t\tslug: fieldType.get( 'id' ),\n\t\t\t\t// i.e. First Name, Textbox, etc.\n\t\t\t\tnicename: fieldType.get( 'nicename' )\n\t\t\t}\n\t\t\t// \n\t\t\tthis.collection.add( data );\n\t\t\treturn tmpID;\n\t\t},\n\n\t\t/**\n\t\t * Remove a field from staging\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \t\t\te     \tEvent\n\t\t * @param  Backbone.model \tmodel \tstaged field model to remove\n\t\t * @return void\n\t\t */\n\t\tremoveStagedField: function( e, model ) {\n\t\t\tthis.collection.remove( model );\n\t\t},\n\n\t\t/**\n\t\t * Adds our staged fields to the main fields sortable before the drawer is closed.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tbeforeCloseDrawer: function() {\n\t\t\tif ( 0 != this.collection.models.length ) { // Make sure that we have models\n\t\t\t\t// Get our field collection.\n\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\n\t\t\t\tvar fields = [];\n\t\t\t\t// Loop through our staging collection\n\t\t\t\t_.each( this.collection.models, function( model ) {\n\t\t\t\t\t// Get a tmp ID for our new field.\n\t\t\t\t\tvar tmpID = nfRadio.channel( 'fields' ).request( 'get:tmpID' );\n\t\t\t\t\t// Create an object that can be added as a model.\n\t\t\t\t\tvar tmpField = { id: tmpID, label: model.get( 'nicename' ), type: model.get( 'slug' ) };\n\t\t\t\t\t// Add our new field.\n\t\t\t\t\tvar newModel = nfRadio.channel( 'fields' ).request( 'add',  tmpField, false );\n\t\t\t\t\t// Add our field addition to our change log.\n\t\t\t\t\tvar label = {\n\t\t\t\t\t\tobject: 'Field',\n\t\t\t\t\t\tlabel: newModel.get( 'label' ),\n\t\t\t\t\t\tchange: 'Added',\n\t\t\t\t\t\tdashicon: 'plus-alt'\n\t\t\t\t\t};\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\tcollection: fieldCollection\n\t\t\t\t\t}\n\t\t\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addObject', newModel, null, label, data );\n\t\t\t\n\t\t\t\t} );\n\t\t\t\t// Trigger a reset on our field collection so that our view re-renders\n\t\t\t\tfieldCollection.trigger( 'reset', fieldCollection );\n\t\t\t\t// Empty the staging collection\n\t\t\t\tthis.collection.reset();\n\t\t\t}\n\t\t\t// Sort our fields.\n\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields' );\n\t\t},\n\n\t\t/**\n\t\t * Sort our staging area by the 'order' attribute.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tsortStagedFields: function() {\n\t\t\t// Get our staged fields sortable.\n\t\t\tvar sortableEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\t// Get the current order using jQuery sortable. Will be an array of IDs: [tmp-blah, tmp-blah]\n\t\t\tvar order = jQuery( sortableEl ).sortable( 'toArray' );\n\t\t\t// Loop through our models\n\t\t\t_.each( this.collection.models, function( field ) {\n\t\t\t\t// Search our order array for this field.\n\t\t\t\tvar search = field.get( 'id' );\n\t\t\t\tvar pos = order.indexOf( search );\n\t\t\t\t// Update our staged field model with the new order.\n\t\t\t\tfield.set( 'order', pos );\n\t\t\t} );\n\t\t\t// Sort our staging collection.\n\t\t\tthis.collection.sort();\n\t\t},\n\n\t\tclearStagedFields: function() {\n\t\t\tthis.collection.reset();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles actions related to our staged fields sortable.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/stagingSortable',['models/fields/stagingCollection'], function( stagingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our field type draggables\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:type', this.addActiveClass );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:type', this.removeActiveClass );\n\t\t\t// Listen to our sortable events\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'receive:stagedFields', this.receiveStagedFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'over:stagedFields', this.overStagedFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'out:stagedFields', this.outStagedFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'start:stagedFields', this.startStagedFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stop:stagedFields', this.stopStagedFields );\n\t\t},\n\n\t\t/**\n\t\t * Change our dropped field type helper so that it matches the other items in our sortable.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI item\n\t\t * @return void\n\t\t */\n\t\treceiveStagedFields: function( ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t\tvar type = jQuery( ui.item ).data( 'id' );\n\t\t\t\tvar tmpID = nfRadio.channel( 'fields' ).request( 'add:stagedField', type );\n\t\t\t\tjQuery( ui.helper ).prop( 'id', tmpID );\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t\tjQuery( ui.helper ).remove();\n\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'drop:fieldType', type );\t\t\t\t\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Add an active class to our sortable when a field type item is dragged\n\t\t * \n\t\t * @since 3.0\n\t\t */\n\t\taddActiveClass: function() {\n\t\t\tvar stagedFieldsEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\tjQuery( stagedFieldsEl ).addClass( 'nf-droppable-active' );\n\t\t},\n\n\t\t/**\n\t\t * Remove the active class from our sortable when the field type item is dropped.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tremoveActiveClass: function() {\n\t\t\tvar stagedFieldsEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\tjQuery( stagedFieldsEl ).removeClass( 'nf-droppable-active' );\n\t\t},\n\n\t\t/**\n\t\t * When the field type item is dragged over our sortable, we change the helper to match the sortable items.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te  event\n\t\t * @param  Object \tui jQuery UI Element\n\t\t * @return void\n\t\t */\n\t\toverStagedFields: function( e, ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t\tvar type = jQuery( ui.item ).data( 'id' );\n\t\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\t\t\t\tvar nicename = fieldType.get( 'nicename' );\n\t\t\t\tthis.currentHelper = ui.helper \n\t\t\t\tjQuery( ui.helper ).html( nicename + '<span class=\"dashicons dashicons-dismiss\"></span>' );\n\t\t\t\tjQuery( ui.helper ).removeClass( 'nf-one-third' ).addClass( 'nf-item-dock' ).css( { 'opacity': '0.8', 'width': '', 'height': '' } );\n\t\t\t\tvar sortableEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).addClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t},\n\n\t\t/**\n\t\t * When a field type item is moved away from our sortable, we change the helper to its previous appearance\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\toutStagedFields: function( ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t\tvar helperClone = nfRadio.channel( 'drawer-addField' ).request( 'get:typeHelperClone' );\t\n\t\t\t\tjQuery( this.currentHelper ).html( jQuery( helperClone ).html() );\n\t\t\t\tjQuery( this.currentHelper ).removeClass( 'nf-item-dock' ).addClass( 'nf-one-third' );\n\t\t\t\tvar sortableEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).removeClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t},\n\n\t\t/**\n\t\t * When a user starts to drag a sortable item, we need to set a few properties on the item and the helper.\n\t\t * These keep the original item in place while dragging and changes the opacity of the helper.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t ui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstartStagedFields: function( ui ) {\n\t\t\tjQuery( ui.item ).show();\n\t\t\tjQuery( ui.item ).css( { 'display': 'inline', 'opacity': '0.7' } );\n\t\t\tjQuery( ui.helper ).css( 'opacity', '0.5' );\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging a sortable item, remove our opacity setting and remove the helper item.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t ui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstopStagedFields: function( ui ) {\n\t\t\tjQuery( ui.item ).css( 'opacity', '' );\n\t\t\tjQuery( ui.helper ).remove();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Filters our field type collection.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/filterTypes',['models/fields/typeSectionCollection'], function( fieldTypeSectionCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our change filter event.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'change:filter', this.filterFieldTypes );\n\t\t},\n\n\t\t/**\n\t\t * Filter our field types in the add new field drawer\n\t\t * \n\t\t * Takes a search string and finds any field types that match either the name or alias.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string\t search \tstring being searched for\n\t\t * @param  object \t e      \tKeyup event\n\t\t * @return void\n\t\t */\n\t\tfilterFieldTypes: function( search, e ) {\n\t\t\t// Make sure that we aren't dealing with an empty string.\n\t\t\tif ( '' != jQuery.trim( search ) ) {\n        \t\tvar filtered = [];\n        \t\t/**\n        \t\t * Call the function that actually filters our collection,\n        \t\t * and then loop through our collection, adding each model to our filtered array.\n        \t\t */\n        \t\t_.each( this.filterCollection( search ), function( model ) {\n        \t\t\tfiltered.push( model.get( 'id' ) );\n        \t\t} );\n\n        \t\t// Create a new Field Type Section collection with the filtered array.\n        \t\tvar filteredSectionCollection = new fieldTypeSectionCollection( [\n\t\t\t\t{ \n\t\t\t\t\tid: 'filtered',\n\t\t\t\t\tnicename: 'Filtered Fields',\n\t\t\t\t\tfieldTypes: filtered\n\t\t\t\t}\n\t\t\t\t] );\n\n        \t\t// Request that our field types filter be applied, passing the collection we created above.\n        \t\tnfRadio.channel( 'drawer' ).trigger( 'filter:fieldTypes', filteredSectionCollection );\n        \t\t// If we've pressed the 'enter' key, add the field to staging and clear the filter.\n        \t\tif ( e.addObject ) {\n        \t\t\tif ( 0 < filtered.length ) {\n        \t\t\t\tnfRadio.channel( 'fields' ).request( 'add:stagedField', filtered[0] );\n        \t\t\t\tnfRadio.channel( 'drawer' ).request( 'clear:filter' );\n        \t\t\t}\n        \t\t}\n        \t} else {\n        \t\t// Clear our filter if the search text is empty.\n        \t\tnfRadio.channel( 'drawer' ).trigger( 'clear:filter' );\n        \t}\n        },\n\n        /**\n         * Search our field type collection for the search string.\n         * \n         * @since  3.0\n         * @param  string\t search \tstring being searched for\n         * @return backbone.collection\n         */\n        filterCollection: function( search ) {\n        \tsearch = search.toLowerCase();\n        \t// Get our list of field types\n        \tvar collection = nfRadio.channel( 'fields' ).request( 'get:typeCollection' );\n        \t/*\n        \t * Backbone collections have a 'filter' method that loops through every model,\n        \t * waiting for you to return true or false. If you return true, the model is kept.\n        \t * If you return false, it's removed from the filtered result.\n        \t */\n\t\t\tvar filtered = collection.filter( function( model ) {\n\t\t\t\tvar found = false;\n\t\t\t\t\n\t\t\t\t// If we match either the ID or nicename, return true.\n\t\t\t\tif ( model.get( 'id' ).toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t} else if ( model.get( 'nicename' ).toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * TODO: Hashtag searching. Doesn't really do anything atm.\n\t\t\t\t */\n\t\t\t\tif ( model.get( 'tags' ) && 0 == search.indexOf( '#' ) ) {\n\t\t\t\t\t_.each( model.get( 'tags' ), function( tag ) {\n\t\t\t\t\t\tif ( search.replace( '#', '' ).length > 1 ) {\n\t\t\t\t\t\t\tif ( tag.toLowerCase().indexOf( search.replace( '#', '' ) ) != -1 ) {\n\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// If we match any of the aliases, return true.\n\t\t\t\tif ( model.get( 'alias' ) ) {\n\t\t\t\t\t_.each( model.get( 'alias' ), function( alias ) {\n\t\t\t\t\t\tif ( alias.toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\treturn found;\n\t\t\t} );\n\t\t\t// Return our filtered collection.\n\t\t\treturn filtered;\n        }\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles all the actions/functions related to our main field sortable.\n * All of the actual logic for our sortable is held here; the view just calls it using nfRadio.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/sortable',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// When our field type buttons are dragged, we need to add or remove the active (blue) class.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:type', this.addActiveClass );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:type', this.removeActiveClass );\n\t\t\t// When our field staging is dragged, we need to add or remove the active (blue) class.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:fieldStaging', this.addActiveClass );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:fieldStaging', this.removeActiveClass );\n\t\t\t/*\n\t\t\t * Handles all the events fired by our sortable:\n\t\t\t * receive - dropped from type button or staging\n\t\t\t * over - dragging within or over the sortable\n\t\t\t * out - leaving the sortable\n\t\t\t * stop - stopped sorting/dragging\n\t\t\t * start - started sorting/dragging\n\t\t\t * update - stopped sorting/dragging and order has changed\n\t\t\t */\n\t\t\tnfRadio.channel( 'app' ).reply( 'receive:fieldsSortable', this.receiveFieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'over:fieldsSortable', this.overfieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'out:fieldsSortable', this.outFieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'stop:fieldsSortable', this.stopFieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'start:fieldsSortable', this.startFieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:fieldsSortable', this.updateFieldsSortable, this );\n\t\t},\n\n\t\t/**\n\t\t * Add the active class to our sortable so that its border is blue.\n\t\t * \n\t\t * @since 3.0\n\t\t * @return void\n\t\t */\n\t\taddActiveClass: function() {\n\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\tjQuery( sortableEl ).addClass( 'nf-droppable-active' );\t\n\t\t},\n\n\t\t/**\n\t\t * Remove the active class from our sortable\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tremoveActiveClass: function() {\n\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\tjQuery( sortableEl ).removeClass( 'nf-droppable-active' );\n\t\t},\n\n\t\t/**\n\t\t * Fires when we drop a field type button or staging onto our sortable\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\treceiveFieldsSortable: function( ui ) {\n\t\t\t/*\n\t\t\t * We have to do different things if we're dealing with a field type button or staging area.\n\t\t\t */ \n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) { // Field Type Button\n\t\t\t\t// Get our type string\n\t\t\t\tvar type = jQuery( ui.item ).data( 'id' );\n\t\t\t\t// Add a field (returns the tmp ID )\n\t\t\t\tvar tmpID = this.addField( type, false );\n\t\t\t\t/*\n\t\t\t\t * Update our helper id to the tmpID.\n\t\t\t\t * We do this so that when we sort, we have the proper ID.\n\t\t\t\t */ \n\t\t\t\tjQuery( ui.helper ).prop( 'id', tmpID );\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields' );\n\t\t\t\t// Remove the helper. Gets rid of a weird type artifact.\n\t\t\t\tjQuery( ui.helper ).remove();\n\t\t\t\t// Trigger a drop field type event.\n\t\t\t\tnfRadio.channel( 'fields' ).trigger( 'drop:fieldType', type );\n\t\t\t} else if ( jQuery( ui.item ).hasClass( 'nf-stage' ) ) { // Staging\n\t\t\t\t// Later, we want to reference 'this' context, so we define it here.\n\t\t\t\tvar that = this;\n\t\t\t\t// Make sure that our staged fields are sorted properly.\t\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t\t// Grab our staged fields.\n\t\t\t\tvar stagedFields = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\t\t\t\t// Get our current field order.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\t\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) { // Sortable isn't empty\n\t\t\t\t\t// If we're dealing with a sortable that isn't empty, get the order.\n\t\t\t\t\tvar order = jQuery( sortableEl ).sortable( 'toArray' );\n\t\t\t\t} else { // Sortable is empty\n\t\t\t\t\t// Sortable is empty, all we care about is our staged field draggable.\n\t\t\t\t\tvar order = ['nf-staged-fields-drag'];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Get the index of our droped element.\n\t\t\t\tvar insertedAt = order.indexOf( 'nf-staged-fields-drag' );\n\n\t\t\t\t// Loop through each staged fields model and insert a field.\n\t\t\t\tvar tmpIDs = [];\n\t\t\t\t_.each( stagedFields.models, function( field, index ) {\n\t\t\t\t\t// Add our field.\n\t\t\t\t\tvar tmpID = that.addField( field.get( 'slug' ) );\n\t\t\t\t\t// Add this newly created field to our order array.\n\t\t\t\t\torder.splice( insertedAt + index, 0, tmpID );\n\t\t\t\t} );\n\n\t\t\t\t// Remove our dropped element from our order array.\n\t\t\t\tvar insertedAt = order.indexOf( 'nf-staged-fields-drag' );\n\t\t\t\torder.splice( insertedAt, 1 );\n\t\t\t\t// Sort our fields\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields', order );\n\t\t\t\t// Clear our staging\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'clear:staging' );\n\t\t\t\t// Remove our helper. Fixes a weird artifact.\n\t\t\t\tjQuery( ui.helper ).remove();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Add a field.\n\t\t * Builds the object necessary to add a field to the field model collection.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string \ttype   field type\n\t\t * @param  boolean \tsilent add silently\n\t\t * @return string \ttmpID\n\t\t */\n\t\taddField: function( type, silent ) {\n\t\t\t// Default to false\n\t\t\tsilent = silent || false;\n\t\t\t// Get our field type model\n\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\t\t\t// Get our tmp ID\n\t\t\tvar tmpID = nfRadio.channel( 'fields' ).request( 'get:tmpID' );\n\t\t\t// Add our field\n\t\t\tvar newModel = nfRadio.channel( 'fields' ).request( 'add',  { id: tmpID, label: fieldType.get( 'nicename' ), type: fieldType.get( 'id' ) }, silent );\n\t\t\t// Add our field addition to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: 'Field',\n\t\t\t\tlabel: newModel.get( 'label' ),\n\t\t\t\tchange: 'Added',\n\t\t\t\tdashicon: 'plus-alt'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: nfRadio.channel( 'fields' ).request( 'get:collection' )\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addObject', newModel, null, label, data );\n\t\t\t\n\t\t\treturn tmpID;\n\t\t},\n\n\t\t/**\n\t\t * When the user drags a field type or staging over our sortable, we need to modify the helper.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\toverfieldsSortable: function( ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) { // Field Type\n\t\t\t\t// String type\n\t\t\t\tvar type = jQuery( ui.helper ).data( 'id' );\n\t\t\t\t// Get our field type model.\n\t\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\t\t\t\t// Get our field type nicename.\n\t\t\t\tvar label = fieldType.get( 'nicename' );\n\t\t\t\t// Get our sortable element.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\t// Get our fieldwidth.\n\t\t\t\tvar fieldWidth = jQuery( sortableEl ).width();\n\t\t\t\t// Set our currentHelper to an object var so that we can access it later.\n\t\t\t\tthis.currentHelper = ui.helper;\n\t\t\t\t// Update our helper label.\n\t\t\t\tjQuery( ui.helper ).html( label );\n\t\t\t\t// Remove the field type draggable classes and add sortable classes.\n\t\t\t\tjQuery( ui.helper ).removeClass( 'nf-one-third' ).addClass( 'nf-field-wrap' ).css( { 'width': fieldWidth, 'height': '50px' } );\t\t\t\t\t\t\n\t\t\t\t// Add our hover class if our sortable has been initialized.\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).addClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t} else if ( jQuery( ui.item ).hasClass( 'nf-stage' ) ) { // Staging\n\t\t\t\t// Get our sortable, and if it's initialized add our hover class.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).addClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When the user moves a draggable outside of the sortable, we need to change the helper.\n\t\t * This returns the item to its pre-over state.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\toutFieldsSortable: function( ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-button' ) ) { // Field Type\n\t\t\t\t/*\n\t\t\t\t * Get our helper clone.\n\t\t\t\t * This will let us access the previous label and classes of our helper.\n\t\t\t\t */ \n\t\t\t\tvar helperClone = nfRadio.channel( 'drawer-addField' ).request( 'get:typeHelperClone' );\n\t\t\t\t// Set our helper label, remove our sortable class, and add the type class back to the type draggable.\n\t\t\t\tjQuery( this.currentHelper ).html( jQuery( helperClone ).html() );\n\t\t\t\tjQuery( this.currentHelper ).removeClass( 'nf-field-wrap' ).addClass( 'nf-one-third' ).css( { 'width': '', 'height': '' } );\n\t\t\t\t// Get our sortable and if it has been intialized, remove the droppable hover class.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).removeClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t} else if ( jQuery( ui.item ).hasClass( 'nf-stage' ) ) { // Staging\n\t\t\t\t// If we've initialized our sortable, remove the droppable hover class.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).removeClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging in the sortable:\n\t\t * remove our opacity setting\n\t\t * remove our ui helper\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstopFieldsSortable: function( ui ) {\n\t\t\tjQuery( ui.item ).css( 'opacity', '' )\n\t\t\tjQuery( ui.helper ).remove();\n\t\t},\n\n\t\t/**\n\t\t * When we start dragging in the sortable:\n\t\t * add an opacity setting of 0.5\n\t\t * show our item (jQuery hides the original item by default)\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstartFieldsSortable: function( ui ) {\n\t\t\t// If we aren't dragging an item in from types or staging, update our change log.\n\t\t\tif( ! jQuery( ui.item ).hasClass( 'nf-field-type-button' ) && ! jQuery( ui.item ).hasClass( 'nf-stage' ) ) { \n\t\t\t\tjQuery( ui.item ).css( 'opacity', '0.5' ).show();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Sort our fields when we change the order.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tupdateFieldsSortable: function( ui ) {\n\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields' );\n\n\t\t\t// If we aren't dragging an item in from types or staging, update our change log.\n\t\t\tif( ! jQuery( ui.item ).hasClass( 'nf-field-type-button' ) && ! jQuery( ui.item ).hasClass( 'nf-stage' ) ) { \n\n\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\tvar dragFieldID = jQuery( ui.item ).prop( 'id' ).replace( 'field-', '' );\n\t\t\t\tvar dragModel = fieldCollection.get( dragFieldID );\n\n\t\t\t\t// Add our change event to the change tracker.\n\t\t\t\tvar data = { fields: [] };\n\t\t\t\t_.each( fieldCollection.models, function( field ) {\n\t\t\t\t\tvar oldPos = field._previousAttributes.order;\n\t\t\t\t\tvar newPos = field.get( 'order' );\n\t\t\t\t\t\n\t\t\t\t\tdata.fields.push( {\n\t\t\t\t\t\tmodel: field,\n\t\t\t\t\t\tattr: 'order',\n\t\t\t\t\t\tbefore: oldPos,\n\t\t\t\t\t\tafter: newPos\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t\tvar label = {\n\t\t\t\t\tobject: 'Field',\n\t\t\t\t\tlabel: dragModel.get( 'label' ),\n\t\t\t\t\tchange: 'Re-ordered from ' + dragModel._previousAttributes.order + ' to ' + dragModel.get( 'order' ),\n\t\t\t\t\tdashicon: 'sort'\n\t\t\t\t};\n\n\t\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'sortFields', dragModel, null, label, data );\n\t\t\t}\n\n\t\t\t\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model that represents our form fields.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/fieldModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tobjectType: 'Field',\n\t\t\tobjectDomain: 'fields',\n\t\t\teditActive: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Listen for model attribute changes\n\t\t\tthis.on( 'change', this.changeSetting, this );\n\t\t\t\n\t\t\t// Get our parent field type.\n\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', this.get( 'type' ) );\n\t\t\tvar parentType = fieldType.get( 'parentType' );\n\n\t\t\t// Loop through our field type \"settingDefaults\" and add any default settings.\n\t\t\tvar that = this;\n\t\t\t_.each( fieldType.get( 'settingDefaults' ), function( val, key ) {\n\t\t\t\tif ( 'undefined' == typeof that.get( key ) ) {\n\t\t\t\t\tthat.set( key, val );\n\t\t\t\t}\n\t\t\t} );\n\t\t\t\n\t\t\t/*\n\t\t\t * Trigger an init event on three channels:\n\t\t\t * \n\t\t\t * fields\n\t\t\t * fields-parentType\n\t\t\t * field-type\n\t\t\t *\n\t\t\t * This lets specific field types modify model attributes before anything uses them.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'fields' ).trigger( 'init:fieldModel', this );\n\t\t\tnfRadio.channel( 'fields-' + parentType ).trigger( 'init:fieldModel', this );\n\t\t\tnfRadio.channel( 'fields-' + this.get( 'type' ) ).trigger( 'init:fieldModel', this );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'update:fieldKey', this.updateFieldKey );\n\t\t},\n\n\t\t/**\n\t\t * Fires an event on the fieldSetting-{name} channel saying we've updated a setting.\n\t\t * When we change the model attributes, fire an event saying we've changed something.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tchangeSetting: function( model ) {\n\t\t\tnfRadio.channel( 'fieldSetting-' + _.keys( model.changedAttributes() )[0] ).trigger( 'update:setting', this ) ;\n\t\t\tnfRadio.channel( 'app' ).trigger( 'update:setting', this );\n\t\t},\n\n\t\tupdateFieldKey: function( keyModel, settingModel ) {\n\t\t\tnfRadio.channel( 'app' ).request( 'replace:fieldKey', this, keyModel, settingModel );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our field models. \n * This is the actual field data created by the user.\n *\n * We listen to the add and remove events so that we can push the new id to either the new fields or removed fields property.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/fieldCollection',['models/fields/fieldModel'], function( fieldModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: fieldModel,\n\t\tcomparator: 'order',\n\t\ttmpNum: 1,\n\n\t\tinitialize: function() {\n\t\t\tthis.on( 'add', this.addField, this );\n\t\t\tthis.on( 'remove', this.removeField, this );\n\t\t\tthis.newIDs = [];\n\t\t},\n\n\t\t/**\n\t\t * When we add a field, push the id onto our new fields property.\n\t\t * This lets us tell the server that this is a new field to be added rather than a field to be updated.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param void\n\t\t */\n\t\taddField: function( model ) {\n\t\t\tthis.newIDs.push( model.get( 'id' ) );\n\t\t},\n\n\t\t/**\n\t\t * When we remove a field, push the id onto our removed fields property.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param void\n\t\t */\n\t\tremoveField: function( model ) {\n\t\t\tthis.removedIDs[ model.get( 'id' ) ] = model.get( 'id' );\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Handles interactions with our field collection.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/data',['models/fields/fieldCollection', 'models/fields/fieldModel'], function( fieldCollection, fieldModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Load our field collection from our localized form data\n\t\t\tthis.collection = new fieldCollection( preloadedFormData.fields );\n\t\t\t// Set our removedIDs to an empty object. This will be populated when a field is removed so that we can add it to our 'deleted_fields' object.\n\t\t\tthis.collection.removedIDs = {};\n\n\t\t\t// Respond to requests for data about fields and to update/change/delete fields from our collection.\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:collection', this.getFieldCollection, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:field', this.getField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:tmpID', this.getTmpFieldID, this );\n\n\t\t\tnfRadio.channel( 'fields' ).reply( 'add', this.addField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'delete', this.deleteField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'sort:fields', this.sortFields, this );\n\t\t},\n\n\t\tgetFieldCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tgetField: function( id ) {\n\t\t\treturn this.collection.get( id );\n\t\t},\n\n\t\t/**\n\t\t * Add a field to our collection. If silent is passed as true, no events will trigger.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param Object \tdata \tfield data to insert\n\t\t * @param bool \t\tsilent \tprevent events from firing as a result of adding\t \t\n\t\t */\n\t\taddField: function( data, silent ) {\n\t\t\tsilent = silent || false;\n\t\t\tif ( false === data instanceof Backbone.Model ) {\n\t\t\t\tvar model = new fieldModel( data );\n\t\t\t} else {\n\t\t\t\tvar model = data;\n\t\t\t}\t\t\t\n\n\t\t\tthis.collection.add( model, { silent: silent } );\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'add:field', model );\n\n\t\t\treturn model;\n\t\t},\n\n\t\t/**\n\t\t * Update a field setting by ID\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  int \t\tid    field id\n\t\t * @param  string \tname  setting name\n\t\t * @param  mixed \tvalue setting value\n\t\t * @return void\n\t\t */\n\t\tupdateFieldSetting: function( id, name, value ) {\n\t\t\tvar fieldModel = this.collection.get( id );\n\t\t\tfieldModel.set( name, value );\n\t\t},\n\n\t\t/**\n\t\t * Get our fields sortable EL\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Array \torder optional order array like: [field-1, field-4, field-2]\n\t\t * @return void\n\t\t */\n\t\tsortFields: function( order, ui ) {\n\t\t\t// Get our sortable element\n\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) { // Make sure that sortable is enabled\n\t\t\t\t// JS ternerary for setting our order\n\t\t\t\tvar order = order || jQuery( sortableEl ).sortable( 'toArray' );\n\t\t\t\t// Loop through all of our fields and update their order value\n\t\t\t\t_.each( this.collection.models, function( field ) {\n\t\t\t\t\t// Get our current position.\n\t\t\t\t\tvar oldPos = field.get( 'order' );\n\t\t\t\t\tvar id = field.get( 'id' );\n\t\t\t\t\tif ( jQuery.isNumeric( id ) ) {\n\t\t\t\t\t\tvar search = 'field-' + id;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar search = id;\n\t\t\t\t\t}\n\t\t\t\t\t// Get the index of our field inside our order array\n\t\t\t\t\tvar newPos = order.indexOf( search ) + 1;\n\t\t\t\t\tfield.set( 'order', newPos );\n\t\t\t\t} );\n\t\t\t\tthis.collection.sort();\n\n\t\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\t\t// Update our preview\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Delete a field from our collection.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tmodel \tfield model to be deleted\n\t\t * @return void\n\t\t */\n\t\tdeleteField: function( model ) {\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'delete:field', model );\n\t\t\tthis.collection.remove( model );\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t},\n\n\t\t/**\n\t\t * Return a new tmp id for our fields.\n\t\t * Gets the field collection length, adds 1, then returns that prepended with 'tmp-'.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return string\n\t\t */\n\t\tgetTmpFieldID: function() {\n\t\t\tvar tmpNum = this.collection.tmpNum;\n\t\t\tthis.collection.tmpNum++;\n\t\t\treturn 'tmp-' + tmpNum;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model for our list option.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/listOptionModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Model that represents our list options.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/listOptionCollection',['models/fields/listOptionModel'], function( listOptionModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: listOptionModel,\n\t\tcomparator: 'order',\n\n\t\tinitialize: function() {\n\t\t\t// Listen to the 'sort' event\n\t\t\tthis.on( 'sort', this.changeCollection, this );\n\t\t\t// Listen to the 'add' event\n\t\t\tthis.on( 'add', this.addOption, this );\n\t\t},\n\n\t\tchangeCollection: function() {\n\t\t\t// Trigger a 'sort:options' event so that our field model can update\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'sort:options', this );\n\t\t},\n\n\t\taddOption: function( model, collection ) {\n\t\t\tif ( ! model.get( 'order' ) ) {\n\t\t\t\t// console.log( collection.length );\n\t\t\t\t// model.set( 'order', this.length );\n\t\t\t}\n\t\t}\n\t} );\n\treturn collection;\n} );\n","define( 'views/fields/drawer/typeSettingListOption',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\tclassName: 'nf-table-row',\n\t\ttemplate: '#nf-tmpl-edit-setting-list-option',\n\t\tid: function() {\n\t\t\treturn this.model.cid;\n\t\t},\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.settingModel = data.settingModel;\n\t\t\tthis.dataModel = data.dataModel;\n\t\t\tthis.collection = data.collection;\n\t\t\tthis.columns = data.columns;\n\t\t},\n\n\t\tonRender: function() {\n\t\t\t/*\n\t\t\t * Send out a radio message.\n\t\t\t */\n\t\t\tnfRadio.channel( 'setting-' + this.settingModel.get( 'name' ) + '-option' ).trigger( 'render:setting', this.model, this.dataModel, this );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tif ( this.model.get( 'new' ) ) {\n\t\t\t\tjQuery( this.el ).find( 'input:first' ).focus();\n\t\t\t\tthis.model.set( 'new', false );\n\t\t\t}\n\t\t},\n\n\t\tevents: {\n\t\t\t'change input': 'changeOption',\n\t\t\t'click .nf-delete': 'deleteOption',\n\t\t\t'keyup': 'maybeAddOption'\n\t\t},\n\n\t\tchangeOption: function( e ) {\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'change:option', e, this.model, this.dataModel );\n\t\t},\n\n\t\tdeleteOption: function( e ) {\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'click:deleteOption', this.model, this.collection, this.dataModel );\n\t\t},\n\n\t\tmaybeAddOption: function( e ) {\n\t\t\tif ( 13 == e.keyCode ) {\n\t\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'click:addOption', this.collection, this.dataModel );\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t\t\treturn {\n\t\t\t\tgetColumns: function() {\n\t\t\t\t\treturn that.columns;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n\n","define( 'views/fields/drawer/typeSettingListEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'tr',\n\t\ttemplate: '#nf-tmpl-edit-setting-list-empty'\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/drawer/typeSettingListComposite',['views/fields/drawer/typeSettingListOption', 'views/fields/drawer/typeSettingListEmpty', 'models/fields/listOptionCollection'], function( listOptionView, listEmptyView, listOptionCollection ) {\n\tvar view = Marionette.CompositeView.extend( {\n\t\ttemplate: '#nf-tmpl-edit-setting-wrap',\n\t\tchildView: listOptionView,\n\t\temptyView: listEmptyView,\n\n\t\tinitialize: function( data ) {\n\n\t\t\t/*\n\t\t\t * Our options are stored in our database as objects, not collections.\n\t\t\t * Before we attempt to render them, we need to convert them to a collection if they aren't already one.\n\t\t\t */ \n\t\t\tvar optionCollection = data.dataModel.get( this.model.get( 'name' ) );\n\n\t\t\tif ( false == optionCollection instanceof Backbone.Collection ) {\n\t\t\t\toptionCollection = new listOptionCollection();\n\t\t\t\toptionCollection.add( data.dataModel.get( this.model.get( 'name' ) ) );\n\t\t\t\tdata.dataModel.set( this.model.get( 'name' ), optionCollection, { silent: true } );\n\t\t\t}\n\n\t\t\tthis.collection = optionCollection;\n\t\t\tthis.dataModel = data.dataModel;\n\t\t\tthis.childViewOptions = { settingModel: this.model, collection: this.collection, dataModel: data.dataModel, columns: this.model.get( 'columns' ) };\n\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor ( var name in deps ) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.on( 'change:' + name, this.render, this );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor (var name in deps) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.off( 'change:' + name, this.render );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t\n\t\t\tvar that = this;\n\t\t\tjQuery( this.el ).find( '.nf-list-options-tbody' ).sortable( {\n\t\t\t\thandle: '.handle',\n\t\t\t\thelper: 'clone',\n\t\t\t\tplaceholder: 'nf-list-options-sortable-placeholder',\n\t\t\t\tforcePlaceholderSize: true,\n\t\t\t\topacity: 0.95,\n\t\t\t\ttolerance: 'pointer',\n\n\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'option-repeater' ).request( 'start:optionSortable', ui );\n\t\t\t\t},\n\n\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'option-repeater' ).request( 'stop:optionSortable', ui );\n\t\t\t\t},\n\n\t\t\t\tupdate: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'option-repeater' ).request( 'update:optionSortable', ui, this, that );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t/*\n\t\t\t * Send out a radio message.\n\t\t\t */\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'render:setting', this.model, this.dataModel, this );\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t\t\tvar that = this;\n\t    \treturn {\n\t    \t\trenderHeaders: function() {\n\t    \t\t\tvar columns = '<div>&nbsp;</div>';\n\t    \t\t\tif ( -1 != this.columns.indexOf( 'label' ) ) {\n\t    \t\t\t\tcolumns += '<div>Label</div>';\n\t    \t\t\t}\n\t    \t\t\tif ( -1 != this.columns.indexOf( 'value' ) ) {\n\t    \t\t\t\tcolumns += '<div>Value</div>';\n\t    \t\t\t}\n\t    \t\t\tif ( -1 != this.columns.indexOf( 'calc' ) ) {\n\t\t\t\t\t\tcolumns += '<div>Calc Value</div>';\n\t    \t\t\t}\n\t    \t\t\tif ( -1 != this.columns.indexOf( 'selected' ) ) {\n\t    \t\t\t\tcolumns += '<div><span class=\"dashicons dashicons-yes\"></span></div>';\n\t    \t\t\t}\n\t    \t\t\tcolumns += '<div>&nbsp;</div>'\n\t\t\t\t\treturn columns;\n\t\t\t\t},\n\n\t    \t\trenderSetting: function() {\n\t\t\t\t\treturn _.template( jQuery( '#nf-tmpl-edit-setting-' + this.type ).html(), this );\n\t\t\t\t},\n\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = '';\n\t\t\t\t\tif ( 'undefined' != typeof this.width ) {\n\t\t\t\t\t\tclasses += this.width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclasses += ' one-half';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.error ) {\n\t\t\t\t\t\tclasses += ' nf-error';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\trenderVisible: function() {\n\t\t\t\t\tif ( this.deps ) {\n\t\t\t\t\t\tfor (var name in this.deps) {\n\t\t\t\t\t\t    if ( this.deps.hasOwnProperty( name ) ) {\n\t\t\t\t\t\t        if ( that.dataModel.get( name ) !== this.deps[ name ] ) {\n\t\t\t\t\t\t        \treturn 'style=\"display:none;\"';\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t    \t\t\treturn '';\n\t    \t\t},\n\n\t\t\t\trenderError: function() {\n\t\t\t\t\tif ( this.error ) {\n\t\t\t\t\t\treturn this.error;\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( '.nf-list-options-tbody' ).append( childView.el );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-add-new': 'clickAddOption'\n\t\t},\n\n\t\tclickAddOption: function( e ) {\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'click:addOption', this.collection, this.dataModel );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","/**\n * Handles tasks associated with our option-repeater.\n * \n * Return our repeater child view.\n *\n * Also listens for changes to the options settings.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/optionRepeater',['models/fields/listOptionModel', 'models/fields/listOptionCollection', 'views/fields/drawer/typeSettingListComposite'], function( listOptionModel, listOptionCollection, listCompositeView ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests for the childView for list type fields.\n\t\t\tnfRadio.channel( 'option-repeater' ).reply( 'get:settingChildView', this.getSettingChildView, this );\n\t\t\t\n\t\t\t// Listen for changes to our list options.\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater' ), 'change:option', this.changeOption );\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater' ), 'click:addOption', this.addOption );\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater' ), 'click:deleteOption', this.deleteOption );\n\n\t\t\t// Respond to requests related to our list options sortable.\n\t\t\tnfRadio.channel( 'option-repeater' ).reply( 'update:optionSortable', this.updateOptionSortable, this );\n\t\t\tnfRadio.channel( 'option-repeater' ).reply( 'stop:optionSortable', this.stopOptionSortable, this );\n\t\t\tnfRadio.channel( 'option-repeater' ).reply( 'start:optionSortable', this.startOptionSortable, this );\n\t\t},\n\n\t\t/**\n\t\t * Update an option value in our model.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te          event\n\t\t * @param  backbone.model \tmodel      option model\n\t\t * @param  backbone.model \tdataModel\n\t\t * @return void\n\t\t */\n\t\tchangeOption: function( e, model, dataModel ) {\n\t\t\tvar name = jQuery( e.target ).data( 'id' );\n\t\t\tif ( 'selected' == name ) {\n\t\t\t\tif ( jQuery( e.target ).attr( 'checked' ) ) {\n\t\t\t\t\tvar value = 1;\n\t\t\t\t} else {\n\t\t\t\t\tvar value = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar value = jQuery( e.target ).val();\n\t\t\t}\n\t\t\t\n\t\t\tvar before = model.get( name );\n\n\t\t\tmodel.set( name, value );\n\t\t\t// Triger an update on our dataModel\n\t\t\tthis.triggerDataModel( model, dataModel );\n\n\t\t\tvar after = value;\n\t\t\t\n\t\t\tvar changes = {\n\t\t\t\tattr: name,\n\t\t\t\tbefore: before,\n\t\t\t\tafter: after\n\t\t\t}\n\n\t\t\tvar label = {\n\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\tchange: 'Option ' + model.get( 'label' ) + ' ' + name + ' changed from ' + before + ' to ' + after\n\t\t\t};\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'changeSetting', model, changes, label );\n\t\t},\n\n\t\t/**\n\t\t * Add an option to our list\n\t\t * \n\t\t * @since 3.0\n\t\t * @param backbone.collection \tcollection \tlist option collection\n\t\t * @param backbone.model \t\tdataModel\n\t\t * @return void\n\t\t */\n\t\taddOption: function( collection, dataModel ) {\n\t\t\tvar model = new listOptionModel( { label: '', value: '', calc: '', selected: 0, order: collection.length, new: true } );\n\t\t\tcollection.add( model );\n\n\t\t\t// Add our field addition to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\tchange: 'Option Added',\n\t\t\t\tdashicon: 'plus-alt'\n\t\t\t};\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addListOption', model, null, label );\n\t\t\t\n\t\t\tthis.triggerDataModel( model, dataModel );\n\t\t},\n\n\t\t/**\n\t\t * Delete an option from our list\n\t\t * \n\t\t * @since  3.0\n\t\t * @param backbone.model \t\tmodel       list option model\n\t\t * @param backbone.collection \tcollection \tlist option collection\n\t\t * @param backbone.model \t\tdataModel\n\t\t * @return void\n\t\t */\n\t\tdeleteOption: function( model, collection, dataModel ) {\n\t\t\tvar newModel = nfRadio.channel( 'app' ).request( 'clone:modelDeep', model );\n\n\t\t\t// Add our field deletion to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\tchange: 'Option ' + newModel.get( 'label' ) + ' Removed',\n\t\t\t\tdashicon: 'dismiss'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: collection\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'removeListOption', newModel, null, label, data );\n\t\t\t\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:changeCollection' );\n\t\t\tvar results = changeCollection.where( { model: model } );\n\n\t\t\t_.each( results, function( changeModel ) {\n\t\t\t\tif ( 'object' == typeof changeModel.get( 'data' ) ) {\n\t\t\t\t\t_.each( changeModel.get( 'data' ), function( dataModel ) {\n\t\t\t\t\t\tif ( dataModel.model == dataModel ) {\n\t\t\t\t\t\t\tdataModel.model = newModel;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\tchangeModel.set( 'model', newModel );\n\t\t\t\tchangeModel.set( 'disabled', true );\n\t\t\t} );\n\n\t\t\tcollection.remove( model );\n\t\t\tthis.triggerDataModel( model, dataModel );\n\t\t},\n\n\t\t/**\n\t\t * Creates an arbitrary value on our collection, then clones and updates that collection.\n\t\t * This forces a change event to be fired on the dataModel where the list option collection data is stored.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param backbone.collection \tcollection \tlist option collection\n\t\t * @param backbone.model \t\tdataModel\n\t\t * @return void\n\t\t */\n\t\ttriggerDataModel: function( model, dataModel ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'update:setting', model );\t\n\t\t},\n\n\t\t/**\n\t\t * Return our list composite view to the setting collection view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tmodel \tsettings model\n\t\t * @return void\n\t\t */\n\t\tgetSettingChildView: function( model ) {\n\t\t\treturn listCompositeView;\n\t\t},\n\n\t\t/**\n\t\t * When we sort our list options, change the order in our option model and trigger a change.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t \t\tsortable \tjQuery UI element\n\t\t * @param  backbone.model \tsetting  \tSetting model\n\t\t * @return void\n\t\t */\n\t\tupdateOptionSortable: function( ui, sortable, setting ) {\n\t\t\tvar newOrder = jQuery( sortable ).sortable( 'toArray' );\n\t\t\tvar dragModel = setting.collection.get( { cid: jQuery( ui.item ).prop( 'id' ) } );\n\t\t\tvar data = {\n\t\t\t\tcollection: setting.collection,\n\t\t\t\tobjModels: []\n\t\t\t};\n\t\t\t_.each( newOrder, function( cid, index ) {\n\t\t\t\tvar optionModel = setting.collection.get( { cid: cid } );\n\t\t\t\tvar oldPos = optionModel.get( 'order' );\n\t\t\t\toptionModel.set( 'order', index );\n\t\t\t\tvar newPos = index;\n\n\t\t\t\tdata.objModels.push( {\n\t\t\t\t\tmodel: optionModel,\n\t\t\t\t\tattr: 'order',\n\t\t\t\t\tbefore: oldPos,\n\t\t\t\t\tafter: newPos\n\t\t\t\t} );\n\t\t\t} );\n\t\t\t\n\t\t\tsetting.collection.sort();\n\n\t\t\tvar label = {\n\t\t\t\tobject: setting.dataModel.get( 'objectType' ),\n\t\t\t\tlabel: setting.dataModel.get( 'label' ),\n\t\t\t\tchange: 'Option ' + dragModel.get( 'label' ) + ' re-ordered from ' + dragModel._previousAttributes.order + ' to ' + dragModel.get( 'order' ),\n\t\t\t\tdashicon: 'sort'\n\t\t\t};\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'sortListOptions', dragModel, null, label, data );\n\n\t\t\tthis.triggerDataModel( dragModel, setting.dataModel );\n\t\t},\n\n\t\t/**\n\t\t * When we stop sorting our list options, reset our item opacity.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object ui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstopOptionSortable: function( ui ) {\n\t\t\tjQuery( ui.item ).css( 'opacity', '' );\n\t\t},\n\n\t\t/**\n\t\t * When we start sorting our list options, remove containing divs and set our item opacity to 0.5\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Objects ui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstartOptionSortable: function( ui ) {\n\t\t\tjQuery( ui.placeholder ).find( 'div' ).remove();\n\t\t\tjQuery( ui.item ).css( 'opacity', '0.5' ).show();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles adding and removing the active class from a field currently being edited.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - Edit Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/editActive',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests to remove the active class from all our fields.\n\t\t\tnfRadio.channel( 'fields' ).reply( 'clear:editActive', this.clearEditActive, this );\n\t\t\t// Listen for the closing drawer so that we can remove all of our active classes.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-editSettings' ), 'before:closeDrawer', this.clearEditActive );\n\t\t},\n\n\t\t/**\n\t\t * Loops through our fields collection and sets editActive to false.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n        clearEditActive: function() {\n            var fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n            _.each( fieldCollection.models, function( field ) {\n\t\t\t\tfield.set( 'editActive', false );\n            } );\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Fetches settings models so that we can get setting information\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldSettings',['models/app/settingCollection'], function( settingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.collection = new settingCollection( fieldSettings, { objectType: 'fields' } );\n\n\t\t\t// Responds to requests for settings models.\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:settingModel', this.getSettingModel, this );\n\t\t},\n\n\t\tgetSettingModel: function( name ) {\n\t\t\treturn this.collection.findWhere( { name: name } );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel for settings views being rendered.\n *\n * If we're rendering a product_assignment setting, add our products to the data model.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldQuantity',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for setting model init.\n\t\t\t// this.listenTo( nfRadio.channel( 'product_assignment' ), 'init:model', this.register );\n\t\t\t// Listen for messages that are fired before a setting view is rendered.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'before:renderSetting', this.beforeRenderSetting );\n\t\t},\n\n\t\tregister: function( settingModel ) {\n\t\t\t// Listen for changes to our field collection.\n\t\t\t// var fields = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t// fields.on( 'add', this.maybeUpdateProductFields, )\n\t\t},\n\n\t\tbeforeRenderSetting: function( settingModel, dataModel, view ) {\n\t\t\tif ( 'product_assignment' == settingModel.get( 'name' ) ) {\n\t\t\t\tvar productFields = this.getProductFields( settingModel );\n\t\t\t\tsettingModel.set( 'options', productFields );\n\t\t\t}\n\t\t},\n\n\t\tgetProductFields: function( settingModel ) {\n\t\t\tvar productFields = [ settingModel.get( 'select_product' ) ];\n\t\t\t// Update our dataModel with all of our product fields.\n\t\t\tvar fields = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t_.each( fields.models, function( field ) {\n\t\t\t\tif ( 'product' == field.get( 'type' ) ) {\n\t\t\t\t\tproductFields.push( { label: field.get( 'label' ), value: field.get( 'id' ) } );\n\t\t\t\t}\n\t\t\t} );\n\t\t\treturn productFields;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel for settings views being rendered.\n *\n * If we're rendering a product_assignment setting, add our products to the data model.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldShipping',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-shipping_options' ), 'render:setting', this.addMask );\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-shipping_options-option' ), 'render:setting', this.addMask );\n\t\t},\n\n\t\taddMask: function( settingModel, dataModel, view ) {\n\t\t\tjQuery( view.el ).find( '[data-id=\"value\"]' ).each( function() {\n\t\t\t\tjQuery( this ).autoNumeric({\n\t\t\t\t\taSign: '$', // TODO: Use form setting\n\t\t\t\t\taSep: thousandsSeparator,\n\t\t\t\t\taDec: decimalPoint\n\t\t\t\t});\n\t\t\t} );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * When we add a new field, update its key.\n *\n * When we change the key, update any refs to the key.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/key',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// When we add a field, update its key.\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'add:field', this.newFieldKey );\n\n\t\t\t// When we edit a label, update our key.\n\t\t\tthis.listenTo( nfRadio.channel( 'fieldSetting-label' ), 'update:setting', this.updateLabel );\n\n\t\t\t// When we edit a key, check for places that key might be used.\n\t\t\tthis.listenTo( nfRadio.channel( 'fieldSetting-key' ), 'update:setting', this.updateKey );\n\n\t\t\t// When we type inside the admin key field, we need to save our manual_key setting.\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-key' ), 'keyup:setting', this.keyUp );\n\t\t},\n\n\t\t/**\n\t\t * Add a key to our new field model.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param backbone.model model new field model\n\t\t * @return void\n\t\t */\n\t\tnewFieldKey: function( model ) {\n\t\t\tvar key = this.keyExists( model.get( 'type' ) );\n\t\t\tmodel.set( 'key', key );\n\t\t\tmodel.set( 'manual_key', false );\t\n\t\t},\n\n\t\tupdateLabel: function( model ) {\n\n\t\t\t/*\n\t\t\t * If we haven't entered a key manually, update our key when our label changes.\n\t\t\t */\n\t\t\tif ( ! model.get( 'manual_key' ) && 0 != jQuery.trim( model.get( 'label' ) ).length ) {\n\t\t\t\t/*\n\t\t\t\t * When we're editing settings, we expect the edits to fire one at a time.\n\t\t\t\t * Since we're calling this in the middle of our label update, anything that inquires about what has changed after we set our key will see both label and key.\n\t\t\t\t * We need to remove the label from our model.changed property so that all that has changed is the key.\n\t\t\t\t * \n\t\t\t\t */\n\t\t\t\tdelete model.changed.label;\n\t\t\t\tvar key = this.keyExists( model.get( 'label' ) );\n\t\t\t\tmodel.set( 'key', key );\t\t\t\t\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When a field key is updated, find any merge tags using the key and update them.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model model field model\n\t\t * @return void\n\t\t */\n\t\tupdateKey: function( dataModel ) {\n\t\t\tvar key = dataModel.get( 'key' );\n\t\t\tthis.settingModel = nfRadio.channel( 'fields' ).request( 'get:settingModel', 'key' );\n\t\t\tthis.setError( key, dataModel );\n\t\t},\n\n\t\tkeyUp: function( e, settingModel, dataModel ) {\n\t\t\tdataModel.set( 'manual_key', true );\n\t\t\tthis.settingModel = settingModel;\n\t\t\tvar key = jQuery( e.target ).val();\n\t\t\tthis.setError( key, dataModel );\n\t\t},\n\n\t\tsetError: function( key, dataModel ) {\n\t\t\tvar error = false;\n\t\t\tif ( '' == jQuery.trim( key ) ) {\n\t\t\t\terror = 'Field keys can\\'t be empty. Please enter a key.';\n\t\t\t} else if ( key != this.keyExists( key, dataModel ) ) {\n\t\t\t\terror = 'Field keys must be unique. Please enter another key.'\n\t\t\t}\n\n\t\t\tif ( error ) {\n\t\t\t\tthis.settingModel.set( 'error', error );\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'update:fieldKey', dataModel );\n\t\t\t\tthis.settingModel.set( 'error', false );\n\t\t\t}\n\t\t},\n\n\t\tkeyExists: function( key, dataModel ) {\n\t\t\tkey = jQuery.slugify( key );\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tvar x = 1;\n\t\t\tvar testKey = key;\n\t\t\t_.each( fieldCollection.models, function( field ) {\n\t\t\t\tif ( dataModel != field && testKey == field.get( 'key' ) ) {\n\t\t\t\t\ttestKey = key + '-' + x;\n\t\t\t\t\tx++;\n\t\t\t\t}\n\t\t\t} );\n\t\t\tkey = testKey;\n\n\t\t\treturn key;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Creates and stores a collection of action types. This includes all of the settings shown when editing a field.\n *\n * Loops over our preloaded data and adds that to our action type collection\n *\n * Also responds to requests for data about action types\n *\n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/types',[\n\t'models/app/typeCollection',\n\t'models/app/settingCollection',\n\t'models/app/settingGroupCollection',\n\t], function(\n\ttypeCollection,\n\tsettingCollection,\n\tsettingGroupCollection\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our field type collection\n\t\t\tthis.installedActions = new typeCollection();\n\t\t\tthis.installedActions.slug = 'installed';\n\t\t\tthis.installedActions.nicename = 'Installed';\n\t\t\tthis.availableActions = new typeCollection();\n\t\t\tthis.availableActions.slug = 'available';\n\t\t\tthis.availableActions.nicename = 'Available';\n\n\t\t\tvar that = this;\n\t\t\t_.each( actionTypeData, function( type ) {\n\t\t\t\tvar settingGroups = new settingGroupCollection();\n\t\t\t\t// Loop through the settings groups within this field type and create an object to add to the groups collection.\n\t\t\t\t_.each( type.settingGroups, function( group ) {\n\t\t\t\t\tvar groupTmp = {\n\t\t\t\t\t\tlabel: group.label,\n\t\t\t\t\t\tdisplay: group.display,\n\t\t\t\t\t\tsettings: new settingCollection( group.settings ),\n\t\t\t\t\t}\n\t\t\t\t\t// Add the tmp object to our setting groups collection\n\t\t\t\t\tsettingGroups.add( groupTmp );\n\t\t\t\t} );\n\n\t\t\t\t// Build an object for this type that we can add to our field type collection\n\t\t\t\tvar actionType = {\n\t\t\t\t\tid: type.id,\n\t\t\t\t\tnicename: type.nicename,\n\t\t\t\t\talias: type.alias,\n\t\t\t\t\tsettingGroups: settingGroups,\n\t\t\t\t\tsettingDefaults: type.settingDefaults,\n\t\t\t\t\timage: type.image,\n\t\t\t\t\tlink: type.link,\n\t\t\t\t\tsection: type.section\n\t\t\t\t}\n\n\t\t\t\t// Add tmp object to the appropriate collection (either installed or available)\n\t\t\t\tthat[ type.section + 'Actions' ].add( actionType );\n\t\t\t} );\n\n\t\t\t// Respond to requests to get field type, collection, settings, and sections\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:type', this.getType, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:installedActions', this.getInstalledActions, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:availableActions', this.getAvailableActions, this );\n\t\t},\n\n\t\t/**\n\t\t * Return a field type by id\n\t\t *\n\t\t * @since  3.0\n\t\t * @param  string \t\t\tid \tfield type\n\t\t * @return backbone.model    \tfield type model\n\t\t */\n\t\tgetType: function( id ) {\n\t\t\t// Search our installed actions first\n\t\t\tvar type = this.installedActions.get( id );\n\t\t\tif ( ! type ) {\n\t\t\t\ttype = this.availableActions.get( id );\n\t\t\t}\n        \treturn type;\n        },\n\n        /**\n         * Return the installed action type collection\n         *\n         * @since  3.0\n         * @return backbone.collection    \tfield type collection\n         */\n\t\tgetInstalledActions: function() {\n        \treturn this.installedActions;\n        },\n\n        /**\n         * Return the available action type collection\n         *\n         * @since  3.0\n         * @return backbone.collection    \tfield type collection\n         */\n\t\tgetAvailableActions: function() {\n        \treturn this.availableActions;\n        },\n\n        /**\n         * Add a field type to our staging area when the field type button is clicked.\n         *\n         * @since 3.0\n         * @param Object e event\n         * @return void\n         */\n        addStagedField: function( e ) {\n        \tvar type = jQuery( e.target ).data( 'id' );\n        \tnfRadio.channel( 'fields' ).request( 'add:stagedField', type );\n        },\n\n        /**\n         * Return our field type settings sections\n         *\n         * @since  3.0\n         * @return backbone.collection field type settings sections\n         */\n        getTypeSections: function() {\n            return this.fieldTypeSections;\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Model that represents our form action.\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/actions/actionModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tobjectType: 'Action',\n\t\t\tobjectDomain: 'actions',\n\t\t\teditActive: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Listen for model attribute changes\n\t\t\tthis.bind( 'change', this.changeSetting, this );\n\n\t\t\t// Get our parent field type.\n\t\t\tvar actionType = nfRadio.channel( 'actions' ).request( 'get:type', this.get( 'type' ) );\n\n\t\t\t// Loop through our action type \"settingDefaults\" and add any default settings.\n\t\t\tvar that = this;\n\t\t\t_.each( actionType.get( 'settingDefaults' ), function( val, key ) {\n\t\t\t\tif ( ! that.get( key ) ) {\n\t\t\t\t\tthat.set( key, val );\n\t\t\t\t}\n\t\t\t} );\n\t\t\t\n\t\t\t/*\n\t\t\t * Trigger an init event on three channels:\n\t\t\t * \n\t\t\t * actions\n\t\t\t * action-type\n\t\t\t *\n\t\t\t * This lets specific field types modify model attributes before anything uses them.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'actions' ).trigger( 'init:fieldModel', this );\n\t\t\tnfRadio.channel( 'actions-' + this.get( 'type' ) ).trigger( 'init:fieldModel', this );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'actions' ), 'update:fieldKey', this.updateFieldKey );\n\t\t},\n\n\t\t/**\n\t\t * When we change the model attributes, fire an event saying we've changed something.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tchangeSetting: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'update:setting', this );\n\t\t},\n\n\t\tupdateFieldKey: function( keyModel, settingModel ) {\n\t\t\tnfRadio.channel( 'app' ).request( 'replace:fieldKey', this, keyModel, settingModel );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our action models. \n * This is the actual action data created by the user.\n *\n * We listen to the add and remove events so that we can push the new id to either the new action or removed action property.\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/actions/actionCollection',['models/actions/actionModel'], function( actionModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: actionModel,\n\t\tcomparator: 'order',\n\t\ttmpNum: 1,\n\n\t\tinitialize: function() {\n\t\t\tthis.on( 'add', this.addAction, this );\n\t\t\tthis.on( 'remove', this.removeAction, this );\n\t\t\tthis.newIDs = [];\n\t\t},\n\n\t\t/**\n\t\t * When we add a field, push the id onto our new action property.\n\t\t * This lets us tell the server that this is a new field to be added rather than a field to be updated.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param void\n\t\t */\n\t\taddAction: function( model ) {\n\t\t\tthis.newIDs.push( model.get( 'id' ) );\n\t\t},\n\n\t\t/**\n\t\t * When we remove a field, push the id onto our removed action property.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param void\n\t\t */\n\t\tremoveAction: function( model ) {\n\t\t\tthis.removedIDs[ model.get( 'id' ) ] = model.get( 'id' );\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Handles interactions with our actions collection.\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/data',['models/actions/actionCollection', 'models/actions/actionModel'], function( actionCollection, actionModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Load our action collection from our localized form data\n\t\t\tthis.collection = new actionCollection( preloadedFormData.actions );\n\t\t\t// Set our removedIDs to an empty object. This will be populated when a action is removed so that we can add it to our 'deleted_actions' object.\n\t\t\tthis.collection.removedIDs = {};\n\n\t\t\t// Respond to requests for data about actions and to update/change/delete actions from our collection.\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:collection', this.getCollection, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:action', this.getAction, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:tmpID', this.getTmpID, this );\n\n\t\t\tnfRadio.channel( 'actions' ).reply( 'add', this.addAction, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'delete', this.deleteAction, this );\n\t\t},\n\n\t\tgetCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tgetAction: function( id ) {\n\t\t\treturn this.collection.get( id );\n\t\t},\n\n\t\t/**\n\t\t * Add a action to our collection. If silent is passed as true, no events will trigger.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param Object \tdata \taction data to insert\n\t\t * @param bool \t\tsilent \tprevent events from firing as a result of adding\t \t\n\t\t */\n\t\taddAction: function( data, silent ) {\n\t\t\tsilent = silent || false;\n\t\t\tif ( false === data instanceof Backbone.Model ) {\n\t\t\t\tvar model = new actionModel( data );\n\t\t\t} else {\n\t\t\t\tvar model = data;\n\t\t\t}\n\n\t\t\tthis.collection.add( model, { silent: silent } );\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\n\t\t\treturn model;\n\t\t},\n\n\t\t/**\n\t\t * Delete a action from our collection.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tmodel \taction model to be deleted\n\t\t * @return void\n\t\t */\n\t\tdeleteAction: function( model ) {\n\t\t\tthis.collection.remove( model );\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t},\n\n\n\t\t/**\n\t\t * Return a new tmp id for our actions.\n\t\t * Gets the action collection length, adds 1, then returns that prepended with 'tmp-'.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return string\n\t\t */\n\t\tgetTmpID: function() {\n\t\t\tvar tmpNum = this.collection.tmpNum;\n\t\t\tthis.collection.tmpNum++;\n\t\t\treturn 'tmp-' + tmpNum;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Fetches settings models so that we can get setting information\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/actionSettings',['models/app/settingCollection'], function( settingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.collection = new settingCollection( actionSettings, { objectType: 'actions' } );\n\n\t\t\t// Responds to requests for settings models.\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:settingModel', this.getSettingModel, this );\n\t\t},\n\n\t\tgetSettingModel: function( name ) {\n\t\t\treturn this.collection.findWhere( { name: name } );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles adding and removing the active class from a action currently being edited.\n * \n * @package Ninja Forms builder\n * @subpackage Actions - Edit Action Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/editActive',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests to remove the active class from all our actions.\n\t\t\tnfRadio.channel( 'actions' ).reply( 'clear:editActive', this.clearEditActive, this );\n\t\t\t// Listen for the closing drawer so that we can remove all of our active classes.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-editSettings' ), 'before:closeDrawer', this.clearEditActive );\n\t\t},\n\n\t\t/**\n\t\t * Loops through our actions collection and sets editActive to false.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n        clearEditActive: function() {\n            var actionCollection = nfRadio.channel( 'actions' ).request( 'get:collection' );\n            _.each( actionCollection.models, function( action ) {\n\t\t\t\taction.set( 'editActive', false );\n            } );\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Handles clicks and dragging for our action types.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/addActionTypes',['models/actions/actionCollection', 'models/actions/actionModel'], function( actionCollection, actionModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'actions' ), 'click:addAction', this.addAction );\n\n\t\t\tnfRadio.channel( 'actions' ).reply( 'add:actionType', this.addAction, this );\n\t\t},\n\n\t\t/**\n\t\t * Add an action to our collection. If silent is passed as true, no events will trigger.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param Object \tdata \taction data to insert\n\t\t * @param bool \t\tsilent \tprevent events from firing as a result of adding\t \t\n\t\t */\n\t\taddAction: function( type ) {\n\t\t\tvar data = {\n\t\t\t\tid: nfRadio.channel( 'actions' ).request( 'get:tmpID' ),\n\t\t\t\ttype: type.get( 'id' ),\n\t\t\t\tlabel: type.get( 'nicename' )\n\t\t\t}\n\t\t\tvar newModel = nfRadio.channel( 'actions' ).request( 'add', data );\n\t\t\tvar label = {\n\t\t\t\tobject: 'Action',\n\t\t\t\tlabel: newModel.get( 'label' ),\n\t\t\t\tchange: 'Added',\n\t\t\t\tdashicon: 'plus-alt'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: nfRadio.channel( 'actions' ).request( 'get:collection' )\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addObject', newModel, null, label, data );\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:edit', {}, newModel );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles the logic for our action type draggables.\n * \n * @package Ninja Forms builder\n * @subpackage Actions - New Action Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/typeDrag',[], function( ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our action type draggables and run the appropriate function.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addAction' ), 'startDrag:type', this.startDrag );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addAction' ), 'stopDrag:type', this.stopDrag );\n\t\t\t/*\n\t\t\t * Respond to requests for our helper clone.\n\t\t\t * This is used by other parts of the application to modify what the user is dragging in real-time.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'drawer-addAction' ).reply( 'get:typeHelperClone', this.getCurrentDraggableHelperClone, this );\n\t\t},\n\n\t\t/**\n\t\t * When we start dragging:\n\t\t * get our drawer element\n\t\t * set its overflow property to visible !important -> forces the type drag element to be on at the top of the z-index.\n\t\t * get our main element\n\t\t * est its overflow propery to visible !important -> forces the type drag element to be on top of the z-index.\n\t\t * set our dragging helper clone\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  object context \tThis function is going to be called from a draggable. Context is the \"this\" reference to the draggable.\n\t\t * @param  object ui      \tObject sent by jQuery UI draggable.\n\t\t * @return void\n\t\t */\n\t\tstartDrag: function( context, ui ) {\n\t\t\tthis.drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tthis.mainEl = nfRadio.channel( 'app' ).request( 'get:mainEl' );\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\n\t\t\tthis.draggableHelperClone = jQuery( ui.helper ).clone();\n\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging, reset our overflow property to hidden !important.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  object context \tThis function is going to be called from a draggable. Context is the \"this\" reference to the draggable.\n\t\t * @param  object ui      \tObject sent by jQuery UI draggable.\n\t\t * @return {[type]}         [description]\n\t\t */\n\t\tstopDrag: function( context, ui ) {\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t},\n\n\t\tgetCurrentDraggableHelperClone: function() {\n\t\t\treturn this.draggableHelperClone;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles the logic for our action type droppable.\n * \n * @package Ninja Forms builder\n * @subpackage Actions - New Action Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/droppable',[], function( ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Respond to requests for our helper clone.\n\t\t\t * This is used by other parts of the application to modify what the user is dragging in real-time.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'app' ).reply( 'drop:actionType', this.dropActionType, this );\n\t\t},\n\n\t\tdropActionType: function( e, ui ) {\n\t\t\tvar type_slug = jQuery( ui.helper ).data( 'type' );\n\t\t\tvar type = nfRadio.channel( 'actions' ).request( 'get:type', type_slug );\n\t\t\tnfRadio.channel( 'actions' ).request( 'add:actionType', type );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model for our action type\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/actions/typeModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our action type models. \n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/actions/typeCollection',['models/actions/typeModel'], function( actionTypeModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: actionTypeModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Filters our action type collection.\n * \n * @package Ninja Forms builder\n * @subpackage Actions - New Action Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/filterTypes',['models/actions/typeCollection'], function( typeCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our change filter event.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addAction' ), 'change:filter', this.filterActionTypes );\n\t\t},\n\n\t\t/**\n\t\t * Filter our action types in the add new action drawer\n\t\t * \n\t\t * Takes a search string and finds any action types that match either the name or alias.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string\t search \tstring being searched for\n\t\t * @param  object \t e      \tKeyup event\n\t\t * @return void\n\t\t */\n\t\tfilterActionTypes: function( search, e ) {\n\n\t\t\t// Make sure that we aren't dealing with an empty string.\n\t\t\tif ( '' != jQuery.trim( search ) ) {\n\n        \t\tvar filteredInstalled = [];\n        \t\t/**\n        \t\t * Call the function that actually filters our collection,\n        \t\t * and then loop through our collection, adding each model to our filteredInstalled array.\n        \t\t */\n\t\t\t\tvar installedActions = nfRadio.channel( 'actions' ).request( 'get:installedActions' );\n        \t\t_.each( this.filterCollection( search, installedActions ), function( model ) {\n        \t\t\tfilteredInstalled.push( model );\n        \t\t} );\n\n        \t\tvar filteredAvailable = [];\n        \t\tvar availableActions = nfRadio.channel( 'actions' ).request( 'get:availableActions' );\n        \t\t_.each( this.filterCollection( search, availableActions ), function( model ) {\n        \t\t\tfilteredAvailable.push( model );\n        \t\t} );\n\n        \t\t// Create a new Action Type Section collection with the filtered array.\n        \t\tvar newInstalled = new typeCollection( filteredInstalled );\n        \t\tnewInstalled.slug = 'installed';\n        \t\tnewInstalled.nicename = 'Installed';\n\n        \t\tvar newAvailable = new typeCollection( filteredAvailable );\n        \t\tnewAvailable.slug = 'available';\n        \t\tnewAvailable.nicename = 'Available';\n\n        \t\t// Request that our action types filter be applied, passing the collection we created above.\n        \t\tnfRadio.channel( 'drawer' ).trigger( 'filter:actionTypes', newInstalled, newAvailable );\n        \t\t// If we've pressed the 'enter' key, add the action to staging and clear the filter.\n        \t\tif ( e.addObject ) {\n        \t\t\tif ( 0 < newInstalled.length ) {\n        \t\t\t\tnfRadio.channel( 'actions' ).request( 'add:actionType', newInstalled.models[0] );\n        \t\t\t\tnfRadio.channel( 'drawer' ).request( 'clear:filter' );\n        \t\t\t}\n        \t\t}\n        \t} else {\n        \t\t// Clear our filter if the search text is empty.\n        \t\tnfRadio.channel( 'drawer' ).trigger( 'clear:filter' );\n        \t}\n        },\n\n        /**\n         * Search our action type collection for the search string.\n         * \n         * @since  3.0\n         * @param  string\t search \tstring being searched for\n         * @return backbone.collection\n         */\n        filterCollection: function( search, collection ) {\n        \tsearch = search.toLowerCase();\n        \t/*\n        \t * Backbone collections have a 'filter' method that loops through every model,\n        \t * waiting for you to return true or false. If you return true, the model is kept.\n        \t * If you return false, it's removed from the filtered result.\n        \t */\n\t\t\tvar filtered = collection.filter( function( model ) {\n\t\t\t\tvar found = false;\n\t\t\t\t\n\t\t\t\t// If we match either the ID or nicename, return true.\n\t\t\t\tif ( model.get( 'id' ).toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t} else if ( model.get( 'nicename' ).toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * TODO: Hashtag searching. Doesn't really do anything atm.\n\t\t\t\t */\n\t\t\t\tif ( model.get( 'tags' ) && 0 == search.indexOf( '#' ) ) {\n\t\t\t\t\t_.each( model.get( 'tags' ), function( tag ) {\n\t\t\t\t\t\tif ( search.replace( '#', '' ).length > 1 ) {\n\t\t\t\t\t\t\tif ( tag.toLowerCase().indexOf( search.replace( '#', '' ) ) != -1 ) {\n\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// If we match any of the aliases, return true.\n\t\t\t\tif ( model.get( 'alias' ) ) {\n\t\t\t\t\t_.each( model.get( 'alias' ), function( alias ) {\n\t\t\t\t\t\tif ( alias.toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\treturn found;\n\t\t\t} );\n\n\t\t\t// Return our filtered collection.\n\t\t\treturn filtered;\n        }\n\t});\n\n\treturn controller;\n} );\n","/**\n * Creates and stores a collection of form setting types. This includes all of the settings shown when editing a field.\n *\n * Loops over our preloaded data and adds that to our form setting type collection\n *\n * Also responds to requests for data about form setting types\n *\n * @package Ninja Forms builder\n * @subpackage Form Settings\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/settings/types',[\n\t'models/app/typeCollection',\n\t'models/app/settingCollection',\n\t'models/app/settingGroupCollection',\n\t], function(\n\ttypeCollection,\n\tsettingCollection,\n\tsettingGroupCollection\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our field type collection\n\t\t\tthis.collection = new typeCollection();\n\n\t\t\tvar that = this;\n\t\t\t_.each( formSettingTypeData, function( type ) {\n\t\t\t\tvar settingGroups = new settingGroupCollection();\n\t\t\t\t// Loop through the settings groups within this field type and create an object to add to the groups collection.\n\t\t\t\t_.each( type.settingGroups, function( group ) {\n\t\t\t\t\tvar groupTmp = {\n\t\t\t\t\t\tlabel: group.label,\n\t\t\t\t\t\tdisplay: group.display,\n\t\t\t\t\t\tsettings: new settingCollection( group.settings ),\n\t\t\t\t\t}\n\t\t\t\t\t// Add the tmp object to our setting groups collection\n\t\t\t\t\tsettingGroups.add( groupTmp );\n\t\t\t\t} );\n\n\t\t\t\t// Build an object for this type that we can add to our field type collection\n\t\t\t\tvar settingType = {\n\t\t\t\t\tid: type.id,\n\t\t\t\t\tnicename: type.nicename,\n\t\t\t\t\talias: type.alias,\n\t\t\t\t\tsettingGroups: settingGroups,\n\t\t\t\t\tsettingDefaults: type.settingDefaults,\n\t\t\t\t\teditActive: false\n\t\t\t\t}\n\n\t\t\t\t// Add tmp object to the appropriate collection (either installed or available)\n\t\t\t\tthat.collection.add( settingType );\n\t\t\t} );\n\n\t\t\t// Respond to requests to get field type, collection, settings, and sections\n\t\t\tnfRadio.channel( 'settings' ).reply( 'get:type', this.getType, this );\n\t\t\tnfRadio.channel( 'settings' ).reply( 'get:typeCollection', this.getCollection, this );\n\t\t},\n\n\t\t/**\n\t\t * Return a field type by id\n\t\t *\n\t\t * @since  3.0\n\t\t * @param  string \t\t\tid \tfield type\n\t\t * @return backbone.model    \tfield type model\n\t\t */\n\t\tgetType: function( id ) {\n\t\t\treturn this.collection.get( id );\n        },\n\n        /**\n         * Return the installed action type collection\n         *\n         * @since  3.0\n         * @return backbone.collection    \tfield type collection\n         */\n\t\tgetCollection: function() {\n        \treturn this.collection;\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Model that represents our form settings.\n * \n * @package Ninja Forms builder\n * @subpackage Form Settings\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/settings/settingsModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tobjectType: 'Form Setting',\n\t\t\teditActive: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Listen for model attribute changes\n\t\t\tthis.bind( 'change', this.changeSetting, this );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'settings' ), 'update:fieldKey', this.updateFieldKey );\n\t\t},\n\n\t\t/**\n\t\t * When we change the model attributes, fire an event saying we've changed something.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tchangeSetting: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'update:setting', this );\n\t\t},\n\n\t\tupdateFieldKey: function( keyModel, settingModel ) {\n\t\t\tnfRadio.channel( 'app' ).request( 'replace:fieldKey', this, keyModel, settingModel );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Handles interactions with our form settings collection.\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/settings/data',['models/settings/settingsModel'], function( settingsModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Load our action collection from our localized form data\n\t\t\tthis.model = new settingsModel( preloadedFormData.settings );\n\t\t\tnfRadio.channel( 'settings' ).reply( 'get:settings', this.getSettings, this );\n\t\t},\n\n\t\tgetSettings: function() {\n\t\t\treturn this.model;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Fetches settings models so that we can get setting information\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/settings/formSettings',['models/app/settingCollection'], function( settingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.collection = new settingCollection( formSettings, { objectType: 'settings' } );\n\n\t\t\t// Responds to requests for settings models.\n\t\t\tnfRadio.channel( 'settings' ).reply( 'get:settingModel', this.getSettingModel, this );\n\t\t},\n\n\t\tgetSettingModel: function( name ) {\n\t\t\treturn this.collection.findWhere( { name: name } );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles adding and removing the active class from form settings currently being edited.\n * \n * @package Ninja Forms builder\n * @subpackage Form Settings\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/settings/editActive',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests to remove the active class from all our fields.\n\t\t\tnfRadio.channel( 'settings' ).reply( 'clear:editActive', this.clearEditActive, this );\n\t\t\t// Listen for the closing drawer so that we can remove all of our active classes.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-editSettings' ), 'before:closeDrawer', this.clearEditActive );\n\t\t},\n\n\t\t/**\n\t\t * Loops through our fields collection and sets editActive to false.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n        clearEditActive: function() {\n            var collection = nfRadio.channel( 'settings' ).request( 'get:typeCollection' );\n            _.each( collection.models, function( field ) {\n\t\t\t\tfield.set( 'editActive', false );\n            } );\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Listens for clicks on our form settings sections.\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/settings/clickEdit',['models/settings/settingsModel'], function( settingsModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'settings' ), 'click:edit', this.clickEdit );\n\t\t},\n\n\t\tclickEdit: function( e, typeModel ) {\n\t\t\tnfRadio.channel( 'settings' ).request( 'clear:editActive' );\n\t\t\ttypeModel.set( 'editActive', true );\n\n\t\t\tvar model = nfRadio.channel( 'settings' ).request( 'get:settings' );\n\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'editSettings', { model: model, groupCollection: typeModel.get( 'settingGroups' ) } );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Loads all of our controllers using Require JS.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine(\n\t'controllers/loadControllers',[\n\t\t/*\n\t\t * Application controllers\n\t\t */\n\t\t'controllers/app/drawer',\n\t\t'controllers/app/drawerConfig',\t\t\n\t\t'controllers/app/domainConfig',\n\t\t'controllers/app/data',\t\t\n\t\t'controllers/app/drawerToggleSettingGroup',\n\t\t'controllers/app/updateDB',\n\t\t'controllers/app/formData',\n\t\t'controllers/app/previewLink',\n\t\t'controllers/app/menuButtons',\n\t\t'controllers/app/trackChanges',\n\t\t'controllers/app/undoChanges',\n\t\t'controllers/app/publishResponse',\n\t\t'controllers/app/changeDomain',\n\t\t'controllers/app/pushstate',\n\t\t'controllers/app/hotkeys',\n\t\t'controllers/app/cleanState',\n\t\t'controllers/app/coreUndo',\n\t\t'controllers/app/cloneModelDeep',\n\t\t'controllers/app/getSettingChildView',\n\t\t'controllers/app/changeSettingDefault',\n\t\t'controllers/app/fieldset',\n\t\t'controllers/app/toggleSetting',\n\t\t'controllers/app/itemControls',\n\t\t'controllers/app/mergeTags',\n\t\t'controllers/app/itemSettingFill',\n\t\t/*\n\t\t * Fields domain controllers\n\t\t */\n\t\t'controllers/fields/types',\n\t\t'controllers/fields/fieldTypeDrag',\n\t\t'controllers/fields/stagingDrag',\n\t\t'controllers/fields/savedFieldsSection',\n\t\t'controllers/fields/staging',\n\t\t'controllers/fields/stagingSortable',\n\t\t'controllers/fields/filterTypes',\n\t\t'controllers/fields/sortable',\n\t\t'controllers/fields/data',\n\t\t'controllers/fields/optionRepeater',\n\t\t'controllers/fields/editActive',\n\t\t'controllers/fields/fieldSettings',\n\t\t'controllers/fields/fieldQuantity',\n\t\t'controllers/fields/fieldShipping',\n\t\t'controllers/fields/key',\n\n\t\t/*\n\t\t * TODO: Actions domain controllers\n\t\t */\n\t\t'controllers/actions/types',\n\t\t'controllers/actions/data',\n\t\t'controllers/actions/actionSettings',\n\t\t'controllers/actions/editActive',\n\t\t'controllers/actions/addActionTypes',\n\t\t'controllers/actions/typeDrag',\n\t\t'controllers/actions/droppable',\n\t\t'controllers/actions/filterTypes',\n\n\t\t/*\n\t\t * TODO: Settings domain controllers\n\t\t */\n\t\t'controllers/settings/types',\n\t\t'controllers/settings/data',\n\t\t'controllers/settings/formSettings',\n\t\t'controllers/settings/editActive',\n\t\t'controllers/settings/clickEdit'\n\t],\n\tfunction(\n\t\t/*\n\t\t * Application controllers\n\t\t */\n\t\tDrawer,\n\t\tDrawerConfig,\n\t\tDomainConfig,\n\t\tAppData,\n\t\tDrawerToggleSettingGroup,\n\t\tUpdateDB,\n\t\tFormData,\n\t\tPreviewLink,\n\t\tAppMenuButtons,\n\t\tAppTrackChanges,\n\t\tAppUndoChanges,\n\t\tAppPublishResponse,\n\t\tAppChangeDomain,\n\t\tPushstate,\n\t\tHotkeys,\n\t\tCleanState,\n\t\tCoreUndo,\n\t\tCloneModelDeep,\n\t\tDrawerSettingChildView,\n\t\tChangeSettingDefault,\n\t\tFieldset,\n\t\tToggleSetting,\n\t\tItemControls,\n\t\tMergeTags,\n\t\tItemSettingFill,\n\t\t/*\n\t\t * Fields domain controllers\n\t\t */\n\t\tFieldTypes,\n\t\tFieldTypeDrag,\n\t\tFieldStagingDrag,\n\t\tSavedFields,\n\t\tStagedFieldsData,\n\t\tStagedFieldsSortable,\n\t\tDrawerFilterFieldTypes,\n\t\tMainContentFieldsSortable,\n\t\tFieldData,\n\t\tOptionRepeater,\n\t\tFieldsEditActive,\n\t\tFieldSettings,\n\t\tFieldQuantity,\n\t\tFieldShipping,\n\t\tFieldKey,\n\t\t/*\n\t\t * TODO: Actions domain controllers\n\t\t */\n\t\tActionTypes,\n\t\tActionData,\n\t\tActionSettings,\n\t\tActionEditActive,\n\t\tActionAddTypes,\n\t\tActionTypeDrag,\n\t\tActionDroppable,\n\t\tActionFilterTypes,\n\t\t/*\n\t\t * TODO: Settings domain controllers\n\t\t */\n\t\tSettingTypes,\n\t\tSettingData,\n\t\tFormSettings,\n\t\tSettingsEditActive,\n\t\tSettingsClickEdit\n\t\t\n\t) {\n\t\tvar controller = Marionette.Object.extend( {\n\t\t\tinitialize: function() {\n\t\t\t\t/*\n\t\t\t\t * Application controllers\n\t\t\t\t */\n\t\t\t\tnew Hotkeys();\n\t\t\t\tnew Drawer();\n\t\t\t\tnew DrawerConfig();\n\t\t\t\tnew DomainConfig();\n\t\t\t\tnew DrawerToggleSettingGroup();\n\t\t\t\tnew UpdateDB();\n\t\t\t\tnew PreviewLink();\n\t\t\t\tnew AppMenuButtons();\n\t\t\t\tnew AppTrackChanges();\n\t\t\t\tnew AppUndoChanges();\n\t\t\t\tnew AppPublishResponse();\n\t\t\t\tnew AppChangeDomain();\n\t\t\t\tnew CleanState();\n\t\t\t\tnew CoreUndo();\n\t\t\t\tnew CloneModelDeep();\n\t\t\t\tnew ItemControls();\n\t\t\t\t// new Pushstate();\n\t\t\t\t/*\n\t\t\t\t * Fields domain controllers\n\t\t\t\t * \n\t\t\t\t * Field-specific controllers should be loaded before our field type controller.\n\t\t\t\t * This ensures that any 'init' hooks are properly registered.\n\t\t\t\t */\n\t\t\t\tnew Fieldset();\n\t\t\t\tnew OptionRepeater();\n\n\t\t\t\tnew FieldTypes();\n\t\t\t\tnew FieldTypeDrag();\n\t\t\t\tnew FieldStagingDrag();\n\t\t\t\tnew SavedFields();\n\t\t\t\tnew StagedFieldsData();\n\t\t\t\tnew StagedFieldsSortable();\n\t\t\t\tnew DrawerFilterFieldTypes();\n\t\t\t\tnew MainContentFieldsSortable();\n\t\t\t\tnew ChangeSettingDefault();\n\t\t\t\tnew ToggleSetting();\n\t\t\t\tnew DrawerSettingChildView();\n\t\t\t\tnew FieldsEditActive();\n\t\t\t\tnew FieldSettings();\n\t\t\t\tnew FieldQuantity();\n\t\t\t\tnew FieldShipping();\n\t\t\t\tnew FieldKey();\n\t\t\t\t/*\n\t\t\t\t * TODO: Actions domain controllers\n\t\t\t\t */\n\t\t\t\tnew ActionTypes();\n\t\t\t\tnew ActionData();\n\t\t\t\tnew ActionSettings();\n\t\t\t\tnew ActionEditActive();\n\t\t\t\tnew ActionAddTypes();\n\t\t\t\tnew ActionTypeDrag();\n\t\t\t\tnew ActionDroppable();\n\t\t\t\tnew ActionFilterTypes();\n\t\t\t\t/*\n\t\t\t\t * TODO: Settings domain controllers\n\t\t\t\t */\n\t\t\t\tnew SettingTypes();\n\t\t\t\tnew FormSettings();\n\t\t\t\tnew SettingData();\n\t\t\t\tnew SettingsEditActive();\n\t\t\t\tnew SettingsClickEdit();\n\t\t\t\t/*\n\t\t\t\t * Data controllers need to be set after every other controller has been setup, even if they aren't domain-specific.\n\t\t\t\t * AppData() was after FormData();\n\t\t\t\t */\n\t\t\t\tnew AppData();\n\t\t\t\tnew FieldData();\n\t\t\t\tnew FormData();\n\t\t\t\tnew MergeTags();\n\t\t\t\tnew ItemSettingFill();\n\t\t\t}\n\t\t});\n\n\t\treturn controller;\n} );\n\n","require.config( {\n\tbaseUrl: nfAdmin.requireBaseUrl + '/builder/'\n} );\n\nvar nfRadio = Backbone.Radio;\n\njQuery( document ).ready( function( $ ) {\n\trequire( ['views/app/builder', 'controllers/loadControllers'], function( BuilderView, LoadControllers ) {\n\n\t\tvar NinjaForms = Marionette.Application.extend( {\n\n\t\t\tinitialize: function( options ) {\n\t\t\t\t// Trigger an event before we load our controllers.\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'before:loadControllers', this );\n\t\t\t\t// Load our controllers.\n\t\t\t\tvar loadControllers = new LoadControllers();\n\t\t\t\t// Trigger an event after we load our controllers.\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'after:loadControllers', this );\n\t\t\t},\n\n\t\t\tonStart: function() {\n\t\t\t\tvar builderView = new BuilderView();\n\n\t\t\t\t// Setup our default domain\n\t\t\t\t// var currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\n\t\t\t\t// var appDomains = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\t\t// var defaultDomain = appDomains.get( 'fields' );\n\t\t\t\t// nfRadio.channel( 'app' ).trigger( 'click:menu', {}, defaultDomain );\n\n\t\t\t\t// Trigger our after start event.\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'after:appStart', this );\n\t\t\t\t// nfUndoManager.startTracking();\t\n\t\t\t}\n\t\t} );\n\t\n\t\tvar ninjaForms = new NinjaForms();\n\t\tninjaForms.start();\n\t} );\n} );\ndefine(\"main\", function(){});\n\n"],"sourceRoot":"/source/"}