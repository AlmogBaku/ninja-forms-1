{"version":3,"sources":["../../../config-wrap-start-default.js","../lib/almond.js","models/fieldErrorModel.js","models/fieldErrorCollection.js","models/fieldModel.js","models/fieldCollection.js","models/formErrorModel.js","models/formErrorCollection.js","models/formModel.js","models/formCollection.js","controllers/formData.js","controllers/fieldError.js","controllers/changeField.js","controllers/changeEmail.js","controllers/fieldCheckbox.js","controllers/fieldCheckboxList.js","controllers/fieldRadio.js","controllers/fieldNumber.js","controllers/mirrorField.js","controllers/confirmField.js","controllers/updateFieldModel.js","controllers/submitButton.js","controllers/submitDebug.js","controllers/getFormErrors.js","controllers/validateRequired.js","controllers/submitError.js","controllers/actionRedirect.js","controllers/actionSuccess.js","controllers/fieldSelect.js","controllers/coreSubmitResponse.js","controllers/fieldProduct.js","controllers/fieldTotal.js","controllers/fieldQuantity.js","models/calcModel.js","models/calcCollection.js","controllers/calculations.js","controllers/fieldDate.js","controllers/fieldRecaptcha.js","controllers/helpText.js","controllers/fieldTextareaRTE.js","controllers/fieldStarRating.js","controllers/fieldTerms.js","controllers/formContentFilters.js","views/fieldItem.js","views/beforeField.js","views/fieldErrorItem.js","views/fieldErrorCollection.js","views/inputLimit.js","views/afterField.js","views/fieldLayout.js","controllers/loadViews.js","controllers/formErrors.js","controllers/submit.js","views/fieldCollection.js","controllers/defaultFilters.js","controllers/uniqueFieldError.js","controllers/loadControllers.js","views/beforeForm.js","views/formErrorItem.js","views/formErrorCollection.js","views/honeyPot.js","views/afterFormContent.js","views/beforeFormContent.js","views/formLayout.js","views/afterForm.js","views/mainLayout.js","main.js"],"names":["requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","Backbone","Model","extend","errorModel","Collection","model","fieldErrorCollection","defaults","placeholder","label_pos","classes","reRender","mirror_field","confirm_field","clean","disabled","visible","invalid","initialize","this","set","collection","options","formModel","get","listenTo","nfRadio","channel","resetModel","bind","changeModel","changeValue","trigger","formLoaded","beforeSubmit","addWrapperClass","cl","removeWrapperClass","setInvalid","fieldModel","comparator","models","on","fieldCollection","validateFields","_","each","showFields","invoke","hideFields","FieldCollection","ErrorCollection","beforeForm","afterForm","beforeFields","afterFields","wrapper_class","element_class","hp","fieldErrors","extra","setting","formContentData","formContentLoadFilters","request","sortedArray","without","first","reply","getFieldByKey","addError","removeError","getExtra","addExtra","removeExtra","getForm","key","findWhere","msg","add","errors","remove","extraData","FormModel","FormCollection","Marionette","nfForms","getForms","getField","form","fieldErrorModel","getError","targetID","targetError","changeField","blurField","el","val","radioChannel","emailReg","errorID","onChangeModelValue","emailKeyup","onBlurField","fieldID","emailChange","changeEmailErrorMsg","keyCode","registerRenderClasses","validateRequired","validateModelData","beforeUpdateField","getCalcValue","addClass","closest","find","removeClass","checked","calcValue","customClasses","customLabelClasses","maybeChecked","default_value","register","renderOptions","renderOtherText","selected","filter","opt","html","valueFound","option","isSelected","testValues","toString","template","show_other","data","currentValue","calc_value","tmp_opt","Number","calc","parent","clone","changeModelValue","updateCheckedClass","attr","maybeMinDefault","validateMinMax","min","$el","parseFloat","max","step","fieldNumberNumMinError","fieldNumberNumMaxError","testValue","parseInt","testStep","fieldNumberIncrementBy","listeningModel","registerMirror","targetModel","registerConfirm","confirmKeyup","confirmModel","formModal","registerConfirmListeners","confirmID","confirmFieldErrorMsg","compareValue","confirmValue","updateField","isArray","submitButton","bound","registerHandlers","click","resetLabel","maybeEnable","maybeDisable","processingLabel","size","response","submitDebug","textStatus","jqXHR","formID","debug","debugMessages","message","console","log","getFormErrors","error","field","validateKeyup","customReqValidation","defaultReqValidation","maskPlaceholder","trim","valid","maybeError","validateRequiredField","submitErrors","fields","slug","last","style","show","actionRedirect","halt","redirect","window","location","actions","actionSubmit","success_message","form_id","top_of_success_message","offset","top","bottom_of_success_message","outerHeight","bottom_of_screen","scrollTop","height","top_of_screen","animate","renderOtherAttributes","label","otherAttributes","type","settings","clear_complete","reset","hide_complete","renderProductQuantity","renderProduct","product_type","product_use_quantity","that","totalModel","productTotals","registerShipping","onFormLoaded","onChangeProduct","onChangeQuantity","shippingModel","shippingCost","fieldModels","productFields","quantityFields","productID","product","productPrice","updateTotal","productQuantity","newTotal","productField","quantity","toFixed","registerQuantity","changeCalc","targetCalcModel","CalcModel","dec","getCalc","CalcCollection","calcs","displayFields","registerCalcs","nfFrontEnd","use_merge_tags","calculations","fieldType","initDisplayField","updateDisplayFields","init","calcCollection","calcModel","setupCalc","eq","eqValues","match","RegExp","updateCalcFields","replaceKey","mexp","eval","isNumeric","tag","reTag","calcTag","reCalcTag","replaceAllKeys","re","calcName","applyLocaleFormatting","number","splitNumber","nfi18n","thousands_sep","formattedNumber","decimal_point","initDatepicker","view","dateFormat","convertDateFormat","dateObject","pikadayResponsive","format","outputFormat","pikadayOptions","yearRange","getYearRange","minDate","getMinDate","maxDate","getMaxDate","firstDay","startOfWeek","setDate","moment","yearRangeStart","yearRangeEnd","Date","initRecaptcha","resetRecaptcha","updateResponse","recaptchaID","grecaptcha","initHelpText","jBox","theme","content","initTextareaRTEs","clickExtra","meta_image_frame","currentContext","summernote","icons","align","alignCenter","alignJustify","alignLeft","alignRight","indent","outdent","bold","caret","close","code","eraser","italic","link","unlink","magic","minus","orderedlist","redo","square","table","underline","undo","unorderedlist","linkButton","context","mediaButton","toolbar","userSettings","uid","buttons","codemirror","lineNumbers","prettifyHtml","callbacks","onChange","linkMenu","next","replaceWith","class","innerHTML","ui","linkDropdown","buttonGroup","button","className","contents","tooltip","fieldTextareaRTEInsertLink","clickLinkButton","toggle","dropdown","children","render","fieldTextareaRTEInsertMedia","openMediaManager","open","wp","media","frames","title","fieldTextareaRTESelectAFile","text","media_attachment","state","toJSON","insertMedia","range","target","focus","textEl","urlEl","isNewWindowEl","hasClass","url","isNewWindow","filename","initRating","renderRatings","rating","default","num","keyUpExtra","currentTarget","addOption","new_option","viewFilters","loadFilters","addViewFilter","addLoadFilter","getViewFilters","getLoadFilters","priority","ItemView","tagName","toggleAriaInvalid","JSON","stringify","onRender","unwrap","setElement","mask","isInteger","isFinite","Math","floor","currencySymbol","autoNumericOptions","digitGroupSeparator","decimalCharacter","AutoNumeric","templateHelpers","renderElement","tmpl","element_templates","renderLabel","renderLabelClasses","renderInputName","input_name","includes","toLowerCase","renderPlaceholder","customPlaceholder","renderWrapClass","wrapClass","old_classname","customWrapClass","renderClasses","maybeDisabled","disable_input","maybeDisableAutocomplete","disable_browser_autocomplete","maybeInputLimit","input_limit_type","input_limit","getHelpText","help_text","maybeRenderHelp","check_text","renderDescText","desc_text","renderCurrencyFormatting","replacedDecimal","replacedThousands","currency_symbol","events","change .nf-element","keyup .nf-element","click .nf-element","click .extra","blur .nf-element","fieldChange","fieldKeyup","fieldClick","extraClick","fieldBlur","onAttach","fieldErrorItem","CollectionView","childView","updateCount","count","regex","words","wordCount","charCount","limit","currentCount","InputLimitView","changeError","errorEl","errorCollectionView","inputLimitEl","inputLimitView","fieldItem","beforeField","afterField","LayoutView","regions","getTemplate","renderContainerClass","containerClass","desc_pos","container_class","fieldItemView","fieldLayoutView","getFieldItem","getFieldLayout","errorMsg","formErrorsCorrectErrors","omit","registerSubmitHandler","submit","validate","blockingFormErrors","fieldDataDefaults","formData","action","security","ajaxNonce","ajax","adminAjax","cache","success","parseJSON","document","errorThrown","responseText","fieldLayout","FieldCollectionView","registerDefaultDataFilter","defaultFormContentLoad","defaultFormContentView","currentFieldCollection","resetFields","FormData","FieldError","ChangeField","ChangeEmail","FieldCheckbox","FieldCheckboxList","FieldRadio","FieldNumber","MirrorField","ConfirmField","UpdateFieldModel","SubmitButton","SubmitDebug","GetFormErrors","ValidateRequired","SubmitError","ActionRedirect","ActionSuccess","FieldSelect","CoreSubmitResponse","FieldProduct","FieldTotal","FieldQuantity","Calculations","FieldDate","FieldRecaptcha","HelpText","FieldTextareaRTE","FieldStarRating","FieldTerms","FormContentFilters","LoadViews","FormErrors","Submit","DefaultFilters","UniqueFieldError","formErrorItem","keyup .nf-field-hp","change .nf-field-hp","honeypotHoneypotError","HoneyPot","onShow","renderFieldsMarkedRequired","required","fieldsMarkedRequired","AfterFormContent","BeforeFormContent","beforeFormContent","formContent","afterFormContent","getEl","hide","formContentViewFilters","formContentView","BeforeForm","FormLayout","AfterForm","responseMsg","formLayout","originalVal","fn","prev","result","change","ready","$","formCollection","LoadControllers","mainLayout","Application","forms","Renderer","urlParameters","object","compact","search","item","nf_resume","restart","onStart","layoutView","evaluate","interpolate","escape","variable","start"],"mappings":"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AC,QAAA,UAAA,cAAAR,KAAAoD,aACApD,KAAAM,SAAAC,QAAAC,QAAA,UAAA,aAAAR,KAAAoD,cAIAA,YAAA,SAAAyB,EAAA3F,GACAA,EAAAA,GAAA2F,EAIAtE,QAAAC,QAAA,UAAAqC,QAAA,eAAA3D,EAAAmB,IAAA,MAAA,qBAOAnH,EC9BA,+BACA,uBACA,yBACA,0BACA,0BACA,4BACA,gCACA,yBACA,0BACA,0BACA,2BACA,+BACA,2BACA,0BACA,4BACA,+BACA,0BACA,6BACA,4BACA,0BACA,iCACA,2BACA,yBACA,4BACA,2BACA,wBACA,6BACA,uBACA,+BACA,8BACA,yBACA,iCACA,wBACA,yBACA,qBACA,6BACA,gCAEA,SACAyoB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GA8DA,MA5DA5f,YAAAjH,OAAA8B,QACAgB,WAAA,WAKA,GAAA2jB,GACA,GAAAC,GACA,GAAAC,GAKA,GAAA7B,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAW,GACA,GAAAE,GACA,GAAAC,GACA,GAAAC,GACA,GAAAG,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAK,GAIA,GAAAlC,GACA,GAAAC,GACA,GAAAC,GAEA,GAAAK,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GAEA,GAAAE,GACA,GAAAI,GAEA,GAAAW,GAKA,GAAAV,GACA,GAAAxB,QAQAzoB,EAAA,sBAAA,WCpIA,MANAgL,YAAA+V,SAAAlb,QACAmb,QAAA,aACA9S,SAAA,2BAMAlO,EAAA,yBAAA,WCEA,MAXAgL,YAAA+V,SAAAlb,QACAmb,QAAA,aACA9S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","file":"front-end.js","sourcesContent":["(function () {\n","/**\r\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\r\n * Available via the MIT or new BSD license.\r\n * see: http://github.com/jrburke/almond for details\r\n */\r\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\r\n//be followed.\r\n/*jslint sloppy: true */\r\n/*global setTimeout: false */\r\n\r\nvar requirejs, require, define;\r\n(function (undef) {\r\n    var main, req, makeMap, handlers,\r\n        defined = {},\r\n        waiting = {},\r\n        config = {},\r\n        defining = {},\r\n        hasOwn = Object.prototype.hasOwnProperty,\r\n        aps = [].slice,\r\n        jsSuffixRegExp = /\\.js$/;\r\n\r\n    function hasProp(obj, prop) {\r\n        return hasOwn.call(obj, prop);\r\n    }\r\n\r\n    /**\r\n     * Given a relative module name, like ./something, normalize it to\r\n     * a real name that can be mapped to a path.\r\n     * @param {String} name the relative name\r\n     * @param {String} baseName a real name that the name arg is relative\r\n     * to.\r\n     * @returns {String} normalized name\r\n     */\r\n    function normalize(name, baseName) {\r\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\r\n            foundI, foundStarMap, starI, i, j, part,\r\n            baseParts = baseName && baseName.split(\"/\"),\r\n            map = config.map,\r\n            starMap = (map && map['*']) || {};\r\n\r\n        //Adjust any relative paths.\r\n        if (name && name.charAt(0) === \".\") {\r\n            //If have a base name, try to normalize against it,\r\n            //otherwise, assume it is a top-level require that will\r\n            //be relative to baseUrl in the end.\r\n            if (baseName) {\r\n                name = name.split('/');\r\n                lastIndex = name.length - 1;\r\n\r\n                // Node .js allowance:\r\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\r\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\r\n                }\r\n\r\n                //Lop off the last part of baseParts, so that . matches the\r\n                //\"directory\" and not name of the baseName's module. For instance,\r\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\r\n                //want the directory, \"one/two\" for this normalization.\r\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\r\n\r\n                //start trimDots\r\n                for (i = 0; i < name.length; i += 1) {\r\n                    part = name[i];\r\n                    if (part === \".\") {\r\n                        name.splice(i, 1);\r\n                        i -= 1;\r\n                    } else if (part === \"..\") {\r\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\r\n                            //End of the line. Keep at least one non-dot\r\n                            //path segment at the front so it can be mapped\r\n                            //correctly to disk. Otherwise, there is likely\r\n                            //no path mapping for a path starting with '..'.\r\n                            //This can still fail, but catches the most reasonable\r\n                            //uses of ..\r\n                            break;\r\n                        } else if (i > 0) {\r\n                            name.splice(i - 1, 2);\r\n                            i -= 2;\r\n                        }\r\n                    }\r\n                }\r\n                //end trimDots\r\n\r\n                name = name.join(\"/\");\r\n            } else if (name.indexOf('./') === 0) {\r\n                // No baseName, so this is ID is resolved relative\r\n                // to baseUrl, pull off the leading dot.\r\n                name = name.substring(2);\r\n            }\r\n        }\r\n\r\n        //Apply map config if available.\r\n        if ((baseParts || starMap) && map) {\r\n            nameParts = name.split('/');\r\n\r\n            for (i = nameParts.length; i > 0; i -= 1) {\r\n                nameSegment = nameParts.slice(0, i).join(\"/\");\r\n\r\n                if (baseParts) {\r\n                    //Find the longest baseName segment match in the config.\r\n                    //So, do joins on the biggest to smallest lengths of baseParts.\r\n                    for (j = baseParts.length; j > 0; j -= 1) {\r\n                        mapValue = map[baseParts.slice(0, j).join('/')];\r\n\r\n                        //baseName segment has  config, find if it has one for\r\n                        //this name.\r\n                        if (mapValue) {\r\n                            mapValue = mapValue[nameSegment];\r\n                            if (mapValue) {\r\n                                //Match, update name to the new value.\r\n                                foundMap = mapValue;\r\n                                foundI = i;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (foundMap) {\r\n                    break;\r\n                }\r\n\r\n                //Check for a star map match, but just hold on to it,\r\n                //if there is a shorter segment match later in a matching\r\n                //config, then favor over this star map.\r\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\r\n                    foundStarMap = starMap[nameSegment];\r\n                    starI = i;\r\n                }\r\n            }\r\n\r\n            if (!foundMap && foundStarMap) {\r\n                foundMap = foundStarMap;\r\n                foundI = starI;\r\n            }\r\n\r\n            if (foundMap) {\r\n                nameParts.splice(0, foundI, foundMap);\r\n                name = nameParts.join('/');\r\n            }\r\n        }\r\n\r\n        return name;\r\n    }\r\n\r\n    function makeRequire(relName, forceSync) {\r\n        return function () {\r\n            //A version of a require function that passes a moduleName\r\n            //value for items that may need to\r\n            //look up paths relative to the moduleName\r\n            var args = aps.call(arguments, 0);\r\n\r\n            //If first arg is not require('string'), and there is only\r\n            //one arg, it is the array form without a callback. Insert\r\n            //a null so that the following concat is correct.\r\n            if (typeof args[0] !== 'string' && args.length === 1) {\r\n                args.push(null);\r\n            }\r\n            return req.apply(undef, args.concat([relName, forceSync]));\r\n        };\r\n    }\r\n\r\n    function makeNormalize(relName) {\r\n        return function (name) {\r\n            return normalize(name, relName);\r\n        };\r\n    }\r\n\r\n    function makeLoad(depName) {\r\n        return function (value) {\r\n            defined[depName] = value;\r\n        };\r\n    }\r\n\r\n    function callDep(name) {\r\n        if (hasProp(waiting, name)) {\r\n            var args = waiting[name];\r\n            delete waiting[name];\r\n            defining[name] = true;\r\n            main.apply(undef, args);\r\n        }\r\n\r\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\r\n            throw new Error('No ' + name);\r\n        }\r\n        return defined[name];\r\n    }\r\n\r\n    //Turns a plugin!resource to [plugin, resource]\r\n    //with the plugin being undefined if the name\r\n    //did not have a plugin prefix.\r\n    function splitPrefix(name) {\r\n        var prefix,\r\n            index = name ? name.indexOf('!') : -1;\r\n        if (index > -1) {\r\n            prefix = name.substring(0, index);\r\n            name = name.substring(index + 1, name.length);\r\n        }\r\n        return [prefix, name];\r\n    }\r\n\r\n    /**\r\n     * Makes a name map, normalizing the name, and using a plugin\r\n     * for normalization if necessary. Grabs a ref to plugin\r\n     * too, as an optimization.\r\n     */\r\n    makeMap = function (name, relName) {\r\n        var plugin,\r\n            parts = splitPrefix(name),\r\n            prefix = parts[0];\r\n\r\n        name = parts[1];\r\n\r\n        if (prefix) {\r\n            prefix = normalize(prefix, relName);\r\n            plugin = callDep(prefix);\r\n        }\r\n\r\n        //Normalize according\r\n        if (prefix) {\r\n            if (plugin && plugin.normalize) {\r\n                name = plugin.normalize(name, makeNormalize(relName));\r\n            } else {\r\n                name = normalize(name, relName);\r\n            }\r\n        } else {\r\n            name = normalize(name, relName);\r\n            parts = splitPrefix(name);\r\n            prefix = parts[0];\r\n            name = parts[1];\r\n            if (prefix) {\r\n                plugin = callDep(prefix);\r\n            }\r\n        }\r\n\r\n        //Using ridiculous property names for space reasons\r\n        return {\r\n            f: prefix ? prefix + '!' + name : name, //fullName\r\n            n: name,\r\n            pr: prefix,\r\n            p: plugin\r\n        };\r\n    };\r\n\r\n    function makeConfig(name) {\r\n        return function () {\r\n            return (config && config.config && config.config[name]) || {};\r\n        };\r\n    }\r\n\r\n    handlers = {\r\n        require: function (name) {\r\n            return makeRequire(name);\r\n        },\r\n        exports: function (name) {\r\n            var e = defined[name];\r\n            if (typeof e !== 'undefined') {\r\n                return e;\r\n            } else {\r\n                return (defined[name] = {});\r\n            }\r\n        },\r\n        module: function (name) {\r\n            return {\r\n                id: name,\r\n                uri: '',\r\n                exports: defined[name],\r\n                config: makeConfig(name)\r\n            };\r\n        }\r\n    };\r\n\r\n    main = function (name, deps, callback, relName) {\r\n        var cjsModule, depName, ret, map, i,\r\n            args = [],\r\n            callbackType = typeof callback,\r\n            usingExports;\r\n\r\n        //Use name if no relName\r\n        relName = relName || name;\r\n\r\n        //Call the callback to define the module, if necessary.\r\n        if (callbackType === 'undefined' || callbackType === 'function') {\r\n            //Pull out the defined dependencies and pass the ordered\r\n            //values to the callback.\r\n            //Default to [require, exports, module] if no deps\r\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\r\n            for (i = 0; i < deps.length; i += 1) {\r\n                map = makeMap(deps[i], relName);\r\n                depName = map.f;\r\n\r\n                //Fast path CommonJS standard dependencies.\r\n                if (depName === \"require\") {\r\n                    args[i] = handlers.require(name);\r\n                } else if (depName === \"exports\") {\r\n                    //CommonJS module spec 1.1\r\n                    args[i] = handlers.exports(name);\r\n                    usingExports = true;\r\n                } else if (depName === \"module\") {\r\n                    //CommonJS module spec 1.1\r\n                    cjsModule = args[i] = handlers.module(name);\r\n                } else if (hasProp(defined, depName) ||\r\n                           hasProp(waiting, depName) ||\r\n                           hasProp(defining, depName)) {\r\n                    args[i] = callDep(depName);\r\n                } else if (map.p) {\r\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\r\n                    args[i] = defined[depName];\r\n                } else {\r\n                    throw new Error(name + ' missing ' + depName);\r\n                }\r\n            }\r\n\r\n            ret = callback ? callback.apply(defined[name], args) : undefined;\r\n\r\n            if (name) {\r\n                //If setting exports via \"module\" is in play,\r\n                //favor that over return value and exports. After that,\r\n                //favor a non-undefined return value over exports use.\r\n                if (cjsModule && cjsModule.exports !== undef &&\r\n                        cjsModule.exports !== defined[name]) {\r\n                    defined[name] = cjsModule.exports;\r\n                } else if (ret !== undef || !usingExports) {\r\n                    //Use the return value from the function.\r\n                    defined[name] = ret;\r\n                }\r\n            }\r\n        } else if (name) {\r\n            //May just be an object definition for the module. Only\r\n            //worry about defining if have a module name.\r\n            defined[name] = callback;\r\n        }\r\n    };\r\n\r\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\r\n        if (typeof deps === \"string\") {\r\n            if (handlers[deps]) {\r\n                //callback in this case is really relName\r\n                return handlers[deps](callback);\r\n            }\r\n            //Just return the module wanted. In this scenario, the\r\n            //deps arg is the module name, and second arg (if passed)\r\n            //is just the relName.\r\n            //Normalize module name, if it contains . or ..\r\n            return callDep(makeMap(deps, callback).f);\r\n        } else if (!deps.splice) {\r\n            //deps is a config object, not an array.\r\n            config = deps;\r\n            if (config.deps) {\r\n                req(config.deps, config.callback);\r\n            }\r\n            if (!callback) {\r\n                return;\r\n            }\r\n\r\n            if (callback.splice) {\r\n                //callback is an array, which means it is a dependency list.\r\n                //Adjust args if there are dependencies\r\n                deps = callback;\r\n                callback = relName;\r\n                relName = null;\r\n            } else {\r\n                deps = undef;\r\n            }\r\n        }\r\n\r\n        //Support require(['a'])\r\n        callback = callback || function () {};\r\n\r\n        //If relName is a function, it is an errback handler,\r\n        //so remove it.\r\n        if (typeof relName === 'function') {\r\n            relName = forceSync;\r\n            forceSync = alt;\r\n        }\r\n\r\n        //Simulate async callback;\r\n        if (forceSync) {\r\n            main(undef, deps, callback, relName);\r\n        } else {\r\n            //Using a non-zero value because of concern for what old browsers\r\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\r\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\r\n            //If want a value immediately, use require('id') instead -- something\r\n            //that works in almond on the global level, but not guaranteed and\r\n            //unlikely to work in other AMD implementations.\r\n            setTimeout(function () {\r\n                main(undef, deps, callback, relName);\r\n            }, 4);\r\n        }\r\n\r\n        return req;\r\n    };\r\n\r\n    /**\r\n     * Just drops the config on the floor, but returns req in case\r\n     * the config return value is used.\r\n     */\r\n    req.config = function (cfg) {\r\n        return req(cfg);\r\n    };\r\n\r\n    /**\r\n     * Expose module registry for debugging and tooling\r\n     */\r\n    requirejs._defined = defined;\r\n\r\n    define = function (name, deps, callback) {\r\n        if (typeof name !== 'string') {\r\n            throw new Error('See almond README: incorrect module build, no module name');\r\n        }\r\n\r\n        //This module may not have dependencies\r\n        if (!deps.splice) {\r\n            //deps is not an array, so probably means\r\n            //an object literal or factory function for\r\n            //the value. Adjust args.\r\n            callback = deps;\r\n            deps = [];\r\n        }\r\n\r\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\r\n            waiting[name] = [name, deps, callback];\r\n        }\r\n    };\r\n\r\n    define.amd = {\r\n        jQuery: true\r\n    };\r\n}());\r\n\ndefine(\"../lib/almond\", function(){});\n\n","define( 'models/fieldErrorModel',[], function() {\r\n\tvar model = Backbone.Model.extend( {\r\n\r\n\t} );\r\n\t\r\n\treturn model;\r\n} );\n","define( 'models/fieldErrorCollection',['models/fieldErrorModel'], function( errorModel ) {\r\n\tvar collection = Backbone.Collection.extend( {\r\n\t\tmodel: errorModel\r\n\t} );\r\n\treturn collection;\r\n} );\n","define( 'models/fieldModel',['models/fieldErrorCollection'], function( fieldErrorCollection ) {\r\n\tvar model = Backbone.Model.extend( {\r\n\t\tdefaults: {\r\n\t\t\tplaceholder: '',\r\n\t\t\tvalue: '',\r\n\t\t\tlabel_pos: '',\r\n\t\t\tclasses: 'ninja-forms-field',\r\n\t\t\treRender: false,\r\n\t\t\tmirror_field: false,\r\n\t\t\tconfirm_field: false,\r\n\t\t\tclean: true,\r\n\t\t\tdisabled: '',\r\n\t\t\tvisible: true,\r\n\t\t\tinvalid: false\r\n\t\t},\r\n\r\n\t\tinitialize: function() {\r\n\t\t\tthis.set( 'formID', this.collection.options.formModel.get( 'id' ) );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'form-' + this.get( 'formID' ) ), 'reset', this.resetModel );\r\n\r\n    \t\tthis.bind( 'change', this.changeModel, this );\r\n    \t\tthis.bind( 'change:value', this.changeValue, this );\r\n    \t\tthis.set( 'errors', new fieldErrorCollection() );\r\n\r\n    \t\t/*\r\n\t\t\t * Trigger an init event on two channels:\r\n\t\t\t * \r\n\t\t\t * fields\r\n\t\t\t * field-type\r\n\t\t\t *\r\n\t\t\t * This lets specific field types modify model attributes before anything uses them.\r\n\t\t\t */\r\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'init:model', this );\r\n\t\t\tnfRadio.channel( this.get( 'type' ) ).trigger( 'init:model', this );\r\n\t\t\tnfRadio.channel( 'fields-' + this.get( 'type' ) ).trigger( 'init:model', this );\r\n\r\n\t\t\tif( 'undefined' != this.get( 'parentType' ) ){\r\n\t\t\t\tnfRadio.channel( this.get( 'parentType' ) ).trigger( 'init:model', this );\r\n\t\t\t}\r\n\r\n\t\t\t/*\r\n\t\t\t * When we load our form, fire another event for this field.\r\n\t\t\t */\r\n\t\t\tthis.listenTo( nfRadio.channel( 'form-' + this.get( 'formID' ) ), 'loaded', this.formLoaded );\r\n\t\t\r\n\t\t\t/*\r\n\t\t\t * Before we submit our form, send out a message so that this field can be modified if necessary.\r\n\t\t\t */\r\n\t\t\tthis.listenTo( nfRadio.channel( 'form-' + this.get( 'formID' ) ), 'before:submit', this.beforeSubmit );\r\n\t\t},\r\n\r\n\t\tchangeModel: function() {\r\n\t\t\tnfRadio.channel( 'field-' + this.get( 'id' ) ).trigger( 'change:model', this );\r\n\t\t\tnfRadio.channel( this.get( 'type' ) ).trigger( 'change:model', this );\r\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'change:model', this );\r\n\t\t},\r\n\r\n\t\tchangeValue: function() {\r\n\t\t\tnfRadio.channel( 'field-' + this.get( 'id' ) ).trigger( 'change:modelValue', this );\r\n\t\t\tnfRadio.channel( this.get( 'type' ) ).trigger( 'change:modelValue', this );\r\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'change:modelValue', this );\r\n\t\t},\r\n\r\n\t\taddWrapperClass: function( cl ) {\r\n\t\t\tthis.set( 'addWrapperClass', cl );\r\n\t\t},\r\n\r\n\t\tremoveWrapperClass: function( cl ) {\r\n\t\t\tthis.set( 'removeWrapperClass', cl );\r\n\t\t},\r\n\r\n\t\tsetInvalid: function( invalid ) {\r\n\t\t\tthis.set( 'invalid', invalid );\r\n\t\t},\r\n\r\n\t\tformLoaded: function() {\r\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'formLoaded', this );\r\n\t\t\tnfRadio.channel( 'fields-' + this.get( 'type' ) ).trigger( 'formLoaded', this );\r\n\t\t},\r\n\r\n\t\tbeforeSubmit: function( formModel ) {\r\n\t\t\tnfRadio.channel( this.get( 'type' ) ).trigger( 'before:submit', this );\r\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'before:submit', this );\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\treturn model;\r\n} );\r\n\n","define( 'models/fieldCollection',['models/fieldModel'], function( fieldModel ) {\r\n\tvar collection = Backbone.Collection.extend( {\r\n\t\tmodel: fieldModel,\r\n\t\tcomparator: 'order',\r\n\r\n\t\tinitialize: function( models, options ) {\r\n\t\t\tthis.options = options;\r\n            this.on( 'reset', function( fieldCollection ){\r\n                nfRadio.channel( 'fields' ).trigger( 'reset:collection', fieldCollection );\r\n            }, this );\r\n\t\t},\r\n\r\n\t\tvalidateFields: function() {\r\n\t\t\t_.each( this.models, function( fieldModel ) {\r\n\t\t\t\t// When validating all fields, set clean to false to force validation.\r\n\t\t\t\tfieldModel.set( 'clean', false );\r\n\t\t\t\tnfRadio.channel( 'submit' ).trigger( 'validate:field', fieldModel );\r\n\t\t\t}, this );\r\n\t\t},\r\n\r\n\t\tshowFields: function() {\r\n\t\t\tthis.invoke( 'set', { visible: true } );\r\n            this.invoke( function() {\r\n                this.trigger( 'change:value', this );\r\n            });\r\n\t\t},\r\n\r\n\t\thideFields: function() {\r\n\t\t\tthis.invoke( 'set', { visible: false } );\r\n            this.invoke( function() {\r\n                this.trigger( 'change:value', this );\r\n            });\r\n\t\t}\r\n\t} );\r\n\treturn collection;\r\n} );\r\n\n","define( 'models/formErrorModel',[], function() {\r\n\tvar model = Backbone.Model.extend( {\r\n\r\n\t} );\r\n\t\r\n\treturn model;\r\n} );\n","define( 'models/formErrorCollection',['models/formErrorModel'], function( errorModel ) {\r\n\tvar collection = Backbone.Collection.extend( {\r\n\t\tmodel: errorModel\r\n\t} );\r\n\treturn collection;\r\n} );\n","define( 'models/formModel',[\r\n\t'models/fieldCollection',\r\n\t'models/formErrorCollection'\r\n\t], function(\r\n\t\tFieldCollection,\r\n\t\tErrorCollection\r\n\t) {\r\n\tvar model = Backbone.Model.extend({\r\n\t\tdefaults: {\r\n\t\t\tbeforeForm: '',\r\n\t\t\tafterForm: '',\r\n\t\t\tbeforeFields: '',\r\n\t\t\tafterFields: '',\r\n\t\t\twrapper_class: '',\r\n\t\t\telement_class: '',\r\n\t\t\thp: '',\r\n\t\t\tfieldErrors: {},\r\n\t\t\textra: {}\r\n\t\t},\r\n\r\n\t\tinitialize: function() {\r\n\t\t\t// Loop over settings and map to attributes\r\n\t\t\t_.each( this.get( 'settings' ), function( value, setting ) {\r\n\t\t\t\tthis.set( setting, value );\r\n\t\t\t}, this );\r\n\r\n\t\t\tthis.set( 'loadedFields', this.get( 'fields' ) );\r\n\t\t\tthis.set( 'fields', new FieldCollection( this.get( 'fields' ), { formModel: this } ) );\r\n\t\t\tthis.set( 'errors', new ErrorCollection() );\r\n\r\n\t\t\t/*\r\n\t\t\t * Send out a radio message so that anyone who wants to filter our content data can register their filters.\r\n\t\t\t */\r\n\t\t\tnfRadio.channel( 'form' ).trigger( 'before:filterData', this );\r\n\r\n\t\t\t/*\r\n\t\t\t * Set our formContentData to our form setting 'formContentData'\r\n\t\t\t */\r\n\t\t\tvar formContentData = this.get( 'formContentData' );\r\n\r\n\t\t\t/*\r\n\t\t\t * The formContentData variable used to be fieldContentsData.\r\n\t\t\t * If we don't have a 'formContentData' setting, check to see if we have an old 'fieldContentsData'.\r\n\t\t\t * \r\n\t\t\t * TODO: This is for backwards compatibility and should be removed eventually. \r\n\t\t\t */\r\n\t\t\tif ( ! formContentData ) {\r\n\t\t\t\tformContentData = this.get( 'fieldContentsData' );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar formContentLoadFilters = nfRadio.channel( 'formContent' ).request( 'get:loadFilters' );\r\n\t\t\t/* \r\n\t\t\t* Get our first filter, this will be the one with the highest priority.\r\n\t\t\t*/\r\n\t\t\tvar sortedArray = _.without( formContentLoadFilters, undefined );\r\n\t\t\tvar callback = _.first( sortedArray );\r\n\t\t\tformContentData = callback( formContentData, this, this );\r\n\t\t\t\r\n\t\t\tthis.set( 'formContentData', formContentData );\r\n\r\n\t\t\tnfRadio.channel( 'forms' ).trigger( 'init:model', this );\r\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).trigger( 'init:model', this );\r\n\r\n\t\t\t// Fields\r\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).reply( 'get:fieldByKey', this.getFieldByKey, this );\r\n\r\n\t\t\t// Form Errors\r\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).reply( 'add:error',    this.addError, this    );\r\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).reply( 'remove:error', this.removeError, this );\r\n\r\n\t\t\t// Extra Data\r\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).reply( 'get:extra',    this.getExtra,    this );\r\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).reply( 'add:extra',    this.addExtra,    this );\r\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).reply( 'remove:extra', this.removeExtra, this );\r\n\t\t\r\n\t\t\t// Respond to requests to get this model.\r\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).reply( 'get:form', \t this.getForm, \t   this );\r\n\r\n\t\t\tnfRadio.channel( 'form' ).trigger( 'loaded', this );\r\n\t\t\tnfRadio.channel( 'form' ).trigger( 'after:loaded', this );\r\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).trigger( 'loaded', \t this );\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t |--------------------------------------------------------------------------\r\n\t\t | Fields\r\n\t\t |--------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tgetFieldByKey: function( key ) {\r\n\t\t\treturn this.get( 'fields' ).findWhere( { key: key } );\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t |--------------------------------------------------------------------------\r\n\t\t | Form Errors\r\n\t\t |--------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\taddError: function( id, msg ) {\r\n\t\t\tvar errors = this.get( 'errors' );\r\n\t\t\terrors.add( { id: id, msg: msg } );\r\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).trigger( 'add:error', this, id, msg );\r\n\t\t},\r\n\r\n\t\tremoveError: function( id ) {\r\n\t\t\tvar errors = this.get( 'errors' );\r\n\t\t\tvar errorModel = errors.get( id );\r\n\t\t\terrors.remove( errorModel );\r\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).trigger( 'remove:error', this, id );\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t |--------------------------------------------------------------------------\r\n\t\t | Extra Data\r\n\t\t |--------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tgetExtra: function( key ) {\r\n\t\t\tvar extraData = this.get( 'extra' );\r\n\t\t\tif( 'undefined' == typeof key ) return extraData;\r\n\t\t\treturn extraData[ key ];\r\n\t\t},\r\n\r\n\t\taddExtra: function( key, value ) {\r\n\t\t\tvar extraData = this.get( 'extra' );\r\n\t\t\textraData[ key ] = value;\r\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).trigger( 'add:extra', this, key, value );\r\n\t\t},\r\n\r\n\t\tremoveExtra: function( key ) {\r\n\t\t\tvar extraData = this.get( 'extra' );\r\n\t\t\tdelete extraData[ key ];\r\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).trigger( 'remove:extra', this, key );\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t |--------------------------------------------------------------------------\r\n\t\t | Get this form\r\n\t\t |--------------------------------------------------------------------------\r\n\t\t */\r\n\t\tgetForm: function() {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t} );\r\n\r\n\treturn model;\r\n} );\n","define( 'models/formCollection',['models/formModel'], function( formModel ) {\r\n\tvar collection = Backbone.Collection.extend( {\r\n\t\tmodel: formModel\r\n\t} );\r\n\treturn collection;\r\n} );\n","/*\r\n * Handles setting up our form.\r\n *\r\n * Holds a collection of our fields.\r\n * Replies to requests for field data.\r\n * Updates field models.\r\n */\r\ndefine('controllers/formData',['models/formModel', 'models/formCollection', 'models/fieldCollection', 'models/formErrorCollection'], function( FormModel, FormCollection, FieldCollection, ErrorCollection ) {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\r\n\t\t\t/*\r\n\t\t\t * Setup our field collections.\r\n\t\t\t */\r\n\t\t\tvar that = this;\r\n\r\n\t\t\t/*\r\n\t\t\t * Initialize our form collection (incase we have multiple forms on the page)\r\n\t\t\t */\r\n\t\t\tthis.collection = new FormCollection( nfForms );\r\n\r\n\t\t\tnfRadio.channel( 'forms' ).trigger( 'loaded', this.collection );\r\n\t\t\tnfRadio.channel( 'app' ).trigger( 'forms:loaded', this.collection );\r\n\r\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:form', this.getForm, this );\r\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:forms', this.getForms, this );\r\n\r\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:field', this.getField, this );\r\n\t\t},\r\n\r\n\t\tgetForm: function( id ) {\r\n\t\t\treturn this.collection.get( id );\r\n\t\t},\r\n\r\n\t\tgetForms: function() {\r\n\t\t\treturn this.collection;\r\n\t\t},\r\n\r\n\t\tgetField: function( id ) {\r\n\t\t\tvar model = false;\r\n\t\t\t\r\n\t\t\t_.each( this.collection.models, function( form ) {\r\n\t\t\t\tif ( ! model ) {\r\n\t\t\t\t\tmodel = form.get( 'fields' ).get( id );\t\r\n\t\t\t\t}\t\t\t\r\n\t\t\t} );\r\n\t\t\treturn model;\r\n\t\t}\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","define('controllers/fieldError',['models/fieldErrorModel'], function( fieldErrorModel ) {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tnfRadio.channel( 'fields' ).reply( 'add:error', this.addError );\r\n\t\t\tnfRadio.channel( 'fields' ).reply( 'remove:error', this.removeError );\r\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:error', this.getError );\r\n\t\t},\r\n\r\n\t\taddError: function( targetID, id, msg ) {\r\n\t\t\tvar model = nfRadio.channel( 'fields' ).request( 'get:field', targetID );\r\n\r\n\t\t\tif( 'undefined' == typeof model ) return;\r\n\r\n\t\t\tvar errors = model.get( 'errors' );\r\n\t\t\terrors.add( { 'id': id, 'msg' : msg } );\r\n\t\t\tmodel.set( 'errors', errors );\r\n\t\t\tmodel.trigger( 'change:errors', model );\r\n\t\t\tmodel.set( 'clean', false );\r\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'add:error', model, id, msg );\r\n\t\t},\r\n\r\n\t\tremoveError: function( targetID, id ) {\r\n\t\t\tvar model = nfRadio.channel( 'fields' ).request( 'get:field', targetID );\r\n\r\n\t\t\tif( 'undefined' == typeof model ) return;\r\n\r\n\t\t\tvar errors = model.get( 'errors' );\r\n\t\t\tvar targetError = errors.get( id );\r\n\t\t\tif ( 'undefined' != typeof targetError ) {\r\n\t\t\t\terrors.remove( targetError );\r\n\t\t\t\tmodel.set( 'errors', errors );\r\n\t\t\t\tmodel.trigger( 'change:errors', model );\r\n\t\t\t\tnfRadio.channel( 'fields' ).trigger( 'remove:error', model, id );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetError: function( targetID, id ) {\r\n\t\t\tvar model = nfRadio.channel( 'fields' ).request( 'get:field', targetID );\r\n\t\t\tvar errors = model.get( 'errors' );\r\n\t\t\tvar targetError = errors.get( id );\r\n\t\t\tif ( 'undefined' != targetError ) {\r\n\t\t\t\treturn targetError;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","/**\r\n * Controller responsible for replying to a Radio request stating that a field has been changed.\r\n *\r\n * This controller sends out a message to the field-specific channel, the field type channel,\r\n * and the public fields channel so that the data model can be updated.\r\n */\r\n\r\ndefine('controllers/changeField',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\r\n\t\tinitialize: function() {\r\n\t\t\t/*\r\n\t\t\t * Reply to our request for changing a field.\r\n\t\t\t */\r\n\t\t\tnfRadio.channel( 'nfAdmin' ).reply( 'change:field', this.changeField );\r\n\r\n\t\t\t/*\r\n\t\t\t * If we blur our field, set the model attribute of 'clean' to false.\r\n\t\t\t * 'clean' tracks whether or not the user has every interacted with this element.\r\n\t\t\t * Some validation, like required, uses this to decide whether or not to add an error.\r\n\t\t\t */\r\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'blur:field', this.blurField );\r\n\t\t},\r\n\r\n\t\tchangeField: function( el, model ) {\r\n\t\t\t// Get our current value.\r\n\t\t\tvar value = nfRadio.channel( model.get( 'type' ) ).request( 'before:updateField', el, model );\r\n\t\t\tvalue = ( 'undefined' != typeof value ) ? value : nfRadio.channel( model.get( 'parentType' ) ).request( 'before:updateField', el, model );\r\n\t\t\tvalue = ( 'undefined' != typeof value ) ? value : jQuery( el ).val();\r\n\r\n\t\t\t// Set our 'isUpdated' flag to false.\r\n\t\t\tmodel.set( 'isUpdated', false );\r\n\r\n\t\t\t// Set our 'clean' flag to false.\r\n\t\t\tmodel.set( 'clean', false );\r\n\r\n\t\t\t/*\r\n\t\t\t * Send out a message saying that we've changed a field.\r\n\t\t\t * The first channel is field id/key specific.\r\n\t\t\t * The second channel is the field type, i.e. text, email, radio\r\n\t\t\t * The third channel is a generic 'field' channel.\r\n\t\t\t *\r\n\t\t\t * If the submitted value you wish to store in the data model isn't the same as the value received above,\r\n\t\t\t * you can set that model in the actions below and set the 'isUpdated' model attribute to true.\r\n\t\t\t * i.e. model.set( 'isUpdated', true );\r\n\t\t\t */\r\n\t\t\tnfRadio.channel( 'field-' + model.get( 'id' ) ).trigger( 'change:field', el, model );\r\n\t\t\tnfRadio.channel( model.get( 'type' ) ).trigger( 'change:field', el, model );\r\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'change:field', el, model );\r\n\r\n\t\t\t/*\r\n\t\t\t * Send a request out on our nfAdmin channel to update our field model.\r\n\t\t\t * If the field model has a 'isUpdated' property of false, nothing will be updated.\r\n\t\t\t */\r\n\t\t\tnfRadio.channel( 'nfAdmin' ).request( 'update:field', model, value );\r\n\t\t},\r\n\r\n\t\tblurField: function( el, model ) {\r\n\t\t\t// Set our 'clean' flag to false.\r\n\t\t\tmodel.set( 'clean', false );\r\n\t\t}\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","define('controllers/changeEmail',[], function() {\r\n\tvar radioChannel = nfRadio.channel( 'email' );\r\n\t// var emailReg = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\r\n\tvar emailReg = /^.+@.+\\..+/i;\r\n\tvar errorID = 'invalid-email';\r\n\r\n\tvar controller = Marionette.Object.extend( {\r\n\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( radioChannel, 'change:modelValue', this.onChangeModelValue );\r\n\t\t\tthis.listenTo( radioChannel, 'keyup:field', this.emailKeyup );\r\n\t\t\tthis.listenTo( radioChannel, 'blur:field', this.onBlurField );\r\n\t\t},\r\n\r\n\t\tonChangeModelValue: function( model ) {\r\n\t\t\tvar value = model.get( 'value' );\r\n\t\t\tvar fieldID = model.get( 'id' );\r\n\t\t\tthis.emailChange( value, fieldID );\r\n\t\t},\r\n\r\n\t\tonBlurField: function( el, model ) {\r\n\t\t\tvar value = jQuery( el ).val();\r\n\t\t\tvar fieldID = model.get( 'id' );\r\n\t\t\tthis.emailChange( value, fieldID );\r\n\t\t},\r\n\r\n\t\temailChange: function( value, fieldID ) {\r\n\t\t\tif ( 0 < value.length ) {\r\n\t\t\t\tif( emailReg.test( value ) ) {\r\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', fieldID, errorID );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', fieldID );\r\n\t\t\t\t\tvar formModel  = nfRadio.channel( 'app'    ).request( 'get:form',  fieldModel.get( 'formID' ) );\r\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'add:error', fieldID, errorID, formModel.get( 'settings' ).changeEmailErrorMsg );\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', fieldID, errorID );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * When a user types inside of an email field, track their keypresses and add the appropriate class.\r\n\t\t * If the value validates as an email, add a class of nf-pass\r\n\t\t * If the value does not validate as email, add a class of nf-fail\r\n\t\t * \r\n\t\t * @since  3.0\r\n\t\t * @param  {object} el    Element that triggered the keyup event.\r\n\t\t * @param  {object} model Model connected to the element that triggered the event\r\n\t\t * @return {void}\r\n\t\t */\r\n\t\temailKeyup: function( el, model, keyCode ) {\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\t * If we pressed the 'tab' key to get to this field, return false.\r\n\t\t\t */\r\n\t\t\tif ( 9 == keyCode ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t/*\r\n\t\t\t * Get the current value from our element.\r\n\t\t\t */\r\n\t\t\tvar value = jQuery( el ).val();\r\n\r\n\t\t\t/*\r\n\t\t\t * Get our current ID\r\n\t\t\t */\r\n\t\t\tvar fieldID = model.get( 'id' );\r\n\r\n\t\t\t/*\r\n\t\t\t * Check our value to see if it is a valid email.\r\n\t\t\t */\r\n\t\t\r\n\t\t\t\r\n\t\t\tif ( 0 == value.length ) {\r\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', fieldID, errorID );\r\n\t\t\t} else if ( ! emailReg.test( value ) && ! model.get( 'clean' ) ) {\r\n\r\n\t\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', fieldID );\r\n\t\t\t\tvar formModel  = nfRadio.channel( 'app'    ).request( 'get:form',  fieldModel.get( 'formID' ) );\r\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'add:error', fieldID, errorID, formModel.get( 'settings' ).changeEmailErrorMsg );\r\n\r\n\t\t\t\tmodel.removeWrapperClass( 'nf-pass' );\r\n\t\t\t} else if ( emailReg.test( value ) ) {\r\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', fieldID, errorID );\r\n\t\t\t\t/*\r\n\t\t\t\t * Add nf-pass class to the wrapper.\r\n\t\t\t\t */\r\n\t\t\t\tmodel.addWrapperClass( 'nf-pass' );\r\n\t\t\t\tmodel.set( 'clean', false );\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","define('controllers/fieldCheckbox',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\t/*\r\n\t\t\t * When we init our checkbox model, register our renderClasses() function\r\n\t\t\t */\r\n\t\t\tthis.listenTo( nfRadio.channel( 'checkbox' ), 'init:model', this.registerRenderClasses );\r\n\r\n\t\t\tnfRadio.channel( 'checkbox' ).reply( 'validate:required', this.validateRequired );\r\n\t\t\tnfRadio.channel( 'checkbox' ).reply( 'validate:modelData', this.validateModelData );\r\n            nfRadio.channel( 'checkbox' ).reply( 'before:updateField', this.beforeUpdateField, this );\r\n            nfRadio.channel( 'checkbox' ).reply( 'get:calcValue', this.getCalcValue, this );\r\n\t\t},\r\n\r\n\t\tbeforeUpdateField: function( el, model ) {\r\n\t\t\tvar checked = jQuery( el ).prop( 'checked' );\r\n\t\t\tif ( checked ) {\r\n\t\t\t\tvar value = 1;\r\n\t\t\t\tjQuery( el ).addClass( 'nf-checked' );\r\n\t\t\t\tjQuery( el ).closest( '.field-wrap' ).find( 'label[for=\"' + jQuery( el ).prop( 'id' ) + '\"]' ).addClass( 'nf-checked-label' );\r\n\t\t\t} else {\r\n\t\t\t\tvar value = 0;\r\n\t\t\t\tjQuery( el ).removeClass( 'nf-checked' );\r\n\t\t\t\tjQuery( el ).closest( '.field-wrap' ).find( 'label[for=\"' + jQuery( el ).prop( 'id' ) + '\"]' ).removeClass( 'nf-checked-label' );\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t},\r\n\r\n\t\tvalidateRequired: function( el, model ) {\r\n\t\t\treturn el[0].checked;\r\n\t\t},\r\n\r\n\t\tvalidateModelData: function( model ) {\r\n\t\t\treturn model.get( 'value' ) != 0;\r\n\t\t},\r\n\r\n\t\tgetCalcValue: function( fieldModel ) {\r\n\t\t\tif ( 1 == fieldModel.get( 'value' ) ) {\r\n\t\t\t\tcalcValue = fieldModel.get( 'checked_calc_value' );\r\n\t\t\t} else {\r\n\t\t\t\tcalcValue = fieldModel.get( 'unchecked_calc_value' );\r\n\t\t\t}\r\n\r\n\t\t\treturn calcValue;\r\n\t\t},\r\n\r\n\t\tregisterRenderClasses: function( model ) {\r\n\t\t\tif ( 'checked' == model.get( 'default_value' ) ) {\r\n\t\t\t\tmodel.set( 'value', 1 );\r\n\t\t\t} else {\r\n\t\t\t\tmodel.set( 'value', 0 );\r\n\t\t\t}\r\n\t\t\tmodel.set( 'customClasses', this.customClasses );\r\n\t\t\tmodel.set( 'customLabelClasses', this.customLabelClasses );\r\n\t\t\tmodel.set( 'maybeChecked', this.maybeChecked );\r\n\t\t},\r\n\r\n\t\tcustomClasses: function( classes ) {\r\n\t\t\tif ( 1 == this.value || ( this.clean && 'undefined' != typeof this.default_value && 'checked' == this.default_value ) ) {\r\n\t\t\t\tclasses += ' nf-checked';\r\n\t\t\t} else {\r\n\t\t\t\tclasses.replace( 'nf-checked', '' );\r\n\t\t\t}\r\n\t\t\treturn classes;\r\n\t\t},\r\n\r\n\t\tcustomLabelClasses: function( classes ) {\r\n\t\t\tif ( 1 == this.value || ( this.clean && 'undefined' != typeof this.default_value && 'checked' == this.default_value ) ) {\r\n\t\t\t\tclasses += ' nf-checked-label';\r\n\t\t\t} else {\r\n\t\t\t\tclasses.replace( 'nf-checked-label', '' );\r\n\t\t\t}\r\n\t\t\treturn classes;\r\n\t\t},\r\n\r\n\t\tmaybeChecked: function() {\r\n\t\t\tif ( 1 == this.value || ( this.clean && 'undefined' != typeof this.default_value && 'checked' == this.default_value ) ) {\r\n\t\t\t\treturn ' checked';\r\n\t\t\t} else {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","define('controllers/fieldCheckboxList',[], function() {\r\n    var controller = Marionette.Object.extend( {\r\n        initialize: function() {\r\n            this.listenTo( nfRadio.channel( 'listcheckbox' ), 'init:model', this.register );\r\n            this.listenTo( nfRadio.channel( 'terms' ), 'init:model', this.register );\r\n            nfRadio.channel( 'listcheckbox' ).reply( 'before:updateField', this.beforeUpdateField, this );\r\n            nfRadio.channel( 'terms' ).reply( 'before:updateField', this.beforeUpdateField, this );\r\n            nfRadio.channel( 'listcheckbox' ).reply( 'get:calcValue', this.getCalcValue, this );\r\n            nfRadio.channel( 'terms' ).reply( 'get:calcValue', this.getCalcValue, this );\r\n        },\r\n\r\n        register: function( model ) {\r\n            model.set( 'renderOptions', this.renderOptions );\r\n            model.set( 'renderOtherText', this.renderOtherText );\r\n            model.set( 'selected', [] );\r\n\r\n            /*\r\n             * When we init a model, we need to set our 'value' to the selected option's value.\r\n             * This is the list equivalent of a 'default value'.\r\n             */ \r\n            if ( 0 != model.get( 'options' ).length ) {\r\n                var selected = _.filter( model.get( 'options' ), function( opt ) { return 1 == opt.selected } );\r\n                selected = _.map( selected, function( opt ) { return opt.value } );\r\n                model.set( 'value', selected );\r\n            }\r\n\r\n        },\r\n\r\n        renderOptions: function() {\r\n            var html = '';\r\n\r\n            if ( '' == this.value ) {\r\n                var valueFound = true;\r\n            } else {\r\n                var valueFound = false;\r\n            }\r\n\r\n            _.each( this.options, function( option, index ) {\r\n                if ( option.value == this.value ) {\r\n                    valueFound = true;\r\n                }\r\n\r\n                /*\r\n                 * TODO: This is a bandaid fix for making sure that each option has a \"visible\" property.\r\n                 * This should be moved to creation so that when an option is added, it has a visible property by default.\r\n                 */\r\n                if ( 'undefined' == typeof option.visible ) {\r\n                    option.visible = true;\r\n                }\r\n\r\n                option.fieldID = this.id;\r\n                option.classes = this.classes;\r\n                option.index = index;\r\n\r\n                if( ( option.selected && \"0\" != option.selected ) && this.clean ){\r\n                    option.isSelected = true;\r\n                } else {\r\n                    var testValues = _.map( this.value, function( value ) {\r\n                        return value.toString();\r\n                    } );               \r\n                    \r\n                    option.isSelected = ( -1 != testValues.indexOf( option.value.toString() ) );\r\n                }\r\n\r\n                var template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-listcheckbox-option' );\r\n                html += template( option );\r\n            }, this );\r\n\r\n            if ( 1 == this.show_other ) {\r\n                if ( 'nf-other' == this.value ) {\r\n                    valueFound = false;\r\n                }\r\n                var data = {\r\n                    fieldID: this.id,\r\n                    classes: this.classes,\r\n                    currentValue: this.value,\r\n                    renderOtherText: this.renderOtherText,\r\n                    valueFound: valueFound\r\n                };\r\n\r\n                var template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-listcheckbox-other' );\r\n                html += template( data );\r\n\r\n            }\r\n\r\n            return html;\r\n        },\r\n\r\n        renderOtherText: function() {\r\n            if ( 'nf-other' == this.currentValue || ! this.valueFound ) {\r\n                if ( 'nf-other' == this.currentValue ) {\r\n                    this.currentValue = '';\r\n                }\r\n                var data = {\r\n                    fieldID: this.fieldID,\r\n                    classes: this.classes,\r\n                    currentValue: this.currentValue\r\n                };\r\n                var template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-listcheckbox-other-text' );\r\n                return template( data );\r\n            }\r\n        },\r\n\r\n        getCalcValue: function( fieldModel ) {\r\n            var calc_value = 0;\r\n            var options = fieldModel.get( 'options' );\r\n            if ( 0 != options.length ) {\r\n                _.each( fieldModel.get( 'value' ), function( val ) {\r\n                    var tmp_opt = _.find( options, function( opt ) { return opt.value == val } );\r\n                    calc_value = Number( calc_value ) + Number( tmp_opt.calc );\r\n                } );\r\n            }\r\n            return calc_value;\r\n        },\r\n\r\n        beforeUpdateField: function( el, model ) {\r\n            var selected = model.get( 'value' ) || [];\r\n            if ( typeof selected == 'string' ) selected = [ selected ];\r\n\r\n            var value = jQuery( el ).val();\r\n            var checked = jQuery( el ).prop( 'checked' );\r\n            if ( checked ) {\r\n                selected.push( value );\r\n                jQuery( el ).addClass( 'nf-checked' );\r\n                jQuery( el ).parent().find( 'label[for=\"' + jQuery( el ).prop( 'id' ) + '\"]' ).addClass( 'nf-checked-label' );\r\n            } else {\r\n                jQuery( el ).removeClass( 'nf-checked' );\r\n                jQuery( el ).parent().find( 'label[for=\"' + jQuery( el ).prop( 'id' ) + '\"]' ).removeClass( 'nf-checked-label' );\r\n                var i = selected.indexOf( value );\r\n                if( -1 != i ){\r\n                    selected.splice( i, 1 );\r\n                }\r\n            }\r\n\r\n            // if ( 1 == model.get( 'show_other' ) ) {\r\n            //     model.set( 'reRender', true );\r\n            // }\r\n\r\n            return _.clone( selected );\r\n        }\r\n    });\r\n\r\n    return controller;\r\n} );\n","define('controllers/fieldRadio',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( nfRadio.channel( 'listradio' ), 'change:modelValue', this.changeModelValue );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'listradio' ), 'init:model', this.register );\r\n\t\t\tnfRadio.channel( 'listradio' ).reply( 'get:calcValue', this.getCalcValue, this );\r\n\t\t\t\r\n\t\t\tthis.listenTo( nfRadio.channel( 'listradio' ), 'change:field', this.updateCheckedClass, this );\r\n\t\t},\r\n\r\n\t\tregister: function( model ) {\r\n\t\t\tmodel.set( 'renderOptions', this.renderOptions );\r\n\t\t\tmodel.set( 'renderOtherText', this.renderOtherText );\r\n\t\t\t/*\r\n\t\t\t * When we init a model, we need to set our 'value' to the selected option's value.\r\n\t\t\t * This is the list equivalent of a 'default value'.\r\n\t\t\t */ \r\n\t\t\tif ( 0 != model.get( 'options' ).length ) {\r\n\t\t\t\t/*\r\n\t\t\t\t * Check to see if we have a selected value.\r\n\t\t\t\t */\r\n\t\t\t\tvar selected = _.find( model.get( 'options' ), function( opt ) { return 1 == opt.selected } );\r\n\r\n\t\t\t\tif ( 'undefined' != typeof selected ) {\r\n\t\t\t\t\tmodel.set( 'value', selected.value );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tchangeModelValue: function( model ) {\r\n\t\t\tif ( 1 == model.get( 'show_other' ) ) {\r\n\t\t\t\t// model.set( 'reRender', true );\r\n\t\t\t\tmodel.trigger( 'reRender');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trenderOptions: function() {\r\n\t\t\tvar html = '';\r\n\t\t\tif ( '' == this.value ) {\r\n\t\t\t\tvar valueFound = true;\r\n\t\t\t} else {\r\n\t\t\t\tvar valueFound = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t_.each( this.options, function( option, index ) {\r\n\t\t\t\tif ( option.value == this.value ) {\r\n\t\t\t\t\tvalueFound = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/*\r\n                 * TODO: This is a bandaid fix for making sure that each option has a \"visible\" property.\r\n                 * This should be moved to creation so that when an option is added, it has a visible property by default.\r\n                 */\r\n                if ( 'undefined' == typeof option.visible ) {\r\n                    option.visible = true;\r\n                }\r\n\r\n                option.selected = false;\r\n\t\t\t\toption.fieldID = this.id;\r\n\t\t\t\toption.classes = this.classes;\r\n\t\t\t\toption.currentValue = this.value;\r\n\t\t\t\toption.index = index;\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t * If we haven't edited this field yet, use the default checked\r\n\t\t\t\t */\r\n\t\t\t\tif ( this.clean && 1 == this.selected ) {\r\n\t\t\t\t\toption.selected = true;\r\n\t\t\t\t} else if ( this.value == option.value ) {\r\n\t\t\t\t\toption.selected = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\toption.selected = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-listradio-option' );\r\n\r\n\t\t\t\thtml += template( option );\r\n\t\t\t}, this );\r\n\r\n\t\t\tif ( 1 == this.show_other ) {\r\n\t\t\t\tif ( 'nf-other' == this.value ) {\r\n\t\t\t\t\tvalueFound = false;\r\n\t\t\t\t}\r\n\t\t\t\tvar data = {\r\n\t\t\t\t\tfieldID: this.id,\r\n\t\t\t\t\tclasses: this.classes,\r\n\t\t\t\t\tcurrentValue: this.value,\r\n\t\t\t\t\trenderOtherText: this.renderOtherText,\r\n\t\t\t\t\tvalueFound: valueFound\r\n\t\t\t\t};\r\n\t\t\t\tvar template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-listradio-other' );\r\n\t\t\t\thtml += template( data );\r\n\t\t\t}\r\n\r\n\t\t\treturn html;\r\n\t\t},\r\n\r\n\t\trenderOtherText: function() {\r\n\t\t\tif ( 'nf-other' == this.currentValue || ! this.valueFound ) {\r\n\t\t\t\tif ( 'nf-other' == this.currentValue ) {\r\n\t\t\t\t\tthis.currentValue = '';\r\n\t\t\t\t}\r\n\t\t\t\tvar data = {\r\n\t\t\t\t\tfieldID: this.fieldID,\r\n\t\t\t\t\tclasses: this.classes,\r\n\t\t\t\t\tcurrentValue: this.currentValue\r\n\t\t\t\t};\r\n\t\t\t\tvar template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-listradio-other-text' );\r\n\t\t\t\treturn template( data );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetCalcValue: function( fieldModel ) {\r\n\t\t\t\r\n            /*\r\n             * Default to 0, in case we have no selection.\r\n             */\r\n            var calc_value = 0;\r\n            \r\n\t\t\tif ( 0 != fieldModel.get( 'options' ).length ) {\r\n\t\t\t\t/*\r\n\t\t\t\t * Check to see if we have a selected value.\r\n\t\t\t\t */\r\n\t\t\t\tvar selected = _.find( fieldModel.get( 'options' ), function( opt ) { return fieldModel.get( 'value' ) == opt.value } );\r\n\t\t\t\tif ( 'undefined' !== typeof selected ) {\r\n                    calc_value = selected.calc;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\treturn calc_value;\r\n\t\t},\r\n\r\n\t\tupdateCheckedClass: function( el, model ) {\r\n\t\t\tjQuery( '[name=\"' + jQuery( el ).attr( 'name' ) + '\"]' ).removeClass( 'nf-checked' );\r\n\t\t\tjQuery( el ).closest( 'ul' ).find( 'label' ).removeClass( 'nf-checked-label' );\r\n\t\t\tjQuery( el ).addClass( 'nf-checked' );\r\n\t\t\tjQuery( el ).closest( 'li' ).find( 'label[for=\"' + jQuery( el ).prop( 'id' ) + '\"]' ).addClass( 'nf-checked-label' );\r\n\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","define('controllers/fieldNumber',[], function() {\r\n    var controller = Marionette.Object.extend( {\r\n        initialize: function() {\r\n            this.listenTo( nfRadio.channel( 'number' ), 'init:model', this.maybeMinDefault );\r\n            this.listenTo( nfRadio.channel( 'number' ), 'keyup:field', this.validateMinMax );\r\n        },\r\n\r\n        maybeMinDefault: function( model ) {\r\n\r\n            if( '' == model.get( 'value' ) ){\r\n                var min = model.get( 'num_min' );\r\n                model.set( 'value', min );\r\n            }\r\n        },\r\n\r\n        validateMinMax: function( el, model ) {\r\n            var $el = jQuery( el );\r\n            var value = parseFloat( $el.val() );\r\n            var min = $el.attr( 'min' );\r\n            var max = $el.attr( 'max' );\r\n            var step = parseFloat( $el.attr( 'step' ) );\r\n\r\n            if( min && value < min ){\r\n                var fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', model.get( 'id' ) );\r\n                var formModel  = nfRadio.channel( 'app'    ).request( 'get:form',  fieldModel.get( 'formID' ) );\r\n                nfRadio.channel( 'fields' ).request( 'add:error', model.get( 'id' ), 'number-min', formModel.get( 'settings' ).fieldNumberNumMinError );\r\n            } else {\r\n                nfRadio.channel( 'fields' ).request( 'remove:error', model.get( 'id' ), 'number-min' );\r\n            }\r\n\r\n            if ( max && value > max ){\r\n                var fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', model.get( 'id' ) );\r\n                var formModel  = nfRadio.channel( 'app'    ).request( 'get:form',  fieldModel.get( 'formID' ) );\r\n                nfRadio.channel( 'fields' ).request( 'add:error', model.get( 'id' ), 'number-max', formModel.get( 'settings' ).fieldNumberNumMaxError );\r\n            } else {\r\n                nfRadio.channel( 'fields' ).request( 'remove:error', model.get( 'id' ), 'number-max' );\r\n            }\r\n\r\n            var testValue = parseInt( value * 1000000000 );\r\n            var testStep = parseInt( step * 1000000000  );\r\n\r\n            if( value && 0 !== testValue % testStep ){\r\n                var fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', model.get( 'id' ) );\r\n                var formModel  = nfRadio.channel( 'app'    ).request( 'get:form',  fieldModel.get( 'formID' ) );\r\n                nfRadio.channel( 'fields' ).request( 'add:error', model.get( 'id' ), 'number-step', formModel.get( 'settings' ).fieldNumberIncrementBy + step );\r\n            } else {\r\n                nfRadio.channel( 'fields' ).request( 'remove:error', model.get( 'id' ), 'number-step' );\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    return controller;\r\n} );\n","define( 'controllers/mirrorField',[], function() {\r\n\tvar radioChannel = nfRadio.channel( 'fields' );\r\n\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tlisteningModel: '',\r\n\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( radioChannel, 'init:model', this.registerMirror );\r\n\t\t},\r\n\r\n\t\tregisterMirror: function( model ) {\r\n\t\t\tif ( model.get( 'mirror_field' ) ) {\r\n\t\t\t\tthis.listeningModel = model;\r\n\t\t\t\tvar targetID = model.get( 'mirror_field' );\r\n\t\t\t\tthis.listenTo( nfRadio.channel( 'field-' + targetID ), 'change:modelValue', this.changeValue );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tchangeValue: function( targetModel ) {\r\n\t\t\tthis.listeningModel.set( 'value', targetModel.get( 'value' ) );\r\n\t\t\t// this.listeningModel.set( 'reRender', true );\r\n\t\t\tthis.listeningModel.trigger( 'reRender' );\r\n\t\t}\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","define( 'controllers/confirmField',[], function() {\r\n\tvar radioChannel = nfRadio.channel( 'fields' );\r\n\tvar errorID = 'confirm-mismatch';\r\n\r\n\tvar controller = Marionette.Object.extend( {\r\n\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( radioChannel, 'init:model', this.registerConfirm );\r\n\t\t\tthis.listenTo( radioChannel, 'keyup:field', this.confirmKeyup );\r\n\t\t},\r\n\r\n\t\tregisterConfirm: function( confirmModel ) {\r\n\t\t\tif ( ! confirmModel.get( 'confirm_field' ) ) return;\r\n\r\n\t\t\tthis.listenTo( nfRadio.channel( 'form' ), 'loaded', function( formModal ){\r\n\t\t\t\tthis.registerConfirmListeners( confirmModel );\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tregisterConfirmListeners: function( confirmModel ) {\r\n\t\t\t\r\n\t\t\tvar targetModel = nfRadio.channel( 'form-' + confirmModel.get( 'formID' ) ).request( 'get:fieldByKey', confirmModel.get( 'confirm_field' ) );\r\n\r\n\t\t\t//TODO: Add better handling for password confirm fields on the front end.\r\n\t\t\tif( 'undefined' == typeof targetModel ) return;\r\n\r\n\t\t\ttargetModel.set( 'confirm_with', confirmModel.get( 'id' ) );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'field-' + targetModel.get( 'id' ) ), 'change:modelValue', this.changeValue );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'field-' + confirmModel.get( 'id' ) ), 'change:modelValue', this.changeValue );\r\n\t\t},\r\n\r\n\t\tchangeValue: function( model ) {\r\n\t\t\tif ( 'undefined' == typeof model.get( 'confirm_with' ) ) {\r\n\t\t\t\tvar confirmModel = model;\r\n\t\t\t\tvar targetModel = nfRadio.channel( 'form-' + model.get( 'formID' ) ).request( 'get:fieldByKey', confirmModel.get( 'confirm_field' ) );\r\n\t\t\t} else {\r\n\t\t\t\tvar targetModel = model;\r\n\t\t\t\tvar confirmModel = radioChannel.request( 'get:field', targetModel.get( 'confirm_with' ) );\r\n\t\t\t}\r\n\t\t\tvar targetID = targetModel.get( 'id' );\r\n\t\t\tvar confirmID = confirmModel.get( 'id' );\r\n\r\n\t\t\tif ( '' == confirmModel.get( 'value' ) || confirmModel.get( 'value' ) == targetModel.get( 'value' ) ) {\r\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', confirmID, errorID );\r\n\t\t\t} else {\r\n\t\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', confirmID );\r\n\t\t\t\tvar formModel  = nfRadio.channel( 'app'    ).request( 'get:form',  fieldModel.get( 'formID' ) );\r\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'add:error', confirmID, errorID, formModel.get( 'settings' ).confirmFieldErrorMsg );\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tconfirmKeyup: function( el, model, keyCode ) {\r\n\r\n\t\t\tvar currentValue = jQuery( el ).val();\r\n\t\t\tif ( model.get( 'confirm_field' ) ) {\r\n\t\t\t\tvar confirmModel = model;\r\n\t\t\t\tvar confirmID = model.get( 'id' );\r\n\t\t\t\tvar targetModel = nfRadio.channel( 'form-' + model.get( 'formID' ) ).request( 'get:fieldByKey', confirmModel.get( 'confirm_field' ) );\r\n\t\t\t\tvar compareValue = targetModel.get( 'value' );\r\n\t\t\t\tvar confirmValue = currentValue;\r\n\t\t\t} else if ( model.get( 'confirm_with' ) ) {\r\n\t\t\t\tvar confirmModel = nfRadio.channel( 'fields' ).request( 'get:field', model.get( 'confirm_with' ) );\r\n\t\t\t\tvar confirmID = confirmModel.get( 'id' );\r\n\t\t\t\tvar confirmValue = confirmModel.get( 'value' );\r\n\t\t\t\tvar compareValue = confirmValue;\r\n\t\t\t}\r\n\r\n\t\t\tif ( 'undefined' !== typeof confirmModel ) {\r\n\t\t\t\tif ( '' == confirmValue ) {\r\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', confirmID, errorID );\r\n\t\t\t\t} else if ( currentValue == compareValue ) {\r\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', confirmID, errorID );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', confirmID );\r\n\t\t\t\t\tvar formModel  = nfRadio.channel( 'app'    ).request( 'get:form',  fieldModel.get( 'formID' ) );\r\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'add:error', confirmID, errorID, formModel.get( 'settings' ).confirmFieldErrorMsg );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","define('controllers/updateFieldModel',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tnfRadio.channel( 'nfAdmin' ).reply( 'update:field', this.updateField );\r\n\t\t},\r\n\r\n\t\tupdateField: function( model, value ) {\r\n\t\t\tif ( ! model.get( 'isUpdated' ) ) {\r\n\t\t\t\tmodel.set( 'value', value );\r\n\t\t\t\tmodel.set( 'isUpdated', true );\r\n\t\t\t\t/*\r\n\t\t\t\t * If we're working with an array, it won't trigger a change event on the value attribute.\r\n\t\t\t\t * Instead, we have to manually trigger a change event.\r\n\t\t\t\t */ \r\n\t\t\t\tif ( _.isArray( value ) ) {\r\n\t\t\t\t\tmodel.trigger( 'change:value', model );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","define('controllers/submitButton',['controllers/submitButton'], function( submitButton ) {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tbound: {},\r\n\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( nfRadio.channel( 'submit' ), 'init:model', this.registerHandlers );\r\n\t\t},\r\n\r\n\t\tregisterHandlers: function( fieldModel ) {\r\n\t\t\tif ( 'undefined' != typeof this.bound[ fieldModel.get( 'id' ) ] ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.listenTo( nfRadio.channel( 'field-' + fieldModel.get( 'id' ) ), 'click:field', this.click, this );\r\n\t\t\t/*\r\n\t\t\t * Register an interest in the 'before:submit' event of our form.\r\n\t\t\t */\r\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ), 'before:submit', this.beforeSubmit, fieldModel );\r\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ), 'submit:failed', this.resetLabel, fieldModel );\r\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ), 'submit:response', this.resetLabel, fieldModel );\r\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ), 'enable:submit', this.maybeEnable, fieldModel );\r\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ), 'disable:submit', this.maybeDisable, fieldModel );\r\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ), 'processingLabel', this.processingLabel, fieldModel );\r\n\r\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'fields' ), 'add:error', this.maybeDisable, fieldModel );\r\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'fields' ), 'remove:error', this.maybeEnable, fieldModel );\r\n\t\t\t\r\n\t\t\tthis.bound[ fieldModel.get( 'id') ] = true;\r\n\t\t},\r\n\r\n\t\tclick: function( e, fieldModel ) {\r\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', fieldModel.get( 'formID' ) );\r\n\t\t\tnfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ).request( 'submit', formModel );\r\n\t\t},\r\n\r\n\t\tbeforeSubmit: function() {\r\n\t\t\tthis.set( 'disabled', true );\r\n\t\t\tnfRadio.channel( 'form-' + this.get( 'formID' ) ).trigger( 'processingLabel', this );\r\n\t\t},\r\n\r\n\t\tmaybeDisable: function( fieldModel ) {\r\n\r\n\t\t\tif( 'undefined' != typeof fieldModel && fieldModel.get( 'formID' ) != this.get( 'formID' ) ) return;\r\n\r\n\t\t\tthis.set( 'disabled', true );\r\n\t\t\tthis.trigger( 'reRender' );\r\n\t\t},\r\n\r\n\t\tmaybeEnable: function( fieldModel ) {\r\n\t\t\t/*\r\n\t\t\t * If the field reporting the error is not on the same form as the submit button, return false;\r\n\t\t\t */\r\n\t\t\tif ( 'undefined' != typeof fieldModel && fieldModel.get( 'formID' ) != this.get( 'formID' ) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', this.get( 'formID' ) );\r\n\t\t\tif ( 0 == _.size( formModel.get( 'fieldErrors' ) ) ) {\r\n\t\t\t\tthis.set( 'disabled', false );\r\n\t\t\t\tthis.trigger( 'reRender' );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tprocessingLabel: function() {\r\n\t\t\tif ( this.get( 'label' ) == this.get( 'processing_label' ) ) return false;\r\n\r\n\t\t\tthis.set( 'oldLabel', this.get( 'label' ) );\r\n\t\t\tthis.set( 'label', this.get( 'processing_label' ) );\r\n\t\t\tthis.trigger( 'reRender' );\r\n\t\t},\r\n\r\n\t\tresetLabel: function( response ) {\r\n\t\t\tif ( 'undefined' != typeof this.get( 'oldLabel' ) ) {\r\n\t\t\t\tthis.set( 'label', this.get( 'oldLabel' ) );\r\n\t\t\t}\r\n\t\t\tthis.set( 'disabled', false );\r\n\t\t\tthis.trigger( 'reRender' );\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","define('controllers/submitDebug',[], function() {\r\n    var controller = Marionette.Object.extend( {\r\n        initialize: function() {\r\n            this.listenTo( nfRadio.channel( 'forms' ), 'submit:response', this.submitDebug );\r\n        },\r\n\r\n        submitDebug: function( response, textStatus, jqXHR, formID ) {\r\n\r\n            if( 'undefined' == typeof response.debug ) return;\r\n\r\n            /* Form Debug Messages */\r\n            if( 'undefined' != typeof response.debug.form ) {\r\n                var debugMessages = '';\r\n                _.each(response.debug.form, function (message, index) {\r\n                    debugMessages += message + '<br />';\r\n                });\r\n                jQuery('.nf-debug-msg').html(debugMessages);\r\n            }\r\n\r\n            /* Console Debug Messages */\r\n            if( 'undefined' != typeof response.debug.console ) {\r\n                var style = '';\r\n                console.log( '%c%s', style, 'NINJA SUPPORT' );\r\n                _.each(response.debug.console, function (message, index) {\r\n                    console.log( message );\r\n                });\r\n                console.log( '%c%s', style, 'END NINJA SUPPORT' );\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    return controller;\r\n} );\n","define('controllers/getFormErrors',[], function() {\r\n\tvar radioChannel = nfRadio.channel( 'fields' );\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function( model ) {\r\n\t\t\tnfRadio.channel( 'form' ).reply( 'get:errors', this.getFormErrors );\r\n\t\t},\r\n\r\n\t\tgetFormErrors: function( formID ) {\r\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', formID );\r\n\t\t\tvar errors = false;\r\n\t\t\t\r\n\t\t\tif ( formModel ) {\r\n\t\t\t\t/*\r\n\t\t\t\t * Check to see if we have any errors on our form model.\r\n\t\t\t\t */\r\n\t\t\t\tif ( 0 !== formModel.get( 'errors' ).length ) {\r\n\t\t\t\t\t_.each( formModel.get( 'errors' ).models, function( error ) {\r\n\t\t\t\t\t\terrors = errors || {};\r\n\t\t\t\t\t\terrors[ error.get( 'id' ) ] = error.get( 'msg' );\r\n\t\t\t\t\t} );\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_.each( formModel.get( 'fields' ).models, function( field ) {\r\n\t\t\t\t\tif ( field.get( 'type' ) != 'submit' && field.get( 'errors' ).length > 0 ) {\r\n\t\t\t\t\t\terrors = errors || {};\r\n\t\t\t\t\t\terrors[ field.get( 'id' ) ] = field.get( 'errors' );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t\treturn errors;\r\n\t\t},\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","define('controllers/validateRequired',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'blur:field', this.validateRequired );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'change:field', this.validateRequired );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'keyup:field', this.validateKeyup );\r\n\r\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'change:modelValue', this.validateModelData );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'submit' ), 'validate:field', this.validateModelData );\r\n\t\t},\r\n\t\t\r\n\t\tvalidateKeyup: function( el, model, keyCode ) {\r\n\t\t\tif ( 1 != model.get( 'required' ) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! model.get( 'clean' ) ) {\r\n\t\t\t\tthis.validateRequired( el, model );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tvalidateRequired: function( el, model ) {\r\n\t\t\tif ( 1 != model.get( 'required' ) || ! model.get( 'visible' ) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar currentValue = jQuery( el ).val();\r\n\t\t\tvar customReqValidation = nfRadio.channel( model.get( 'type' ) ).request( 'validate:required', el, model );\r\n\t\t\tvar defaultReqValidation = true;\r\n\r\n\t\t\tvar maskPlaceholder = model.get( 'mask' );\r\n\t\t\tif ( maskPlaceholder ) {\r\n\t\t\t\tmaskPlaceholder = maskPlaceholder.replace( /9/g, '_' );\r\n\t\t\t\tmaskPlaceholder = maskPlaceholder.replace( /a/g, '_' );\r\n\t\t\t\tmaskPlaceholder = maskPlaceholder.replace( /\\*/g, '_' );\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! jQuery.trim( currentValue ) || currentValue == maskPlaceholder ) {\r\n\t\t\t\tdefaultReqValidation = false;\r\n\t\t\t}\r\n\r\n\t\t\tif ( 'undefined' !== typeof customReqValidation ) {\r\n\t\t\t\tvar valid = customReqValidation;\r\n\t\t\t} else {\r\n\t\t\t\tvar valid = defaultReqValidation;\r\n\t\t\t}\r\n\r\n\t\t\tthis.maybeError( valid, model );\r\n\t\t},\r\n\r\n\t\tvalidateModelData: function( model ) {\r\n\t\t\tif ( 1 != model.get( 'required' ) || ! model.get( 'visible' ) || model.get( 'clean' ) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t/*\r\n\t\t\t * If we already have a required error on this model, return false\r\n\t\t\t */\r\n\t\t\tif ( model.get( 'errors' ).get( 'required-error' ) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tcurrentValue = model.get( 'value' );\r\n\r\n\t\t\tvar defaultReqValidation = true;\r\n\r\n\t\t\tif ( ! jQuery.trim( currentValue ) ) {\r\n\t\t\t\tdefaultReqValidation = false;\r\n\t\t\t}\r\n\r\n\t\t\tvar customReqValidation = nfRadio.channel( model.get( 'type' ) ).request( 'validate:modelData', model );\r\n\t\t\tif ( 'undefined' !== typeof customReqValidation ) {\r\n\t\t\t\tvar valid = customReqValidation;\r\n\t\t\t} else {\r\n\t\t\t\tvar valid = defaultReqValidation;\r\n\t\t\t}\r\n\r\n\t\t\tthis.maybeError( valid, model );\r\n\r\n\t\t},\r\n\r\n\t\tmaybeError: function( valid, model ) {\r\n\t\t\tif ( ! valid ) {\r\n\r\n\t\t\t\tvar formModel  = nfRadio.channel( 'form-' + model.get( 'formID' ) ).request( 'get:form' );\r\n\r\n\t\t\t\tif( 'undefined' != typeof formModel ) {\r\n\t\t\t\t\tnfRadio.channel('fields').request('add:error', model.get('id'), 'required-error', formModel.get('settings').validateRequiredField);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', model.get( 'id' ), 'required-error' );\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t});\r\n\r\n\treturn controller;\r\n} );\r\n\n","define('controllers/submitError',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( nfRadio.channel( 'forms' ), 'submit:response', this.submitErrors );\r\n\t\t},\r\n\r\n\t\tsubmitErrors: function( response, textStatus, jqXHR, formID ) {\r\n\r\n\t\t\tif ( _.size( response.errors.fields ) > 0 ) {\r\n\t\t\t\t_.each( response.errors.fields, function( data, fieldID ) {\r\n                    if ( typeof( data ) === 'object' ) {\r\n                        nfRadio.channel( 'fields' ).request( 'add:error', fieldID, data.slug, data.message );\r\n                    } else {\r\n                        nfRadio.channel( 'fields' ).request( 'add:error', fieldID, 'required-error', data );\r\n                    }\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\tif ( _.size( response.errors.form ) > 0 ) {\r\n\t\t\t\t_.each( response.errors.form, function( msg, errorID ) {\r\n\t\t\t\t\tnfRadio.channel( 'form-' + formID ).request( 'remove:error', errorID );\r\n\t\t\t\t\tnfRadio.channel( 'form-' + formID ).request( 'add:error', errorID, msg );\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\tif ( 'undefined' != typeof response.errors.last ) {\r\n\t\t\t\tif( 'undefined' != typeof response.errors.last.message ) {\r\n\t\t\t\t\tvar style = 'background: rgba( 255, 207, 115, .5 ); color: #FFA700; display: block;';\r\n\t\t\t\t\tconsole.log( '%c NINJA FORMS SUPPORT: SERVER ERROR', style );\r\n\t\t\t\t\tconsole.log( response.errors.last.message );\r\n\t\t\t\t\tconsole.log( '%c END SERVER ERROR MESSAGE', style );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * TODO: This needs to be re-worked for backbone. It's not dynamic enough.\r\n\t\t\t */\r\n\t\t\t/*\r\n\t\t\t * Re-show any hidden fields during a form submission re-start.\r\n\t\t\t */\r\n\t\t\tjQuery( '#nf-form-' + formID + '-cont .nf-field-container' ).show();\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\r\n\n","define('controllers/actionRedirect',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( nfRadio.channel( 'forms' ), 'submit:response', this.actionRedirect );\r\n\t\t},\r\n\r\n\t\tactionRedirect: function( response ) {\r\n\r\n\t\t\tif ( 'undefined' != typeof response.data.halt && 'undefined' != typeof response.data.halt.redirect && '' != response.data.halt.redirect ) {\r\n\t\t\t\twindow.location = response.data.halt.redirect;\r\n\t\t\t}\r\n\r\n\t\t\tif ( _.size( response.errors ) == 0 && 'undefined' != typeof response.data.actions ) {\r\n\r\n\t\t\t\tif ( 'undefined' != typeof response.data.actions.redirect && '' != response.data.actions.redirect ) {\r\n\t\t\t\t\twindow.location = response.data.actions.redirect;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","define('controllers/actionSuccess',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( nfRadio.channel( 'forms' ), 'submit:response', this.actionSubmit );\r\n\t\t},\r\n\r\n\t\tactionSubmit: function( response ) {\r\n\t\t\tif ( _.size( response.errors ) == 0 && 'undefined' != typeof response.data.actions ) {\r\n\t\t\t\tif ( 'undefined' != typeof response.data.actions.success_message && '' != response.data.actions.success_message ) {\r\n\t\t\t\t\tvar form_id = response.data.form_id;\r\n\t\t\t\t\tvar success_message = jQuery( '#nf-form-' + form_id + '-cont .nf-response-msg' );\r\n\t\t\t\t\t\r\n\t\t\t\t\tsuccess_message.html( response.data.actions.success_message ).show();\r\n\t\t\t\t\t\r\n\t\t\t\t\t//Let's check if the success message is already fully visible in the viewport without scrolling\r\n\t\t\t\t\tvar top_of_success_message = success_message.offset().top;\r\n\t\t\t\t\tvar bottom_of_success_message = success_message.offset().top + success_message.outerHeight();\r\n\t\t\t\t\tvar bottom_of_screen = jQuery(window).scrollTop() + jQuery(window).height();\r\n\t\t\t\t\tvar top_of_screen = jQuery(window).scrollTop();\r\n\r\n\t\t\t\t\tvar the_element_is_visible = ((bottom_of_screen > bottom_of_success_message) && (top_of_screen < top_of_success_message));\r\n\r\n\t\t\t\t\tif(!the_element_is_visible){\r\n\t\t\t\t\t\t//The element isn't visible, so let's scroll to the success message as in the previous release, but with a short animation\r\n\t\t\t\t\t\tjQuery('html, body').animate({\r\n\t\t\t\t\t\t\tscrollTop: ( success_message.offset().top - 50 )\r\n\t\t\t\t\t\t}, 300 );\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\r\n\n","define('controllers/fieldSelect',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\r\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'init:model', function( model ){\r\n\t\t\t\tif( 'list' == model.get( 'parentType' ) ) this.register( model );\r\n\t\t\t}, this );\r\n\r\n\t\t\tnfRadio.channel( 'listselect' ).reply( 'get:calcValue', this.getCalcValue, this );\r\n\t\t\tnfRadio.channel( 'listmultiselect' ).reply( 'get:calcValue', this.getCalcValue, this );\r\n\t\t},\r\n\r\n\t\tregister: function( model ) {\r\n\t\t\tmodel.set( 'renderOptions', this.renderOptions );\r\n\t\t\tmodel.set( 'renderOtherAttributes', this.renderOtherAttributes );\r\n\t\t\t/*\r\n\t\t\t * When we init a model, we need to set our 'value' to the selected option's value.\r\n\t\t\t * This is the list equivalent of a 'default value'.\r\n\t\t\t */ \r\n\t\t\tif ( 0 != model.get( 'options' ).length ) {\r\n\t\t\t\t/*\r\n\t\t\t\t * Check to see if this is a multi-select list.\r\n\t\t\t\t */\r\n\t\t\t\tif ( 'listmultiselect' == model.get( 'type' ) ) {\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * We're using a multi-select, so we need to check out any selected options and add them together.\r\n\t\t\t\t\t */\r\n\t\t\t\t\tvar selected = _.filter( model.get( 'options' ), function( opt ) { return 1 == opt.selected } );\r\n\t\t\t\t\tselected = _.map( selected, function( opt ) { return opt.value } );\r\n\t\t\t\t\tvar value = selected;\r\n\t\t\t\t} else if ( 'listradio' !== model.get( 'type' ) ) {\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * Check to see if we have a selected value.\r\n\t\t\t\t\t */\r\n\t\t\t\t\tvar selected = _.find( model.get( 'options' ), function( opt ) { return 1 == opt.selected } );\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * We don't have a selected value, so use our first option.\r\n\t\t\t\t\t */\r\n\t\t\t\t\tif ( 'undefined' == typeof selected ) {\r\n\t\t\t\t\t\tselected = _.first( model.get( 'options' ) );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( 'undefined' != typeof selected && 'undefined' != typeof selected.value ) {\r\n\t\t\t\t\t\tvar value = selected.value;\r\n\t\t\t\t\t} else if ( 'undefined' != typeof selected ) {\r\n\t\t\t\t\t\tvar value = selected.label;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( 'undefined' != typeof selected ) {\r\n\t\t\t\t\tmodel.set( 'value', value );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trenderOptions: function() {\r\n\t\t\tvar html = '';\r\n\t\t\t_.each( this.options, function( option ) {\r\n\t\t\t\t\r\n\r\n\t\t\t\tif ( ( 1 == option.selected && this.clean ) ) {\r\n\t\t\t\t\tvar selected = true;\r\n\t\t\t\t} else if ( _.isArray( this.value ) && -1 != _.indexOf( this.value, option.value ) ) {\r\n\t\t\t\t\tvar selected = true;\r\n\t\t\t\t} else if ( ! _.isArray( this.value ) && option.value == this.value ) {\r\n\t\t\t\t\tvar selected = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar selected = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/*\r\n                 * TODO: This is a bandaid fix for making sure that each option has a \"visible\" property.\r\n                 * This should be moved to creation so that when an option is added, it has a visible property by default.\r\n                 */\r\n                if ( 'undefined' == typeof option.visible ) {\r\n                    option.visible = true;\r\n                }\r\n\r\n\t\t\t\toption.selected = selected;\r\n\t\t\t\toption.fieldID = this.id;\r\n\t\t\t\toption.classes = this.classes;\r\n\t\t\t\toption.currentValue = this.value;\r\n\r\n\t\t\t\tvar template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-listselect-option' );\r\n\t\t\t\thtml += template( option );\r\n\t\t\t}, this );\r\n\r\n\t\t\treturn html;\r\n\t\t},\r\n\r\n\t\trenderOtherAttributes: function() {\r\n\t\t\tvar otherAttributes = '';\r\n\r\n\t\t\tif( 'listmultiselect' == this.type ){\r\n\t\t\t\totherAttributes = otherAttributes + ' multiple';\r\n\t\t\t}\r\n\r\n\t\t\treturn otherAttributes;\r\n\t\t},\r\n\r\n\t\tgetCalcValue: function( fieldModel ) {\r\n\t\t\tvar calc_value = 0;\r\n\t\t\tvar options = fieldModel.get( 'options' );\r\n\t\t\tif ( 0 != options.length ) {\r\n\t\t\t\t/*\r\n\t\t\t\t * Check to see if this is a multi-select list.\r\n\t\t\t\t */\r\n\t\t\t\tif ( 'listmultiselect' == fieldModel.get( 'type' ) ) {\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * We're using a multi-select, so we need to check out any selected options and add them together.\r\n\t\t\t\t\t */\r\n\t\t\t\t\t_.each( fieldModel.get( 'value' ), function( val ) {\r\n\t\t\t\t\t\tvar tmp_opt = _.find( options, function( opt ) { return opt.value == val } );\r\n\t\t\t\t\t\tcalc_value += tmp_opt.calc;\r\n\t\t\t\t\t} );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * We are using a single select, so our selected option is in the 'value' attribute.\r\n\t\t\t\t\t */\r\n\t\t\t\t\tvar selected = _.find( options, function( opt ) { return fieldModel.get( 'value' ) == opt.value } );\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * We don't have a selected value, so use our first option.\r\n\t\t\t\t\t */\r\n\t\t\t\t\tif ( 'undefined' == typeof selected ) {\r\n\t\t\t\t\t\tselected = fieldModel.get( 'options' )[0];\r\n\t\t\t\t\t}\t\t\r\n\t\t\t\t\tcalc_value  = selected.calc;\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn calc_value;\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","define('controllers/coreSubmitResponse',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( nfRadio.channel( 'forms' ), 'submit:response', this.actionSubmit );\r\n\t\t},\r\n\r\n\t\tactionSubmit: function( response ) {\r\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', response.data.form_id );\r\n\t\t\t/*\r\n\t\t\t * If we have errors, don't hide or clear.\r\n\t\t\t */\r\n\t\t\tif ( 0 != _.size( response.errors ) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif ( 1 == response.data.settings.clear_complete ) {\r\n\t\t\t\t// nfRadio.channel( 'form-' + response.data.form_id ).trigger( 'reset' );\r\n\t\t\t\tformModel.get( 'fields' ).reset( formModel.get( 'loadedFields' ) );\r\n\t\t\t}\r\n\r\n\t\t\tif ( 1 == response.data.settings.hide_complete ) {\r\n\t\t\t\t/**\r\n\t\t\t\t * TODO: This needs to be re-worked for backbone. It's not dynamic enough.\r\n\t\t\t\t */\r\n\t\t\t\tformModel.trigger( 'hide' );\r\n\t\t\t\t// jQuery( '.nf-fields' ).hide();\r\n\t\t\t\t// jQuery( '.nf-form-title' ).hide();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","define('controllers/fieldProduct',[], function() {\r\n    var controller = Marionette.Object.extend( {\r\n        initialize: function() {\r\n            this.listenTo( nfRadio.channel( 'product' ), 'init:model', this.register );\r\n            nfRadio.channel( 'product' ).reply( 'get:calcValue', this.getCalcValue, this );\r\n        },\r\n\r\n        register: function( model ) {\r\n            model.set( 'renderProductQuantity', this.renderProductQuantity );\r\n            model.set( 'renderProduct', this.renderProduct );\r\n            model.set( 'renderOptions', this.renderOptions );\r\n        },\r\n\r\n        renderProduct: function(){\r\n            switch( this.product_type ) {\r\n                case 'user':\r\n                    var template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-textbox' );\r\n                    return template( this );\r\n                    break;\r\n                case 'hidden':\r\n                    var template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-hidden' );\r\n                    return template( this );\r\n                    break;\r\n\r\n                case 'dropdown':\r\n                    var template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-product-dropdown' );\r\n                    return template( this );\r\n                    break;\r\n                default:\r\n                    var template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-product-single' );\r\n                    return template( this );\r\n            }\r\n        },\r\n\r\n        renderProductQuantity: function(){\r\n            if ( 1 == this.product_use_quantity ) {\r\n                var template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-product-quantity' );\r\n                return template( this );\r\n            }\r\n        },\r\n\r\n        renderOptions: function() {\r\n            var that = this;\r\n            var html = '';\r\n            _.each( this.options, function( option ) {\r\n                if ( 1 == option.selected ) {\r\n                    var selected = true;\r\n                } else {\r\n                    var selected = false;\r\n                }\r\n\r\n                option.selected = selected;\r\n                option.fieldID = that.id;\r\n                option.classes = that.classes;\r\n                option.currentValue = that.value;\r\n\r\n                var template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-product-' + that.product_type + '-option' );\r\n                html += template( option );\r\n            } );\r\n\r\n            return html;\r\n        },\r\n\r\n        getCalcValue: function( fieldModel ) {\r\n\r\n            var product_price = fieldModel.get( 'product_price' );\r\n            var product_quantity = fieldModel.get( 'value' );\r\n\r\n            return product_price * product_quantity;\r\n        }\r\n    });\r\n\r\n    return controller;\r\n} );\r\n\n","define('controllers/fieldTotal',[], function() {\r\n    var controller = Marionette.Object.extend( {\r\n\r\n        totalModel: {},\r\n\r\n        productTotals: {},\r\n\r\n        initialize: function() {\r\n            this.listenTo( nfRadio.channel( 'total' ), 'init:model', this.register );\r\n            this.listenTo( nfRadio.channel( 'shipping' ), 'init:model', this.registerShipping );\r\n        },\r\n\r\n        register: function( totalModel ){\r\n            this.totalModel = totalModel;\r\n\r\n            var formID = totalModel.get( 'formID' );\r\n            this.listenTo( nfRadio.channel( 'form-' + formID ), 'loaded', this.onFormLoaded );\r\n\r\n            this.listenTo( nfRadio.channel( 'product' ), 'change:modelValue', this.onChangeProduct );\r\n            this.listenTo( nfRadio.channel( 'quantity' ), 'change:modelValue', this.onChangeQuantity );\r\n        },\r\n\r\n        registerShipping: function( shippingModel ){\r\n            this.shippingCost = shippingModel.get( 'shipping_cost' );\r\n        },\r\n\r\n        onFormLoaded: function( formModel ){\r\n\r\n            var fieldModels = formModel.get( 'fields' ).models;\r\n\r\n            var productFields = {};\r\n            var quantityFields = {};\r\n\r\n            for( var model in fieldModels ){\r\n\r\n                var field = fieldModels[ model ];\r\n                var fieldID = field.get( 'id' );\r\n\r\n                // TODO: Maybe use switch\r\n                if( 'product' == field.get( 'type' ) ){\r\n                    productFields[ fieldID ] = field;\r\n                } else if( 'quantity' == field.get( 'type' ) ){\r\n                    var productID = field.get( 'product_assignment' );\r\n                    quantityFields[ productID ] = field;\r\n                }\r\n            }\r\n\r\n            for( var productID in productFields ){\r\n\r\n                var product = productFields[ productID ];\r\n\r\n                var productPrice = Number( product.get( 'product_price' ) );\r\n\r\n                if( quantityFields[ productID ] ){\r\n\r\n                    productPrice *= quantityFields[ productID ].get( 'value' );\r\n\r\n                } else if( 1 == product.get( 'product_use_quantity' ) ){\r\n\r\n                    productPrice *= product.get( 'value' );\r\n\r\n                }\r\n\r\n                this.productTotals[ productID ] = productPrice;\r\n            }\r\n\r\n            this.updateTotal();\r\n        },\r\n\r\n        onChangeProduct: function( model ){\r\n            var productID = model.get( 'id' );\r\n            var productPrice = Number( model.get( 'product_price' ) );\r\n            var productQuantity = Number( model.get( 'value' ) );\r\n            var newTotal = productQuantity * productPrice;\r\n            this.productTotals[ productID ] = newTotal;\r\n\r\n            this.updateTotal();\r\n        },\r\n\r\n        onChangeQuantity: function( model ){\r\n            var productID = model.get( 'product_assignment' );\r\n            var productField = nfRadio.channel( 'fields' ).request( 'get:field', productID );\r\n            var productPrice = Number( productField.get( 'product_price' ) );\r\n\r\n            var quantity = Number( model.get( 'value' ) );\r\n\r\n            var newTotal = quantity * productPrice;\r\n\r\n            this.productTotals[ productID ] = newTotal;\r\n\r\n            this.updateTotal();\r\n        },\r\n\r\n        updateTotal: function(){\r\n\r\n            var newTotal = 0;\r\n\r\n            for( var product in this.productTotals ){\r\n                newTotal += Number( this.productTotals[ product ] );\r\n            }\r\n\r\n            if( newTotal && this.shippingCost ) {\r\n                // Only add shipping if there is a cost.\r\n                newTotal += Number(this.shippingCost);\r\n            }\r\n\r\n            this.totalModel.set( 'value', newTotal.toFixed( 2 ) );\r\n            this.totalModel.trigger( 'reRender' );\r\n        }\r\n    });\r\n\r\n    return controller;\r\n});\n","define('controllers/fieldQuantity',[], function() {\r\n    var controller = Marionette.Object.extend( {\r\n\r\n        initialize: function() {\r\n            this.listenTo( nfRadio.channel( 'quantity' ), 'init:model', this.registerQuantity );\r\n        },\r\n\r\n        registerQuantity: function( model ){\r\n            var productID = model.get( 'product_assignment' );\r\n            var product = nfRadio.channel( 'fields' ).request( 'get:field', productID );\r\n\r\n            if( product ) {\r\n                product.set('product_use_quantity', 0);\r\n            }\r\n        },\r\n\r\n    });\r\n\r\n    return controller;\r\n});\n","/**\r\n * Model that represents a calculation.\r\n *\r\n * On init, we trigger a radio message so that controllers can do things when a calc model inits.\r\n */\r\ndefine( 'models/calcModel',[], function() {\r\n\tvar model = Backbone.Model.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\t// Set our form id\r\n\t\t\tthis.set( 'formID', this.collection.options.formModel.get( 'id' ) );\r\n\t\t\t// Set our initial fields object to empty. This will hold our key/value pairs.\r\n\t\t\tthis.set( 'fields', {} );\r\n\t\t\t// Trigger a radio message to let controllers know we've inited this model.\r\n\t\t\tnfRadio.channel( 'calc' ).trigger( 'init:model', this );\r\n\t\t\t// When we change the value of this calculation, send out a radio message\r\n\t\t\tthis.on( 'change:value', this.changeValue, this );\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Trigger a radio message when a field present in our calculation changes\r\n\t\t *\r\n\t\t * The listener that triggers/calls this function is in controllers/calculations\r\n\t\t * \r\n\t\t * @since  3.0\r\n\t\t * @return void\r\n\t\t */\r\n\t\tchangeField: function( fieldModel ) {\r\n\t\t\tnfRadio.channel( 'calc' ).trigger( 'change:field', this, fieldModel );\r\n\t\t},\r\n\r\n\t\tchangeCalc: function( targetCalcModel ) {\r\n\t\t\tnfRadio.channel( 'calc' ).trigger( 'change:calc', this, targetCalcModel );\r\n\t\t},\r\n\r\n\t\tchangeValue: function() {\r\n\t\t\tnfRadio.channel( 'calc' ).trigger( 'change:value', this );\r\n\t\t}\r\n\t} );\r\n\r\n\treturn model;\r\n} );\r\n\n","define( 'models/calcCollection',['models/calcModel'], function( CalcModel ) {\r\n\tvar collection = Backbone.Collection.extend( {\r\n\t\tmodel: CalcModel,\r\n\t\tcomparator: 'order',\r\n\r\n\t\tinitialize: function( models, options ) {\r\n\t\t\tthis.options = options;\r\n            _.each( models, function( model ) {\r\n            \tif( 'undefined' == typeof model.dec ) return;\r\n                if ( '' === model.dec.trim() ) model.dec = 2;\r\n                model.dec = parseInt( model.dec );\r\n            } );\r\n\t\t\t/*\r\n\t\t\t * Respond to requests for our calc model\r\n\t\t\t */\r\n\t\t\tnfRadio.channel( 'form-' + options.formModel.get( 'id' ) ).reply( 'get:calc', this.getCalc, this );\r\n\t\t},\r\n\r\n\t\tgetCalc: function( key ) {\r\n\t\t\treturn this.findWhere( { name: key } );\r\n\t\t}\r\n\t} );\r\n\treturn collection;\r\n} );\n","/**\r\n * Controller responsible for keeping up with calculations.\r\n */\r\ndefine('controllers/calculations',['models/calcCollection'], function( CalcCollection ) {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tthis.calcs = {};\r\n\t\t\tthis.displayFields = {};\r\n\t\t\t// When our form initialises, check to see if there are any calculations that need to be tracked.\r\n\t\t\tthis.listenTo( nfRadio.channel( 'form' ), 'loaded', this.registerCalcs );\r\n\r\n\t\t\t// When a calc model is initialised, run a setup function.\r\n\t\t\t// this.listenTo( nfRadio.channel( 'calc' ), 'init:model', this.setupCalc );\r\n\r\n\t\t\t// When a field referenced by a calc model changes, update our calc.\r\n\t\t\tthis.listenTo( nfRadio.channel( 'calc' ), 'change:field', this.changeField );\r\n\r\n\t\t\t// When a calculation referenced by a calc model changes, update our calc.\r\n\t\t\tthis.listenTo( nfRadio.channel( 'calc' ), 'change:calc', this.changeCalc );\r\n\r\n\t\t\t/*\r\n\t\t\t * Listen to our field model init for fields that want to display calc values.\r\n\t\t\t * If that field has a calc merge tag, replace it with the default calc value.\r\n\t\t\t */\r\n\t\t\tvar that = this;\r\n\t\t\t_.each( nfFrontEnd.use_merge_tags.calculations, function( fieldType ) {\r\n\t\t\t\tthat.listenTo( nfRadio.channel( 'fields-' + fieldType ), 'init:model', that.initDisplayField );\r\n\t\t\t} );\r\n\t\t\t\r\n\t\t\t// When we change our calc value, update any display fields.\r\n\t\t\tthis.listenTo( nfRadio.channel( 'calc' ), 'change:value', this.updateDisplayFields );\r\n\r\n\t\t\t// Set an init variable so that we only call reRender on the display field on change, not on init.\r\n\t\t\tthis.init = {};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * When our form loads, create a collection out of any calculations.\r\n\t\t * \r\n\t\t * @since  3.0\r\n\t\t * @param  backbone.model formModel\r\n\t\t * @return void\r\n\t\t */\r\n\t\tregisterCalcs: function( formModel ) {\r\n\t\t\tvar calcCollection = new CalcCollection( formModel.get( 'settings' ).calculations, { formModel: formModel } );\r\n\t\t\tthis.calcs[ formModel.get( 'id' ) ] = calcCollection;\r\n\t\t\tvar that = this;\r\n\r\n\t\t\t_.each( calcCollection.models, function( calcModel ) {\r\n\t\t\t\t/*\r\n\t\t\t\t * We set a property on our init variable for the calc model we're looping over.\r\n\t\t\t\t * This property is set to true so that when we make changes to the calc model on the next line\r\n\t\t\t\t * the field view doesn't try to redraw itself.\r\n\t\t\t\t * If we don't do this, the 'reRender' attribute of the model will be set before the view is initialized,\r\n\t\t\t\t * which means that setting 'reRender' to true will never re-render the view.\r\n\t\t\t\t */\r\n\t\t\t\tthat.init[ calcModel.get( 'name' ) ] = true;\r\n\t\t\t\t// Setup our calculation models with initial values and register listeners for calc-related fields.\r\n\t\t\t\tthat.setupCalc( calcModel );\r\n\t\t\t} );\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * When a calculation model is instantiated from the registerCalcs function:\r\n\t\t *\r\n\t\t * Use a regex to get an array of the field keys\r\n\t\t * Setup an initial key/values array\r\n\t\t * Check for any references to other calculations\r\n\t\t * Set the initial value of our calculation\r\n\t\t * \r\n\t\t * @since  3.0\r\n\t\t * @param  backbone.model calcModel\r\n\t\t * @return void\r\n\t\t */\r\n\t\tsetupCalc: function( calcModel ) {\r\n\t\t\t// Setup our that var so we can access 'this' context in our loop.\r\n\t\t\tvar that = this;\r\n\t\t\t// Get our equation\r\n\t\t\tvar eq = calcModel.get( 'eq' );\r\n\t\t\t// We want to keep our original eq intact, so we use a different var for string replacment.\r\n\t\t\tvar eqValues = eq;\r\n            // Store the name for debugging later.\r\n            var calcName = calcModel.get( 'name' );\r\n\r\n\t\t\t/* TODO:\r\n\t\t\t * It might be possible to refactor these two if statements.\r\n\t\t\t * The difficulty is that each has a different method of retreiving the specific data model.\r\n\t\t\t */\r\n\t\t\t// Check to see if we have any field merge tags in our equation.\r\n\t\t\tvar fields = eq.match( new RegExp( /{field:(.*?)}/g ) );\r\n\t\t\tif ( fields ) {\r\n\t\t\t\t/*\r\n\t\t\t\t * fields is now an array of field keys that looks like:\r\n\t\t\t\t * ['{field:key'], ['{field:key'], etc.\r\n\t\t\t\t *\r\n\t\t\t\t * We need to run a function with each of our field keys to setup our field key array and hook up our field change listner.\r\n\t\t\t\t */\r\n\t\t\t\t\r\n\t\t\t\tfields = fields.map( function( field ) {\r\n\t\t\t\t\t// field will be {field:key}\r\n\t\t\t\t\tvar key = field.replace( ':calc}', '' ).replace( '}', '' ).replace( '{field:', '' );\r\n\r\n\t\t\t\t\t// Get our field model\r\n\t\t\t\t\tfieldModel = nfRadio.channel( 'form-' + calcModel.get( 'formID' ) ).request( 'get:fieldByKey', key );\r\n\r\n                    if( 'undefined' == typeof fieldModel ) return;\r\n\r\n                    fieldModel.set( 'clean', false );\r\n\r\n\t\t\t\t\t// Register a listener in our field model for value changes.\r\n\t\t\t\t\tfieldModel.on( 'change:value', calcModel.changeField, calcModel );\r\n\t\t\t\t\t// Get our calc value from our field model.\r\n\t\t\t\t\tvar calcValue = that.getCalcValue( fieldModel );\r\n\t\t\t\t\t// Add this field to our internal key/value object.\r\n\t\t\t\t\tthat.updateCalcFields( calcModel, key, calcValue );\r\n\t\t\t\t\t// Update the string tracking our merged eq with the calc value.\r\n\t\t\t\t\teqValues = that.replaceKey( 'field', key, calcValue, eqValues );\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\t// Check to see if we have any calc merge tags in our equation.\r\n\t\t\tvar calcs = eq.match( new RegExp( /{calc:(.*?)}/g ) );\r\n\t\t\tif ( calcs ) {\r\n\t\t\t\t/*\r\n\t\t\t\t * calcs is now an array of calc keys that looks like:\r\n\t\t\t\t * ['{calc:key'], ['{calc:key'], etc.\r\n\t\t\t\t *\r\n\t\t\t\t * We need to run a function with each of our calc keys to setup our calc key array and hook up our calc change listner.\r\n\t\t\t\t */\r\n\t\t\t\t\r\n\t\t\t\tcalcs = calcs.map( function( calc ) {\r\n\t\t\t\t\t// calc will be {calc:name}\r\n\t\t\t\t\tvar name = calc.replace( '}', '' ).replace( '{calc:', '' );\r\n\t\t\t\t\t// Get our calc model\r\n\t\t\t\t\tvar targetCalcModel = calcModel.collection.findWhere( { name: name } );\r\n\r\n\t\t\t\t\tif( 'undefined' == typeof targetCalcModel ) return;\r\n\r\n\t\t\t\t\t// Listen for changes on our calcluation, since we need to update our calc when it changes.\r\n\t\t\t\t\ttargetCalcModel.on( 'change:value', calcModel.changeCalc, calcModel );\r\n\t\t\t\t\t// // Get our calc value from our calc model.\r\n\t\t\t\t\tvar calcValue = targetCalcModel.get( 'value' );\r\n\t\t\t\t\t// Update the string tracking our merged eq with the calc value.\r\n\t\t\t\t\teqValues = that.replaceKey( 'calc', name, calcValue, eqValues );\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n            // Scrub unmerged tags (ie deleted/nox-existent fields/calcs, etc).\r\n            eqValues = eqValues.replace( /{([a-zA-Z0-9]|:|_|-)*}/g, 0 );\r\n\r\n            // Scrub line breaks.\r\n            eqValues = eqValues.replace( /\\r?\\n|\\r/g, '' );\r\n\t\t\t// Evaluate the equation and update the value of this model.\r\n\t\t\ttry {\r\n\t\t\t\tcalcModel.set( 'value', Number( mexp.eval( eqValues ) ).toFixed( calcModel.get( 'dec' ) ) );\r\n\t\t\t} catch( e ) {\r\n                //console.log( calcName );\r\n\t\t\t\tconsole.log( e );\r\n\t\t\t}\r\n            \r\n            // If for whatever reason, we got NaN, reset that to 0.\r\n            if( calcModel.get( 'value' ) === 'NaN' ) calcModel.set( 'value', '0' );\r\n\r\n\t\t\t// Debugging console statement.\r\n\t\t\t// console.log( eqValues + ' = ' + calcModel.get( 'value' ) );\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update an item in our key/value pair that represents our fields and calc values.\r\n\t\t * \r\n\t\t * @since  3.0\r\n\t\t * @param  backbone.model \tcalcModel\r\n\t\t * @param  string \t\t\tkey\r\n\t\t * @param  string \t\t\tcalcValue\r\n\t\t * @return void\r\n\t\t */\r\n\t\tupdateCalcFields: function( calcModel, key, calcValue ) {\r\n\t\t\tvar fields = calcModel.get( 'fields' );\r\n\t\t\tfields[ key ] = calcValue;\r\n\t\t\tcalcModel.set( 'fields', fields );\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get a calc value from a field model.\r\n\t\t *\r\n\t\t * Sends a request to see if there's a special calc value\r\n\t\t * Uses the value of the field if there is not.\r\n\t\t * \r\n\t\t * @since  3.0\r\n\t\t * @param  backbone.model fieldModel\r\n\t\t * @return value\r\n\t\t */\r\n\t\tgetCalcValue: function( fieldModel ) {\r\n\t\t\t/*\r\n\t\t\t * Send out a request on the field type and parent type channel asking if they need to modify the calc value.\r\n\t\t\t * This is helpful for fields like lists that can have a different calc_value than selected value.\r\n\t\t\t */\r\n\t\t\tvar value = nfRadio.channel( fieldModel.get( 'type' ) ).request( 'get:calcValue', fieldModel );\r\n\r\n\t\t\t// If value is 'undefined', then we got no response. Set value to field model value.\r\n\t\t\tif ( 'undefined' == typeof value ) {\r\n\t\t\t\tif ( jQuery.isNumeric( fieldModel.get( 'value' ) ) ) {\r\n\t\t\t\t\tvalue = fieldModel.get( 'value' );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! fieldModel.get( 'visible' ) ) {\r\n\t\t\t\tvalue = 0;\r\n\t\t\t}\r\n\r\n\t\t\treturn ( jQuery.isNumeric( value ) ) ? value : 0;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Replace instances of key with calcValue. This is used to replace one key at a time.\r\n\t\t *\r\n\t\t * If no eq is passed, use calcModel eq.\r\n\t\t *\r\n\t\t * Returns a string with instances of key replaced with calcValue.\r\n\t\t * \r\n\t\t * @since  version\r\n\t\t * @param  string \tkey       \r\n\t\t * @param  string \tcalcValue \r\n\t\t * @param  string \teq        \r\n\t\t * @return string \teq      \r\n\t\t */\r\n\t\treplaceKey: function( type, key, calcValue, eq ) {\r\n\t\t\teq = eq || calcModel.get( 'eq' );\r\n\r\n\t\t\ttag = '{' + type + ':' + key + '}';\r\n\t\t\tvar reTag = new RegExp( tag, 'g' );\r\n\r\n\t\t\tcalcTag = '{' + type + ':' + key + ':calc}';\r\n\t\t\tvar reCalcTag = new RegExp( calcTag, 'g' );\r\n\r\n\t\t\teq = eq.replace( reTag, calcValue );\r\n\t\t\teq = eq.replace( reCalcTag, calcValue );\r\n\r\n\t\t\treturn eq;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Takes a calcModel and returns a string eq with all keys replaced by their appropriate calcValues.\r\n\t\t * \r\n\t\t * @since  3.0\r\n\t\t * @param  backbone.model \tcalcModel\r\n\t\t * @return string\t\t\teq\r\n\t\t */\r\n\t\treplaceAllKeys: function( calcModel ) {\r\n\t\t\tvar eq = calcModel.get( 'eq' );\r\n\t\t\tvar that = this;\r\n\t\t\t_.each( calcModel.get( 'fields' ), function( value, key ) {\r\n\t\t\t\teq = that.replaceKey( 'field', key, value, eq );\r\n\t\t\t} );\r\n\r\n\t\t\t// If we have any calc merge tags, replace those as well.\r\n\t\t\tvar calcs = eq.match( new RegExp( /{calc:(.*?)}/g ) );\r\n\t\t\tif ( calcs ) {\r\n\t\t\t\t_.each( calcs, function( calc ) {\r\n\t\t\t\t\t// calc will be {calc:key}\r\n\t\t\t\t\tvar name = calc.replace( '}', '' ).replace( '{calc:', '' );\r\n\t\t\t\t\tvar targetCalcModel = calcModel.collection.findWhere( { name: name } );\r\n                    if( 'undefined' == typeof targetCalcModel ) return;\r\n\t\t\t\t\tvar re = new RegExp( calc, 'g' );\r\n\t\t\t\t\teq = eq.replace( re, targetCalcModel.get( 'value' ) );\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\treturn eq;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Function that's called when a field within the calculation changes.\r\n\t\t * \r\n\t\t * @since  3.0\r\n\t\t * @param  backbone.model calcModel\r\n\t\t * @param  backbone.model fieldModel\r\n\t\t * @return void\r\n\t\t */\r\n\t\tchangeField: function( calcModel, fieldModel ) {\r\n\t\t\tvar key = fieldModel.get( 'key' );\r\n\t\t\tvar value = this.getCalcValue( fieldModel );\r\n\t\t\tthis.updateCalcFields( calcModel, key, value );\r\n\t\t\tvar eqValues = this.replaceAllKeys( calcModel );\r\n\r\n            // Scrub unmerged tags (ie deleted/nox-existent fields/calcs, etc).\r\n            eqValues = eqValues.replace( /{([a-zA-Z0-9]|:|_|-)*}/g, '0' );\r\n\r\n            eqValues = eqValues.replace( /\\r?\\n|\\r/g, '' );\r\n            try {\r\n\t\t\t     calcModel.set( 'value', Number( mexp.eval( eqValues ) ).toFixed( calcModel.get( 'dec' ) ) );\r\n            } catch( e ) {\r\n                console.log( e );\r\n            }\r\n            if( calcModel.get( 'value' ) === 'NaN' ) calcModel.set( 'value', '0' );\r\n\r\n\t\t\t// Debugging console statement.\r\n\t\t\t// console.log( eqValues + ' = ' + calcModel.get( 'value' ) );\t\t\r\n\t\t},\r\n\r\n\t\tinitDisplayField: function( fieldModel ) {\r\n\r\n\t\t\tif( ! fieldModel.get( 'default' ) || 'string' != typeof fieldModel.get( 'default' ) ) return;\r\n\r\n\t\t\tvar calcs = fieldModel.get( 'default' ).match( new RegExp( /{calc:(.*?)}/g ) );\r\n\t\t\tif ( calcs ) {\r\n\t\t\t\t_.each( calcs, function( calcName ) {\r\n\t\t\t\t\tcalcName = calcName.replace( '{calc:', '' ).replace( '}', '' ).replace( ':2', '' );\r\n\t\t\t\t\tthis.displayFields[ calcName ] = this.displayFields[ calcName ] || [];\r\n\t\t\t\t\tthis.displayFields[ calcName ].push( fieldModel );\r\n\t\t\t\t}, this );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateDisplayFields: function( calcModel ) {\r\n\t\t\tvar that = this;\r\n\t\t\tif ( 'undefined' != typeof this.displayFields[ calcModel.get( 'name' ) ] ) {\r\n\t\t\t\t_.each( this.displayFields[ calcModel.get( 'name' ) ], function( fieldModel ) {\r\n\t\t\t\t\tvar value = fieldModel.get( 'default' );\r\n\t\t\t\t\tvar calcs = value.match( new RegExp( /{calc:(.*?)}/g ) );\r\n\t\t\t\t\t_.each( calcs, function( calc ) {\r\n//\t\t\t\t\t\tvar rounding = false;\r\n\t\t\t\t\t\t// calc will be {calc:key} or {calc:key:2}\r\n\t\t\t\t\t\tvar name = calc.replace( '}', '' ).replace( '{calc:', '' ).replace( ':2', '' );\r\n\r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t * TODO: Bandaid for rounding calculations to two decimal places when displaying the merge tag.\r\n\t\t\t\t\t\t * Checks to see if we have a :2. If we do, remove it and set our rounding variable to true.\r\n\t\t\t\t\t\t */\r\n//\t\t\t\t\t\tif ( -1 != name.indexOf( ':2' ) ) {\r\n//\t\t\t\t\t\t\trounding = true;\r\n//\t\t\t\t\t\t\tname = name.replace( ':2', '' );\r\n//\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar calcModel = that.calcs[ fieldModel.get( 'formID' ) ].findWhere( { name: name } );\r\n\t\t\t\t\t\tvar re = new RegExp( calc, 'g' );\r\n\t\t\t\t\t\tvar calcValue = calcModel.get( 'value' ) ;\r\n//\t\t\t\t\t\tif ( rounding ) {\r\n//\t\t\t\t\t\t\tcalcValue = calcValue.toFixed( 2 );\r\n//\t\t\t\t\t\t\trounding = false;\r\n//\t\t\t\t\t\t}\r\n                        if( 'undefined' != typeof( calcValue ) ) {\r\n                            calcValue = that.applyLocaleFormatting( calcValue );\r\n                        }\r\n\t\t\t\t\t\tvalue = value.replace( re, calcValue );\r\n\t\t\t\t\t} );\r\n\t\t\t\t\tfieldModel.set( 'value', value );\r\n\t\t\t\t\tif ( ! that.init[ calcModel.get( 'name' ) ] ) {\r\n\t\t\t\t\t\t// fieldModel.set( 'reRender', true );\r\n\t\t\t\t\t\tfieldModel.trigger( 'reRender' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthat.init[ calcModel.get( 'name' ) ] = false;\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetCalc: function( name, formID ) {\r\n\t\t\treturn this.calcs[ formID ].findWhere( { name: name } );\r\n\t\t},\r\n\r\n\t\tchangeCalc: function( calcModel, targetCalcModel ) {\r\n\t\t\tvar eqValues = this.replaceAllKeys( calcModel );\r\n\t\t\teqValues = eqValues.replace( '[', '' ).replace( ']', '' );\r\n            eqValues = eqValues.replace( /\\r?\\n|\\r/g, '' );\r\n            try {\r\n\t\t\t     calcModel.set( 'value', Number( mexp.eval( eqValues ) ).toFixed( calcModel.get( 'dec' ) ) );\r\n            } catch( e ) {\r\n                console.log( e );\r\n            }\r\n            if( calcModel.get( 'value' ) === 'NaN' ) calcModel.set( 'value', '0' );\r\n\t\t},\r\n        \r\n        /**\r\n         * Function to apply Locale Formatting to Calculations\r\n         * @since Version 3.1\r\n         * @param Str number\r\n         * \r\n         * @return Str\r\n         */\r\n        applyLocaleFormatting: function( number ) {\r\n            \r\n            // Split our string on the decimal to preserve context.\r\n            var splitNumber = number.split('.');\r\n            // If we have more than one element (if we had a decimal point)...\r\n            if ( splitNumber.length > 1 ) {\r\n                // Update the thousands and remerge the array.\r\n                splitNumber[ 0 ] = splitNumber[ 0 ].replace( /\\B(?=(\\d{3})+(?!\\d))/g, nfi18n.thousands_sep );\r\n                var formattedNumber = splitNumber.join( nfi18n.decimal_point );\r\n            }\r\n            // Otherwise (we had no decimal point)...\r\n            else {\r\n                // Update the thousands.\r\n                var formattedNumber = number.replace( /\\B(?=(\\d{3})+(?!\\d))/g, nfi18n.thousands_sep );\r\n            }\r\n            return formattedNumber;\r\n        }\r\n\t});\r\n\r\n\treturn controller;\r\n} );\r\n\n","define('controllers/fieldDate',[], function() {\r\n    var controller = Marionette.Object.extend({\r\n\r\n        initialize: function () {\r\n            this.listenTo( nfRadio.channel( 'date' ), 'render:view', this.initDatepicker );\r\n        },\r\n\r\n        initDatepicker: function ( view ) {\r\n\r\n            var dateFormat = view.model.get( 'date_format' );\r\n\r\n            // For \"default\" date format, convert PHP format to JS compatible format.\r\n            if( 'default' == dateFormat ){\r\n                dateFormat = this.convertDateFormat( nfi18n.dateFormat );\r\n            }\r\n\r\n            var el = jQuery( view.el ).find( '.nf-element' )[0];\r\n            var dateObject = pikadayResponsive( el, {\r\n                format: dateFormat,\r\n                outputFormat: dateFormat,\r\n                classes: jQuery( el ).attr( \"class\" ),\r\n                pikadayOptions: {\r\n                    yearRange:  this.getYearRange( view.model ),\r\n                    minDate: this.getMinDate( view.model ),\r\n                    maxDate: this.getMaxDate( view.model ),\r\n                    firstDay: parseInt( nfi18n.startOfWeek )\r\n                }\r\n            } );\r\n            if ( 1 == view.model.get( 'date_default' ) ) {\r\n               dateObject.setDate( moment() );\r\n            }\r\n\r\n            nfRadio.channel( 'pikaday' ).trigger( 'init', dateObject, view.model );\r\n        },\r\n\r\n        getYearRange: function( fieldModel ) {\r\n            var yearRange      = 10;\r\n            var yearRangeStart = fieldModel.get( 'year_range_start' );\r\n            var yearRangeEnd   = fieldModel.get( 'year_range_end'   );\r\n\r\n            if( yearRangeStart && yearRangeEnd ){\r\n                return [ yearRangeStart, yearRangeEnd ];\r\n            } else if( yearRangeStart ) {\r\n                yearRangeEnd = yearRangeStart + yearRange;\r\n                return [ yearRangeStart, yearRangeEnd ];\r\n            } else if( yearRangeEnd ) {\r\n                yearRangeStart = yearRangeEnd - yearRange;\r\n                return [ yearRangeStart, yearRangeEnd ];\r\n            }\r\n\r\n            return yearRange;\r\n        },\r\n\r\n        getMinDate: function( fieldModel ) {\r\n            var minDate = null;\r\n            var yearRangeStart = fieldModel.get( 'year_range_start' );\r\n\r\n            if( yearRangeStart ) {\r\n                return new Date( yearRangeStart, 0, 1 );\r\n            }\r\n\r\n            return minDate;\r\n        },\r\n\r\n        getMaxDate: function( fieldModel ) {\r\n            var maxDate = null;\r\n            var yearRangeEnd   = fieldModel.get( 'year_range_end' );\r\n\r\n            if( yearRangeEnd ) {\r\n                return new Date( yearRangeEnd, 11, 31 );\r\n            }\r\n\r\n            return maxDate;\r\n        },\r\n        \r\n        convertDateFormat: function( dateFormat ) {\r\n            // http://php.net/manual/en/function.date.php\r\n            // https://github.com/dbushell/Pikaday/blob/master/README.md#formatting\r\n            // Note: Be careful not to add overriding replacements. Order is important here.\r\n\r\n            /** Day */\r\n            dateFormat = dateFormat.replace( 'D', 'ddd' ); // @todo Ordering issue?\r\n            dateFormat = dateFormat.replace( 'd', 'DD' );\r\n            dateFormat = dateFormat.replace( 'l', 'dddd' );\r\n            dateFormat = dateFormat.replace( 'j', 'D' );\r\n            dateFormat = dateFormat.replace( 'N', '' ); // Not Supported\r\n            dateFormat = dateFormat.replace( 'S', '' ); // Not Supported\r\n            dateFormat = dateFormat.replace( 'w', 'd' );\r\n            dateFormat = dateFormat.replace( 'z', '' ); // Not Supported\r\n\r\n            /** Week */\r\n            dateFormat = dateFormat.replace( 'W', 'W' );\r\n\r\n            /** Month */\r\n            dateFormat = dateFormat.replace( 'M', 'MMM' ); // \"M\" before \"F\" or \"m\" to avoid overriding.\r\n            dateFormat = dateFormat.replace( 'F', 'MMMM' );\r\n            dateFormat = dateFormat.replace( 'm', 'MM' );\r\n            dateFormat = dateFormat.replace( 'n', 'M' );\r\n            dateFormat = dateFormat.replace( 't', '' );  // Not Supported\r\n\r\n            // Year\r\n            dateFormat = dateFormat.replace( 'L', '' ); // Not Supported\r\n            dateFormat = dateFormat.replace( 'o', 'YYYY' );\r\n            dateFormat = dateFormat.replace( 'Y', 'YYYY' );\r\n            dateFormat = dateFormat.replace( 'y', 'YY' );\r\n\r\n            // Time - Not supported\r\n            dateFormat = dateFormat.replace( 'a', '' );\r\n            dateFormat = dateFormat.replace( 'A', '' );\r\n            dateFormat = dateFormat.replace( 'B', '' );\r\n            dateFormat = dateFormat.replace( 'g', '' );\r\n            dateFormat = dateFormat.replace( 'G', '' );\r\n            dateFormat = dateFormat.replace( 'h', '' );\r\n            dateFormat = dateFormat.replace( 'H', '' );\r\n            dateFormat = dateFormat.replace( 'i', '' );\r\n            dateFormat = dateFormat.replace( 's', '' );\r\n            dateFormat = dateFormat.replace( 'u', '' );\r\n            dateFormat = dateFormat.replace( 'v', '' );\r\n\r\n            // Timezone - Not supported\r\n            dateFormat = dateFormat.replace( 'e', '' );\r\n            dateFormat = dateFormat.replace( 'I', '' );\r\n            dateFormat = dateFormat.replace( 'O', '' );\r\n            dateFormat = dateFormat.replace( 'P', '' );\r\n            dateFormat = dateFormat.replace( 'T', '' );\r\n            dateFormat = dateFormat.replace( 'Z', '' );\r\n\r\n            // Full Date/Time - Not Supported\r\n            dateFormat = dateFormat.replace( 'c', '' );\r\n            dateFormat = dateFormat.replace( 'r', '' );\r\n            dateFormat = dateFormat.replace( 'u', '' );\r\n\r\n            return dateFormat;\r\n        }\r\n    });\r\n\r\n    return controller;\r\n});\r\n\n","define('controllers/fieldRecaptcha',[], function() {\r\n    var controller = Marionette.Object.extend({\r\n\r\n        initialize: function () {\r\n            this.listenTo( nfRadio.channel( 'recaptcha' ), 'init:model',      this.initRecaptcha  );\r\n            this.listenTo( nfRadio.channel( 'forms' ),     'submit:response', this.resetRecaptcha );\r\n        },\r\n\r\n       \tinitRecaptcha: function ( model ) {\r\n       \t\tnfRadio.channel( 'recaptcha' ).reply( 'update:response', this.updateResponse, this, model.id );\r\n        },\r\n\r\n        updateResponse: function( response, fieldID ) {\r\n        \tvar model = nfRadio.channel( 'fields' ).request( 'get:field', fieldID );\r\n\t\t\tmodel.set( 'value', response );\r\n            nfRadio.channel( 'fields' ).request( 'remove:error', model.get( 'id' ), 'required-error' );\r\n        },\r\n\r\n        resetRecaptcha: function() {\r\n\t\t\tvar recaptchaID = 0;\r\n\t\t\tjQuery( '.g-recaptcha' ).each( function() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tgrecaptcha.reset( recaptchaID );\r\n\t\t\t\t} catch( e ){\r\n\t\t\t\t\tconsole.log( 'Notice: Error trying to reset grecaptcha.' );\r\n\t\t\t\t}\r\n\t\t\t\trecaptchaID++;\r\n\t\t\t} );\r\n        }\r\n    });\r\n\r\n    return controller;\r\n} );\n","/**\r\n * When a form is loaded, enable any help text that appears on the page.\r\n */\r\ndefine('controllers/helpText',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( nfRadio.channel( 'form' ), 'render:view', this.initHelpText );\r\n\r\n\t\t\tnfRadio.channel( 'form' ).reply( 'init:help', this.initHelpText );\r\n\t\t},\r\n\r\n\t\tinitHelpText: function( view ) {\r\n\t\t\tjQuery( view.el ).find( '.nf-help' ).each( function() {\r\n\t\t\t\tvar jBox = jQuery( this ).jBox( 'Tooltip', {\r\n\t\t\t\t\ttheme: 'TooltipBorder',\r\n\t\t\t\t\tcontent: jQuery( this ).data( 'text' )\r\n\t\t\t\t});\r\n\t\t\t} );\r\n\t\t}\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","/**\r\n * When a form is loaded, enable any rtes in textareas.\r\n */\r\ndefine('controllers/fieldTextareaRTE',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( nfRadio.channel( 'textarea' ), 'render:view', this.initTextareaRTEs );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'textarea' ), 'click:extra', this.clickExtra );\r\n\r\n\t\t\t// Instantiates the variable that holds the media library frame.\r\n\t\t\tthis.meta_image_frame;\r\n\r\n\t\t\tthis.currentContext = {};\r\n\r\n\t\t\tif( 'undefined' == typeof jQuery.summernote ) return;\r\n\r\n\t\t\tjQuery.summernote.options.icons = {\r\n\t\t        'align': 'dashicons dashicons-editor-alignleft',\r\n\t\t        'alignCenter': 'dashicons dashicons-editor-aligncenter',\r\n\t\t        'alignJustify': 'dashicons dashicons-editor-justify',\r\n\t\t        'alignLeft': 'dashicons dashicons-editor-alignleft',\r\n\t\t        'alignRight': 'dashicons dashicons-editor-alignright',\r\n\t\t        'indent': 'dashicons dashicons-editor-indent',\r\n\t\t        'outdent': 'dashicons dashicons-editor-outdent',\r\n\t\t        // 'arrowsAlt': 'dashicons fa-arrows-alt',\r\n\t\t        'bold': 'dashicons dashicons-editor-bold',\r\n\t\t        'caret': 'dashicons dashicons-arrow-down',\r\n\t\t        // 'circle': 'dashicons fa-circle',\r\n\t\t        'close': 'dashicons dashicons-dismiss',\r\n\t\t        'code': 'dashicons dashicons-editor-code',\r\n\t\t        'eraser': 'dashicons dashicons-editor-removeformatting',\r\n\t\t        // 'font': 'dashicons fa-font',\r\n\t\t        // 'frame': 'dashicons fa-frame',\r\n\t\t        'italic': 'dashicons dashicons-editor-italic',\r\n\t\t        'link': 'dashicons dashicons-admin-links',\r\n\t\t        'unlink': 'dashicons dashicons-editor-unlink',\r\n\t\t        'magic': 'dashicons dashicons-editor-paragraph',\r\n\t\t        // 'menuCheck': 'dashicons fa-check',\r\n\t\t        'minus': 'dashicons dashicons-minus',\r\n\t\t        'orderedlist': 'dashicons dashicons-editor-ol',\r\n\t\t        // 'pencil': 'dashicons fa-pencil',\r\n\t\t        // 'picture': 'dashicons fa-picture-o',\r\n\t\t        // 'question': 'dashicons fa-question',\r\n\t\t        'redo': 'dashicons dashicons-redo',\r\n\t\t        'square': 'dashicons fa-square',\r\n\t\t        // 'strikethrough': 'dashicons fa-strikethrough',\r\n\t\t        // 'subscript': 'dashicons fa-subscript',\r\n\t\t        // 'superscript': 'dashicons fa-superscript',\r\n\t\t        'table': 'dashicons dashicons-editor-table',\r\n\t\t        // 'textHeight': 'dashicons fa-text-height',\r\n\t\t        // 'trash': 'dashicons fa-trash',\r\n\t\t        'underline': 'dashicons dashicons-editor-underline',\r\n\t\t        'undo': 'dashicons dashicons-undo',\r\n\t\t        'unorderedlist': 'dashicons dashicons-editor-ul',\r\n\t\t        // 'video': 'dashicons fa-youtube-play'\r\n\t\t      };\r\n\r\n\t\t},\r\n\r\n\t\tinitTextareaRTEs: function( view ) {\r\n\t\t\tif ( 1 != view.model.get( 'textarea_rte' ) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t/*\r\n\t\t\t * Custom Button for links\r\n\t\t\t */\r\n\t\t\tvar that = this;\r\n\t\t\t// var linkButton = this.linkButton();\r\n\t\t\tvar linkButton = function( context ) {\r\n\t\t\t\treturn that.linkButton( context );\r\n\t\t\t}\r\n\t\t\tvar mediaButton = function( context ) {\r\n\t\t\t\treturn that.mediaButton( context );\r\n\t\t\t}\r\n\r\n\t\t\tvar toolbar = [\r\n\t\t\t\t[ 'paragraphStyle', ['style'] ],\r\n\t\t\t\t[ 'fontStyle', [ 'bold', 'italic', 'underline','clear' ] ],\r\n\t\t\t\t[ 'lists', [ 'ul', 'ol' ] ],\r\n\t\t\t    [ 'paragraph', [ 'paragraph' ] ],\r\n\t\t\t    [ 'customGroup', [ 'linkButton', 'unlink' ] ],\r\n\t\t\t    [ 'table', [ 'table' ] ],\r\n\t\t\t    [ 'actions', [ 'undo', 'redo' ] ],\r\n\t\t\t];\r\n\r\n\t\t\tif ( 1 == view.model.get( 'textarea_media' ) && 0 != userSettings.uid ) {\r\n\t\t\t\ttoolbar.push( [ 'tools', [ 'mediaButton' ] ] );\r\n\t\t\t}\r\n\r\n\t\t\tjQuery( view.el ).find( '.nf-element' ).summernote( {\r\n\t\t\t\ttoolbar: toolbar,\r\n\t\t\t\tbuttons: {\r\n\t\t\t\t\tlinkButton: linkButton,\r\n\t\t\t\t\tmediaButton: mediaButton\r\n\t\t\t\t},\r\n\t\t\t\theight: 150,   //set editable area's height\r\n\t\t\t\tcodemirror: { // codemirror options\r\n\t\t\t\t    theme: 'monokai',\r\n\t\t\t\t    lineNumbers: true\r\n\t\t\t\t},\r\n\t\t\t\tprettifyHtml: true,\r\n\t\t\t\tcallbacks: {\r\n\t\t\t\t\tonChange: function( e ) {\r\n\t\t\t\t\t\tview.model.set( 'value', jQuery( this ).summernote( 'code' ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tvar linkMenu = jQuery( view.el ).find( '.link-button' ).next( '.dropdown-menu' ).find( 'button' );\r\n\t\t\tlinkMenu.replaceWith(function () {\r\n\t\t\t    return jQuery( '<div/>', {\r\n\t\t\t        class: jQuery( linkMenu ).attr( 'class' ),\r\n\t\t\t        html: this.innerHTML\r\n\t\t\t    } );\r\n\t\t\t} );\r\n\t\t},\r\n\r\n\t\tlinkButton: function( context ) {\r\n\t\t\tvar that = this;\r\n\t\t\tvar ui = jQuery.summernote.ui;\r\n\t\t\tvar linkButton = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-rte-link-button' );\r\n\t\t\tvar linkDropdown = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-rte-link-dropdown' );\r\n\t\t\treturn ui.buttonGroup([\r\n\t\t\t\tui.button({\r\n\t            className: 'dropdown-toggle link-button',\r\n\t            contents: linkButton({}),\r\n\t            tooltip: nfi18n.fieldTextareaRTEInsertLink,\r\n\t            click: function( e ) {\r\n\t            \tthat.clickLinkButton( e, context );\r\n\t            },\r\n\t            data: {\r\n\t              toggle: 'dropdown'\r\n\t            }\r\n\t          }),\r\n\t\t\t\tui.dropdown([\r\n\t            ui.buttonGroup({\r\n\t              children: [\r\n\t                ui.button({\r\n\t                  contents: linkDropdown({}),\r\n\t                  tooltip: ''\r\n\t                }),\r\n\t              ]\r\n\t            })\r\n\t          ])\r\n\t\t\t]).render();\r\n\t\t},\r\n\r\n\t\tmediaButton: function( context ) {\r\n\t\t\tvar that = this;\r\n\t\t\tvar ui = jQuery.summernote.ui;\r\n\t\t\tvar mediaButton = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-rte-media-button' );\r\n\t\t\treturn ui.button({\r\n\t            className: 'dropdown-toggle',\r\n\t            contents: mediaButton({}),\r\n\t            tooltip: nfi18n.fieldTextareaRTEInsertMedia,\r\n\t            click: function( e ) {\r\n\t            \tthat.openMediaManager( e, context );\r\n\t            }\r\n\t          }).render();\r\n\t\t},\r\n\r\n\t\topenMediaManager: function( e, context ) {\r\n\t\t\tcontext.invoke( 'editor.saveRange' );\r\n\t\t\t// If the frame already exists, re-open it.\r\n\t\t\tif ( this.meta_image_frame ) {\r\n\t\t\t\tthis.meta_image_frame.open();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Sets up the media library frame\r\n\t\t\tthis.meta_image_frame = wp.media.frames.meta_image_frame = wp.media({\r\n\t\t\t\ttitle: nfi18n.fieldTextareaRTESelectAFile,\r\n\t\t\t\tbutton: { text:  'insert' }\r\n\t\t\t});\r\n\r\n\t\t\tvar that = this;\r\n\r\n\t\t\t// Runs when an image is selected.\r\n\t\t\tthis.meta_image_frame.on('select', function(){\r\n\r\n\t\t\t\t// Grabs the attachment selection and creates a JSON representation of the model.\r\n\t\t\t\tvar media_attachment = that.meta_image_frame.state().get('selection').first().toJSON();\r\n\t\t\t\tthat.insertMedia( media_attachment, context );\r\n\t\t\t});\r\n\r\n\t\t\t// Opens the media library frame.\r\n\t\t\tthis.meta_image_frame.open();\r\n\t\t},\r\n\r\n\t\tclickLinkButton: function ( e, context ) {\r\n\t\t\tvar range = context.invoke( 'editor.createRange' );\r\n\t\t\tcontext.invoke( 'editor.saveRange' );\r\n\t\t\tvar text = range.toString()\r\n\t\t\tthis.currentContext = context;\r\n\r\n\t\t\tjQuery( e.target ).closest( '.note-customGroup > .note-btn-group' ).on ('hide.bs.dropdown', function ( e ) {\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\r\n\t\t\tjQuery( e.target ).closest( '.note-customGroup > .note-btn-group' ).on ('shown.bs.dropdown', function ( e ) {\r\n\t\t\t\tjQuery( e.target ).parent().parent().find( '.link-text' ).val( text );\r\n\t\t\t\tjQuery( e.target ).parent().parent().find( '.link-url' ).focus();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tclickExtra: function( e ) {\r\n\t\t\tvar textEl = jQuery( e.target ).parent().find( '.link-text' );\r\n\t\t\tvar urlEl = jQuery( e.target ).parent().find( '.link-url' );\r\n\t\t\tvar isNewWindowEl = jQuery( e.target ).parent().find( '.link-new-window' );\r\n\t\t\tthis.currentContext.invoke( 'editor.restoreRange' );\r\n\t\t\tif ( jQuery( e.target ).hasClass( 'insert-link' ) ) {\r\n\t\t\t\tvar text = textEl.val();\r\n\t\t\t\tvar url = urlEl.val();\r\n\t\t\t\tvar isNewWindow = ( isNewWindowEl.prop( 'checked' ) ) ? true: false;\r\n\t\t\t\tif ( 0 != text.length && 0 != url.length ) {\r\n\t\t\t\t\tthis.currentContext.invoke( 'editor.createLink', { text:text, url: url, isNewWindow: isNewWindow } );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttextEl.val( '' );\r\n\t\t\turlEl.val( '' );\r\n\t\t\tisNewWindowEl.prop( 'checked', false );\r\n\t\t\tjQuery( e.target ).closest( 'div.note-btn-group.open' ).removeClass( 'open' );\r\n\t\t},\r\n\r\n\t\tinsertMedia: function( media, context ) {\r\n\t\t\tcontext.invoke( 'editor.restoreRange' );\r\n\t\t\tif ( 'image' == media.type ) {\r\n\t\t\t\tcontext.invoke( 'editor.insertImage', media.url );\r\n\t\t\t} else {\r\n\t\t\t\tcontext.invoke( 'editor.createLink', { text: media.filename, url: media.url } );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","define('controllers/fieldStarRating',[], function() {\r\n    var controller = Marionette.Object.extend( {\r\n\r\n        initialize: function() {\r\n        \tthis.listenTo( nfRadio.channel( 'starrating' ), 'init:model', this.register );\r\n            this.listenTo( nfRadio.channel( 'starrating' ), 'render:view', this.initRating );\r\n        },\r\n\r\n        register: function( model ) {\r\n\t\t\tmodel.set( 'renderRatings', this.renderRatings );\r\n\t\t},\r\n\r\n        initRating: function( view ){\r\n            jQuery( view.el ).find( '.starrating' ).rating();\r\n        },\r\n\r\n        renderRatings: function() {\r\n        \tvar html = '';\r\n        \tfor (var i = 0; i <= this.default - 1; i++) {\r\n        \t\tvar template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-starrating-star' );\r\n                var num = i + 1;\r\n        \t\thtml += template( { id: this.id, classes: this.classes, num: num } );\r\n        \t}\r\n        \treturn html;\r\n        }\r\n\r\n    });\r\n\r\n    return controller;\r\n});\n","define('controllers/fieldTerms',[], function() {\r\n    var controller = Marionette.Object.extend( {\r\n        initialize: function() {\r\n            this.listenTo( nfRadio.channel( 'terms' ), 'init:model', this.register );\r\n        },\r\n\r\n        register: function( model ) {\r\n            // nfRadio.channel( 'field-' + this.model.get( 'id' ) ).trigger( 'click:extra', e, this.model );\r\n            this.listenTo( nfRadio.channel( 'field-' + model.get( 'id' ) ), 'click:extra', this.clickExtra );\r\n            this.listenTo( nfRadio.channel( 'field-' + model.get( 'id' ) ), 'keyup:field', this.keyUpExtra );\r\n        },\r\n        \r\n        clickExtra: function( e, model ) {\r\n            var el = jQuery( e.currentTarget );\r\n            var value = el.parent().find( '.extra-value' ).val();\r\n            this.addOption( model, value );\r\n        },\r\n\r\n        keyUpExtra: function( el, model, keyCode ) {\r\n            if( 13 != keyCode ) return;\r\n            this.addOption( model, el.val() );\r\n        },\r\n\r\n        addOption: function( model, value ) {\r\n            if( ! value ) return;\r\n            var options = model.get( 'options' );\r\n            var new_option = {\r\n                label: value,\r\n                value: value,\r\n                selected: 0,\r\n            };\r\n            options.push( new_option );\r\n\r\n            var selected = model.get( 'value' );\r\n            selected.push( value );\r\n\r\n            // model.set( 'reRender', true );\r\n            model.trigger( 'reRender' );\r\n        }\r\n        \r\n    });\r\n\r\n    return controller;\r\n} );\n","/**\r\n * Before we display our form content, ask if anyone wants to give us a different view.\r\n * Before we do anything with the data, pass it through any loading filters.\r\n * \r\n * @package Ninja Forms builder\r\n * @subpackage Main App\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'controllers/formContentFilters',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\t/*\r\n\t\t\t * Init our fieldContent view and load filter arrays.\r\n\t\t\t */\r\n\t\t\tthis.viewFilters = [];\r\n\t\t\tthis.loadFilters = [];\r\n\r\n\t\t\t/*\r\n\t\t\t * Listen for requests to add new formContent filters.\r\n\t\t\t */\r\n\t\t\tnfRadio.channel( 'formContent' ).reply( 'add:viewFilter', this.addViewFilter, this );\r\n\t\t\tnfRadio.channel( 'formContent' ).reply( 'add:loadFilter', this.addLoadFilter, this );\r\n\r\n\t\t\t/*\r\n\t\t\t * Listen for requests to get our formContent filters.\r\n\t\t\t */\r\n\t\t\tnfRadio.channel( 'formContent' ).reply( 'get:viewFilters', this.getViewFilters, this );\r\n\t\t\tnfRadio.channel( 'formContent' ).reply( 'get:loadFilters', this.getLoadFilters, this );\r\n\r\n\t\t\t/*\r\n\t\t\t * -- DEPRECATED RADIO REPLIES --\r\n\t\t\t * \r\n\t\t\t * The 'fieldContents' channel has been deprecated as of 3.0 (it was present in the RC) in favour of 'formContent'.\r\n\t\t\t * Listen for requests to add new fieldContent filters.\r\n\t\t\t * \r\n\t\t\t * TODO: These radio listeners on the 'fieldContents' channels are here for backwards compatibility and should be removed eventually.\r\n\t\t\t */\r\n\t\t\tnfRadio.channel( 'fieldContents' ).reply( 'add:viewFilter', this.addViewFilter, this );\r\n\t\t\tnfRadio.channel( 'fieldContents' ).reply( 'add:loadFilter', this.addLoadFilter, this );\r\n\r\n\t\t\t/*\r\n\t\t\t * Listen for requests to get our fieldContent filters.\r\n\t\t\t * TODO: Remove eventually.\r\n\t\t\t */\r\n\t\t\tnfRadio.channel( 'fieldContents' ).reply( 'get:viewFilters', this.getViewFilters, this );\r\n\t\t\tnfRadio.channel( 'fieldContents' ).reply( 'get:loadFilters', this.getLoadFilters, this );\r\n\t\t\r\n\t\t\t/*\r\n\t\t\t * -- END DEPRECATED --\r\n\t\t\t */\r\n\t\t},\r\n\r\n\t\taddViewFilter: function( callback, priority ) {\r\n\t\t\tthis.viewFilters[ priority ] = callback;\r\n\t\t},\r\n\r\n\t\tgetViewFilters: function() {\r\n\t\t\treturn this.viewFilters;\r\n\t\t},\r\n\r\n\t\taddLoadFilter: function( callback, priority ) {\r\n\t\t\tthis.loadFilters[ priority ] = callback;\r\n\t\t},\r\n\r\n\t\tgetLoadFilters: function() {\r\n\t\t\treturn this.loadFilters;\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","define( 'views/fieldItem',[], function() {\r\n\tvar view = Marionette.ItemView.extend({\r\n\t\ttagName: 'div',\r\n\r\n\t\tinitialize: function() {\r\n    \t\tthis.listenTo( this.model, 'reRender', this.render, this );\r\n    \t\tthis.listenTo( this.model, 'change:addWrapperClass', this.addWrapperClass, this );\r\n    \t\tthis.listenTo( this.model, 'change:removeWrapperClass', this.removeWrapperClass, this );\r\n    \t\tthis.listenTo( this.model, 'change:invalid', this.toggleAriaInvalid, this );\r\n\r\n    \t\tthis.template = '#tmpl-nf-field-' + this.model.get( 'wrap_template' );\r\n\t\t},\r\n\r\n\t\ttest: function( model ) {\r\n\t\t\tconsole.log( 'firing from trigger 1' );\r\n\t\t},\r\n\r\n\t\taddWrapperClass: function() {\r\n\t\t\tvar cl = this.model.get( 'addWrapperClass' );\r\n\t\t\tif ( '' != cl ) {\r\n\t\t\t\tjQuery( this.el ).addClass( cl );\r\n\t\t\t\tthis.model.set( 'addWrapperClass', '' );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tremoveWrapperClass: function() {\r\n\t\t\tvar cl = this.model.get( 'removeWrapperClass' );\r\n\t\t\tif ( '' != cl ) {\r\n\t\t\t\tjQuery( this.el ).removeClass( cl );\r\n\t\t\t\tthis.model.set( 'removeWrapperClass', '' );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttoggleAriaInvalid: function() {\r\n\t\t\tvar invalid = this.model.get( 'invalid' );\r\n\t\t\tjQuery( '[aria-invalid]', this.el ).attr( 'aria-invalid', JSON.stringify( invalid ) );\r\n\t\t},\r\n\r\n\t\tonRender: function() {\r\n\t\t\tthis.$el = this.$el.children();\r\n\t\t\tthis.$el.unwrap();\r\n\t\t\tthis.setElement( this.$el );\r\n\r\n\t   \t\t/*\r\n    \t\t * If we have an input mask, init that mask.\r\n    \t\t * TODO: Move this to a controller so that the logic isn't in the view.\r\n    \t\t */\r\n    \t\tif ( 'undefined' != typeof this.model.get( 'mask' ) && '' != jQuery.trim( this.model.get( 'mask' ) ) ) {\r\n    \t\t\tif ( 'custom' == this.model.get( 'mask') ) {\r\n    \t\t\t\tvar mask = this.model.get( 'custom_mask' );\r\n    \t\t\t} else {\r\n    \t\t\t\tvar mask = this.model.get( 'mask' );\r\n    \t\t\t}\r\n\r\n\t\t\t\t/* POLYFILL */ Number.isInteger = Number.isInteger || function(value) { return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value; };\r\n    \t\t\tif ( Number.isInteger( mask ) ) {\r\n    \t\t\t\tmask = mask.toString();\r\n    \t\t\t}\r\n\r\n\t\t\t\tif ( 'currency' == mask ) {\r\n\t\t\t\t\tvar form = nfRadio.channel( 'app' ).request( 'get:form', this.model.get( 'formID' ) );\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar thousands_sep = form.get( 'thousands_sep' );\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * TODO: if we have a &nbsp; , replace it with a string with a space.\r\n\t\t\t\t\t */\r\n\t\t\t\t\tif ( '&nbsp;' == thousands_sep ) {\r\n\t\t\t\t\t\tthousands_sep = ' ';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar currencySymbol = jQuery( '<div/>' ).html( form.get( 'currencySymbol' ) ).text();\r\n\t\t\t\t\tthousands_sep = jQuery( '<div/>' ).html( thousands_sep ).text();\r\n\t\t\t\t\tvar decimal_point = jQuery( '<div/>' ).html( form.get( 'decimal_point' ) ).text();\r\n\t\t\t\t\t\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * TODO: Currently, these options use the plugin-wide defaults for locale.\r\n\t\t\t\t\t * When per-form locales are implemented, these will need to be revisited.\r\n\t\t\t\t\t */\r\n\t\t\t\t\tvar autoNumericOptions = {\r\n\t\t\t\t\t    digitGroupSeparator        : thousands_sep,\r\n\t\t\t\t\t    decimalCharacter           : decimal_point,\r\n\t\t\t\t\t    currencySymbol             : currencySymbol\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Initialization\r\n\t\t\t\t\tnew AutoNumeric( jQuery( this.el ).find( '.nf-element' )[ 0 ], autoNumericOptions );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tjQuery( this.el ).find( '.nf-element' ).mask( mask );\r\n\t\t\t\t} \t\t\t\r\n\t   \t\t}\r\n\r\n\t\t\tnfRadio.channel( this.model.get( 'type' ) ).trigger( 'render:view', this );\r\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'render:view', this );\r\n\t\t},\r\n\r\n\t\ttemplateHelpers: function () {\r\n\t\t\tvar that = this;\r\n\t    \treturn {\r\n\t\t\t\trenderElement: function(){\r\n\t\t\t\t\tvar tmpl = _.find( this.element_templates, function( tmpl ) {\r\n\t\t\t\t\t\tif ( 0 < jQuery( '#tmpl-nf-field-' + tmpl ).length ) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t\tvar template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-' + tmpl );\r\n\t\t\t\t\treturn template( this );\r\n\t\t\t\t},\r\n\r\n\t\t\t\trenderLabel: function() {\r\n\t\t\t\t\tvar template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-label' );\r\n\t\t\t\t\treturn template( this );\r\n\t\t\t\t},\r\n\r\n\t\t\t\trenderLabelClasses: function () {\r\n\t\t\t\t\tvar classes = '';\r\n\t\t\t\t\tif ( 'undefined' != typeof this.customLabelClasses ) {\r\n\t\t\t\t\t\tclasses = this.customLabelClasses( classes );\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn classes;\r\n\t\t\t\t},\r\n\r\n                renderInputName: function(){\r\n\t\t\t\t\tif( this.input_name ) {\r\n\t\t\t\t\t\treturn this.input_name;\r\n                    }\r\n\t\t\t\t\tif( [ 'firstname', 'lastname', 'email', 'address', 'zip' ].includes( this.type ) ){\r\n\t\t\t\t\t\treturn this.type;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this.label.toLowerCase().replace( ' ', '-' );\r\n                },\r\n\r\n\t\t\t\trenderPlaceholder: function() {\r\n\t\t\t\t\tvar placeholder = this.placeholder;\r\n\r\n\t\t\t\t\tif ( 'undefined' != typeof this.customPlaceholder ) {\r\n\t\t\t\t\t\tplaceholder = this.customPlaceholder( placeholder );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif( '' != jQuery.trim( placeholder ) ) {\r\n\t\t\t\t\t\treturn 'placeholder=\"' + placeholder + '\"';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\trenderWrapClass: function() {\r\n\t\t\t\t\tvar wrapClass = 'field-wrap ' + this.type + '-wrap';\r\n\r\n\t\t\t\t\t// If we have an old_classname defined, output wrap class for backward compatibility\r\n\t\t\t\t\tif ( 'undefined' != typeof this.old_classname && 0 < jQuery.trim( this.old_classname ).length ) {\r\n\t\t\t\t\t\twrapClass += ' ' + this.old_classname + '-wrap';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( 'undefined' != typeof customWrapClass ) {\r\n\t\t\t\t\t\twrapClass = customWrapClass( wrapClass );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn wrapClass;\r\n\t\t\t\t},\r\n\r\n\t\t\t\trenderClasses: function() {\r\n\t\t\t\t\tvar classes = this.classes;\r\n\r\n\t\t\t\t\tif ( this.error ) {\r\n\t\t\t\t\t\tclasses += ' nf-error';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tclasses = classes.replace( 'nf-error', '' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( 'undefined' != typeof this.element_class && 0 < jQuery.trim( this.element_class ).length ) {\r\n\t\t\t\t\t\tclasses += ' ' + this.element_class;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * If we have a function for adding extra classes, add those.\r\n\t\t\t\t\t */\r\n\r\n\t\t\t\t\tif ( 'undefined' != typeof this.customClasses ) {\r\n\t\t\t\t\t\tclasses = this.customClasses( classes );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn classes;\r\n\t\t\t\t},\r\n\r\n\t\t\t\tmaybeDisabled: function() {\r\n\t\t\t\t\tif ( 1 == this.disable_input ) {\r\n\t\t\t\t\t\treturn 'disabled';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\tmaybeDisableAutocomplete: function() {\r\n\t\t\t\t\tif ( 1 == this.disable_browser_autocomplete ) {\r\n\t\t\t\t\t\treturn 'autocomplete=\"off\"';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\tmaybeInputLimit: function() {\r\n\t\t\t\t\tif ( 'characters' == this.input_limit_type && '' != jQuery.trim( this.input_limit ) ) {\r\n\t\t\t\t\t\treturn 'maxlength=\"' + this.input_limit + '\"';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\tgetHelpText: function() {\r\n\t\t\t\t\t// this.help_text = jQuery( this.help_text ).html();\r\n\t\t\t\t\treturn ( 'undefined' != typeof this.help_text ) ? this.help_text.replace(/\"/g, \"&quot;\") : '';\r\n\t\t\t\t},\r\n\r\n\t\t\t\tmaybeRenderHelp: function() {\r\n\t\t\t\t\tvar check_text = '<p>' + this.help_text + '</p>';\r\n\t\t\t\t\tif ( 'undefined' != typeof this.help_text && 0 != jQuery.trim( jQuery( check_text ).text() ).length ) {\r\n\t\t\t\t\t\treturn '<span class=\"fa fa-info-circle nf-help\" data-text=\"' + this.getHelpText() + '\"></span>';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\trenderDescText: function() {\r\n\t\t\t\t\tif ( 'undefined' == typeof this.desc_text ) {\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar check_text = '<p>' + this.desc_text + '</p>';\r\n\t\t\t\t\tif ( 0 != jQuery.trim( jQuery( check_text ).text() ).length ) {\r\n\t\t\t\t\t\treturn '<div class=\"nf-field-description\">' + this.desc_text + '</div>';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\trenderCurrencyFormatting: function( number ) {\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * Our number will have a . as a decimal point. We want to replace that with our locale decimal, nfi18n.decimal_point.\r\n\t\t\t\t\t */\r\n\t\t\t\t\tvar replacedDecimal = number.toString().replace( '.', '||' );\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * Add thousands separator. Our original number var won't have thousands separators.\r\n\t\t\t\t\t */\r\n\t\t\t\t\tvar replacedThousands = replacedDecimal.replace( /\\B(?=(\\d{3})+(?!\\d))/g, nfi18n.thousands_sep );\r\n\t\t\t\t\tvar formattedNumber = replacedThousands.replace( '||', nfi18n.decimal_point );\r\n\r\n\t\t\t\t\tvar form = nfRadio.channel( 'app' ).request( 'get:form', that.model.get( 'formID' ) );\r\n\t\t\t\t\tvar currency_symbol = form.get( 'settings' ).currency_symbol;\r\n\t\t\t\t\treturn currency_symbol + formattedNumber;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tevents: {\r\n\t\t\t'change .nf-element': 'fieldChange',\r\n\t\t\t'keyup .nf-element': 'fieldKeyup',\r\n\t\t\t'click .nf-element': 'fieldClick',\r\n\t\t\t'click .extra': 'extraClick',\r\n\t\t\t'blur .nf-element': 'fieldBlur'\r\n\t\t},\r\n\r\n\t\tfieldChange: function( e ) {\r\n\t\t\tvar el = jQuery( e.currentTarget );\r\n\t\t\tvar response = nfRadio.channel( 'nfAdmin' ).request( 'change:field', el, this.model );\r\n\t\t},\r\n\r\n\t\tfieldKeyup: function( e ) {\r\n\t\t\tvar el = jQuery( e.currentTarget );\r\n\t\t\tvar keyCode = e.keyCode;\r\n\t\t\tnfRadio.channel( 'field-' + this.model.get( 'id' ) ).trigger( 'keyup:field', el, this.model, keyCode );\r\n\t\t\tnfRadio.channel( this.model.get( 'type' ) ).trigger( 'keyup:field', el, this.model, keyCode );\r\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'keyup:field', el, this.model, keyCode );\r\n\t\t},\r\n\r\n\t\tfieldClick: function( e ) {\r\n\t\t\tvar el = jQuery( e.currentTarget );\r\n\t\t\tnfRadio.channel( 'field-' + this.model.get( 'id' ) ).trigger( 'click:field', el, this.model );\r\n\t\t\tnfRadio.channel( this.model.get( 'type' ) ).trigger( 'click:field', el, this.model );\r\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'click:field', el, this.model );\r\n\t\t},\r\n\r\n\t\textraClick: function( e ) {\r\n\t\t\tnfRadio.channel( 'field-' + this.model.get( 'id' ) ).trigger( 'click:extra', e, this.model );\r\n\t\t\tnfRadio.channel( this.model.get( 'type' ) ).trigger( 'click:extra', e, this.model );\r\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'click:extra', e, this.model );\r\n\t\t},\r\n\r\n\t\tfieldBlur: function( e ) {\r\n\t\t\tvar el = jQuery( e.currentTarget );\r\n\t\t\tnfRadio.channel( 'field-' + this.model.get( 'id' ) ).trigger( 'blur:field', el, this.model );\r\n\t\t\tnfRadio.channel( this.model.get( 'type' ) ).trigger( 'blur:field', el, this.model );\r\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'blur:field', el, this.model );\r\n\t\t},\r\n\r\n\t\tonAttach: function() {\r\n\t\t\tnfRadio.channel( this.model.get( 'type' ) ).trigger( 'attach:view', this );\r\n\t\t}\r\n\t});\r\n\r\n\treturn view;\r\n} );\r\n\n","define( 'views/beforeField',[], function() {\r\n    var view = Marionette.ItemView.extend({\r\n        tagName: 'nf-section',\r\n        template: '#tmpl-nf-field-before'\r\n    });\r\n\r\n    return view;\r\n} );\n","define( 'views/fieldErrorItem',[], function() {\r\n\tvar view = Marionette.ItemView.extend({\r\n\t\ttagName: 'nf-section',\r\n\t\ttemplate: '#tmpl-nf-field-error',\r\n\r\n\t\tonRender: function() {\r\n\t\t\tthis.$el = this.$el.children();\r\n\t\t\tthis.$el.unwrap();\r\n\t\t\tthis.setElement( this.$el );\r\n\t\t},\r\n\t});\r\n\r\n\treturn view;\r\n} );\n","define( 'views/fieldErrorCollection',['views/fieldErrorItem'], function( fieldErrorItem ) {\r\n\tvar view = Marionette.CollectionView.extend({\r\n\t\ttagName: \"nf-errors\",\r\n\t\tchildView: fieldErrorItem,\r\n\r\n\t\tinitialize: function( options ) {\r\n\t\t\tthis.fieldModel = options.fieldModel;\r\n\t\t},\r\n\r\n\t\tonRender: function() {\r\n\t\t\tif ( 0 == this.fieldModel.get( 'errors' ).models.length ) {\r\n                this.fieldModel.removeWrapperClass( 'nf-error' );\r\n                this.fieldModel.removeWrapperClass( 'nf-fail' );\r\n                this.fieldModel.addWrapperClass( 'nf-pass' );\r\n                this.fieldModel.setInvalid( false );\r\n            } else {\r\n                this.fieldModel.removeWrapperClass( 'nf-pass' );\r\n                this.fieldModel.addWrapperClass( 'nf-fail' );\r\n                this.fieldModel.addWrapperClass( 'nf-error' );\r\n                this.fieldModel.setInvalid( true );\r\n            }\r\n\r\n\t\t}\r\n\t});\r\n\r\n\treturn view;\r\n} );\r\n\n","define( 'views/inputLimit',[], function() {\r\n    var view = Marionette.ItemView.extend({\r\n        tagName: 'nf-section',\r\n        template: '#tmpl-nf-field-input-limit',\r\n\r\n        initialize: function() {\r\n        \tthis.listenTo( nfRadio.channel( 'field-' + this.model.get( 'id' ) ), 'keyup:field', this.updateCount );\r\n        \tthis.count = this.model.get( 'input_limit' );\r\n        \tthis.render();\r\n        },\r\n\r\n        updateCount: function( el, model ) {\r\n            var value = jQuery( el ).val();\r\n            var regex = /\\s+/gi;\r\n            var words = value.trim().replace(regex, ' ').split(' ');\r\n            var wordCount = words.length;\r\n            var charCount = value.length;\r\n\r\n            if ( 'characters' == this.model.get( 'input_limit_type' ) ) {\r\n                jQuery( el ).attr( 'maxlength', this.model.get( 'input_limit' ) );\r\n                this.count = this.model.get( 'input_limit' ) - charCount;\r\n            } else {\r\n                this.count = this.model.get( 'input_limit' ) - wordCount;\r\n                var limit = this.model.get( 'input_limit' );\r\n                if( wordCount > limit ){\r\n                    jQuery( el ).val( words.slice( 0, limit).join( ' ' ) );\r\n                }\r\n            }\r\n\r\n        \tthis.render();\r\n        },\r\n\r\n        templateHelpers: function() {\r\n        \tvar that = this;\r\n        \treturn {\r\n        \t\tcurrentCount: function() {\r\n        \t\t\treturn that.count;\r\n        \t\t}\r\n        \t}\r\n        }\r\n\r\n    });\r\n\r\n    return view;\r\n} );\n","define( 'views/afterField',['views/fieldErrorCollection', 'views/inputLimit'], function( fieldErrorCollection, InputLimitView ) {\r\n    var view = Marionette.ItemView.extend({\r\n        tagName: 'nf-section',\r\n        template: '#tmpl-nf-field-after',\r\n\r\n        initialize: function() {\r\n    \t\tthis.model.on( 'change:errors', this.changeError, this );\r\n        },\r\n\r\n        onRender: function() {\r\n        \t/*\r\n        \t * If we have an error, render our error view.\r\n        \t * TODO: Perhaps move to a controller?\r\n        \t */\r\n        \tvar errorEl = jQuery( this.el ).children( '.nf-error-wrap' );\r\n    \t\tthis.errorCollectionView = new fieldErrorCollection( { el: errorEl, collection: this.model.get( 'errors' ), fieldModel: this.model } );\r\n            if ( 0 < this.model.get( 'errors' ).length ) {\r\n               this.errorCollectionView.render(); \r\n            }\r\n            \r\n    \t\t/*\r\n    \t\t * If we have an input limit set, render the view that contains our counter\r\n    \t\t * TODO: Move this to a controller so that the logic isn't in the view.\r\n    \t\t */\r\n    \t\tif ( 'undefined' != typeof this.model.get( 'input_limit' ) && '' != jQuery.trim( this.model.get( 'input_limit' ) ) ){\r\n    \t\t\tvar inputLimitEl = jQuery( this.el ).children( '.nf-input-limit');\r\n    \t\t\tthis.inputLimitView = new InputLimitView( { el: inputLimitEl, model: this.model } );\r\n    \t\t}\r\n        },\r\n\r\n        changeError: function() {\r\n\t\t\tthis.errorCollectionView.render();\r\n\t\t},\r\n\r\n    });\r\n\r\n    return view;\r\n} );\n","define( 'views/fieldLayout',['views/fieldItem', 'views/beforeField', 'views/afterField'], function( fieldItem, beforeField, afterField ) {\r\n\r\n    var view = Marionette.LayoutView.extend({\r\n        tagName: 'nf-field',\r\n\r\n        regions: {\r\n            beforeField: '.nf-before-field',\r\n            field: '.nf-field',\r\n            afterField: '.nf-after-field',\r\n        },\r\n\r\n        initialize: function() {\r\n            this.listenTo( this.model, 'change:visible', this.render, this );\r\n        },\r\n\r\n        getTemplate: function() {\r\n            if ( this.model.get( 'visible' ) ) {\r\n                return '#tmpl-nf-field-layout';\r\n            } else {\r\n                return '#tmpl-nf-empty';\r\n            }\r\n        },\r\n\r\n        onRender: function() {\r\n            if ( this.model.get( 'visible' ) ) {\r\n                this.beforeField.show( new beforeField( { model: this.model } ) );\r\n                this.field.show( new fieldItem( { model: this.model } ) );\r\n                this.afterField.show( new afterField( { model: this.model } ) );\r\n            }\r\n        },\r\n\r\n        templateHelpers: function() {\r\n            return {\r\n                renderContainerClass: function() {\r\n                    var containerClass = ' label-' + this.label_pos + ' ';\r\n                    // If we have a description position, add that to our container.\r\n                    if ( 'undefined' != typeof this.desc_pos ) {\r\n                        containerClass += 'desc-' + this.desc_pos + ' ';\r\n                    }\r\n                    // if we have a container_class field setting, add that to our container.\r\n                    if ( 'undefined' != typeof this.container_class && 0 < jQuery.trim( this.container_class ).length ) {\r\n                        containerClass += this.container_class + ' ';\r\n                    }\r\n\r\n                    return containerClass;\r\n                }\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    return view;\r\n} );\r\n\n","/**\r\n * Return views that might be used in extensions.\r\n * These are un-instantiated views.\r\n * \r\n * @package Ninja Forms builder\r\n * @subpackage Main App\r\n * @copyright (c) 2015 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'controllers/loadViews',['views/fieldItem', 'views/fieldLayout'], function( fieldItemView, fieldLayoutView ) {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\t// Reply to requests for our field item view.\r\n\t\t\tnfRadio.channel( 'views' ).reply( 'get:fieldItem', this.getFieldItem );\r\n\r\n\t\t\tnfRadio.channel( 'views' ).reply( 'get:fieldLayout', this.getFieldLayout );\r\n\t\t},\r\n\r\n\t\tgetFieldItem: function( model ) {\r\n\t\t\treturn fieldItemView;\r\n\t\t},\r\n\r\n\t\tgetFieldLayout: function() {\r\n\t\t\treturn fieldLayoutView;\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","/**\r\n * If a form has at least one field error, we should disable the submit button and add a form error.\r\n * If a form had errors, but all the field errors have been removed, we should remove the form error.\r\n *\r\n * @since 3.0\r\n */\r\ndefine('controllers/formErrors',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\t/*\r\n\t\t\t * Listen for error messages being added to and removed from fields.\r\n\t\t\t */\r\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'add:error', this.addError );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'remove:error', this.removeError );\r\n\r\n\t\t\t/*\r\n\t\t\t * Respond to requests to get form errors\r\n\t\t\t */\r\n\t\t\tnfRadio.channel( 'form' ).reply( 'get:errors', this.getFormErrors );\r\n\t\t},\r\n\r\n\t\taddError: function( fieldModel, errorID, errorMsg ) {\r\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', fieldModel.get( 'formID' ) );\r\n\t\t\t/*\r\n\t\t\t * We store our errors in this object by field ID so that we don't have to loop over all our fields when we're testing for errors.\r\n\t\t\t * They are stored as an object within an array, using the field ID as the key.\r\n\t\t\t *\r\n\t\t\t * If we haven't setup an array item for this field, set it as an object.\r\n\t\t\t */\r\n\t\t\tif ( 'undefined' == typeof formModel.get( 'fieldErrors' )[ fieldModel.get( 'id' ) ] ) {\r\n\t\t\t\tformModel.get( 'fieldErrors' )[ fieldModel.get( 'id' ) ] = {};\r\n\t\t\t}\r\n\t\t\t// Add an error to our tracking array\r\n\t\t\tformModel.get( 'fieldErrors' )[ fieldModel.get( 'id' ) ][ errorID ] = errorMsg;\r\n\t\t\t/*\r\n\t\t\t * We have at least one field error, so submmission should be prevented.\r\n\t\t\t * Add a form error.\r\n\t\t\t */\r\n\t\t\tnfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ).request( 'add:error', 'field-errors', formModel.get( 'settings' ).formErrorsCorrectErrors );\r\n\t\t},\r\n\r\n\t\tremoveError: function( fieldModel, errorID ) {\r\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', fieldModel.get( 'formID' ) );\r\n\t\t\t// Remove this error ID from our tracking array.\r\n\t\t\tformModel.get( 'fieldErrors' )[ fieldModel.get( 'id' ) ] = _.omit( formModel.get( 'fieldErrors' )[ fieldModel.get( 'id' ) ], errorID );\r\n\t\t\t/*\r\n\t\t\t * If we don't have any more error IDs on this field, then we need to remove this field from the array.\r\n\t\t\t *\r\n\t\t\t * Then, if the fieldErrors tracking array has a length of 0, we remove our form error, because all field errors have been dealt with.\r\n\t\t\t */\r\n\t\t\tif ( 0 == _.size( formModel.get( 'fieldErrors' )[ fieldModel.get( 'id' ) ] ) ) {\r\n\t\t\t\tdelete formModel.get( 'fieldErrors' )[ fieldModel.get( 'id' ) ];\r\n\t\t\t}\r\n\r\n\t\t\tif ( 0 == _.size( formModel.get( 'fieldErrors' ) ) ) {\r\n\t\t\t\t// Remove our form error.\r\n\t\t\t\tnfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ).request( 'remove:error', 'field-errors' );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetFormErrors: function( formID ) {\r\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', formID );\r\n\t\t\tvar errors = false;\r\n\t\t\t\r\n\t\t\tif ( formModel ) {\r\n\t\t\t\t/*\r\n\t\t\t\t * Check to see if we have any errors on our form model.\r\n\t\t\t\t */\r\n\t\t\t\tif ( 0 !== formModel.get( 'errors' ).length ) {\r\n\t\t\t\t\t_.each( formModel.get( 'errors' ).models, function( error ) {\r\n\t\t\t\t\t\terrors = errors || {};\r\n\t\t\t\t\t\terrors[ error.get( 'id' ) ] = error.get( 'msg' );\r\n\t\t\t\t\t} );\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\treturn errors;\r\n\t\t}\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","/**\r\n * Handles submission of our form.\r\n */\r\ndefine('controllers/submit',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( nfRadio.channel( 'forms' ), 'init:model', this.registerSubmitHandler );\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Register the submission handler function.\r\n\t\t *\r\n\t\t * @since  3.0\r\n\t\t * @param  Backbone.model \tformModel\r\n\t\t * @return void\r\n\t\t */\r\n\t\tregisterSubmitHandler: function( formModel ) {\r\n\t\t\tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).reply( 'submit', this.submit );\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the actual submission of our form.\r\n\t\t * When we submit:\r\n\t\t *\r\n\t\t * 1) Send out a message saying that we're about to begin form submission.\r\n\t\t * 2) Check the form for errors\r\n\t\t * 3) Submit the data\r\n\t\t * 4) Send out a message with our response\r\n\t\t *\r\n\t\t * @since  3.0\r\n\t\t * @param  Backbone.model \tformModel\r\n\t\t * @return void\r\n\t\t */\r\n\t\tsubmit: function( formModel ) {\r\n\r\n\t\t\t/*\r\n\t\t\t * Send out a radio message saying that we're about to begin submitting.\r\n\t\t\t * First we send on the generic forms channel, and then on the form-specific channel.\r\n\t\t\t */\r\n\t\t\tnfRadio.channel( 'forms' ).trigger( 'before:submit', formModel );\r\n\t\t\tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'before:submit', formModel );\r\n\r\n\t\t\t/*\r\n\t\t\t * Validate our field models.\r\n\t\t\t */\r\n\t\t\tvar validate = nfRadio.channel( 'forms' ).request( 'maybe:validate', formModel );\r\n\t\t \tif( false !== validate ){\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t * This method is defined in our models/fieldCollection.js file.\r\n\t\t\t\t */\r\n\t\t\t\tformModel.get( 'formContentData' ).validateFields();\r\n\t\t\t}\r\n\r\n\t\t\tvar submit = nfRadio.channel( 'form-' + formModel.get( 'id' ) ).request( 'maybe:submit', formModel );\r\n\t\t\tif ( false == submit ) {\r\n\t\t\t\tnfRadio.channel( 'forms' ).trigger( 'submit:cancel', formModel );\r\n\t\t\t\tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'submit:cancel', formModel );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif( false !== validate ){\r\n\r\n\t\t\t\t// Ignore non-blocking errors.\r\n\t\t\t\tvar blockingFormErrors = _.filter( formModel.get( 'errors' ).models, function( error ){\r\n\r\n\t\t\t\t\t// Ignore email action related errors.\r\n\t\t\t\t\tif( 'invalid_email' == error.get( 'id' ) || 'email_not_sent' == error.get( 'id' ) ) return false;\r\n\r\n\t\t\t\t\treturn true; // Error is blocking.\r\n\t\t\t\t});\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t * Make sure we don't have any form errors before we submit.\r\n\t\t\t\t * Return false if we do.\r\n\t\t\t\t */\r\n\t\t\t\tif ( 0 != _.size( blockingFormErrors ) ) {\r\n\t\t\t\t\tnfRadio.channel( 'forms' ).trigger( 'submit:failed', formModel );\r\n\t\t\t\t\tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'submit:failed', formModel );\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t/*\r\n\t\t\t * Send out a radio message saying that we're about to begin submitting.\r\n\t\t\t * First we send on the generic forms channel, and then on the form-specific channel.\r\n\t\t\t */\r\n\t\t\tnfRadio.channel( 'forms' ).trigger( 'after:submitValidation', formModel );\r\n\t\t\tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'after:submitValidation', formModel );\r\n\r\n\t\t\t/*\r\n\t\t\t * Actually submit our form, and send out a message with our response.\r\n\t\t\t */\r\n\r\n \t\t\tvar formID = formModel.get( 'id' );\r\n\t\t\tvar fields = {};\r\n\t\t\t_.each( formModel.get( 'fields' ).models, function( field ) {\r\n\t\t\t\tvar fieldDataDefaults = { value:field.get( 'value' ), id:field.get( 'id' ) };\r\n\r\n\t\t\t\t// Add field data at the field ID for efficient access.\r\n\t\t\t\tfields[ field.get( 'id' ) ] = nfRadio.channel( field.get( 'type' ) ).request( 'get:submitData', fieldDataDefaults, field ) || fieldDataDefaults;;\r\n\t\t\t} );\r\n\t\t\tvar extra = formModel.get( 'extra' );\r\n\t\t\tvar settings = formModel.get( 'settings' );\r\n\t\t\tdelete settings.formContentData;\r\n\t\t\tvar formData = JSON.stringify( { id: formID, fields: fields, settings: settings, extra: extra } );\r\n\t\t\tvar data = {\r\n\t\t\t\t'action': 'nf_ajax_submit',\r\n\t\t\t\t'security': nfFrontEnd.ajaxNonce,\r\n\t\t\t\t'formData': formData\r\n\t\t\t}\r\n\r\n\t\t\tvar that = this;\r\n\r\n\t\t\tjQuery.ajax({\r\n\t\t\t    url: nfFrontEnd.adminAjax,\r\n\t\t\t    type: 'POST',\r\n\t\t\t    data: data,\r\n\t\t\t    cache: false,\r\n\t\t\t   \tsuccess: function( data, textStatus, jqXHR ) {\r\n\t\t\t   \t\ttry {\r\n\t\t\t\t   \t\tvar response = jQuery.parseJSON( data );\r\n\t\t\t\t        nfRadio.channel( 'forms' ).trigger( 'submit:response', response, textStatus, jqXHR, formModel.get( 'id' ) );\r\n\t\t\t\t    \tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'submit:response', response, textStatus, jqXHR );\r\n\t\t\t\t    \tjQuery( document ).trigger( 'nfFormSubmitResponse', { response: response, id: formModel.get( 'id' ) } );\r\n\t\t\t   \t\t} catch( e ) {\r\n\t\t\t   \t\t\tconsole.log( e );\r\n\t\t\t   \t\t\tconsole.log( 'Parse Error' );\r\n\t\t\t\t\t\tconsole.log( e );\r\n\t\t\t   \t\t}\r\n\r\n\t\t\t    },\r\n\t\t\t    error: function( jqXHR, textStatus, errorThrown ) {\r\n\t\t\t        // Handle errors here\r\n\t\t\t        console.log('ERRORS: ' + errorThrown);\r\n\t\t\t\t\tconsole.log( jqXHR );\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tvar response = jQuery.parseJSON( jqXHR.responseText );\r\n\t\t\t\t\t\tnfRadio.channel( 'forms' ).trigger( 'submit:response', response, textStatus, jqXHR, formModel.get( 'id' ) );\r\n\t\t\t\t\t\tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'submit:response', response, textStatus, jqXHR );\r\n\t\t\t\t\t} catch( e ) {\r\n\t\t\t\t\t\tconsole.log( 'Parse Error' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t        // STOP LOADING SPINNER\r\n\t\t\t\t\tnfRadio.channel( 'forms' ).trigger( 'submit:response', 'error', textStatus, jqXHR, errorThrown );\r\n\t\t\t    }\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\r\n\n","define( 'views/fieldCollection',['views/fieldLayout'], function( fieldLayout ) {\r\n\tvar view = Marionette.CollectionView.extend({\r\n\t\ttagName: 'nf-fields-wrap',\r\n\t\tchildView: fieldLayout\r\n\r\n\t});\r\n\r\n\treturn view;\r\n} );\n","/**\r\n * Default filters\r\n * \r\n * @package Ninja Forms builder\r\n * @subpackage Main App\r\n * @copyright (c) 2015 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'controllers/defaultFilters',[ 'views/fieldCollection', 'models/fieldCollection' ], function( FieldCollectionView, FieldCollection ) {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( nfRadio.channel( 'form' ), 'before:filterData', this.registerDefaultDataFilter );\r\n\t\t},\r\n\r\n\t\tregisterDefaultDataFilter: function( formModel ) {\r\n\t\t\t/*\r\n\t\t\t * Set our default formContent load filter\r\n\t\t\t */\r\n\t\t\tnfRadio.channel( 'formContent' ).request( 'add:loadFilter', this.defaultFormContentLoad, 10, this );\r\n\t\t\t/*\r\n\t\t\t * Set our default formContentView.\r\n\t\t\t */\r\n\t\t\tnfRadio.channel( 'formContent' ).request( 'add:viewFilter', this.defaultFormContentView, 10, this );\r\n\t\t},\r\n\r\n\t\tdefaultFormContentLoad: function( formContentData, formModel, context ) {\r\n\t\t\tvar fieldCollection = formModel.get( 'fields' );\r\n\t\t\t/*\r\n\t\t\t * If we only have one load filter, we can just return the field collection.\r\n\t\t\t */\r\n\t\t\tvar formContentLoadFilters = nfRadio.channel( 'formContent' ).request( 'get:loadFilters' );\r\n\t\t\tvar sortedArray = _.without( formContentLoadFilters, undefined );\r\n\t\t\tif ( 1 == sortedArray.length || 'undefined' == typeof formContentData || true === formContentData instanceof Backbone.Collection ) return formModel.get( 'fields' );\r\n\r\n        \tvar fieldModels = _.map( formContentData, function( key ) {\r\n        \t\treturn formModel.get( 'fields' ).findWhere( { key: key } );\r\n        \t}, this );\r\n\r\n        \tvar currentFieldCollection = new FieldCollection( fieldModels );\r\n\r\n        \tfieldCollection.on( 'reset', function( collection ) {\r\n        \t\tvar resetFields = [];\r\n        \t\tcurrentFieldCollection.each( function( fieldModel ) {\r\n        \t\t\tif ( 'submit' != fieldModel.get( 'type' ) ) {\r\n        \t\t\t\tresetFields.push( collection.findWhere( { key: fieldModel.get( 'key' ) } ) );\r\n        \t\t\t} else {\r\n        \t\t\t\tresetFields.push( fieldModel );\r\n        \t\t\t}\r\n        \t\t} );\r\n\r\n                currentFieldCollection.options = { formModel: formModel };\r\n        \t\tcurrentFieldCollection.reset( resetFields );\r\n        \t} );\r\n\r\n        \treturn currentFieldCollection;\r\n        },\r\n\r\n        defaultFormContentView: function() {\r\n        \treturn FieldCollectionView;\r\n        }\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","/**\r\n * Controller responsible for removing unique field errors.\r\n */\r\n\r\ndefine('controllers/uniqueFieldError',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\r\n\t\tinitialize: function() {\r\n\t\t\t/*\r\n\t\t\t * Listen to keyup and field changes.\r\n\t\t\t *\r\n\t\t\t * If those fields have a unique field error, remove that error.\r\n\t\t\t */\r\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'change:modelValue', this.removeError );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'keyup:field', this.removeError );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'blur:field', this.removeError );\r\n\r\n\t\t},\r\n\r\n\t\tremoveError: function( el, model ) {\r\n\t\t\tmodel = model || el;\r\n\t\t\t/*\r\n\t\t\t * Remove any unique field errors.\r\n\t\t\t */\r\n\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', model.get( 'id' ), 'unique_field' );\r\n\t\t},\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","define(\r\n\t'controllers/loadControllers',[\r\n\t\t'controllers/formData',\r\n\t\t'controllers/fieldError',\r\n\t\t'controllers/changeField',\r\n\t\t'controllers/changeEmail',\r\n\t\t'controllers/fieldCheckbox',\r\n\t\t'controllers/fieldCheckboxList',\r\n\t\t'controllers/fieldRadio',\r\n\t\t'controllers/fieldNumber',\r\n\t\t'controllers/mirrorField',\r\n\t\t'controllers/confirmField',\r\n\t\t'controllers/updateFieldModel',\r\n\t\t'controllers/submitButton',\r\n\t\t'controllers/submitDebug',\r\n\t\t'controllers/getFormErrors',\r\n\t\t'controllers/validateRequired',\r\n\t\t'controllers/submitError',\r\n\t\t'controllers/actionRedirect',\r\n\t\t'controllers/actionSuccess',\r\n\t\t'controllers/fieldSelect',\r\n\t\t'controllers/coreSubmitResponse',\r\n\t\t'controllers/fieldProduct',\r\n\t\t'controllers/fieldTotal',\r\n\t\t'controllers/fieldQuantity',\r\n\t\t'controllers/calculations',\r\n\t\t'controllers/fieldDate',\r\n\t\t'controllers/fieldRecaptcha',\r\n\t\t'controllers/helpText',\r\n\t\t'controllers/fieldTextareaRTE',\r\n\t\t'controllers/fieldStarRating',\r\n\t\t'controllers/fieldTerms',\r\n\t\t'controllers/formContentFilters',\r\n\t\t'controllers/loadViews',\r\n\t\t'controllers/formErrors',\r\n\t\t'controllers/submit',\r\n\t\t'controllers/defaultFilters',\r\n\t\t'controllers/uniqueFieldError'\r\n\t],\r\n\tfunction(\r\n\t\tFormData,\r\n\t\tFieldError,\r\n\t\tChangeField,\r\n\t\tChangeEmail,\r\n\t\tFieldCheckbox,\r\n\t\tFieldCheckboxList,\r\n\t\tFieldRadio,\r\n\t\tFieldNumber,\r\n\t\tMirrorField,\r\n\t\tConfirmField,\r\n\t\tUpdateFieldModel,\r\n\t\tSubmitButton,\r\n\t\tSubmitDebug,\r\n\t\tGetFormErrors,\r\n\t\tValidateRequired,\r\n\t\tSubmitError,\r\n\t\tActionRedirect,\r\n\t\tActionSuccess,\r\n\t\tFieldSelect,\r\n\t\tCoreSubmitResponse,\r\n\t\tFieldProduct,\r\n\t\tFieldTotal,\r\n\t\tFieldQuantity,\r\n\t\tCalculations,\r\n\t\tFieldDate,\r\n\t\tFieldRecaptcha,\r\n\t\tHelpText,\r\n\t\tFieldTextareaRTE,\r\n\t\tFieldStarRating,\r\n\t\tFieldTerms,\r\n\t\tFormContentFilters,\r\n\t\tLoadViews,\r\n\t\tFormErrors,\r\n\t\tSubmit,\r\n\t\tDefaultFilters,\r\n\t\tUniqueFieldError\r\n\t) {\r\n\t\tvar controller = Marionette.Object.extend( {\r\n\t\t\tinitialize: function() {\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * App Controllers\r\n\t\t\t\t */\r\n\t\t\t\tnew LoadViews();\r\n\t\t\t\tnew FormErrors();\r\n\t\t\t\tnew Submit();\r\n\t\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t * Field type controllers\r\n\t\t\t\t */\r\n\t\t\t\tnew FieldCheckbox();\r\n\t\t\t\tnew FieldCheckboxList();\r\n\t\t\t\tnew FieldRadio();\r\n\t\t\t\tnew FieldNumber();\r\n\t\t\t\tnew FieldSelect();\r\n\t\t\t\tnew FieldProduct();\r\n\t\t\t\tnew FieldTotal();\r\n\t\t\t\tnew FieldQuantity();\r\n\t\t\t\tnew FieldRecaptcha();\r\n\t\t\t\tnew HelpText();\r\n\t\t\t\tnew FieldTextareaRTE();\r\n\t\t\t\tnew FieldStarRating();\r\n\t\t\t\tnew FieldTerms();\r\n\t\t\t\tnew FormContentFilters();\r\n\t\t\t\tnew UniqueFieldError();\r\n\t\t\t\t/**\r\n\t\t\t\t * Misc controllers\r\n\t\t\t\t */\r\n\t\t\t\tnew FieldError();\r\n\t\t\t\tnew ChangeField();\r\n\t\t\t\tnew ChangeEmail();\r\n\t\t\t\t\r\n\t\t\t\tnew MirrorField();\r\n\t\t\t\tnew ConfirmField();\r\n\t\t\t\tnew UpdateFieldModel();\r\n\t\t\t\tnew SubmitButton();\r\n\t\t\t\tnew SubmitDebug();\r\n\t\t\t\tnew GetFormErrors();\r\n\t\t\t\tnew ValidateRequired();\r\n\t\t\t\tnew SubmitError();\r\n\t\t\t\tnew ActionRedirect();\r\n\t\t\t\tnew ActionSuccess();\r\n\t\t\t\t\r\n\t\t\t\tnew CoreSubmitResponse();\r\n\t\t\t\tnew Calculations();\r\n\r\n\t\t\t\tnew DefaultFilters();\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Data controllers\r\n\t\t\t\t */\r\n\t\t\t\tnew FieldDate();\r\n\t\t\t\tnew FormData();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn controller;\r\n} );\r\n\n","define( 'views/beforeForm',[], function( ) {\r\n\r\n\tvar view = Marionette.ItemView.extend({\r\n\t\ttagName: \"nf-section\",\r\n\t\ttemplate: \"#tmpl-nf-before-form\",\r\n\r\n\t});\r\n\r\n\treturn view;\r\n} );\n","define( 'views/formErrorItem',[], function() {\r\n\tvar view = Marionette.ItemView.extend({\r\n\t\ttagName: 'nf-section',\r\n\t\ttemplate: '#tmpl-nf-form-error',\r\n\r\n\t\tonRender: function() {\r\n\t\t\t// this.$el = this.$el.children();\r\n\t\t\t// this.$el.unwrap();\r\n\t\t\t// this.setElement( this.$el );\r\n\t\t},\r\n\t});\r\n\r\n\treturn view;\r\n} );\n","define( 'views/formErrorCollection',['views/formErrorItem'], function( formErrorItem ) {\r\n\tvar view = Marionette.CollectionView.extend({\r\n\t\ttagName: \"nf-errors\",\r\n\t\tchildView: formErrorItem\r\n\t});\r\n\r\n\treturn view;\r\n} );\n","define( 'views/honeyPot',[], function() {\r\n    var view = Marionette.ItemView.extend({\r\n        tagName: 'nf-section',\r\n        template: '#tmpl-nf-form-hp',\r\n\r\n        events: {\r\n        \t'keyup .nf-field-hp': 'maybeError',\r\n            'change .nf-field-hp': 'maybeError'\r\n        },\r\n\r\n        maybeError: function( e ) {\r\n            /*\r\n             * If we have an empty honeyPot field, remove the honeypot form error.\r\n             * If we do not have an empty honeyPot field, add the honeypot form error.\r\n             */\r\n            if ( 0 == jQuery( e.target ).val().length ) {\r\n                nfRadio.channel( 'form-' + this.model.get( 'id' ) ).request( 'remove:error', 'honeyPot' );\r\n            } else {\r\n                var formModel  = nfRadio.channel( 'app'    ).request( 'get:form',  this.model.get( 'id' ) );\r\n                nfRadio.channel( 'form-' + this.model.get( 'id' ) ).request( 'add:error', 'honeyPot', formModel.get( 'settings' ).honeypotHoneypotError );\r\n            }\r\n        }\r\n    });\r\n\r\n    return view;\r\n} );\n","define( 'views/afterFormContent',['views/formErrorCollection', 'views/honeyPot'], function( FormErrors, HoneyPot ) {\r\n\r\n    var view = Marionette.LayoutView.extend({\r\n        tagName: \"nf-section\",\r\n        template: \"#tmpl-nf-after-fields\",\r\n\r\n\t\tregions: {\r\n\t\t\terrors: \".nf-form-errors\",\r\n            hp: \".nf-form-hp\"\r\n\t\t},\r\n\r\n        onShow: function() {\r\n        \tthis.errors.show( new FormErrors( { collection: this.model.get( 'errors' ) } ) );\r\n            this.hp.show( new HoneyPot( { model: this.model } ) );\r\n        }\r\n\r\n    });\r\n\r\n    return view;\r\n} );\n","define( 'views/beforeFormContent',[], function( ) {\r\n\r\n    var view = Marionette.ItemView.extend({\r\n        tagName: \"nf-section\",\r\n        template: \"#tmpl-nf-before-fields\",\r\n\r\n        templateHelpers: function () {\r\n            return {\r\n\r\n                renderFieldsMarkedRequired: function() {\r\n\r\n                    var requiredFields = this.fields.filter( { required: 1 } );\r\n                    return ( requiredFields.length ) ? this.fieldsMarkedRequired : '';\r\n                },\r\n            };\r\n        },\r\n\r\n    });\r\n\r\n    return view;\r\n} );\n","define( 'views/formLayout',[ 'views/afterFormContent', 'views/beforeFormContent', 'models/fieldCollection' ], function( AfterFormContent, BeforeFormContent, FieldCollection ) {\r\n\r\n\tvar view = Marionette.LayoutView.extend({\r\n\t\ttagName: \"nf-section\",\r\n\t\ttemplate: \"#tmpl-nf-form-layout\",\r\n\r\n\t\tregions: {\r\n\t\t\tbeforeFormContent: \".nf-before-form-content\",\r\n\t\t\tformContent: \".nf-form-content\",\r\n\t\t\tafterFormContent: \".nf-after-form-content\"\r\n\t\t},\r\n\r\n\t\tinitialize: function() {\r\n\t\t\tnfRadio.channel( 'form-' + this.model.get( 'id' ) ).reply( 'get:el', this.getEl, this );\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\t * If we need to hide a form, set the visibility of this form to hidden.\r\n\t\t\t */\r\n\t\t\t this.listenTo( this.model, 'hide', this.hide );\r\n\t\t},\r\n\r\n\t\tonRender: function() {\r\n\t\t\tthis.$el = this.$el.children();\r\n\t\t\tthis.$el.unwrap();\r\n\t\t\tthis.setElement( this.$el );\r\n\t\t},\r\n\r\n\t\tonShow: function() {\r\n\t\t\tthis.beforeFormContent.show( new BeforeFormContent( { model: this.model } ) );\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\t * Set our formContentData to our form setting 'formContentData'\r\n\t\t\t */\r\n\t\t\tvar formContentData = this.model.get( 'formContentData' );\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\t * Check our fieldContentViewsFilter to see if we have any defined.\r\n\t\t\t * If we do, overwrite our default with the view returned from the filter.\r\n\t\t\t */\r\n\t\t\tvar formContentViewFilters = nfRadio.channel( 'formContent' ).request( 'get:viewFilters' );\r\n\t\t\t\r\n\t\t\t/* \r\n\t\t\t* Get our first filter, this will be the one with the highest priority.\r\n\t\t\t*/\r\n\t\t\tvar sortedArray = _.without( formContentViewFilters, undefined );\r\n\t\t\tvar callback = _.first( sortedArray );\r\n\t\t\tformContentView = callback();\r\n\t\t\t\r\n\t\t\tvar options = {\r\n\t\t\t\tdata: formContentData,\r\n\t\t\t\tformModel: this.model\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\t * If we have a collection, pass the returned data as the collection.\r\n\t\t\t *\r\n\t\t\t * If we have a model, pass the returned data as the collection.\r\n\t\t\t */\r\n\t\t\tif ( false !== formContentData instanceof Backbone.Collection ) {\r\n\t\t\t\toptions.collection = formContentData;\r\n\t\t\t} else if ( false !== formContentData instanceof Backbone.Model ) {\r\n\t\t\t\toptions.model = formContentData;\r\n\t\t\t}\r\n\r\n\t\t\tthis.formContent.show( new formContentView( options ) );\r\n\t\t\tthis.afterFormContent.show( new AfterFormContent( { model: this.model } ) );\r\n\t\t},\r\n\r\n\t\tgetEl: function() {\r\n\t\t\treturn this.el;\r\n\t\t},\r\n\r\n        templateHelpers: function () {\r\n            return {\r\n\r\n                renderClasses: function() {\r\n                    return '';\r\n                }\r\n\r\n            };\r\n        },\r\n\r\n        hide: function() {\r\n        \tjQuery( this.el ).hide();\r\n        }\r\n\r\n\t});\r\n\r\n\treturn view;\r\n} );\n","define( 'views/afterForm',[], function( ) {\r\n\r\n\tvar view = Marionette.ItemView.extend({\r\n\t\ttagName: \"nf-section\",\r\n\t\ttemplate: \"#tmpl-nf-after-form\",\r\n\t\t\r\n\t});\r\n\r\n\treturn view;\r\n} );\n","define( 'views/mainLayout',['views/beforeForm', 'views/formLayout', 'views/afterForm'], function( BeforeForm, FormLayout, AfterForm ) {\r\n\r\n\tvar view = Marionette.LayoutView.extend({\r\n\t\ttemplate: '#tmpl-nf-layout',\r\n\r\n\t\tregions: {\r\n\t\t\tresponseMsg: '.nf-response-msg',\r\n\t\t\tbeforeForm: '.nf-before-form',\r\n\t\t\tformLayout: '.nf-form-layout',\r\n\t\t\tafterForm: '.nf-after-form'\r\n\t\t},\r\n\r\n\t\tinitialize: function() {\r\n\t\t\tthis.$el = jQuery( '#nf-form-' + this.model.id + '-cont' );\r\n\t\t\tthis.el = '#nf-form-' + this.model.id + '-cont';\r\n\r\n\t\t\tthis.render();\r\n\r\n\t\t\tthis.beforeForm.show( new BeforeForm( { model: this.model } ) );\r\n\t\t\tthis.formLayout.show( new FormLayout( { model: this.model, fieldCollection: this.options.fieldCollection } ) );\r\n\t\t\tthis.afterForm.show( new AfterForm( { model: this.model } ) );\r\n\r\n\t\t\t/*\r\n\t\t\t * If we need to hide a form, set the visibility of this form to hidden.\r\n\t\t\t */\r\n\t\t\t this.listenTo( this.model, 'hide', this.hide );\r\n\t\t},\r\n\r\n        hide: function() {\r\n        \tjQuery( this.el ).find( '.nf-form-title' ).hide();\r\n        }\r\n\r\n\t});\r\n\r\n\treturn view;\r\n} );\n","/*\r\n * Because our backbone listens to .change() events on elements, changes made using jQuery .val() don't bubble properly.\r\n * This patch overwrites the default behaviour of jQuery .val() so that IF the item has an nf-element class, we fire a change event.\r\n */\r\n( function( jQuery ) {\r\n\t/*\r\n\t * Store our original .val() function.\r\n\t */\r\n    var originalVal = jQuery.fn.val;\r\n    /*\r\n     * Create our own .val() function.\r\n     */\r\n    jQuery.fn.val = function(){\r\n        var prev;\r\n        /* \r\n         * Store a copy of the results of the original .val() call.\r\n         * We use this to make sure that we've actually changed something.\r\n         */\r\n        if( arguments.length > 0 ){\r\n            prev = originalVal.apply( this,[] );\r\n        }\r\n        /*\r\n         * Get the results of the original .val() call. \r\n         */\r\n        var result = originalVal.apply( this, arguments );\r\n\r\n        /*\r\n         * If we have arguments, we have actually made a change, AND this has the nf-element class, trigger .change().\r\n         */\r\n        if( arguments.length > 0 && prev != originalVal.apply( this, [] ) && jQuery( this ).hasClass( 'nf-element' ) ) {\r\n\t\t\tjQuery(this).change();\r\n        }\r\n\r\n        return result;\r\n    };\r\n} ) ( jQuery );\r\n\r\njQuery( document ).ready( function( $ ) {\r\n\trequire( [ 'models/formCollection', 'models/formModel', 'models/fieldCollection', 'controllers/loadControllers', 'views/mainLayout'], function( formCollection, FormModel, FieldCollection, LoadControllers, mainLayout ) {\r\n\r\n\t\tvar NinjaForms = Marionette.Application.extend({\r\n\t\t\tforms: {},\r\n\t\t\tinitialize: function( options ) {\r\n\r\n\t\t\t\tvar that = this;\r\n\t\t\t\tMarionette.Renderer.render = function(template, data){\r\n\t\t\t\t\tvar template = that.template( template );\r\n\t\t\t\t\treturn template( data );\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Underscore one-liner for getting URL Parameters\r\n\t\t\t\tthis.urlParameters = _.object(_.compact(_.map(location.search.slice(1).split('&'), function(item) {  if (item) return item.split('='); })));\r\n\r\n\t\t\t\tif( 'undefined' != typeof this.urlParameters.nf_resume ) {\r\n\t\t\t\t\tthis.listenTo(nfRadio.channel('form-' + this.urlParameters.nf_resume), 'loaded', this.restart);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar loadControllers = new LoadControllers();\r\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'after:loadControllers' );\r\n\r\n\t\t\t\tnfRadio.channel( 'app' ).reply( 'get:template', this.template );\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tonStart: function() {\r\n\t\t\t\tvar formCollection = nfRadio.channel( 'app' ).request( 'get:forms' );\r\n\t\t\t\t_.each( formCollection.models, function( form, index ) {\r\n\t\t\t\t\tvar layoutView = new mainLayout( { model: form, fieldCollection: form.get( 'fields' ) } );\t\t\t\r\n\t\t\t\t\tnfRadio.channel( 'form' ).trigger( 'render:view', layoutView );\r\n\t\t\t\t\tjQuery( document ).trigger( 'nfFormReady', layoutView );\r\n\t\t\t\t} );\r\n\t\t\t},\r\n\r\n\t\t\trestart: function( formModel ) {\r\n\t\t\t\tif( 'undefined' != typeof this.urlParameters.nf_resume ){\r\n\t\t\t\t\tvar data = {\r\n\t\t\t\t\t\t'action': 'nf_ajax_submit',\r\n\t\t\t\t\t\t'security': nfFrontEnd.ajaxNonce,\r\n\t\t\t\t\t\t'nf_resume': this.urlParameters\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'disable:submit' );\r\n\t\t\t\t\tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'processingLabel' );\r\n\r\n\t\t\t\t\tthis.listenTo( nfRadio.channel( 'form' ), 'render:view', function() {\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * TODO: This needs to be re-worked for backbone. It's not dynamic enough.\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t * Hide form fields (but not the submit button).\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\tjQuery( '#nf-form-' + formModel.get( 'id' ) + '-cont .nf-field-container:not(.submit-container)' ).hide();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// TODO: Refactor Duplication\r\n\t\t\t\t\tjQuery.ajax({\r\n\t\t\t\t\t\turl: nfFrontEnd.adminAjax,\r\n\t\t\t\t\t\ttype: 'POST',\r\n\t\t\t\t\t\tdata: data,\r\n\t\t\t\t\t\tcache: false,\r\n\t\t\t\t\t\tsuccess: function( data, textStatus, jqXHR ) {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t   \t\tvar response = jQuery.parseJSON( data );\r\n\t\t\t\t\t\t        nfRadio.channel( 'forms' ).trigger( 'submit:response', response, textStatus, jqXHR, formModel.get( 'id' ) );\r\n\t\t\t\t\t\t    \tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'submit:response', response, textStatus, jqXHR );\r\n\t\t\t\t\t\t\t} catch( e ) {\r\n\t\t\t\t\t\t\t\tconsole.log( 'Parse Error' );\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t    },\r\n\t\t\t\t\t    error: function( jqXHR, textStatus, errorThrown ) {\r\n\t\t\t\t\t        // Handle errors here\r\n\t\t\t\t\t        console.log('ERRORS: ' + textStatus);\r\n\t\t\t\t\t        // STOP LOADING SPINNER\r\n\t\t\t\t\t\t\tnfRadio.channel( 'forms' ).trigger( 'submit:response', 'error', textStatus, jqXHR, errorThrown );\r\n\t\t\t\t\t    }\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\ttemplate: function( template ) {\r\n\t\t\t\treturn _.template( $( template ).html(),  {\r\n\t\t\t\t\tevaluate:    /<#([\\s\\S]+?)#>/g,\r\n\t\t\t\t\tinterpolate: /\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/g,\r\n\t\t\t\t\tescape:      /\\{\\{([^\\}]+?)\\}\\}(?!\\})/g,\r\n\t\t\t\t\tvariable:    'data'\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t});\r\n\t\r\n\t\tvar ninjaForms = new NinjaForms();\r\n\t\tninjaForms.start();\t\t\r\n\t} );\r\n} );\ndefine(\"main\", function(){});\n\n"]}